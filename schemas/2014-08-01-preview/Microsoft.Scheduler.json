{
  "id": "https://schema.management.azure.com/schemas/2014-08-01-preview/Microsoft.Scheduler.json",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "title": "Microsoft.Scheduler",
  "description": "Microsoft Scheduler Resource Types",
  "resourceDefinitions": {
    "jobCollections": {
      "type": "object",
      "properties": {
        "type": {
          "enum": [
            "Microsoft.Scheduler/jobCollections"
          ]
        },
        "apiVersion": {
          "enum": [
            "2014-08-01-preview"
          ]
        },
        "properties": {
          "type": "object",
          "properties": {
            "sku": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "name": {
                      "oneOf": [
                        {
                          "enum": [
                            "Free",
                            "Standard",
                            "Premium"
                          ]
                        },
                        { "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression" }
                      ]
                    }
                  }
                },
                { "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression" }
              ],
              "description": "Microsoft.Scheduler/jobCollections: Job Collection sku"
            },
            "quota": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "maxJobCount": {
                      "oneOf": [
                        {
                          "type": "integer",
                          "minimum": 1
                        },
                        { "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression" }
                      ],
                      "description": "Microsoft.Scheduler/jobCollections/quota: The maximum number of jobs that can be created in this job collection.  Default value based on sku."
                    },
                    "maxRecurrence": {
                      "oneOf": [
                        { "$ref": "#/definitions/recurrenceFrequency" },
                        { "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression" }
                      ],
                      "description": "Microsoft.Scheduler/jobCollections/quota: The maximum recurrence frequency that a job can execute at. Default value based on sku."
                    }
                  }
                },
                { "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression" }
              ],
            "description": "Microsoft.Scheduler/jobCollections/quota"
            }
          },
          "required": [
            "sku"
          ]
        },
        "resources": {
          "type": "array",
          "items": {
            "allOf": [
              { "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/resourceBase" },
              { "$ref": "#/resourceDefinitions/jobs" }
            ]
          },
          "description": "Microsoft.Scheduler/jobCollections: Collection of job resources."
        }
      },
      "required": [
        "type",
        "apiVersion",
        "properties",
        "location"
      ],
      "description": "Microsoft.Scheduler/jobCollections resource"
    },
    "jobs": {
      "type": "object",
      "properties": {
        "type": {
          "enum": [
            "Microsoft.Scheduler/jobCollections/jobs",
            "jobs"
          ]
        },
        "apiVersion": {
          "enum": [
            "2014-08-01-preview"
          ]
        },
        "properties": {
          "type": "object",
          "properties": {
            "startTime": {
              "oneOf": [
                { "$ref": "#/definitions/UTC" },
                { "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression" }
              ],
              "description": "Microsoft.Scheduler/jobCollections/jobs: For simple scheduler startTime will be the first occurrence and for complex schedules the job will start no sooner than startTime."
            },
            "recurrence": {
              "oneOf": [
                { "$ref": "#/definitions/recurrence" },
                { "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression" }
              ],
              "description": "Microsoft.Scheduler/jobCollections/jobs: The recurrence schedule the job will execute."
            },
            "state": {
              "oneOf": [
                {
                  "enum": [
                    "Enabled",
                    "Disabled"
                  ]
                },
                { "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression" }
              ],
              "description": "Microsoft.Scheduler/jobCollections/jobs: Running state of the job."
            },
            "action": {
              "oneOf": [
                {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "oneOf": [
                            {
                              "enum": [
                                "HTTP",
                                "HTTPS"
                              ]
                            },
                            { "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression" }
                          ],
                          "description": "Microsoft.Scheduler/jobCollections/jobs: Type of job action"
                        },
                        "request": {
                          "oneOf": [
                            { "$ref": "#/definitions/httpActionRequest" },
                            { "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression" }
                          ]
                        },
                        "retryPolicy": {
                          "oneOf": [
                            { "$ref": "#/definitions/retryPolicy" },
                            { "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression" }
                          ]
                        },
                        "errorAction": {
                          "oneOf": [
                            { "$ref": "#/definitions/errorAction" },
                            { "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression" }
                          ]
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "type",
                        "request"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "oneOf": [
                            {
                              "enum": [
                                "STORAGEQUEUE"
                              ]
                            },
                            { "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression" }
                          ],
                          "description": "Microsoft.Scheduler/jobCollections/jobs: Type of job action"
                        },
                        "queueMessage": {
                          "oneOf": [
                            { "$ref": "#/definitions/storageQueueActionQueueMessage" },
                            { "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression" }
                          ]
                        },
                        "retryPolicy": {
                          "oneOf": [
                            { "$ref": "#/definitions/retryPolicy" },
                            { "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression" }
                          ]
                        },
                        "errorAction": {
                          "oneOf": [
                            { "$ref": "#/definitions/errorAction" },
                            { "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression" }
                          ]
                        }
                      },
                      "additionalProperties": false,
                      "required": [
                        "type",
                        "queueMessage"
                      ]
                    }
                  ] 
                },
                { "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression" }
              ]
              ,
              "description": "Microsoft.Scheduler/jobCollections/jobs: Action to perform on the prescribed schedule"
            }
          }
        }
      },
      "required": [
        "type",
        "apiVersion",
        "properties"
      ],
      "description": "Microsoft.Scheduler/jobCollections/jobs resource"
    }
  },
  "definitions": {
    "httpActionRequest": {
      "type": "object",
      "properties": {
        "uri": {
          "anyOf": [
            {
              "type": "string",
              "minLength": 1,
              "maxLength": 2048
            },
            { "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression" }
          ],
          "description": "Microsoft.Scheduler/jobCollections/jobs: URI of the endpoint to call"
        },
        "method": {
          "oneOf": [
            {
              "anyOf": [
                {
                  "type": "string",
                  "minLength": 1
                },
                {
                  "enum": [
                    "GET",
                    "PUT",
                    "POST",
                    "PATCH",
                    "DELETE",
                    "HEAD",
                    "TRACE",
                    "CONNECT",
                    "OPTIONS"
                  ]
                }
              ]
            },
            { "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression" }
          ],
          "description": "Microsoft.Scheduler/jobCollections/jobs: HTTP method used to communicate with the endpoint"
        },
        "headers": {
          "oneOf": [
            { "type": "object" },
            { "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression" }
          ],
          "description": "Microsoft.Scheduler/jobCollections/jobs: Dictionary HTTP request headers. Limited to 50 headers."
        },
        "body": {
          "oneOf": [
            {
              "type": "string",
              "maxLength": 8192
            },
            { "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression" }
          ],
          "description": "Microsoft.Scheduler/jobCollections/jobs: HTTP request body"
        },
        "authentication": {
          "oneOf": [
            {
              "type": "object",
              "properties": {
                "type": {
                  "enum": [ "ClientCertificate" ],
                  "description": "Authentication type"
                },
                "pfx": {
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 32768,
                  "description": "base64-encoded pfx. Required when providing a different certificate."
                },
                "password": {
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 256,
                  "description": "Certificate password. Required when providing a different certificate."
                },
                "certificateThumbprint": {
                  "type": "string",
                  "minLength": 1,
                  "description": "Thumbprint of the certificate set on the job. Must match the currently configured certificate."
                },
                "certificateExpiration": {
                  "type": "string",
                  "minLength": 1,
                  "description": "Date-time of the expiration of the certificate set on the job. Must match the currently configured certificate."
                },
                "certificateSubjectName": {
                  "type": "string",
                  "minLength": 1,
                  "description": "Subject name of the certificate set on the job. Must match the currently configured certficate."
                }
              }
            },
            {
              "type": "object",
              "properties": {
                "type": {
                  "enum": [ "ActiveDirectoryOAuth" ],
                  "description": "Authentication type"
                },
                "secret": {
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 4096,
                  "description": "OAuth secret. Only required when providing different OAuth profile."
                },
                "tenant": {
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 4096,
                  "description": "OAuth tenant id."
                },
                "audience": {
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 2048,
                  "description": "OAuth audience"
                },
                "clientId": {
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 4096,
                  "description": "OAuth client id"
                }
              },
              "required": [
                "tenant",
                "audience",
                "clientId"
              ]
            },
            {
              "type": "object",
              "properties": {
                "type": {
                  "enum": [ "Basic" ],
                  "description": "Authentication type"
                },
                "username": {
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 4096,
                  "description": "Username to use for Basic Authentication"
                },
                "password": {
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 4096,
                  "description": "Password to use for Basic Authentication. Only required when providing a different username."
                }
              },
              "required": [
                "username"
              ]
            }
          ]
        }
      },
      "required": [
        "uri",
        "method"
      ]
    },
    "storageQueueActionQueueMessage": {
      "type": "object",
      "properties": {
        "storageAccount": {
          "type": "string",
          "minLength": 1,
          "description": "Microsoft.Scheduler/jobCollections/jobs: storage account containing the queue to send scheduled messages to"
        },
        "queueName": {
          "type": "string",
          "minLength": 3,
          "maxLength": 63,
          "pattern": "^[a-z0-9]",
          "description": "Microsoft.Scheduler/jobCollections/jobs: queue to send scheduled messages to"
        },
        "sasToken": {
          "type": "string",
          "minLength": 1,
          "description": "Microsoft.Scheduler/jobCollections/jobs: SAS Token of storage account that has add messages to queue permissions to the storage account"
        },
        "message": {
          "type": "string",
          "minLength": 1,
          "maxLength": 8192,
          "description": "Microsoft.Scheduler/jobCollections/jobs: message to send to queue"
        }
      }
    },
    "errorAction": {
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "type": {
              "enum": [
                "HTTP",
                "HTTPS"
              ],
              "description": "Microsoft.Scheduler/jobCollections/jobs: Type of job action"
            },
            "request": {
              "$ref": "#/definitions/httpActionRequest"
            }
          },
          "additionalProperties": false,
          "required": [
            "type",
            "request"
          ]
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "enum": [
                "STORAGEQUEUE"
              ],
              "description": "Microsoft.Scheduler/jobCollections/jobs: Type of job action"
            },
            "queueMessage": {
              "$ref": "#/definitions/storageQueueActionQueueMessage"
            }
          },
          "additionalProperties": false,
          "required": [
            "type",
            "queueMessage"
          ]
        }
      ],
      "description": "Microsoft.Scheduler/jobCollections/jobs: Error action to perform when the main action faults (initial attempt and all retry attempts fail)"
    },
    "retryPolicy": {
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "retryType": {
              "enum": [
                "Fixed"
              ],
              "default": "Fixed",
              "description": "Microsoft.Scheduler/jobCollections/jobs: Type of retry policy.  None will not retry, Fixed will retry on the fixed interval provided."
            },
            "retryInterval": {
              "$ref": "#/definitions/UTC",
              "description": "Microsoft.Scheduler/jobCollections/jobs: Interval at which to retry in case of a request failure. If not specified defaults to 30 seconds."
            },
            "retryCount": {
              "type": "integer",
              "minimum": 1,
              "maximum": 20,
              "description": "Microsoft.Scheduler/jobCollections/jobs: Number of times to retry a failed called.  If not specified defaults to 4."
            }
          },
          "additionalProperties": false,
          "required": [
            "retryType"
          ]
        },
        {
          "type": "object",
          "properties": {
            "retryType": {
              "enum": [
                "None"
              ],
              "default": "None",
              "description": "Microsoft.Scheduler/jobCollections/jobs: Type of retry policy.  None will not retry, Fixed will retry on the fixed interval provided."
            }
          },
          "additionalItems": false,
          "required": [
            "retryType"
          ]
        }
      ],
      "description": "Micrsoft.Scheduler/jobCollections/jobs: retry policy for failed requests.  If not specified defaults to retrying every 30 seconds 4 more times."
    },
    "recurrenceFrequency": {
      "type": "object",
      "properties": {
        "frequency": {
          "enum": [
            "Minute",
            "Hour",
            "Day",
            "Week",
            "Month",
            "Year"
          ],
          "description": "Recurrence frequency."
        },
        "interval": {
          "type": "integer",
          "minimum": 1,
          "description": "Recurrence interval."
        }
      },
      "additionalProperties": false
    },
    "recurrence": {
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Microsoft.Scheduler/jobCollections/jobs: Number of times this job should run before completing"
            },
            "endTime": {
              "$ref": "#/definitions/UTC",
              "description": "Microsoft.Scheduler/jobCollections/jobs: Job should not execute past this time"
            },
            "interval": {
              "type": "integer",
              "minimum": 1,
              "description": "Microsoft.Scheduler/jobCollections/jobs: Interval for the frequency that determines how often the job will run"
            },
            "frequency": {
              "enum": [
                "Minute",
                "Hour",
                "Year"
              ],
              "description": "Microsoft.Scheduler/jobCollections/jobs: Frequency at which this job will run"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "count": {
              "oneOf": [
                { "type": "integer" },
                { "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression" }
              ],
              "description": "Microsoft.Scheduler/jobCollections/jobs: Number of times this job should run before completing"
            },
            "endTime": {
              "oneOf": [
                { "$ref": "#/definitions/UTC" },
                { "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression" }
              ],
              "description": "Microsoft.Scheduler/jobCollections/jobs: Job should not execute past this time"
            },
            "interval": {
              "oneOf": [
                {
                  "type": "integer",
                  "minimum": 1
                },
                { "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression" }
              ],
              "description": "Microsoft.Scheduler/jobCollections/jobs: Interval for the frequency that determines how often the job will run"
            },
            "frequency": {
              "oneOf": [
                {
                  "enum": [
                    "Day",
                    "Week",
                    "Month"
                  ]
                },
                { "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression" }
              ],
              "description": "Microsoft.Scheduler/jobCollections/jobs: Frequency at which this job will run"
            },
            "schedule": {
              "type": "object",
              "properties": {
                "minutes": {
                  "oneOf": [
                    {
                      "anyOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "type": "array",
                          "items": {
                            "type": "integer"
                          }
                        }
                      ]
                    },
                    { "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression" }
                  ],
                  "description": "Minutes of the hour at which the job will run"
                },
                "hours": {
                  "oneOf": [
                    {
                      "anyOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "type": "array",
                          "items": {
                            "type": "integer"
                          }
                        }
                      ]
                    },
                    { "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression" }
                  ],
                  "description": "Hours of the day at which the job will run"
                },
                "weekDays": {
                  "oneOf": [
                    {
                      "anyOf": [
                        {
                          "$ref": "#/definitions/dayOfWeek"
                        },
                        {
                          "type": "array",
                          "items": {
                            "$ref": "#/definitions/dayOfWeek"
                          },
                          "uniqueItems": true,
                          "maxItems": 7
                        }
                      ]
                    },
                    { "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression" }
                  ],
                  "description": "Days of the week the job will run.  Can only be specified with a weekly frequency."
                },
                "monthlyOccurrences": {
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "day": {
                            "oneOf": [
                              { "$ref": "#/definitions/dayOfWeek" },
                              { "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression" }
                            ],
                            "description": "Day of the week the job will run, e.g. {Sunday} is every Sunday of the month."
                          },
                          "occurrence": {
                            "oneOf": [
                              {
                                "type": "integer",
                                "minimum": -5,
                                "maximum": 5
                              },
                              { "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression" }
                            ],
                            "description": "Occurrence of the day during the month, e.g. {Sunday, -1} is the last Sunday of the month. Optional."
                          }
                        },
                        "required": [
                          "day"
                        ],
                        "description": "Determines which days of the month the job will run.  Can only be specified with a monthly frequency."
                      }
                    },
                    { "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression" }
                  ]
                },
                "monthDays": {
                  "anyOf": [
                    {
                      "type": "integer",
                      "minimum": -31,
                      "maximum": -1
                    },
                    {
                      "type": "integer",
                      "minimum": 1,
                      "maximum": 31
                    },
                    {
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "type": "integer",
                            "minimum": -31,
                            "maximum": -1
                          },
                          {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 31
                          }
                        ]
                      }
                    }
                  ],
                  "description": "Day of the month the job will run.  Can only be specified with a monthly frequency."
                }
              }
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "dayOfWeek": {
      "enum": [
        "Monday",
        "Tuesday",
        "Wednesday",
        "Thursday",
        "Friday",
        "Saturday",
        "Sunday"
      ]
    },
    "UTC": {
      "type": "string",
      "pattern": "^\\d{4}(-(0[1-9]|1[0-2])(-([012]\\d|3[01])(T((([01]\\d|2[0123]):[0-5]\\d)|(24:00))(:(([0-5]\\d)|60)(\\.\\d{1,}){0,1}){0,1}){0,1}((Z)|([+-]((([01]\\d|2[0123]):[0-5]\\d)|(24:00)))){0,1}){0,1}){0,1}$"
    }
  }
}