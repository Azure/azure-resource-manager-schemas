{
  "id": "https://schema.management.azure.com/schemas/2015-08-01/Microsoft.ServiceBus.json#",
  "title": "Microsoft.ServiceBus",
  "description": "Microsoft ServiceBus Resource Types",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "resourceDefinitions": {
    "namespaces": {
      "description": "Microsoft.ServiceBus/namespaces",
      "properties": {
        "apiVersion": {
          "enum": [
            "2015-08-01"
          ],
          "type": "string"
        },
        "location": {
          "description": "Namespace location.",
          "type": "string"
        },
        "name": {
          "description": "The namespace name.",
          "type": "string"
        },
        "properties": {
          "description": "Properties of the namespace.",
          "oneOf": [
            {
              "$ref": "#/definitions/NamespaceProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/namespaces_queues_childResource"
              },
              {
                "$ref": "#/definitions/namespaces_topics_childResource"
              },
              {
                "$ref": "#/definitions/namespaces_AuthorizationRules_childResource"
              }
            ]
          },
          "type": "array"
        },
        "sku": {
          "description": "SKU of the namespace.",
          "oneOf": [
            {
              "$ref": "#/definitions/Sku"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Namespace tags.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.ServiceBus/namespaces"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "namespaces_AuthorizationRules": {
      "description": "Microsoft.ServiceBus/namespaces/AuthorizationRules",
      "properties": {
        "apiVersion": {
          "enum": [
            "2015-08-01"
          ],
          "type": "string"
        },
        "location": {
          "description": "data center location.",
          "type": "string"
        },
        "name": {
          "description": "The authorization rule name.",
          "maxLength": 50,
          "minLength": 1,
          "type": "string"
        },
        "properties": {
          "description": "SharedAccessAuthorizationRule properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/SharedAccessAuthorizationRuleProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.ServiceBus/namespaces/AuthorizationRules"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "namespaces_queues": {
      "description": "Microsoft.ServiceBus/namespaces/queues",
      "properties": {
        "apiVersion": {
          "enum": [
            "2015-08-01"
          ],
          "type": "string"
        },
        "location": {
          "description": "location of the resource.",
          "type": "string"
        },
        "name": {
          "description": "The queue name.",
          "maxLength": 50,
          "minLength": 1,
          "type": "string"
        },
        "properties": {
          "description": "The Queue Properties definition.",
          "oneOf": [
            {
              "$ref": "#/definitions/QueueProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/namespaces_queues_authorizationRules_childResource"
              }
            ]
          },
          "type": "array"
        },
        "type": {
          "enum": [
            "Microsoft.ServiceBus/namespaces/queues"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "namespaces_queues_authorizationRules": {
      "description": "Microsoft.ServiceBus/namespaces/queues/authorizationRules",
      "properties": {
        "apiVersion": {
          "enum": [
            "2015-08-01"
          ],
          "type": "string"
        },
        "location": {
          "description": "data center location.",
          "type": "string"
        },
        "name": {
          "description": "The authorization rule name.",
          "maxLength": 50,
          "minLength": 1,
          "type": "string"
        },
        "properties": {
          "description": "SharedAccessAuthorizationRule properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/SharedAccessAuthorizationRuleProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.ServiceBus/namespaces/queues/authorizationRules"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "namespaces_topics": {
      "description": "Microsoft.ServiceBus/namespaces/topics",
      "properties": {
        "apiVersion": {
          "enum": [
            "2015-08-01"
          ],
          "type": "string"
        },
        "location": {
          "description": "Location of the resource.",
          "type": "string"
        },
        "name": {
          "description": "The topic name.",
          "maxLength": 50,
          "minLength": 1,
          "type": "string"
        },
        "properties": {
          "description": "The Topic Properties definition.",
          "oneOf": [
            {
              "$ref": "#/definitions/TopicProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/namespaces_topics_subscriptions_childResource"
              },
              {
                "$ref": "#/definitions/namespaces_topics_authorizationRules_childResource"
              }
            ]
          },
          "type": "array"
        },
        "type": {
          "enum": [
            "Microsoft.ServiceBus/namespaces/topics"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "namespaces_topics_authorizationRules": {
      "description": "Microsoft.ServiceBus/namespaces/topics/authorizationRules",
      "properties": {
        "apiVersion": {
          "enum": [
            "2015-08-01"
          ],
          "type": "string"
        },
        "location": {
          "description": "data center location.",
          "type": "string"
        },
        "name": {
          "description": "The authorization rule name.",
          "maxLength": 50,
          "minLength": 1,
          "type": "string"
        },
        "properties": {
          "description": "SharedAccessAuthorizationRule properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/SharedAccessAuthorizationRuleProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.ServiceBus/namespaces/topics/authorizationRules"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "namespaces_topics_subscriptions": {
      "description": "Microsoft.ServiceBus/namespaces/topics/subscriptions",
      "properties": {
        "apiVersion": {
          "enum": [
            "2015-08-01"
          ],
          "type": "string"
        },
        "location": {
          "description": "Subscription data center location.",
          "type": "string"
        },
        "name": {
          "description": "The subscription name.",
          "maxLength": 50,
          "minLength": 1,
          "type": "string"
        },
        "properties": {
          "description": "Description of Subscription Resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/SubscriptionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.ServiceBus/namespaces/topics/subscriptions"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    }
  },
  "definitions": {
    "NamespaceProperties": {
      "description": "Properties of the namespace.",
      "properties": {
        "createACSNamespace": {
          "description": "Indicates whether to create an ACS namespace.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "enabled": {
          "description": "Specifies whether this instance is enabled.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "status": {
          "description": "State of the namespace.",
          "oneOf": [
            {
              "enum": [
                "Unknown",
                "Creating",
                "Created",
                "Activating",
                "Enabling",
                "Active",
                "Disabling",
                "Disabled",
                "SoftDeleting",
                "SoftDeleted",
                "Removing",
                "Removed",
                "Failed"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "QueueProperties": {
      "description": "The Queue Properties definition.",
      "properties": {
        "autoDeleteOnIdle": {
          "description": "the TimeSpan idle interval after which the queue is automatically deleted. The minimum duration is 5 minutes.",
          "type": "string"
        },
        "deadLetteringOnMessageExpiration": {
          "description": "A value that indicates whether this queue has dead letter support when a message expires.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "defaultMessageTimeToLive": {
          "description": "The default message time to live value. This is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself.",
          "type": "string"
        },
        "duplicateDetectionHistoryTimeWindow": {
          "description": "TimeSpan structure that defines the duration of the duplicate detection history. The default value is 10 minutes.",
          "type": "string"
        },
        "enableBatchedOperations": {
          "description": "A value that indicates whether server-side batched operations are enabled.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "enableExpress": {
          "description": "A value that indicates whether Express Entities are enabled. An express queue holds a message in memory temporarily before writing it to persistent storage.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "enablePartitioning": {
          "description": "A value that indicates whether the queue is to be partitioned across multiple message brokers.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "entityAvailabilityStatus": {
          "description": "Entity availability status for the queue.",
          "oneOf": [
            {
              "enum": [
                "Available",
                "Limited",
                "Renaming",
                "Restoring",
                "Unknown"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "isAnonymousAccessible": {
          "description": "A value that indicates whether the message is accessible anonymously.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "lockDuration": {
          "description": "The duration of a peek-lock; that is, the amount of time that the message is locked for other receivers. The maximum value for LockDuration is 5 minutes; the default value is 1 minute.",
          "type": "string"
        },
        "maxDeliveryCount": {
          "description": "The maximum delivery count. A message is automatically deadlettered after this number of deliveries.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "maxSizeInMegabytes": {
          "description": "The maximum size of the queue in megabytes, which is the size of memory allocated for the queue.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "requiresDuplicateDetection": {
          "description": "A value indicating if this queue requires duplicate detection.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "requiresSession": {
          "description": "A value that indicates whether the queue supports the concept of sessions.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "status": {
          "description": "Enumerates the possible values for the status of a messaging entity.",
          "oneOf": [
            {
              "enum": [
                "Active",
                "Creating",
                "Deleting",
                "Disabled",
                "ReceiveDisabled",
                "Renaming",
                "Restoring",
                "SendDisabled",
                "Unknown"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "supportOrdering": {
          "description": "A value that indicates whether the queue supports ordering.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "SharedAccessAuthorizationRuleProperties": {
      "description": "SharedAccessAuthorizationRule properties.",
      "properties": {
        "rights": {
          "description": "The rights associated with the rule.",
          "oneOf": [
            {
              "items": {
                "enum": [
                  "Manage",
                  "Send",
                  "Listen"
                ],
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "rights"
      ],
      "type": "object"
    },
    "Sku": {
      "description": "SKU of the namespace.",
      "properties": {
        "capacity": {
          "description": "The specified messaging units for the tier.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "name": {
          "description": "Name of this SKU.",
          "oneOf": [
            {
              "enum": [
                "Basic",
                "Standard",
                "Premium"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tier": {
          "description": "The billing tier of this particular SKU.",
          "oneOf": [
            {
              "enum": [
                "Basic",
                "Standard",
                "Premium"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "tier"
      ],
      "type": "object"
    },
    "SubscriptionProperties": {
      "description": "Description of Subscription Resource.",
      "properties": {
        "autoDeleteOnIdle": {
          "description": "TimeSpan idle interval after which the topic is automatically deleted. The minimum duration is 5 minutes.",
          "type": "string"
        },
        "deadLetteringOnFilterEvaluationExceptions": {
          "description": "Value that indicates whether a subscription has dead letter support on filter evaluation exceptions.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "deadLetteringOnMessageExpiration": {
          "description": "Value that indicates whether a subscription has dead letter support when a message expires.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "defaultMessageTimeToLive": {
          "description": "Default message time to live value. This is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself.",
          "type": "string"
        },
        "enableBatchedOperations": {
          "description": "Value that indicates whether server-side batched operations are enabled.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "entityAvailabilityStatus": {
          "description": "Entity availability status for the topic.",
          "oneOf": [
            {
              "enum": [
                "Available",
                "Limited",
                "Renaming",
                "Restoring",
                "Unknown"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "isReadOnly": {
          "description": "Value that indicates whether the entity description is read-only.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "lockDuration": {
          "description": "The lock duration time span for the subscription.",
          "type": "string"
        },
        "maxDeliveryCount": {
          "description": "Number of maximum deliveries.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "requiresSession": {
          "description": "Value indicating if a subscription supports the concept of sessions.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "status": {
          "description": "Enumerates the possible values for the status of a messaging entity.",
          "oneOf": [
            {
              "enum": [
                "Active",
                "Creating",
                "Deleting",
                "Disabled",
                "ReceiveDisabled",
                "Renaming",
                "Restoring",
                "SendDisabled",
                "Unknown"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "TopicProperties": {
      "description": "The Topic Properties definition.",
      "properties": {
        "autoDeleteOnIdle": {
          "description": "TimeSpan idle interval after which the topic is automatically deleted. The minimum duration is 5 minutes.",
          "type": "string"
        },
        "defaultMessageTimeToLive": {
          "description": "Default message time to live value. This is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself.",
          "type": "string"
        },
        "duplicateDetectionHistoryTimeWindow": {
          "description": "TimeSpan structure that defines the duration of the duplicate detection history. The default value is 10 minutes.",
          "type": "string"
        },
        "enableBatchedOperations": {
          "description": "Value that indicates whether server-side batched operations are enabled.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "enableExpress": {
          "description": "Value that indicates whether Express Entities are enabled. An express topic holds a message in memory temporarily before writing it to persistent storage.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "enablePartitioning": {
          "description": "Value that indicates whether the topic to be partitioned across multiple message brokers is enabled.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "entityAvailabilityStatus": {
          "description": "Entity availability status for the topic.",
          "oneOf": [
            {
              "enum": [
                "Available",
                "Limited",
                "Renaming",
                "Restoring",
                "Unknown"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "filteringMessagesBeforePublishing": {
          "description": "Whether messages should be filtered before publishing.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "isAnonymousAccessible": {
          "description": "Value that indicates whether the message is accessible anonymously.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "isExpress": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "maxSizeInMegabytes": {
          "description": "Maximum size of the topic in megabytes, which is the size of the memory allocated for the topic.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "requiresDuplicateDetection": {
          "description": "Value indicating if this topic requires duplicate detection.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "status": {
          "description": "Enumerates the possible values for the status of a messaging entity.",
          "oneOf": [
            {
              "enum": [
                "Active",
                "Creating",
                "Deleting",
                "Disabled",
                "ReceiveDisabled",
                "Renaming",
                "Restoring",
                "SendDisabled",
                "Unknown"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "supportOrdering": {
          "description": "Value that indicates whether the topic supports ordering.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "namespaces_AuthorizationRules_childResource": {
      "description": "Microsoft.ServiceBus/namespaces/AuthorizationRules",
      "properties": {
        "apiVersion": {
          "enum": [
            "2015-08-01"
          ],
          "type": "string"
        },
        "location": {
          "description": "data center location.",
          "type": "string"
        },
        "name": {
          "description": "The authorization rule name.",
          "maxLength": 50,
          "minLength": 1,
          "type": "string"
        },
        "properties": {
          "description": "SharedAccessAuthorizationRule properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/SharedAccessAuthorizationRuleProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "AuthorizationRules"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "namespaces_queues_authorizationRules_childResource": {
      "description": "Microsoft.ServiceBus/namespaces/queues/authorizationRules",
      "properties": {
        "apiVersion": {
          "enum": [
            "2015-08-01"
          ],
          "type": "string"
        },
        "location": {
          "description": "data center location.",
          "type": "string"
        },
        "name": {
          "description": "The authorization rule name.",
          "maxLength": 50,
          "minLength": 1,
          "type": "string"
        },
        "properties": {
          "description": "SharedAccessAuthorizationRule properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/SharedAccessAuthorizationRuleProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "authorizationRules"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "namespaces_queues_childResource": {
      "description": "Microsoft.ServiceBus/namespaces/queues",
      "properties": {
        "apiVersion": {
          "enum": [
            "2015-08-01"
          ],
          "type": "string"
        },
        "location": {
          "description": "location of the resource.",
          "type": "string"
        },
        "name": {
          "description": "The queue name.",
          "maxLength": 50,
          "minLength": 1,
          "type": "string"
        },
        "properties": {
          "description": "The Queue Properties definition.",
          "oneOf": [
            {
              "$ref": "#/definitions/QueueProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "queues"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "namespaces_topics_authorizationRules_childResource": {
      "description": "Microsoft.ServiceBus/namespaces/topics/authorizationRules",
      "properties": {
        "apiVersion": {
          "enum": [
            "2015-08-01"
          ],
          "type": "string"
        },
        "location": {
          "description": "data center location.",
          "type": "string"
        },
        "name": {
          "description": "The authorization rule name.",
          "maxLength": 50,
          "minLength": 1,
          "type": "string"
        },
        "properties": {
          "description": "SharedAccessAuthorizationRule properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/SharedAccessAuthorizationRuleProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "authorizationRules"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "namespaces_topics_childResource": {
      "description": "Microsoft.ServiceBus/namespaces/topics",
      "properties": {
        "apiVersion": {
          "enum": [
            "2015-08-01"
          ],
          "type": "string"
        },
        "location": {
          "description": "Location of the resource.",
          "type": "string"
        },
        "name": {
          "description": "The topic name.",
          "maxLength": 50,
          "minLength": 1,
          "type": "string"
        },
        "properties": {
          "description": "The Topic Properties definition.",
          "oneOf": [
            {
              "$ref": "#/definitions/TopicProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "topics"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "namespaces_topics_subscriptions_childResource": {
      "description": "Microsoft.ServiceBus/namespaces/topics/subscriptions",
      "properties": {
        "apiVersion": {
          "enum": [
            "2015-08-01"
          ],
          "type": "string"
        },
        "location": {
          "description": "Subscription data center location.",
          "type": "string"
        },
        "name": {
          "description": "The subscription name.",
          "maxLength": 50,
          "minLength": 1,
          "type": "string"
        },
        "properties": {
          "description": "Description of Subscription Resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/SubscriptionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "subscriptions"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    }
  }
}