{
  "id": "https://schema.management.azure.com/schemas/2017-03-01-preview/Microsoft.Sql.json#",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "title": "Microsoft.Sql",
  "description": "Microsoft Sql Resource Types",
  "resourceDefinitions": {
    "managedInstances_databases": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the database."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Sql/managedInstances/databases"
          ]
        },
        "apiVersion": {
          "type": "string",
          "enum": [
            "2017-03-01-preview"
          ]
        },
        "location": {
          "type": "string",
          "description": "Resource location."
        },
        "tags": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Resource tags."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedDatabaseProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Resource properties."
        }
      },
      "required": [
        "name",
        "type",
        "apiVersion",
        "location",
        "properties"
      ],
      "description": "Microsoft.Sql/managedInstances/databases"
    },
    "servers_auditingSettings": {
      "type": "object",
      "properties": {
        "name": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The name of the blob auditing policy."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Sql/servers/auditingSettings"
          ]
        },
        "apiVersion": {
          "type": "string",
          "enum": [
            "2017-03-01-preview"
          ]
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/ServerBlobAuditingPolicyProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Resource properties."
        }
      },
      "required": [
        "name",
        "type",
        "apiVersion",
        "properties"
      ],
      "description": "Microsoft.Sql/servers/auditingSettings"
    },
    "servers_databases": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the database."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Sql/servers/databases"
          ]
        },
        "apiVersion": {
          "type": "string",
          "enum": [
            "2017-03-01-preview"
          ]
        },
        "location": {
          "type": "string",
          "description": "Resource location."
        },
        "tags": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Resource tags."
        },
        "sku": {
          "oneOf": [
            {
              "$ref": "#/definitions/Sku"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The name and tier of the SKU."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/DatabaseProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Resource properties."
        },
        "resources": {
          "type": "array",
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/servers_databases_backupLongTermRetentionPolicies_childResource"
              },
              {
                "$ref": "#/definitions/servers_databases_vulnerabilityAssessments_childResource"
              },
              {
                "$ref": "#/definitions/servers_databases_auditingSettings_childResource"
              },
              {
                "$ref": "#/definitions/servers_databases_extendedAuditingSettings_childResource"
              }
            ]
          }
        }
      },
      "required": [
        "name",
        "type",
        "apiVersion",
        "location",
        "properties"
      ],
      "description": "Microsoft.Sql/servers/databases"
    },
    "servers_databases_auditingSettings": {
      "type": "object",
      "properties": {
        "name": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The name of the blob auditing policy."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Sql/servers/databases/auditingSettings"
          ]
        },
        "apiVersion": {
          "type": "string",
          "enum": [
            "2017-03-01-preview"
          ]
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/DatabaseBlobAuditingPolicyProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Resource properties."
        }
      },
      "required": [
        "name",
        "type",
        "apiVersion",
        "properties"
      ],
      "description": "Microsoft.Sql/servers/databases/auditingSettings"
    },
    "servers_databases_backupLongTermRetentionPolicies": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Sql/servers/databases/backupLongTermRetentionPolicies"
          ]
        },
        "apiVersion": {
          "type": "string",
          "enum": [
            "2017-03-01-preview"
          ]
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/LongTermRetentionPolicyProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Resource properties."
        }
      },
      "required": [
        "name",
        "type",
        "apiVersion",
        "properties"
      ],
      "description": "Microsoft.Sql/servers/databases/backupLongTermRetentionPolicies"
    },
    "servers_databases_extendedAuditingSettings": {
      "type": "object",
      "properties": {
        "name": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The name of the blob auditing policy."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Sql/servers/databases/extendedAuditingSettings"
          ]
        },
        "apiVersion": {
          "type": "string",
          "enum": [
            "2017-03-01-preview"
          ]
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/ExtendedDatabaseBlobAuditingPolicyProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Resource properties."
        }
      },
      "required": [
        "name",
        "type",
        "apiVersion",
        "properties"
      ],
      "description": "Microsoft.Sql/servers/databases/extendedAuditingSettings"
    },
      "required": [
        "name",
        "type",
        "apiVersion",
        "properties"
      ],
      "description": "Microsoft.Sql/servers/databases/vulnerabilityAssessments"
    },
    "servers_databases_vulnerabilityAssessments_rules_baselines": {
      "type": "object",
      "properties": {
        "name": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Sql/servers/databases/vulnerabilityAssessments/rules/baselines"
          ]
        },
        "apiVersion": {
          "type": "string",
          "enum": [
            "2017-03-01-preview"
          ]
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/DatabaseVulnerabilityAssessmentRuleBaselineProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Resource properties."
        }
      },
      "required": [
        "name",
        "type",
        "apiVersion",
        "properties"
      ],
      "description": "Microsoft.Sql/servers/databases/vulnerabilityAssessments/rules/baselines"
    },
    "servers_dnsAliases": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Sql/servers/dnsAliases"
          ]
        },
        "apiVersion": {
          "type": "string",
          "enum": [
            "2017-03-01-preview"
          ]
        }
      },
      "required": [
        "name",
        "type",
        "apiVersion"
      ],
      "description": "Microsoft.Sql/servers/dnsAliases"
    },
    "servers_extendedAuditingSettings": {
      "type": "object",
      "properties": {
        "name": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The name of the blob auditing policy."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Sql/servers/extendedAuditingSettings"
          ]
        },
        "apiVersion": {
          "type": "string",
          "enum": [
            "2017-03-01-preview"
          ]
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/ExtendedServerBlobAuditingPolicyProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Resource properties."
        }
      },
      "required": [
        "name",
        "type",
        "apiVersion",
        "properties"
      ],
      "description": "Microsoft.Sql/servers/extendedAuditingSettings"
    },
    "servers_jobAgents": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Sql/servers/jobAgents"
          ]
        },
        "apiVersion": {
          "type": "string",
          "enum": [
            "2017-03-01-preview"
          ]
        },
        "location": {
          "type": "string",
          "description": "Resource location."
        },
        "tags": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Resource tags."
        },
        "sku": {
          "oneOf": [
            {
              "$ref": "#/definitions/Sku"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The name and tier of the SKU."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/JobAgentProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Resource properties."
        },
        "resources": {
          "type": "array",
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/servers_jobAgents_targetGroups_childResource"
              },
              {
                "$ref": "#/definitions/servers_jobAgents_jobs_childResource"
              },
              {
                "$ref": "#/definitions/servers_jobAgents_credentials_childResource"
              }
            ]
          }
        }
      },
      "required": [
        "name",
        "type",
        "apiVersion",
        "location",
        "properties"
      ],
      "description": "Microsoft.Sql/servers/jobAgents"
    },
    "servers_jobAgents_credentials": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Sql/servers/jobAgents/credentials"
          ]
        },
        "apiVersion": {
          "type": "string",
          "enum": [
            "2017-03-01-preview"
          ]
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/JobCredentialProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Resource properties."
        }
      },
      "required": [
        "name",
        "type",
        "apiVersion",
        "properties"
      ],
      "description": "Microsoft.Sql/servers/jobAgents/credentials"
    },
    "servers_jobAgents_jobs": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Sql/servers/jobAgents/jobs"
          ]
        },
        "apiVersion": {
          "type": "string",
          "enum": [
            "2017-03-01-preview"
          ]
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/JobProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Resource properties."
        },
        "resources": {
          "type": "array",
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/servers_jobAgents_jobs_steps_childResource"
              },
              {
                "$ref": "#/definitions/servers_jobAgents_jobs_executions_childResource"
              }
            ]
          }
        }
      },
      "required": [
        "name",
        "type",
        "apiVersion",
        "properties"
      ],
      "description": "Microsoft.Sql/servers/jobAgents/jobs"
    },
    "servers_jobAgents_jobs_executions": {
      "type": "object",
      "properties": {
        "name": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^[0-9a-fA-F]{8}(-[0-9a-fA-F]{4}){3}-[0-9a-fA-F]{12}$"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Sql/servers/jobAgents/jobs/executions"
          ]
        },
        "apiVersion": {
          "type": "string",
          "enum": [
            "2017-03-01-preview"
          ]
        }
      },
      "required": [
        "name",
        "type",
        "apiVersion"
      ],
      "description": "Microsoft.Sql/servers/jobAgents/jobs/executions"
    },
    "servers_jobAgents_jobs_steps": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Sql/servers/jobAgents/jobs/steps"
          ]
        },
        "apiVersion": {
          "type": "string",
          "enum": [
            "2017-03-01-preview"
          ]
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/JobStepProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Resource properties."
        }
      },
      "required": [
        "name",
        "type",
        "apiVersion",
        "properties"
      ],
      "description": "Microsoft.Sql/servers/jobAgents/jobs/steps"
    },
    "servers_jobAgents_targetGroups": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Sql/servers/jobAgents/targetGroups"
          ]
        },
        "apiVersion": {
          "type": "string",
          "enum": [
            "2017-03-01-preview"
          ]
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/JobTargetGroupProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Resource properties."
        }
      },
      "required": [
        "name",
        "type",
        "apiVersion",
        "properties"
      ],
      "description": "Microsoft.Sql/servers/jobAgents/targetGroups"
    }
  },
  "definitions": {
    "DatabaseBlobAuditingPolicyProperties": {
      "type": "object",
      "properties": {
        "state": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Enabled",
                "Disabled"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Specifies the state of the policy. If state is Enabled, storageEndpoint and storageAccountAccessKey are required."
        },
        "storageEndpoint": {
          "type": "string",
          "description": "Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). If state is Enabled, storageEndpoint is required."
        },
        "storageAccountAccessKey": {
          "type": "string",
          "description": "Specifies the identifier key of the auditing storage account. If state is Enabled, storageAccountAccessKey is required."
        },
        "retentionDays": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Specifies the number of days to keep in the audit logs."
        },
        "auditActionsAndGroups": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Specifies the Actions-Groups and Actions to audit.\r\n\r\nThe recommended set of action groups to use is the following combination - this will audit all the queries and stored procedures executed against the database, as well as successful and failed logins:\r\n\r\nBATCH_COMPLETED_GROUP,\r\nSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP,\r\nFAILED_DATABASE_AUTHENTICATION_GROUP.\r\n\r\nThis above combination is also the set that is configured by default when enabling auditing from the Azure portal.\r\n\r\nThe supported action groups to audit are (note: choose only specific groups that cover your auditing needs. Using unnecessary groups could lead to very large quantities of audit records):\r\n\r\nAPPLICATION_ROLE_CHANGE_PASSWORD_GROUP\r\nBACKUP_RESTORE_GROUP\r\nDATABASE_LOGOUT_GROUP\r\nDATABASE_OBJECT_CHANGE_GROUP\r\nDATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP\r\nDATABASE_OBJECT_PERMISSION_CHANGE_GROUP\r\nDATABASE_OPERATION_GROUP\r\nDATABASE_PERMISSION_CHANGE_GROUP\r\nDATABASE_PRINCIPAL_CHANGE_GROUP\r\nDATABASE_PRINCIPAL_IMPERSONATION_GROUP\r\nDATABASE_ROLE_MEMBER_CHANGE_GROUP\r\nFAILED_DATABASE_AUTHENTICATION_GROUP\r\nSCHEMA_OBJECT_ACCESS_GROUP\r\nSCHEMA_OBJECT_CHANGE_GROUP\r\nSCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP\r\nSCHEMA_OBJECT_PERMISSION_CHANGE_GROUP\r\nSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP\r\nUSER_CHANGE_PASSWORD_GROUP\r\nBATCH_STARTED_GROUP\r\nBATCH_COMPLETED_GROUP\r\n\r\nThese are groups that cover all sql statements and stored procedures executed against the database, and should not be used in combination with other groups as this will result in duplicate audit logs.\r\n\r\nFor more information, see [Database-Level Audit Action Groups](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-action-groups).\r\n\r\nFor Database auditing policy, specific Actions can also be specified (note that Actions cannot be specified for Server auditing policy). The supported actions to audit are:\r\nSELECT\r\nUPDATE\r\nINSERT\r\nDELETE\r\nEXECUTE\r\nRECEIVE\r\nREFERENCES\r\n\r\nThe general form for defining an action to be audited is:\r\n<action> ON <object> BY <principal>\r\n\r\nNote that <object> in the above format can refer to an object like a table, view, or stored procedure, or an entire database or schema. For the latter cases, the forms DATABASE::<db_name> and SCHEMA::<schema_name> are used, respectively.\r\n\r\nFor example:\r\nSELECT on dbo.myTable by public\r\nSELECT on DATABASE::myDatabase by public\r\nSELECT on SCHEMA::mySchema by public\r\n\r\nFor more information, see [Database-Level Audit Actions](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-actions)"
        },
        "storageAccountSubscriptionId": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^[0-9a-fA-F]{8}(-[0-9a-fA-F]{4}){3}-[0-9a-fA-F]{12}$"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Specifies the blob storage subscription Id."
        },
        "isStorageSecondaryKeyInUse": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Specifies whether storageAccountAccessKey value is the storage's secondary key."
        }
      },
      "required": [
        "state"
      ],
      "description": "Properties of a database blob auditing policy."
    },
    "DatabaseProperties": {
      "type": "object",
      "properties": {
        "createMode": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Default",
                "Copy",
                "Secondary",
                "OnlineSecondary",
                "PointInTimeRestore",
                "Restore",
                "Recovery",
                "RestoreExternalBackup",
                "RestoreExternalBackupSecondary",
                "RestoreLongTermRetentionBackup"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Specifies the mode of database creation.\r\n\r\nDefault: regular database creation.\r\n\r\nCopy: creates a database as a copy of an existing database. sourceDatabaseId must be specified as the resource ID of the source database.\r\n\r\nSecondary: creates a database as a secondary replica of an existing database. sourceDatabaseId must be specified as the resource ID of the existing primary database.\r\n\r\nPointInTimeRestore: Creates a database by restoring a point in time backup of an existing database. sourceDatabaseId must be specified as the resource ID of the existing database, and restorePointInTime must be specified.\r\n\r\nRecovery: Creates a database by restoring a geo-replicated backup. sourceDatabaseId must be specified as the recoverable database resource ID to restore.\r\n\r\nRestore: Creates a database by restoring a backup of a deleted database. sourceDatabaseId must be specified. If sourceDatabaseId is the database's original resource ID, then sourceDatabaseDeletionDate must be specified. Otherwise sourceDatabaseId must be the restorable dropped database resource ID and sourceDatabaseDeletionDate is ignored. restorePointInTime may also be specified to restore from an earlier point in time.\r\n\r\nRestoreLongTermRetentionBackup: Creates a database by restoring from a long term retention vault. recoveryServicesRecoveryPointResourceId must be specified as the recovery point resource ID.\r\n\r\nCopy, Secondary, and RestoreLongTermRetentionBackup are not supported for DataWarehouse edition."
        },
        "collation": {
          "type": "string",
          "description": "The collation of the database."
        },
        "maxSizeBytes": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The max size of the database expressed in bytes."
        },
        "sampleName": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "AdventureWorksLT",
                "WideWorldImportersStd",
                "WideWorldImportersFull"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The name of the sample schema to apply when creating this database."
        },
        "elasticPoolId": {
          "type": "string",
          "description": "The resource identifier of the elastic pool containing this database."
        },
        "sourceDatabaseId": {
          "type": "string",
          "description": "The resource identifier of the source database associated with create operation of this database."
        },
        "restorePointInTime": {
          "type": "string",
          "format": "date-time",
          "description": "Specifies the point in time (ISO8601 format) of the source database that will be restored to create the new database."
        },
        "sourceDatabaseDeletionDate": {
          "type": "string",
          "format": "date-time",
          "description": "Specifies the time that the database was deleted."
        },
        "recoveryServicesRecoveryPointId": {
          "type": "string",
          "description": "The resource identifier of the recovery point associated with create operation of this database."
        },
        "longTermRetentionBackupResourceId": {
          "type": "string",
          "description": "The resource identifier of the long term retention backup associated with create operation of this database."
        },
        "recoverableDatabaseId": {
          "type": "string",
          "description": "The resource identifier of the recoverable database associated with create operation of this database."
        },
        "restorableDroppedDatabaseId": {
          "type": "string",
          "description": "The resource identifier of the restorable dropped database associated with create operation of this database."
        },
        "catalogCollation": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "DATABASE_DEFAULT",
                "SQL_Latin1_General_CP1_CI_AS"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Collation of the metadata catalog."
        },
        "zoneRedundant": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Whether or not this database is zone redundant, which means the replicas of this database will be spread across multiple availability zones."
        }
      },
      "description": "The database's properties."
    },
    "DatabaseVulnerabilityAssessmentRuleBaselineItem": {
      "type": "object",
      "properties": {
        "result": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The rule baseline result"
        }
      },
      "required": [
        "result"
      ],
      "description": "Properties for an Azure SQL Database Vulnerability Assessment rule baseline's result."
    },
    "DatabaseVulnerabilityAssessmentRuleBaselineProperties": {
      "type": "object",
      "properties": {
        "baselineResults": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DatabaseVulnerabilityAssessmentRuleBaselineItem"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The rule baseline result"
        }
      },
      "required": [
        "baselineResults"
      ],
      "description": "Properties of a database Vulnerability Assessment rule baseline."
    },
    "ExtendedDatabaseBlobAuditingPolicyProperties": {
      "type": "object",
      "properties": {
        "predicateExpression": {
          "type": "string",
          "description": "Specifies condition of where clause when creating an audit."
        },
        "state": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Enabled",
                "Disabled"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Specifies the state of the policy. If state is Enabled, storageEndpoint and storageAccountAccessKey are required."
        },
        "storageEndpoint": {
          "type": "string",
          "description": "Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). If state is Enabled, storageEndpoint is required."
        },
        "storageAccountAccessKey": {
          "type": "string",
          "description": "Specifies the identifier key of the auditing storage account. If state is Enabled, storageAccountAccessKey is required."
        },
        "retentionDays": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Specifies the number of days to keep in the audit logs."
        },
        "auditActionsAndGroups": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Specifies the Actions-Groups and Actions to audit.\r\n\r\nThe recommended set of action groups to use is the following combination - this will audit all the queries and stored procedures executed against the database, as well as successful and failed logins:\r\n\r\nBATCH_COMPLETED_GROUP,\r\nSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP,\r\nFAILED_DATABASE_AUTHENTICATION_GROUP.\r\n\r\nThis above combination is also the set that is configured by default when enabling auditing from the Azure portal.\r\n\r\nThe supported action groups to audit are (note: choose only specific groups that cover your auditing needs. Using unnecessary groups could lead to very large quantities of audit records):\r\n\r\nAPPLICATION_ROLE_CHANGE_PASSWORD_GROUP\r\nBACKUP_RESTORE_GROUP\r\nDATABASE_LOGOUT_GROUP\r\nDATABASE_OBJECT_CHANGE_GROUP\r\nDATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP\r\nDATABASE_OBJECT_PERMISSION_CHANGE_GROUP\r\nDATABASE_OPERATION_GROUP\r\nDATABASE_PERMISSION_CHANGE_GROUP\r\nDATABASE_PRINCIPAL_CHANGE_GROUP\r\nDATABASE_PRINCIPAL_IMPERSONATION_GROUP\r\nDATABASE_ROLE_MEMBER_CHANGE_GROUP\r\nFAILED_DATABASE_AUTHENTICATION_GROUP\r\nSCHEMA_OBJECT_ACCESS_GROUP\r\nSCHEMA_OBJECT_CHANGE_GROUP\r\nSCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP\r\nSCHEMA_OBJECT_PERMISSION_CHANGE_GROUP\r\nSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP\r\nUSER_CHANGE_PASSWORD_GROUP\r\nBATCH_STARTED_GROUP\r\nBATCH_COMPLETED_GROUP\r\n\r\nThese are groups that cover all sql statements and stored procedures executed against the database, and should not be used in combination with other groups as this will result in duplicate audit logs.\r\n\r\nFor more information, see [Database-Level Audit Action Groups](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-action-groups).\r\n\r\nFor Database auditing policy, specific Actions can also be specified (note that Actions cannot be specified for Server auditing policy). The supported actions to audit are:\r\nSELECT\r\nUPDATE\r\nINSERT\r\nDELETE\r\nEXECUTE\r\nRECEIVE\r\nREFERENCES\r\n\r\nThe general form for defining an action to be audited is:\r\n<action> ON <object> BY <principal>\r\n\r\nNote that <object> in the above format can refer to an object like a table, view, or stored procedure, or an entire database or schema. For the latter cases, the forms DATABASE::<db_name> and SCHEMA::<schema_name> are used, respectively.\r\n\r\nFor example:\r\nSELECT on dbo.myTable by public\r\nSELECT on DATABASE::myDatabase by public\r\nSELECT on SCHEMA::mySchema by public\r\n\r\nFor more information, see [Database-Level Audit Actions](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-actions)"
        },
        "storageAccountSubscriptionId": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^[0-9a-fA-F]{8}(-[0-9a-fA-F]{4}){3}-[0-9a-fA-F]{12}$"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Specifies the blob storage subscription Id."
        },
        "isStorageSecondaryKeyInUse": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Specifies whether storageAccountAccessKey value is the storage's secondary key."
        }
      },
      "required": [
        "state"
      ],
      "description": "Properties of an extended database blob auditing policy."
    },
    "ExtendedServerBlobAuditingPolicyProperties": {
      "type": "object",
      "properties": {
        "predicateExpression": {
          "type": "string",
          "description": "Specifies condition of where clause when creating an audit."
        },
        "state": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Enabled",
                "Disabled"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Specifies the state of the policy. If state is Enabled, storageEndpoint and storageAccountAccessKey are required."
        },
        "storageEndpoint": {
          "type": "string",
          "description": "Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). If state is Enabled, storageEndpoint is required."
        },
        "storageAccountAccessKey": {
          "type": "string",
          "description": "Specifies the identifier key of the auditing storage account. If state is Enabled, storageAccountAccessKey is required."
        },
        "retentionDays": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Specifies the number of days to keep in the audit logs."
        },
        "auditActionsAndGroups": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Specifies the Actions-Groups and Actions to audit.\r\n\r\nThe recommended set of action groups to use is the following combination - this will audit all the queries and stored procedures executed against the database, as well as successful and failed logins:\r\n\r\nBATCH_COMPLETED_GROUP,\r\nSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP,\r\nFAILED_DATABASE_AUTHENTICATION_GROUP.\r\n\r\nThis above combination is also the set that is configured by default when enabling auditing from the Azure portal.\r\n\r\nThe supported action groups to audit are (note: choose only specific groups that cover your auditing needs. Using unnecessary groups could lead to very large quantities of audit records):\r\n\r\nAPPLICATION_ROLE_CHANGE_PASSWORD_GROUP\r\nBACKUP_RESTORE_GROUP\r\nDATABASE_LOGOUT_GROUP\r\nDATABASE_OBJECT_CHANGE_GROUP\r\nDATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP\r\nDATABASE_OBJECT_PERMISSION_CHANGE_GROUP\r\nDATABASE_OPERATION_GROUP\r\nDATABASE_PERMISSION_CHANGE_GROUP\r\nDATABASE_PRINCIPAL_CHANGE_GROUP\r\nDATABASE_PRINCIPAL_IMPERSONATION_GROUP\r\nDATABASE_ROLE_MEMBER_CHANGE_GROUP\r\nFAILED_DATABASE_AUTHENTICATION_GROUP\r\nSCHEMA_OBJECT_ACCESS_GROUP\r\nSCHEMA_OBJECT_CHANGE_GROUP\r\nSCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP\r\nSCHEMA_OBJECT_PERMISSION_CHANGE_GROUP\r\nSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP\r\nUSER_CHANGE_PASSWORD_GROUP\r\nBATCH_STARTED_GROUP\r\nBATCH_COMPLETED_GROUP\r\n\r\nThese are groups that cover all sql statements and stored procedures executed against the database, and should not be used in combination with other groups as this will result in duplicate audit logs.\r\n\r\nFor more information, see [Database-Level Audit Action Groups](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-action-groups).\r\n\r\nFor Database auditing policy, specific Actions can also be specified (note that Actions cannot be specified for Server auditing policy). The supported actions to audit are:\r\nSELECT\r\nUPDATE\r\nINSERT\r\nDELETE\r\nEXECUTE\r\nRECEIVE\r\nREFERENCES\r\n\r\nThe general form for defining an action to be audited is:\r\n<action> ON <object> BY <principal>\r\n\r\nNote that <object> in the above format can refer to an object like a table, view, or stored procedure, or an entire database or schema. For the latter cases, the forms DATABASE::<db_name> and SCHEMA::<schema_name> are used, respectively.\r\n\r\nFor example:\r\nSELECT on dbo.myTable by public\r\nSELECT on DATABASE::myDatabase by public\r\nSELECT on SCHEMA::mySchema by public\r\n\r\nFor more information, see [Database-Level Audit Actions](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-actions)"
        },
        "storageAccountSubscriptionId": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^[0-9a-fA-F]{8}(-[0-9a-fA-F]{4}){3}-[0-9a-fA-F]{12}$"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Specifies the blob storage subscription Id."
        },
        "isStorageSecondaryKeyInUse": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Specifies whether storageAccountAccessKey value is the storage's secondary key."
        }
      },
      "required": [
        "state"
      ],
      "description": "Properties of an extended server blob auditing policy."
    },
    "JobAgentProperties": {
      "type": "object",
      "properties": {
        "databaseId": {
          "type": "string",
          "description": "Resource ID of the database to store job metadata in."
        }
      },
      "required": [
        "databaseId"
      ],
      "description": "Properties of a job agent."
    },
    "JobCredentialProperties": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "description": "The credential user name."
        },
        "password": {
          "type": "string",
          "description": "The credential password."
        }
      },
      "required": [
        "username",
        "password"
      ],
      "description": "Properties of a job credential."
    },
    "JobProperties": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "default": "",
          "description": "User-defined description of the job."
        },
        "schedule": {
          "oneOf": [
            {
              "$ref": "#/definitions/JobSchedule"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Schedule properties of the job."
        }
      },
      "description": "Properties of a job."
    },
    "JobSchedule": {
      "type": "object",
      "properties": {
        "startTime": {
          "type": "string",
          "default": "0001-01-01T00:00:00Z",
          "format": "date-time",
          "description": "Schedule start time."
        },
        "endTime": {
          "type": "string",
          "default": "9999-12-31T11:59:59Z",
          "format": "date-time",
          "description": "Schedule end time."
        },
        "type": {
          "type": "string",
          "enum": [
            "Once",
            "Recurring"
          ],
          "description": "Schedule interval type."
        },
        "enabled": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Whether or not the schedule is enabled."
        },
        "interval": {
          "type": "string",
          "description": "Value of the schedule's recurring interval, if the scheduletype is recurring. ISO8601 duration format."
        }
      },
      "description": "Scheduling properties of a job."
    },
    "JobStepAction": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "TSql"
          ],
          "description": "Type of action being executed by the job step."
        },
        "source": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Inline"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The source of the action to execute."
        },
        "value": {
          "type": "string",
          "description": "The action value, for example the text of the T-SQL script to execute."
        }
      },
      "required": [
        "value"
      ],
      "description": "The action to be executed by a job step."
    },
    "JobStepExecutionOptions": {
      "type": "object",
      "properties": {
        "timeoutSeconds": {
          "oneOf": [
            {
              "type": "integer",
              "default": "43200"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Execution timeout for the job step."
        },
        "retryAttempts": {
          "oneOf": [
            {
              "type": "integer",
              "default": "10"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Maximum number of times the job step will be reattempted if the first attempt fails."
        },
        "initialRetryIntervalSeconds": {
          "oneOf": [
            {
              "type": "integer",
              "default": "1"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Initial delay between retries for job step execution."
        },
        "maximumRetryIntervalSeconds": {
          "oneOf": [
            {
              "type": "integer",
              "default": "120"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The maximum amount of time to wait between retries for job step execution."
        },
        "retryIntervalBackoffMultiplier": {
          "oneOf": [
            {
              "type": "number",
              "default": 2.0
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The backoff multiplier for the time between retries."
        }
      },
      "description": "The execution options of a job step."
    },
    "JobStepOutput": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "SqlDatabase"
          ],
          "description": "The output destination type."
        },
        "subscriptionId": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^[0-9a-fA-F]{8}(-[0-9a-fA-F]{4}){3}-[0-9a-fA-F]{12}$"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The output destination subscription id."
        },
        "resourceGroupName": {
          "type": "string",
          "description": "The output destination resource group."
        },
        "serverName": {
          "type": "string",
          "description": "The output destination server name."
        },
        "databaseName": {
          "type": "string",
          "description": "The output destination database."
        },
        "schemaName": {
          "type": "string",
          "default": "dbo",
          "description": "The output destination schema."
        },
        "tableName": {
          "type": "string",
          "description": "The output destination table."
        },
        "credential": {
          "type": "string",
          "description": "The resource ID of the credential to use to connect to the output destination."
        }
      },
      "required": [
        "serverName",
        "databaseName",
        "tableName",
        "credential"
      ],
      "description": "The output configuration of a job step."
    },
    "JobStepProperties": {
      "type": "object",
      "properties": {
        "stepId": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The job step's index within the job. If not specified when creating the job step, it will be created as the last step. If not specified when updating the job step, the step id is not modified."
        },
        "targetGroup": {
          "type": "string",
          "description": "The resource ID of the target group that the job step will be executed on."
        },
        "credential": {
          "type": "string",
          "description": "The resource ID of the job credential that will be used to connect to the targets."
        },
        "action": {
          "oneOf": [
            {
              "$ref": "#/definitions/JobStepAction"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The action payload of the job step."
        },
        "output": {
          "oneOf": [
            {
              "$ref": "#/definitions/JobStepOutput"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Output destination properties of the job step."
        },
        "executionOptions": {
          "oneOf": [
            {
              "$ref": "#/definitions/JobStepExecutionOptions"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Execution options for the job step."
        }
      },
      "required": [
        "targetGroup",
        "credential",
        "action"
      ],
      "description": "Properties of a job step."
    },
    "JobTarget": {
      "type": "object",
      "properties": {
        "membershipType": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Include",
                "Exclude"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Whether the target is included or excluded from the group."
        },
        "type": {
          "type": "string",
          "enum": [
            "TargetGroup",
            "SqlDatabase",
            "SqlElasticPool",
            "SqlShardMap",
            "SqlServer"
          ],
          "description": "The target type."
        },
        "serverName": {
          "type": "string",
          "description": "The target server name."
        },
        "databaseName": {
          "type": "string",
          "description": "The target database name."
        },
        "elasticPoolName": {
          "type": "string",
          "description": "The target elastic pool name."
        },
        "shardMapName": {
          "type": "string",
          "description": "The target shard map."
        },
        "refreshCredential": {
          "type": "string",
          "description": "The resource ID of the credential that is used during job execution to connect to the target and determine the list of databases inside the target."
        }
      },
      "required": [
        "type"
      ],
      "description": "A job target, for example a specific database or a container of databases that is evaluated during job execution."
    },
    "JobTargetGroupProperties": {
      "type": "object",
      "properties": {
        "members": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/JobTarget"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Members of the target group."
        }
      },
      "required": [
        "members"
      ],
      "description": "Properties of job target group."
    },
    "LongTermRetentionPolicyProperties": {
      "type": "object",
      "properties": {
        "weeklyRetention": {
          "type": "string",
          "description": "The weekly retention policy for an LTR backup in an ISO 8601 format."
        },
        "monthlyRetention": {
          "type": "string",
          "description": "The montly retention policy for an LTR backup in an ISO 8601 format."
        },
        "yearlyRetention": {
          "type": "string",
          "description": "The yearly retention policy for an LTR backup in an ISO 8601 format."
        },
        "weekOfYear": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The week of year to take the yearly backup in an ISO 8601 format."
        }
      },
      "description": "Properties of a long term retention policy"
    },
    "ManagedDatabaseProperties": {
      "type": "object",
      "properties": {
        "collation": {
          "type": "string",
          "description": "Collation of the managed database."
        },
        "restorePointInTime": {
          "type": "string",
          "format": "date-time",
          "description": "Conditional. If createMode is PointInTimeRestore, this value is required. Specifies the point in time (ISO8601 format) of the source database that will be restored to create the new database."
        },
        "catalogCollation": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "DATABASE_DEFAULT",
                "SQL_Latin1_General_CP1_CI_AS"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Collation of the metadata catalog."
        },
        "createMode": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Default",
                "RestoreExternalBackup",
                "PointInTimeRestore"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Managed database create mode. PointInTimeRestore: Create a database by restoring a point in time backup of an existing database. SourceDatabaseName, SourceManagedInstanceName and PointInTime must be specified. RestoreExternalBackup: Create a database by restoring from external backup files. Collation, StorageContainerUri and StorageContainerSasToken must be specified."
        },
        "storageContainerUri": {
          "type": "string",
          "description": "Conditional. If createMode is RestoreExternalBackup, this value is required. Specifies the uri of the storage container where backups for this restore are stored."
        },
        "sourceDatabaseId": {
          "type": "string",
          "description": "The resource identifier of the source database associated with create operation of this database."
        },
        "storageContainerSasToken": {
          "type": "string",
          "description": "Conditional. If createMode is RestoreExternalBackup, this value is required. Specifies the storage container sas token."
        }
      },
      "description": "The managed database's properties."
    },
    "ServerBlobAuditingPolicyProperties": {
      "type": "object",
      "properties": {
        "state": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Enabled",
                "Disabled"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Specifies the state of the policy. If state is Enabled, storageEndpoint and storageAccountAccessKey are required."
        },
        "storageEndpoint": {
          "type": "string",
          "description": "Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). If state is Enabled, storageEndpoint is required."
        },
        "storageAccountAccessKey": {
          "type": "string",
          "description": "Specifies the identifier key of the auditing storage account. If state is Enabled, storageAccountAccessKey is required."
        },
        "retentionDays": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Specifies the number of days to keep in the audit logs."
        },
        "auditActionsAndGroups": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Specifies the Actions-Groups and Actions to audit.\r\n\r\nThe recommended set of action groups to use is the following combination - this will audit all the queries and stored procedures executed against the database, as well as successful and failed logins:\r\n\r\nBATCH_COMPLETED_GROUP,\r\nSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP,\r\nFAILED_DATABASE_AUTHENTICATION_GROUP.\r\n\r\nThis above combination is also the set that is configured by default when enabling auditing from the Azure portal.\r\n\r\nThe supported action groups to audit are (note: choose only specific groups that cover your auditing needs. Using unnecessary groups could lead to very large quantities of audit records):\r\n\r\nAPPLICATION_ROLE_CHANGE_PASSWORD_GROUP\r\nBACKUP_RESTORE_GROUP\r\nDATABASE_LOGOUT_GROUP\r\nDATABASE_OBJECT_CHANGE_GROUP\r\nDATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP\r\nDATABASE_OBJECT_PERMISSION_CHANGE_GROUP\r\nDATABASE_OPERATION_GROUP\r\nDATABASE_PERMISSION_CHANGE_GROUP\r\nDATABASE_PRINCIPAL_CHANGE_GROUP\r\nDATABASE_PRINCIPAL_IMPERSONATION_GROUP\r\nDATABASE_ROLE_MEMBER_CHANGE_GROUP\r\nFAILED_DATABASE_AUTHENTICATION_GROUP\r\nSCHEMA_OBJECT_ACCESS_GROUP\r\nSCHEMA_OBJECT_CHANGE_GROUP\r\nSCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP\r\nSCHEMA_OBJECT_PERMISSION_CHANGE_GROUP\r\nSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP\r\nUSER_CHANGE_PASSWORD_GROUP\r\nBATCH_STARTED_GROUP\r\nBATCH_COMPLETED_GROUP\r\n\r\nThese are groups that cover all sql statements and stored procedures executed against the database, and should not be used in combination with other groups as this will result in duplicate audit logs.\r\n\r\nFor more information, see [Database-Level Audit Action Groups](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-action-groups).\r\n\r\nFor Database auditing policy, specific Actions can also be specified (note that Actions cannot be specified for Server auditing policy). The supported actions to audit are:\r\nSELECT\r\nUPDATE\r\nINSERT\r\nDELETE\r\nEXECUTE\r\nRECEIVE\r\nREFERENCES\r\n\r\nThe general form for defining an action to be audited is:\r\n<action> ON <object> BY <principal>\r\n\r\nNote that <object> in the above format can refer to an object like a table, view, or stored procedure, or an entire database or schema. For the latter cases, the forms DATABASE::<db_name> and SCHEMA::<schema_name> are used, respectively.\r\n\r\nFor example:\r\nSELECT on dbo.myTable by public\r\nSELECT on DATABASE::myDatabase by public\r\nSELECT on SCHEMA::mySchema by public\r\n\r\nFor more information, see [Database-Level Audit Actions](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-actions)"
        },
        "storageAccountSubscriptionId": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^[0-9a-fA-F]{8}(-[0-9a-fA-F]{4}){3}-[0-9a-fA-F]{12}$"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Specifies the blob storage subscription Id."
        },
        "isStorageSecondaryKeyInUse": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Specifies whether storageAccountAccessKey value is the storage's secondary key."
        }
      },
      "required": [
        "state"
      ],
      "description": "Properties of a server blob auditing policy."
    },
    "servers_databases_auditingSettings_childResource": {
      "type": "object",
      "properties": {
        "name": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The name of the blob auditing policy."
        },
        "type": {
          "type": "string",
          "enum": [
            "auditingSettings"
          ]
        },
        "apiVersion": {
          "type": "string",
          "enum": [
            "2017-03-01-preview"
          ]
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/DatabaseBlobAuditingPolicyProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Resource properties."
        }
      },
      "required": [
        "name",
        "type",
        "apiVersion",
        "properties"
      ],
      "description": "Microsoft.Sql/servers/databases/auditingSettings"
    },
    "servers_databases_backupLongTermRetentionPolicies_childResource": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "backupLongTermRetentionPolicies"
          ]
        },
        "apiVersion": {
          "type": "string",
          "enum": [
            "2017-03-01-preview"
          ]
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/LongTermRetentionPolicyProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Resource properties."
        }
      },
      "required": [
        "name",
        "type",
        "apiVersion",
        "properties"
      ],
      "description": "Microsoft.Sql/servers/databases/backupLongTermRetentionPolicies"
    },
    "servers_databases_extendedAuditingSettings_childResource": {
      "type": "object",
      "properties": {
        "name": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The name of the blob auditing policy."
        },
        "type": {
          "type": "string",
          "enum": [
            "extendedAuditingSettings"
          ]
        },
        "apiVersion": {
          "type": "string",
          "enum": [
            "2017-03-01-preview"
          ]
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/ExtendedDatabaseBlobAuditingPolicyProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Resource properties."
        }
      },
      "required": [
        "name",
        "type",
        "apiVersion",
        "properties"
      ],
      "description": "Microsoft.Sql/servers/databases/extendedAuditingSettings"
    },
    "servers_jobAgents_credentials_childResource": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "credentials"
          ]
        },
        "apiVersion": {
          "type": "string",
          "enum": [
            "2017-03-01-preview"
          ]
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/JobCredentialProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Resource properties."
        }
      },
      "required": [
        "name",
        "type",
        "apiVersion",
        "properties"
      ],
      "description": "Microsoft.Sql/servers/jobAgents/credentials"
    },
    "servers_jobAgents_jobs_childResource": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "jobs"
          ]
        },
        "apiVersion": {
          "type": "string",
          "enum": [
            "2017-03-01-preview"
          ]
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/JobProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Resource properties."
        },
        "resources": {
          "type": "array",
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/servers_jobAgents_jobs_steps_childResource"
              }
            ]
          }
        }
      },
      "required": [
        "name",
        "type",
        "apiVersion",
        "properties"
      ],
      "description": "Microsoft.Sql/servers/jobAgents/jobs"
    },
    "servers_jobAgents_jobs_executions_childResource": {
      "type": "object",
      "properties": {
        "name": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^[0-9a-fA-F]{8}(-[0-9a-fA-F]{4}){3}-[0-9a-fA-F]{12}$"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "type": "string",
          "enum": [
            "executions"
          ]
        },
        "apiVersion": {
          "type": "string",
          "enum": [
            "2017-03-01-preview"
          ]
        }
      },
      "required": [
        "name",
        "type",
        "apiVersion"
      ],
      "description": "Microsoft.Sql/servers/jobAgents/jobs/executions"
    },
    "servers_jobAgents_jobs_steps_childResource": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "steps"
          ]
        },
        "apiVersion": {
          "type": "string",
          "enum": [
            "2017-03-01-preview"
          ]
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/JobStepProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Resource properties."
        }
      },
      "required": [
        "name",
        "type",
        "apiVersion",
        "properties"
      ],
      "description": "Microsoft.Sql/servers/jobAgents/jobs/steps"
    },
    "servers_jobAgents_targetGroups_childResource": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "targetGroups"
          ]
        },
        "apiVersion": {
          "type": "string",
          "enum": [
            "2017-03-01-preview"
          ]
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/JobTargetGroupProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Resource properties."
        }
      },
      "required": [
        "name",
        "type",
        "apiVersion",
        "properties"
      ],
      "description": "Microsoft.Sql/servers/jobAgents/targetGroups"
    },
    "Sku": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the SKU. Ex - P3. It is typically a letter+number code"
        },
        "tier": {
          "type": "string",
          "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT."
        },
        "size": {
          "type": "string",
          "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. "
        },
        "family": {
          "type": "string",
          "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here."
        },
        "capacity": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted."
        }
      },
      "required": [
        "name"
      ],
      "description": "The resource model definition representing SKU"
    },
    "VulnerabilityAssessmentRecurringScansProperties": {
      "type": "object",
      "properties": {
        "isEnabled": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Recurring scans state."
        },
        "emailSubscriptionAdmins": {
          "oneOf": [
            {
              "type": "boolean",
              "default": true
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Specifies that the schedule scan notification will be is sent to the subscription administrators."
        },
        "emails": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Specifies an array of e-mail addresses to which the scan notification is sent."
        }
      },
      "description": "Properties of a Vulnerability Assessment recurring scans."
    }
  }
}
