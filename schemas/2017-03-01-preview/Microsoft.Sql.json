{
  "id": "https://schema.management.azure.com/schemas/2017-03-01-preview/Microsoft.Sql.json#",
  "title": "Microsoft.Sql",
  "description": "Microsoft Sql Resource Types",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "resourceDefinitions": {
    "managedInstances_administrators": {
      "description": "Microsoft.Sql/managedInstances/administrators",
      "properties": {
        "apiVersion": {
          "enum": [
            "2017-03-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "oneOf": [
            {
              "pattern": "^.*/ActiveDirectory$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Resource properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedInstanceAdministratorProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.Sql/managedInstances/administrators"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "managedInstances_databases": {
      "description": "Microsoft.Sql/managedInstances/databases",
      "properties": {
        "apiVersion": {
          "enum": [
            "2017-03-01-preview"
          ],
          "type": "string"
        },
        "location": {
          "description": "Resource location.",
          "type": "string"
        },
        "name": {
          "description": "The name of the database.",
          "type": "string"
        },
        "properties": {
          "description": "Resource properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedDatabaseProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/managedInstances_databases_securityAlertPolicies_childResource"
              },
              {
                "$ref": "#/definitions/managedInstances_databases_backupShortTermRetentionPolicies_childResource"
              }
            ]
          },
          "type": "array"
        },
        "tags": {
          "description": "Resource tags.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.Sql/managedInstances/databases"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "managedInstances_databases_backupShortTermRetentionPolicies": {
      "description": "Microsoft.Sql/managedInstances/databases/backupShortTermRetentionPolicies",
      "properties": {
        "apiVersion": {
          "enum": [
            "2017-03-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The policy name. Should always be \"default\".",
          "oneOf": [
            {
              "pattern": "^.*/default$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Resource properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedBackupShortTermRetentionPolicyProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.Sql/managedInstances/databases/backupShortTermRetentionPolicies"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "managedInstances_databases_securityAlertPolicies": {
      "description": "Microsoft.Sql/managedInstances/databases/securityAlertPolicies",
      "properties": {
        "apiVersion": {
          "enum": [
            "2017-03-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the security alert policy.",
          "oneOf": [
            {
              "pattern": "^.*/default$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Resource properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/SecurityAlertPolicyProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.Sql/managedInstances/databases/securityAlertPolicies"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "managedInstances_restorableDroppedDatabases_backupShortTermRetentionPolicies": {
      "description": "Microsoft.Sql/managedInstances/restorableDroppedDatabases/backupShortTermRetentionPolicies",
      "properties": {
        "apiVersion": {
          "enum": [
            "2017-03-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The policy name. Should always be \"default\".",
          "oneOf": [
            {
              "pattern": "^.*/default$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Resource properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedBackupShortTermRetentionPolicyProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.Sql/managedInstances/restorableDroppedDatabases/backupShortTermRetentionPolicies"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "managedInstances_securityAlertPolicies": {
      "description": "Microsoft.Sql/managedInstances/securityAlertPolicies",
      "properties": {
        "apiVersion": {
          "enum": [
            "2017-03-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the security alert policy.",
          "oneOf": [
            {
              "pattern": "^.*/Default$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Resource properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/SecurityAlertPolicyProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.Sql/managedInstances/securityAlertPolicies"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "servers_auditingSettings": {
      "description": "Microsoft.Sql/servers/auditingSettings",
      "properties": {
        "apiVersion": {
          "enum": [
            "2017-03-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the blob auditing policy.",
          "oneOf": [
            {
              "pattern": "^.*/default$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Resource properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/ServerBlobAuditingPolicyProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.Sql/servers/auditingSettings"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "servers_databases": {
      "description": "Microsoft.Sql/servers/databases",
      "properties": {
        "apiVersion": {
          "enum": [
            "2017-03-01-preview"
          ],
          "type": "string"
        },
        "location": {
          "description": "Resource location.",
          "type": "string"
        },
        "name": {
          "description": "The name of the database.",
          "type": "string"
        },
        "properties": {
          "description": "Resource properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/DatabaseProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/servers_databases_auditingSettings_childResource"
              },
              {
                "$ref": "#/definitions/servers_databases_extendedAuditingSettings_childResource"
              },
              {
                "$ref": "#/definitions/servers_databases_vulnerabilityAssessments_childResource"
              },
              {
                "$ref": "#/definitions/servers_databases_backupLongTermRetentionPolicies_childResource"
              }
            ]
          },
          "type": "array"
        },
        "sku": {
          "description": "The name and tier of the SKU.",
          "oneOf": [
            {
              "$ref": "#/definitions/Sku"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Resource tags.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.Sql/servers/databases"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "servers_databases_auditingSettings": {
      "description": "Microsoft.Sql/servers/databases/auditingSettings",
      "properties": {
        "apiVersion": {
          "enum": [
            "2017-03-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the blob auditing policy.",
          "oneOf": [
            {
              "pattern": "^.*/default$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Resource properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/DatabaseBlobAuditingPolicyProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.Sql/servers/databases/auditingSettings"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "servers_databases_backupLongTermRetentionPolicies": {
      "description": "Microsoft.Sql/servers/databases/backupLongTermRetentionPolicies",
      "properties": {
        "apiVersion": {
          "enum": [
            "2017-03-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The policy name. Should always be Default.",
          "oneOf": [
            {
              "pattern": "^.*/default$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Resource properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/LongTermRetentionPolicyProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.Sql/servers/databases/backupLongTermRetentionPolicies"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "servers_databases_extendedAuditingSettings": {
      "description": "Microsoft.Sql/servers/databases/extendedAuditingSettings",
      "properties": {
        "apiVersion": {
          "enum": [
            "2017-03-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the blob auditing policy.",
          "oneOf": [
            {
              "pattern": "^.*/default$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Resource properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/ExtendedDatabaseBlobAuditingPolicyProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.Sql/servers/databases/extendedAuditingSettings"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "servers_databases_schemas_tables_columns_sensitivityLabels": {
      "description": "Microsoft.Sql/servers/databases/schemas/tables/columns/sensitivityLabels",
      "properties": {
        "apiVersion": {
          "enum": [
            "2017-03-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "oneOf": [
            {
              "pattern": "^.*/current$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Resource properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/SensitivityLabelProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.Sql/servers/databases/schemas/tables/columns/sensitivityLabels"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "servers_databases_vulnerabilityAssessments": {
      "description": "Microsoft.Sql/servers/databases/vulnerabilityAssessments",
      "properties": {
        "apiVersion": {
          "enum": [
            "2017-03-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the vulnerability assessment.",
          "oneOf": [
            {
              "pattern": "^.*/default$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Resource properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/DatabaseVulnerabilityAssessmentProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.Sql/servers/databases/vulnerabilityAssessments"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "servers_databases_vulnerabilityAssessments_rules_baselines": {
      "description": "Microsoft.Sql/servers/databases/vulnerabilityAssessments/rules/baselines",
      "properties": {
        "apiVersion": {
          "enum": [
            "2017-03-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the vulnerability assessment rule baseline (default implies a baseline on a database level rule and master for server level rule).",
          "oneOf": [
            {
              "enum": [
                "master",
                "default"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Resource properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/DatabaseVulnerabilityAssessmentRuleBaselineProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.Sql/servers/databases/vulnerabilityAssessments/rules/baselines"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "servers_dnsAliases": {
      "description": "Microsoft.Sql/servers/dnsAliases",
      "properties": {
        "apiVersion": {
          "enum": [
            "2017-03-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the server DNS alias.",
          "type": "string"
        },
        "type": {
          "enum": [
            "Microsoft.Sql/servers/dnsAliases"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "servers_extendedAuditingSettings": {
      "description": "Microsoft.Sql/servers/extendedAuditingSettings",
      "properties": {
        "apiVersion": {
          "enum": [
            "2017-03-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the blob auditing policy.",
          "oneOf": [
            {
              "pattern": "^.*/default$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Resource properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/ExtendedServerBlobAuditingPolicyProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.Sql/servers/extendedAuditingSettings"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "servers_jobAgents": {
      "description": "Microsoft.Sql/servers/jobAgents",
      "properties": {
        "apiVersion": {
          "enum": [
            "2017-03-01-preview"
          ],
          "type": "string"
        },
        "location": {
          "description": "Resource location.",
          "type": "string"
        },
        "name": {
          "description": "The name of the job agent to be created or updated.",
          "type": "string"
        },
        "properties": {
          "description": "Resource properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/JobAgentProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/servers_jobAgents_jobs_childResource"
              },
              {
                "$ref": "#/definitions/servers_jobAgents_credentials_childResource"
              },
              {
                "$ref": "#/definitions/servers_jobAgents_targetGroups_childResource"
              }
            ]
          },
          "type": "array"
        },
        "sku": {
          "description": "The name and tier of the SKU.",
          "oneOf": [
            {
              "$ref": "#/definitions/Sku"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Resource tags.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.Sql/servers/jobAgents"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "servers_jobAgents_credentials": {
      "description": "Microsoft.Sql/servers/jobAgents/credentials",
      "properties": {
        "apiVersion": {
          "enum": [
            "2017-03-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the credential.",
          "type": "string"
        },
        "properties": {
          "description": "Resource properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/JobCredentialProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.Sql/servers/jobAgents/credentials"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "servers_jobAgents_jobs": {
      "description": "Microsoft.Sql/servers/jobAgents/jobs",
      "properties": {
        "apiVersion": {
          "enum": [
            "2017-03-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the job to get.",
          "type": "string"
        },
        "properties": {
          "description": "Resource properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/JobProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/servers_jobAgents_jobs_steps_childResource"
              },
              {
                "$ref": "#/definitions/servers_jobAgents_jobs_executions_childResource"
              }
            ]
          },
          "type": "array"
        },
        "type": {
          "enum": [
            "Microsoft.Sql/servers/jobAgents/jobs"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "servers_jobAgents_jobs_executions": {
      "description": "Microsoft.Sql/servers/jobAgents/jobs/executions",
      "properties": {
        "apiVersion": {
          "enum": [
            "2017-03-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The job execution id to create the job execution under.",
          "oneOf": [
            {
              "pattern": "^[0-9a-fA-F]{8}(-[0-9a-fA-F]{4}){3}-[0-9a-fA-F]{12}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.Sql/servers/jobAgents/jobs/executions"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "servers_jobAgents_jobs_steps": {
      "description": "Microsoft.Sql/servers/jobAgents/jobs/steps",
      "properties": {
        "apiVersion": {
          "enum": [
            "2017-03-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the job step.",
          "type": "string"
        },
        "properties": {
          "description": "Resource properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/JobStepProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.Sql/servers/jobAgents/jobs/steps"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "servers_jobAgents_targetGroups": {
      "description": "Microsoft.Sql/servers/jobAgents/targetGroups",
      "properties": {
        "apiVersion": {
          "enum": [
            "2017-03-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the target group.",
          "type": "string"
        },
        "properties": {
          "description": "Resource properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/JobTargetGroupProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.Sql/servers/jobAgents/targetGroups"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "servers_securityAlertPolicies": {
      "description": "Microsoft.Sql/servers/securityAlertPolicies",
      "properties": {
        "apiVersion": {
          "enum": [
            "2017-03-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the threat detection policy.",
          "oneOf": [
            {
              "pattern": "^.*/Default$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Resource properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/SecurityAlertPolicyProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.Sql/servers/securityAlertPolicies"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    }
  },
  "definitions": {
    "DatabaseBlobAuditingPolicyProperties": {
      "description": "Properties of a database blob auditing policy.",
      "properties": {
        "auditActionsAndGroups": {
          "description": "Specifies the Actions-Groups and Actions to audit.\r\n\r\nThe recommended set of action groups to use is the following combination - this will audit all the queries and stored procedures executed against the database, as well as successful and failed logins:\r\n\r\nBATCH_COMPLETED_GROUP,\r\nSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP,\r\nFAILED_DATABASE_AUTHENTICATION_GROUP.\r\n\r\nThis above combination is also the set that is configured by default when enabling auditing from the Azure portal.\r\n\r\nThe supported action groups to audit are (note: choose only specific groups that cover your auditing needs. Using unnecessary groups could lead to very large quantities of audit records):\r\n\r\nAPPLICATION_ROLE_CHANGE_PASSWORD_GROUP\r\nBACKUP_RESTORE_GROUP\r\nDATABASE_LOGOUT_GROUP\r\nDATABASE_OBJECT_CHANGE_GROUP\r\nDATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP\r\nDATABASE_OBJECT_PERMISSION_CHANGE_GROUP\r\nDATABASE_OPERATION_GROUP\r\nDATABASE_PERMISSION_CHANGE_GROUP\r\nDATABASE_PRINCIPAL_CHANGE_GROUP\r\nDATABASE_PRINCIPAL_IMPERSONATION_GROUP\r\nDATABASE_ROLE_MEMBER_CHANGE_GROUP\r\nFAILED_DATABASE_AUTHENTICATION_GROUP\r\nSCHEMA_OBJECT_ACCESS_GROUP\r\nSCHEMA_OBJECT_CHANGE_GROUP\r\nSCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP\r\nSCHEMA_OBJECT_PERMISSION_CHANGE_GROUP\r\nSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP\r\nUSER_CHANGE_PASSWORD_GROUP\r\nBATCH_STARTED_GROUP\r\nBATCH_COMPLETED_GROUP\r\nDBCC_GROUP\r\nDATABASE_OWNERSHIP_CHANGE_GROUP\r\nDATABASE_CHANGE_GROUP\r\n\r\nThese are groups that cover all sql statements and stored procedures executed against the database, and should not be used in combination with other groups as this will result in duplicate audit logs.\r\n\r\nFor more information, see [Database-Level Audit Action Groups](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-action-groups).\r\n\r\nFor Database auditing policy, specific Actions can also be specified (note that Actions cannot be specified for Server auditing policy). The supported actions to audit are:\r\nSELECT\r\nUPDATE\r\nINSERT\r\nDELETE\r\nEXECUTE\r\nRECEIVE\r\nREFERENCES\r\n\r\nThe general form for defining an action to be audited is:\r\n{action} ON {object} BY {principal}\r\n\r\nNote that <object> in the above format can refer to an object like a table, view, or stored procedure, or an entire database or schema. For the latter cases, the forms DATABASE::{db_name} and SCHEMA::{schema_name} are used, respectively.\r\n\r\nFor example:\r\nSELECT on dbo.myTable by public\r\nSELECT on DATABASE::myDatabase by public\r\nSELECT on SCHEMA::mySchema by public\r\n\r\nFor more information, see [Database-Level Audit Actions](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-actions)",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "isAzureMonitorTargetEnabled": {
          "description": "Specifies whether audit events are sent to Azure Monitor. \r\nIn order to send the events to Azure Monitor, specify 'state' as 'Enabled' and 'isAzureMonitorTargetEnabled' as true.\r\n\r\nWhen using REST API to configure auditing, Diagnostic Settings with 'SQLSecurityAuditEvents' diagnostic logs category on the database should be also created.\r\nNote that for server level audit you should use the 'master' database as {databaseName}.\r\n\r\nDiagnostic Settings URI format:\r\nPUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview\r\n\r\nFor more information, see [Diagnostic Settings REST API](https://go.microsoft.com/fwlink/?linkid=2033207)\r\nor [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)\r\n",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "isStorageSecondaryKeyInUse": {
          "description": "Specifies whether storageAccountAccessKey value is the storage's secondary key.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "queueDelayMs": {
          "description": "Specifies the amount of time in milliseconds that can elapse before audit actions are forced to be processed.\r\nThe default minimum value is 1000 (1 second). The maximum is 2,147,483,647.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "retentionDays": {
          "description": "Specifies the number of days to keep in the audit logs in the storage account.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "state": {
          "description": "Specifies the state of the policy. If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled are required.",
          "oneOf": [
            {
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "storageAccountAccessKey": {
          "description": "Specifies the identifier key of the auditing storage account. \r\nIf state is Enabled and storageEndpoint is specified, not specifying the storageAccountAccessKey will use SQL server system-assigned managed identity to access the storage.\r\nPrerequisites for using managed identity authentication:\r\n1. Assign SQL Server a system-assigned managed identity in Azure Active Directory (AAD).\r\n2. Grant SQL Server identity access to the storage account by adding 'Storage Blob Data Contributor' RBAC role to the server identity.\r\nFor more information, see [Auditing to storage using Managed Identity authentication](https://go.microsoft.com/fwlink/?linkid=2114355)",
          "type": "string"
        },
        "storageAccountSubscriptionId": {
          "description": "Specifies the blob storage subscription Id.",
          "oneOf": [
            {
              "pattern": "^[0-9a-fA-F]{8}(-[0-9a-fA-F]{4}){3}-[0-9a-fA-F]{12}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "storageEndpoint": {
          "description": "Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled is required.",
          "type": "string"
        }
      },
      "required": [
        "state"
      ],
      "type": "object"
    },
    "DatabaseProperties": {
      "description": "The database's properties.",
      "properties": {
        "catalogCollation": {
          "description": "Collation of the metadata catalog.",
          "oneOf": [
            {
              "enum": [
                "DATABASE_DEFAULT",
                "SQL_Latin1_General_CP1_CI_AS"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "collation": {
          "description": "The collation of the database.",
          "type": "string"
        },
        "createMode": {
          "description": "Specifies the mode of database creation.\r\n\r\nDefault: regular database creation.\r\n\r\nCopy: creates a database as a copy of an existing database. sourceDatabaseId must be specified as the resource ID of the source database.\r\n\r\nSecondary: creates a database as a secondary replica of an existing database. sourceDatabaseId must be specified as the resource ID of the existing primary database.\r\n\r\nPointInTimeRestore: Creates a database by restoring a point in time backup of an existing database. sourceDatabaseId must be specified as the resource ID of the existing database, and restorePointInTime must be specified.\r\n\r\nRecovery: Creates a database by restoring a geo-replicated backup. sourceDatabaseId must be specified as the recoverable database resource ID to restore.\r\n\r\nRestore: Creates a database by restoring a backup of a deleted database. sourceDatabaseId must be specified. If sourceDatabaseId is the database's original resource ID, then sourceDatabaseDeletionDate must be specified. Otherwise sourceDatabaseId must be the restorable dropped database resource ID and sourceDatabaseDeletionDate is ignored. restorePointInTime may also be specified to restore from an earlier point in time.\r\n\r\nRestoreLongTermRetentionBackup: Creates a database by restoring from a long term retention vault. recoveryServicesRecoveryPointResourceId must be specified as the recovery point resource ID.\r\n\r\nCopy, Secondary, and RestoreLongTermRetentionBackup are not supported for DataWarehouse edition.",
          "oneOf": [
            {
              "enum": [
                "Default",
                "Copy",
                "Secondary",
                "OnlineSecondary",
                "PointInTimeRestore",
                "Restore",
                "Recovery",
                "RestoreExternalBackup",
                "RestoreExternalBackupSecondary",
                "RestoreLongTermRetentionBackup"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "elasticPoolId": {
          "description": "The resource identifier of the elastic pool containing this database.",
          "type": "string"
        },
        "longTermRetentionBackupResourceId": {
          "description": "The resource identifier of the long term retention backup associated with create operation of this database.",
          "type": "string"
        },
        "maxSizeBytes": {
          "description": "The max size of the database expressed in bytes.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "recoverableDatabaseId": {
          "description": "The resource identifier of the recoverable database associated with create operation of this database.",
          "type": "string"
        },
        "recoveryServicesRecoveryPointId": {
          "description": "The resource identifier of the recovery point associated with create operation of this database.",
          "type": "string"
        },
        "restorableDroppedDatabaseId": {
          "description": "The resource identifier of the restorable dropped database associated with create operation of this database.",
          "type": "string"
        },
        "restorePointInTime": {
          "description": "Specifies the point in time (ISO8601 format) of the source database that will be restored to create the new database.",
          "format": "date-time",
          "type": "string"
        },
        "sampleName": {
          "description": "The name of the sample schema to apply when creating this database.",
          "oneOf": [
            {
              "enum": [
                "AdventureWorksLT",
                "WideWorldImportersStd",
                "WideWorldImportersFull"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "sourceDatabaseDeletionDate": {
          "description": "Specifies the time that the database was deleted.",
          "format": "date-time",
          "type": "string"
        },
        "sourceDatabaseId": {
          "description": "The resource identifier of the source database associated with create operation of this database.",
          "type": "string"
        },
        "zoneRedundant": {
          "description": "Whether or not this database is zone redundant, which means the replicas of this database will be spread across multiple availability zones.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "DatabaseVulnerabilityAssessmentProperties": {
      "description": "Properties of a database Vulnerability Assessment.",
      "properties": {
        "recurringScans": {
          "description": "The recurring scans settings",
          "oneOf": [
            {
              "$ref": "#/definitions/VulnerabilityAssessmentRecurringScansProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "storageAccountAccessKey": {
          "description": "Specifies the identifier key of the storage account for vulnerability assessment scan results. If 'StorageContainerSasKey' isn't specified, storageAccountAccessKey is required.",
          "type": "string"
        },
        "storageContainerPath": {
          "description": "A blob storage container path to hold the scan results (e.g. https://myStorage.blob.core.windows.net/VaScans/).  It is required if server level vulnerability assessment policy doesn't set",
          "type": "string"
        },
        "storageContainerSasKey": {
          "description": "A shared access signature (SAS Key) that has read and write access to the blob container specified in 'storageContainerPath' parameter. If 'storageAccountAccessKey' isn't specified, StorageContainerSasKey is required.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DatabaseVulnerabilityAssessmentRuleBaselineItem": {
      "description": "Properties for an Azure SQL Database Vulnerability Assessment rule baseline's result.",
      "properties": {
        "result": {
          "description": "The rule baseline result",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "result"
      ],
      "type": "object"
    },
    "DatabaseVulnerabilityAssessmentRuleBaselineProperties": {
      "description": "Properties of a database Vulnerability Assessment rule baseline.",
      "properties": {
        "baselineResults": {
          "description": "The rule baseline result",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/DatabaseVulnerabilityAssessmentRuleBaselineItem"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "baselineResults"
      ],
      "type": "object"
    },
    "ExtendedDatabaseBlobAuditingPolicyProperties": {
      "description": "Properties of an extended database blob auditing policy.",
      "properties": {
        "auditActionsAndGroups": {
          "description": "Specifies the Actions-Groups and Actions to audit.\r\n\r\nThe recommended set of action groups to use is the following combination - this will audit all the queries and stored procedures executed against the database, as well as successful and failed logins:\r\n\r\nBATCH_COMPLETED_GROUP,\r\nSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP,\r\nFAILED_DATABASE_AUTHENTICATION_GROUP.\r\n\r\nThis above combination is also the set that is configured by default when enabling auditing from the Azure portal.\r\n\r\nThe supported action groups to audit are (note: choose only specific groups that cover your auditing needs. Using unnecessary groups could lead to very large quantities of audit records):\r\n\r\nAPPLICATION_ROLE_CHANGE_PASSWORD_GROUP\r\nBACKUP_RESTORE_GROUP\r\nDATABASE_LOGOUT_GROUP\r\nDATABASE_OBJECT_CHANGE_GROUP\r\nDATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP\r\nDATABASE_OBJECT_PERMISSION_CHANGE_GROUP\r\nDATABASE_OPERATION_GROUP\r\nDATABASE_PERMISSION_CHANGE_GROUP\r\nDATABASE_PRINCIPAL_CHANGE_GROUP\r\nDATABASE_PRINCIPAL_IMPERSONATION_GROUP\r\nDATABASE_ROLE_MEMBER_CHANGE_GROUP\r\nFAILED_DATABASE_AUTHENTICATION_GROUP\r\nSCHEMA_OBJECT_ACCESS_GROUP\r\nSCHEMA_OBJECT_CHANGE_GROUP\r\nSCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP\r\nSCHEMA_OBJECT_PERMISSION_CHANGE_GROUP\r\nSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP\r\nUSER_CHANGE_PASSWORD_GROUP\r\nBATCH_STARTED_GROUP\r\nBATCH_COMPLETED_GROUP\r\nDBCC_GROUP\r\nDATABASE_OWNERSHIP_CHANGE_GROUP\r\nDATABASE_CHANGE_GROUP\r\n\r\nThese are groups that cover all sql statements and stored procedures executed against the database, and should not be used in combination with other groups as this will result in duplicate audit logs.\r\n\r\nFor more information, see [Database-Level Audit Action Groups](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-action-groups).\r\n\r\nFor Database auditing policy, specific Actions can also be specified (note that Actions cannot be specified for Server auditing policy). The supported actions to audit are:\r\nSELECT\r\nUPDATE\r\nINSERT\r\nDELETE\r\nEXECUTE\r\nRECEIVE\r\nREFERENCES\r\n\r\nThe general form for defining an action to be audited is:\r\n{action} ON {object} BY {principal}\r\n\r\nNote that <object> in the above format can refer to an object like a table, view, or stored procedure, or an entire database or schema. For the latter cases, the forms DATABASE::{db_name} and SCHEMA::{schema_name} are used, respectively.\r\n\r\nFor example:\r\nSELECT on dbo.myTable by public\r\nSELECT on DATABASE::myDatabase by public\r\nSELECT on SCHEMA::mySchema by public\r\n\r\nFor more information, see [Database-Level Audit Actions](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-actions)",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "isAzureMonitorTargetEnabled": {
          "description": "Specifies whether audit events are sent to Azure Monitor. \r\nIn order to send the events to Azure Monitor, specify 'state' as 'Enabled' and 'isAzureMonitorTargetEnabled' as true.\r\n\r\nWhen using REST API to configure auditing, Diagnostic Settings with 'SQLSecurityAuditEvents' diagnostic logs category on the database should be also created.\r\nNote that for server level audit you should use the 'master' database as {databaseName}.\r\n\r\nDiagnostic Settings URI format:\r\nPUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview\r\n\r\nFor more information, see [Diagnostic Settings REST API](https://go.microsoft.com/fwlink/?linkid=2033207)\r\nor [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)\r\n",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "isStorageSecondaryKeyInUse": {
          "description": "Specifies whether storageAccountAccessKey value is the storage's secondary key.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "predicateExpression": {
          "description": "Specifies condition of where clause when creating an audit.",
          "type": "string"
        },
        "queueDelayMs": {
          "description": "Specifies the amount of time in milliseconds that can elapse before audit actions are forced to be processed.\r\nThe default minimum value is 1000 (1 second). The maximum is 2,147,483,647.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "retentionDays": {
          "description": "Specifies the number of days to keep in the audit logs in the storage account.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "state": {
          "description": "Specifies the state of the policy. If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled are required.",
          "oneOf": [
            {
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "storageAccountAccessKey": {
          "description": "Specifies the identifier key of the auditing storage account. \r\nIf state is Enabled and storageEndpoint is specified, not specifying the storageAccountAccessKey will use SQL server system-assigned managed identity to access the storage.\r\nPrerequisites for using managed identity authentication:\r\n1. Assign SQL Server a system-assigned managed identity in Azure Active Directory (AAD).\r\n2. Grant SQL Server identity access to the storage account by adding 'Storage Blob Data Contributor' RBAC role to the server identity.\r\nFor more information, see [Auditing to storage using Managed Identity authentication](https://go.microsoft.com/fwlink/?linkid=2114355)",
          "type": "string"
        },
        "storageAccountSubscriptionId": {
          "description": "Specifies the blob storage subscription Id.",
          "oneOf": [
            {
              "pattern": "^[0-9a-fA-F]{8}(-[0-9a-fA-F]{4}){3}-[0-9a-fA-F]{12}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "storageEndpoint": {
          "description": "Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled is required.",
          "type": "string"
        }
      },
      "required": [
        "state"
      ],
      "type": "object"
    },
    "ExtendedServerBlobAuditingPolicyProperties": {
      "description": "Properties of an extended server blob auditing policy.",
      "properties": {
        "auditActionsAndGroups": {
          "description": "Specifies the Actions-Groups and Actions to audit.\r\n\r\nThe recommended set of action groups to use is the following combination - this will audit all the queries and stored procedures executed against the database, as well as successful and failed logins:\r\n\r\nBATCH_COMPLETED_GROUP,\r\nSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP,\r\nFAILED_DATABASE_AUTHENTICATION_GROUP.\r\n\r\nThis above combination is also the set that is configured by default when enabling auditing from the Azure portal.\r\n\r\nThe supported action groups to audit are (note: choose only specific groups that cover your auditing needs. Using unnecessary groups could lead to very large quantities of audit records):\r\n\r\nAPPLICATION_ROLE_CHANGE_PASSWORD_GROUP\r\nBACKUP_RESTORE_GROUP\r\nDATABASE_LOGOUT_GROUP\r\nDATABASE_OBJECT_CHANGE_GROUP\r\nDATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP\r\nDATABASE_OBJECT_PERMISSION_CHANGE_GROUP\r\nDATABASE_OPERATION_GROUP\r\nDATABASE_PERMISSION_CHANGE_GROUP\r\nDATABASE_PRINCIPAL_CHANGE_GROUP\r\nDATABASE_PRINCIPAL_IMPERSONATION_GROUP\r\nDATABASE_ROLE_MEMBER_CHANGE_GROUP\r\nFAILED_DATABASE_AUTHENTICATION_GROUP\r\nSCHEMA_OBJECT_ACCESS_GROUP\r\nSCHEMA_OBJECT_CHANGE_GROUP\r\nSCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP\r\nSCHEMA_OBJECT_PERMISSION_CHANGE_GROUP\r\nSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP\r\nUSER_CHANGE_PASSWORD_GROUP\r\nBATCH_STARTED_GROUP\r\nBATCH_COMPLETED_GROUP\r\nDBCC_GROUP\r\nDATABASE_OWNERSHIP_CHANGE_GROUP\r\nDATABASE_CHANGE_GROUP\r\n\r\nThese are groups that cover all sql statements and stored procedures executed against the database, and should not be used in combination with other groups as this will result in duplicate audit logs.\r\n\r\nFor more information, see [Database-Level Audit Action Groups](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-action-groups).\r\n\r\nFor Database auditing policy, specific Actions can also be specified (note that Actions cannot be specified for Server auditing policy). The supported actions to audit are:\r\nSELECT\r\nUPDATE\r\nINSERT\r\nDELETE\r\nEXECUTE\r\nRECEIVE\r\nREFERENCES\r\n\r\nThe general form for defining an action to be audited is:\r\n{action} ON {object} BY {principal}\r\n\r\nNote that <object> in the above format can refer to an object like a table, view, or stored procedure, or an entire database or schema. For the latter cases, the forms DATABASE::{db_name} and SCHEMA::{schema_name} are used, respectively.\r\n\r\nFor example:\r\nSELECT on dbo.myTable by public\r\nSELECT on DATABASE::myDatabase by public\r\nSELECT on SCHEMA::mySchema by public\r\n\r\nFor more information, see [Database-Level Audit Actions](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-actions)",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "isAzureMonitorTargetEnabled": {
          "description": "Specifies whether audit events are sent to Azure Monitor. \r\nIn order to send the events to Azure Monitor, specify 'state' as 'Enabled' and 'isAzureMonitorTargetEnabled' as true.\r\n\r\nWhen using REST API to configure auditing, Diagnostic Settings with 'SQLSecurityAuditEvents' diagnostic logs category on the database should be also created.\r\nNote that for server level audit you should use the 'master' database as {databaseName}.\r\n\r\nDiagnostic Settings URI format:\r\nPUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview\r\n\r\nFor more information, see [Diagnostic Settings REST API](https://go.microsoft.com/fwlink/?linkid=2033207)\r\nor [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)\r\n",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "isStorageSecondaryKeyInUse": {
          "description": "Specifies whether storageAccountAccessKey value is the storage's secondary key.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "predicateExpression": {
          "description": "Specifies condition of where clause when creating an audit.",
          "type": "string"
        },
        "queueDelayMs": {
          "description": "Specifies the amount of time in milliseconds that can elapse before audit actions are forced to be processed.\r\nThe default minimum value is 1000 (1 second). The maximum is 2,147,483,647.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "retentionDays": {
          "description": "Specifies the number of days to keep in the audit logs in the storage account.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "state": {
          "description": "Specifies the state of the policy. If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled are required.",
          "oneOf": [
            {
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "storageAccountAccessKey": {
          "description": "Specifies the identifier key of the auditing storage account. \r\nIf state is Enabled and storageEndpoint is specified, not specifying the storageAccountAccessKey will use SQL server system-assigned managed identity to access the storage.\r\nPrerequisites for using managed identity authentication:\r\n1. Assign SQL Server a system-assigned managed identity in Azure Active Directory (AAD).\r\n2. Grant SQL Server identity access to the storage account by adding 'Storage Blob Data Contributor' RBAC role to the server identity.\r\nFor more information, see [Auditing to storage using Managed Identity authentication](https://go.microsoft.com/fwlink/?linkid=2114355)",
          "type": "string"
        },
        "storageAccountSubscriptionId": {
          "description": "Specifies the blob storage subscription Id.",
          "oneOf": [
            {
              "pattern": "^[0-9a-fA-F]{8}(-[0-9a-fA-F]{4}){3}-[0-9a-fA-F]{12}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "storageEndpoint": {
          "description": "Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled is required.",
          "type": "string"
        }
      },
      "required": [
        "state"
      ],
      "type": "object"
    },
    "JobAgentProperties": {
      "description": "Properties of a job agent.",
      "properties": {
        "databaseId": {
          "description": "Resource ID of the database to store job metadata in.",
          "type": "string"
        }
      },
      "required": [
        "databaseId"
      ],
      "type": "object"
    },
    "JobCredentialProperties": {
      "description": "Properties of a job credential.",
      "properties": {
        "password": {
          "description": "The credential password.",
          "type": "string"
        },
        "username": {
          "description": "The credential user name.",
          "type": "string"
        }
      },
      "required": [
        "username",
        "password"
      ],
      "type": "object"
    },
    "JobProperties": {
      "description": "Properties of a job.",
      "properties": {
        "description": {
          "default": "",
          "description": "User-defined description of the job.",
          "type": "string"
        },
        "schedule": {
          "description": "Schedule properties of the job.",
          "oneOf": [
            {
              "$ref": "#/definitions/JobSchedule"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "JobSchedule": {
      "description": "Scheduling properties of a job.",
      "properties": {
        "enabled": {
          "description": "Whether or not the schedule is enabled.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "endTime": {
          "default": "9999-12-31T11:59:59Z",
          "description": "Schedule end time.",
          "format": "date-time",
          "type": "string"
        },
        "interval": {
          "description": "Value of the schedule's recurring interval, if the schedule type is recurring. ISO8601 duration format.",
          "type": "string"
        },
        "startTime": {
          "default": "0001-01-01T00:00:00Z",
          "description": "Schedule start time.",
          "format": "date-time",
          "type": "string"
        },
        "type": {
          "description": "Schedule interval type",
          "oneOf": [
            {
              "enum": [
                "Once",
                "Recurring"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "JobStepAction": {
      "description": "The action to be executed by a job step.",
      "properties": {
        "source": {
          "description": "The source of the action to execute.",
          "oneOf": [
            {
              "enum": [
                "Inline"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "description": "Type of action being executed by the job step.",
          "oneOf": [
            {
              "enum": [
                "TSql"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "value": {
          "description": "The action value, for example the text of the T-SQL script to execute.",
          "type": "string"
        }
      },
      "required": [
        "value"
      ],
      "type": "object"
    },
    "JobStepExecutionOptions": {
      "description": "The execution options of a job step.",
      "properties": {
        "initialRetryIntervalSeconds": {
          "description": "Initial delay between retries for job step execution.",
          "oneOf": [
            {
              "default": 1,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "maximumRetryIntervalSeconds": {
          "description": "The maximum amount of time to wait between retries for job step execution.",
          "oneOf": [
            {
              "default": 120,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "retryAttempts": {
          "description": "Maximum number of times the job step will be reattempted if the first attempt fails.",
          "oneOf": [
            {
              "default": 10,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "retryIntervalBackoffMultiplier": {
          "description": "The backoff multiplier for the time between retries.",
          "oneOf": [
            {
              "default": 2,
              "type": "number"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "timeoutSeconds": {
          "description": "Execution timeout for the job step.",
          "oneOf": [
            {
              "default": 43200,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "JobStepOutput": {
      "description": "The output configuration of a job step.",
      "properties": {
        "credential": {
          "description": "The resource ID of the credential to use to connect to the output destination.",
          "type": "string"
        },
        "databaseName": {
          "description": "The output destination database.",
          "type": "string"
        },
        "resourceGroupName": {
          "description": "The output destination resource group.",
          "type": "string"
        },
        "schemaName": {
          "default": "dbo",
          "description": "The output destination schema.",
          "type": "string"
        },
        "serverName": {
          "description": "The output destination server name.",
          "type": "string"
        },
        "subscriptionId": {
          "description": "The output destination subscription id.",
          "oneOf": [
            {
              "pattern": "^[0-9a-fA-F]{8}(-[0-9a-fA-F]{4}){3}-[0-9a-fA-F]{12}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tableName": {
          "description": "The output destination table.",
          "type": "string"
        },
        "type": {
          "description": "The output destination type.",
          "oneOf": [
            {
              "enum": [
                "SqlDatabase"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "serverName",
        "databaseName",
        "tableName",
        "credential"
      ],
      "type": "object"
    },
    "JobStepProperties": {
      "description": "Properties of a job step.",
      "properties": {
        "action": {
          "description": "The action payload of the job step.",
          "oneOf": [
            {
              "$ref": "#/definitions/JobStepAction"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "credential": {
          "description": "The resource ID of the job credential that will be used to connect to the targets.",
          "type": "string"
        },
        "executionOptions": {
          "description": "Execution options for the job step.",
          "oneOf": [
            {
              "$ref": "#/definitions/JobStepExecutionOptions"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "output": {
          "description": "Output destination properties of the job step.",
          "oneOf": [
            {
              "$ref": "#/definitions/JobStepOutput"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "stepId": {
          "description": "The job step's index within the job. If not specified when creating the job step, it will be created as the last step. If not specified when updating the job step, the step id is not modified.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "targetGroup": {
          "description": "The resource ID of the target group that the job step will be executed on.",
          "type": "string"
        }
      },
      "required": [
        "targetGroup",
        "credential",
        "action"
      ],
      "type": "object"
    },
    "JobTarget": {
      "description": "A job target, for example a specific database or a container of databases that is evaluated during job execution.",
      "properties": {
        "databaseName": {
          "description": "The target database name.",
          "type": "string"
        },
        "elasticPoolName": {
          "description": "The target elastic pool name.",
          "type": "string"
        },
        "membershipType": {
          "description": "Whether the target is included or excluded from the group.",
          "oneOf": [
            {
              "enum": [
                "Include",
                "Exclude"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "refreshCredential": {
          "description": "The resource ID of the credential that is used during job execution to connect to the target and determine the list of databases inside the target.",
          "type": "string"
        },
        "serverName": {
          "description": "The target server name.",
          "type": "string"
        },
        "shardMapName": {
          "description": "The target shard map.",
          "type": "string"
        },
        "type": {
          "description": "The target type.",
          "oneOf": [
            {
              "enum": [
                "TargetGroup",
                "SqlDatabase",
                "SqlElasticPool",
                "SqlShardMap",
                "SqlServer"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "type"
      ],
      "type": "object"
    },
    "JobTargetGroupProperties": {
      "description": "Properties of job target group.",
      "properties": {
        "members": {
          "description": "Members of the target group.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/JobTarget"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "members"
      ],
      "type": "object"
    },
    "LongTermRetentionPolicyProperties": {
      "description": "Properties of a long term retention policy",
      "properties": {
        "monthlyRetention": {
          "description": "The monthly retention policy for an LTR backup in an ISO 8601 format.",
          "type": "string"
        },
        "weekOfYear": {
          "description": "The week of year to take the yearly backup in an ISO 8601 format.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "weeklyRetention": {
          "description": "The weekly retention policy for an LTR backup in an ISO 8601 format.",
          "type": "string"
        },
        "yearlyRetention": {
          "description": "The yearly retention policy for an LTR backup in an ISO 8601 format.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ManagedBackupShortTermRetentionPolicyProperties": {
      "description": "Properties of a short term retention policy",
      "properties": {
        "retentionDays": {
          "description": "The backup retention period in days. This is how many days Point-in-Time Restore will be supported.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ManagedDatabaseProperties": {
      "description": "The managed database's properties.",
      "properties": {
        "catalogCollation": {
          "description": "Collation of the metadata catalog.",
          "oneOf": [
            {
              "enum": [
                "DATABASE_DEFAULT",
                "SQL_Latin1_General_CP1_CI_AS"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "collation": {
          "description": "Collation of the managed database.",
          "type": "string"
        },
        "createMode": {
          "description": "Managed database create mode. PointInTimeRestore: Create a database by restoring a point in time backup of an existing database. SourceDatabaseName, SourceManagedInstanceName and PointInTime must be specified. RestoreExternalBackup: Create a database by restoring from external backup files. Collation, StorageContainerUri and StorageContainerSasToken must be specified. Recovery: Creates a database by restoring a geo-replicated backup. RecoverableDatabaseId must be specified as the recoverable database resource ID to restore.",
          "oneOf": [
            {
              "enum": [
                "Default",
                "RestoreExternalBackup",
                "PointInTimeRestore",
                "Recovery",
                "RestoreLongTermRetentionBackup"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "longTermRetentionBackupResourceId": {
          "description": "The name of the Long Term Retention backup to be used for restore of this managed database.",
          "type": "string"
        },
        "recoverableDatabaseId": {
          "description": "The resource identifier of the recoverable database associated with create operation of this database.",
          "type": "string"
        },
        "restorableDroppedDatabaseId": {
          "description": "The restorable dropped database resource id to restore when creating this database.",
          "type": "string"
        },
        "restorePointInTime": {
          "description": "Conditional. If createMode is PointInTimeRestore, this value is required. Specifies the point in time (ISO8601 format) of the source database that will be restored to create the new database.",
          "format": "date-time",
          "type": "string"
        },
        "sourceDatabaseId": {
          "description": "The resource identifier of the source database associated with create operation of this database.",
          "type": "string"
        },
        "storageContainerSasToken": {
          "description": "Conditional. If createMode is RestoreExternalBackup, this value is required. Specifies the storage container sas token.",
          "type": "string"
        },
        "storageContainerUri": {
          "description": "Conditional. If createMode is RestoreExternalBackup, this value is required. Specifies the uri of the storage container where backups for this restore are stored.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ManagedInstanceAdministratorProperties": {
      "description": "The properties of a managed instance administrator.",
      "properties": {
        "administratorType": {
          "description": "Type of the managed instance administrator.",
          "oneOf": [
            {
              "enum": [
                "ActiveDirectory"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "login": {
          "description": "Login name of the managed instance administrator.",
          "type": "string"
        },
        "sid": {
          "description": "SID (object ID) of the managed instance administrator.",
          "oneOf": [
            {
              "pattern": "^[0-9a-fA-F]{8}(-[0-9a-fA-F]{4}){3}-[0-9a-fA-F]{12}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tenantId": {
          "description": "Tenant ID of the managed instance administrator.",
          "oneOf": [
            {
              "pattern": "^[0-9a-fA-F]{8}(-[0-9a-fA-F]{4}){3}-[0-9a-fA-F]{12}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "administratorType",
        "login",
        "sid"
      ],
      "type": "object"
    },
    "SecurityAlertPolicyProperties": {
      "description": "Properties of a security alert policy.",
      "properties": {
        "disabledAlerts": {
          "description": "Specifies an array of alerts that are disabled. Allowed values are: Sql_Injection, Sql_Injection_Vulnerability, Access_Anomaly, Data_Exfiltration, Unsafe_Action",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "emailAccountAdmins": {
          "description": "Specifies that the alert is sent to the account administrators.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "emailAddresses": {
          "description": "Specifies an array of e-mail addresses to which the alert is sent.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "retentionDays": {
          "description": "Specifies the number of days to keep in the Threat Detection audit logs.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "state": {
          "description": "Specifies the state of the policy, whether it is enabled or disabled or a policy has not been applied yet on the specific database.",
          "oneOf": [
            {
              "enum": [
                "New",
                "Enabled",
                "Disabled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "storageAccountAccessKey": {
          "description": "Specifies the identifier key of the Threat Detection audit storage account.",
          "type": "string"
        },
        "storageEndpoint": {
          "description": "Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). This blob storage will hold all Threat Detection audit logs.",
          "type": "string"
        }
      },
      "required": [
        "state"
      ],
      "type": "object"
    },
    "SensitivityLabelProperties": {
      "description": "Properties of a sensitivity label.",
      "properties": {
        "informationType": {
          "description": "The information type.",
          "type": "string"
        },
        "informationTypeId": {
          "description": "The information type ID.",
          "type": "string"
        },
        "labelId": {
          "description": "The label ID.",
          "type": "string"
        },
        "labelName": {
          "description": "The label name.",
          "type": "string"
        },
        "rank": {
          "oneOf": [
            {
              "enum": [
                "None",
                "Low",
                "Medium",
                "High",
                "Critical"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ServerBlobAuditingPolicyProperties": {
      "description": "Properties of a server blob auditing policy.",
      "properties": {
        "auditActionsAndGroups": {
          "description": "Specifies the Actions-Groups and Actions to audit.\r\n\r\nThe recommended set of action groups to use is the following combination - this will audit all the queries and stored procedures executed against the database, as well as successful and failed logins:\r\n\r\nBATCH_COMPLETED_GROUP,\r\nSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP,\r\nFAILED_DATABASE_AUTHENTICATION_GROUP.\r\n\r\nThis above combination is also the set that is configured by default when enabling auditing from the Azure portal.\r\n\r\nThe supported action groups to audit are (note: choose only specific groups that cover your auditing needs. Using unnecessary groups could lead to very large quantities of audit records):\r\n\r\nAPPLICATION_ROLE_CHANGE_PASSWORD_GROUP\r\nBACKUP_RESTORE_GROUP\r\nDATABASE_LOGOUT_GROUP\r\nDATABASE_OBJECT_CHANGE_GROUP\r\nDATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP\r\nDATABASE_OBJECT_PERMISSION_CHANGE_GROUP\r\nDATABASE_OPERATION_GROUP\r\nDATABASE_PERMISSION_CHANGE_GROUP\r\nDATABASE_PRINCIPAL_CHANGE_GROUP\r\nDATABASE_PRINCIPAL_IMPERSONATION_GROUP\r\nDATABASE_ROLE_MEMBER_CHANGE_GROUP\r\nFAILED_DATABASE_AUTHENTICATION_GROUP\r\nSCHEMA_OBJECT_ACCESS_GROUP\r\nSCHEMA_OBJECT_CHANGE_GROUP\r\nSCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP\r\nSCHEMA_OBJECT_PERMISSION_CHANGE_GROUP\r\nSUCCESSFUL_DATABASE_AUTHENTICATION_GROUP\r\nUSER_CHANGE_PASSWORD_GROUP\r\nBATCH_STARTED_GROUP\r\nBATCH_COMPLETED_GROUP\r\nDBCC_GROUP\r\nDATABASE_OWNERSHIP_CHANGE_GROUP\r\nDATABASE_CHANGE_GROUP\r\n\r\nThese are groups that cover all sql statements and stored procedures executed against the database, and should not be used in combination with other groups as this will result in duplicate audit logs.\r\n\r\nFor more information, see [Database-Level Audit Action Groups](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-action-groups).\r\n\r\nFor Database auditing policy, specific Actions can also be specified (note that Actions cannot be specified for Server auditing policy). The supported actions to audit are:\r\nSELECT\r\nUPDATE\r\nINSERT\r\nDELETE\r\nEXECUTE\r\nRECEIVE\r\nREFERENCES\r\n\r\nThe general form for defining an action to be audited is:\r\n{action} ON {object} BY {principal}\r\n\r\nNote that <object> in the above format can refer to an object like a table, view, or stored procedure, or an entire database or schema. For the latter cases, the forms DATABASE::{db_name} and SCHEMA::{schema_name} are used, respectively.\r\n\r\nFor example:\r\nSELECT on dbo.myTable by public\r\nSELECT on DATABASE::myDatabase by public\r\nSELECT on SCHEMA::mySchema by public\r\n\r\nFor more information, see [Database-Level Audit Actions](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-actions)",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "isAzureMonitorTargetEnabled": {
          "description": "Specifies whether audit events are sent to Azure Monitor. \r\nIn order to send the events to Azure Monitor, specify 'state' as 'Enabled' and 'isAzureMonitorTargetEnabled' as true.\r\n\r\nWhen using REST API to configure auditing, Diagnostic Settings with 'SQLSecurityAuditEvents' diagnostic logs category on the database should be also created.\r\nNote that for server level audit you should use the 'master' database as {databaseName}.\r\n\r\nDiagnostic Settings URI format:\r\nPUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview\r\n\r\nFor more information, see [Diagnostic Settings REST API](https://go.microsoft.com/fwlink/?linkid=2033207)\r\nor [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)\r\n",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "isStorageSecondaryKeyInUse": {
          "description": "Specifies whether storageAccountAccessKey value is the storage's secondary key.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "queueDelayMs": {
          "description": "Specifies the amount of time in milliseconds that can elapse before audit actions are forced to be processed.\r\nThe default minimum value is 1000 (1 second). The maximum is 2,147,483,647.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "retentionDays": {
          "description": "Specifies the number of days to keep in the audit logs in the storage account.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "state": {
          "description": "Specifies the state of the policy. If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled are required.",
          "oneOf": [
            {
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "storageAccountAccessKey": {
          "description": "Specifies the identifier key of the auditing storage account. \r\nIf state is Enabled and storageEndpoint is specified, not specifying the storageAccountAccessKey will use SQL server system-assigned managed identity to access the storage.\r\nPrerequisites for using managed identity authentication:\r\n1. Assign SQL Server a system-assigned managed identity in Azure Active Directory (AAD).\r\n2. Grant SQL Server identity access to the storage account by adding 'Storage Blob Data Contributor' RBAC role to the server identity.\r\nFor more information, see [Auditing to storage using Managed Identity authentication](https://go.microsoft.com/fwlink/?linkid=2114355)",
          "type": "string"
        },
        "storageAccountSubscriptionId": {
          "description": "Specifies the blob storage subscription Id.",
          "oneOf": [
            {
              "pattern": "^[0-9a-fA-F]{8}(-[0-9a-fA-F]{4}){3}-[0-9a-fA-F]{12}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "storageEndpoint": {
          "description": "Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled is required.",
          "type": "string"
        }
      },
      "required": [
        "state"
      ],
      "type": "object"
    },
    "Sku": {
      "description": "An ARM Resource SKU.",
      "properties": {
        "capacity": {
          "description": "Capacity of the particular SKU.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "family": {
          "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here.",
          "type": "string"
        },
        "name": {
          "description": "The name of the SKU, typically, a letter + Number code, e.g. P3.",
          "type": "string"
        },
        "size": {
          "description": "Size of the particular SKU",
          "type": "string"
        },
        "tier": {
          "description": "The tier or edition of the particular SKU, e.g. Basic, Premium.",
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "VulnerabilityAssessmentRecurringScansProperties": {
      "description": "Properties of a Vulnerability Assessment recurring scans.",
      "properties": {
        "emailSubscriptionAdmins": {
          "description": "Specifies that the schedule scan notification will be is sent to the subscription administrators.",
          "oneOf": [
            {
              "default": true,
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "emails": {
          "description": "Specifies an array of e-mail addresses to which the scan notification is sent.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "isEnabled": {
          "description": "Recurring scans state.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "managedInstances_databases_backupShortTermRetentionPolicies_childResource": {
      "description": "Microsoft.Sql/managedInstances/databases/backupShortTermRetentionPolicies",
      "properties": {
        "apiVersion": {
          "enum": [
            "2017-03-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The policy name. Should always be \"default\".",
          "oneOf": [
            {
              "enum": [
                "default"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Resource properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedBackupShortTermRetentionPolicyProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "backupShortTermRetentionPolicies"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "managedInstances_databases_securityAlertPolicies_childResource": {
      "description": "Microsoft.Sql/managedInstances/databases/securityAlertPolicies",
      "properties": {
        "apiVersion": {
          "enum": [
            "2017-03-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the security alert policy.",
          "oneOf": [
            {
              "enum": [
                "default"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Resource properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/SecurityAlertPolicyProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "securityAlertPolicies"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "servers_databases_auditingSettings_childResource": {
      "description": "Microsoft.Sql/servers/databases/auditingSettings",
      "properties": {
        "apiVersion": {
          "enum": [
            "2017-03-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the blob auditing policy.",
          "oneOf": [
            {
              "enum": [
                "default"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Resource properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/DatabaseBlobAuditingPolicyProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "auditingSettings"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "servers_databases_backupLongTermRetentionPolicies_childResource": {
      "description": "Microsoft.Sql/servers/databases/backupLongTermRetentionPolicies",
      "properties": {
        "apiVersion": {
          "enum": [
            "2017-03-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The policy name. Should always be Default.",
          "oneOf": [
            {
              "enum": [
                "default"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Resource properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/LongTermRetentionPolicyProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "backupLongTermRetentionPolicies"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "servers_databases_extendedAuditingSettings_childResource": {
      "description": "Microsoft.Sql/servers/databases/extendedAuditingSettings",
      "properties": {
        "apiVersion": {
          "enum": [
            "2017-03-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the blob auditing policy.",
          "oneOf": [
            {
              "enum": [
                "default"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Resource properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/ExtendedDatabaseBlobAuditingPolicyProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "extendedAuditingSettings"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "servers_databases_vulnerabilityAssessments_childResource": {
      "description": "Microsoft.Sql/servers/databases/vulnerabilityAssessments",
      "properties": {
        "apiVersion": {
          "enum": [
            "2017-03-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the vulnerability assessment.",
          "oneOf": [
            {
              "enum": [
                "default"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Resource properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/DatabaseVulnerabilityAssessmentProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "vulnerabilityAssessments"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "servers_jobAgents_credentials_childResource": {
      "description": "Microsoft.Sql/servers/jobAgents/credentials",
      "properties": {
        "apiVersion": {
          "enum": [
            "2017-03-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the credential.",
          "type": "string"
        },
        "properties": {
          "description": "Resource properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/JobCredentialProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "credentials"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "servers_jobAgents_jobs_childResource": {
      "description": "Microsoft.Sql/servers/jobAgents/jobs",
      "properties": {
        "apiVersion": {
          "enum": [
            "2017-03-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the job to get.",
          "type": "string"
        },
        "properties": {
          "description": "Resource properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/JobProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "jobs"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "servers_jobAgents_jobs_executions_childResource": {
      "description": "Microsoft.Sql/servers/jobAgents/jobs/executions",
      "properties": {
        "apiVersion": {
          "enum": [
            "2017-03-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The job execution id to create the job execution under.",
          "oneOf": [
            {
              "pattern": "^[0-9a-fA-F]{8}(-[0-9a-fA-F]{4}){3}-[0-9a-fA-F]{12}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "executions"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "servers_jobAgents_jobs_steps_childResource": {
      "description": "Microsoft.Sql/servers/jobAgents/jobs/steps",
      "properties": {
        "apiVersion": {
          "enum": [
            "2017-03-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the job step.",
          "type": "string"
        },
        "properties": {
          "description": "Resource properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/JobStepProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "steps"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "servers_jobAgents_targetGroups_childResource": {
      "description": "Microsoft.Sql/servers/jobAgents/targetGroups",
      "properties": {
        "apiVersion": {
          "enum": [
            "2017-03-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the target group.",
          "type": "string"
        },
        "properties": {
          "description": "Resource properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/JobTargetGroupProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "targetGroups"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    }
  }
}