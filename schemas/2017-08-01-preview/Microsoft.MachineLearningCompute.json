{
  "id": "https://schema.management.azure.com/schemas/2017-08-01-preview/Microsoft.MachineLearningCompute.json#",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "title": "Microsoft.MachineLearningCompute",
  "description": "Microsoft MachineLearningCompute Resource Types",
  "resourceDefinitions": {
    "operationalizationClusters": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2017-08-01-preview"
          ]
        },
        "location": {
          "type": "string",
          "description": "Specifies the location of the resource."
        },
        "name": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^[a-zA-Z][-\\w\\._\\(\\)]+[a-zA-Z0-9]$",
              "minLength": 1,
              "maxLength": 90
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The name of the cluster."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/OperationalizationClusterProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Properties of an operationalization cluster"
        },
        "tags": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Contains resource tags defined as key/value pairs."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.MachineLearningCompute/operationalizationClusters"
          ]
        }
      },
      "required": [
        "apiVersion",
        "location",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.MachineLearningCompute/operationalizationClusters"
    }
  },
  "definitions": {
    "AcsClusterProperties": {
      "type": "object",
      "properties": {
        "agentCount": {
          "oneOf": [
            {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": "2"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The number of agent nodes in the Container Service. This can be changed to scale the cluster."
        },
        "agentVmSize": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Standard_A0",
                "Standard_A1",
                "Standard_A2",
                "Standard_A3",
                "Standard_A4",
                "Standard_A5",
                "Standard_A6",
                "Standard_A7",
                "Standard_A8",
                "Standard_A9",
                "Standard_A10",
                "Standard_A11",
                "Standard_D1",
                "Standard_D2",
                "Standard_D3",
                "Standard_D4",
                "Standard_D11",
                "Standard_D12",
                "Standard_D13",
                "Standard_D14",
                "Standard_D1_v2",
                "Standard_D2_v2",
                "Standard_D3_v2",
                "Standard_D4_v2",
                "Standard_D5_v2",
                "Standard_D11_v2",
                "Standard_D12_v2",
                "Standard_D13_v2",
                "Standard_D14_v2",
                "Standard_G1",
                "Standard_G2",
                "Standard_G3",
                "Standard_G4",
                "Standard_G5",
                "Standard_DS1",
                "Standard_DS2",
                "Standard_DS3",
                "Standard_DS4",
                "Standard_DS11",
                "Standard_DS12",
                "Standard_DS13",
                "Standard_DS14",
                "Standard_GS1",
                "Standard_GS2",
                "Standard_GS3",
                "Standard_GS4",
                "Standard_GS5"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The Azure VM size of the agent VM nodes. This cannot be changed once the cluster is created. This list is non exhaustive; refer to https://docs.microsoft.com/en-us/azure/virtual-machines/windows/sizes for the possible VM sizes."
        },
        "masterCount": {
          "oneOf": [
            {
              "type": "integer",
              "minimum": 1,
              "maximum": 5,
              "default": "1"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The number of master nodes in the container service."
        },
        "orchestratorProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/KubernetesClusterProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Kubernetes cluster specific properties"
        },
        "orchestratorType": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Kubernetes",
                "None"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Type of orchestrator. It cannot be changed once the cluster is created."
        },
        "systemServices": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SystemService"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The system services deployed to the cluster"
        }
      },
      "required": [
        "orchestratorType"
      ],
      "description": "Information about the container service backing the cluster"
    },
    "AppInsightsProperties": {
      "type": "object",
      "properties": {
        "resourceId": {
          "type": "string",
          "description": "ARM resource ID of the App Insights."
        }
      },
      "description": "Properties of App Insights."
    },
    "AutoScaleConfiguration": {
      "type": "object",
      "properties": {
        "maxReplicas": {
          "oneOf": [
            {
              "type": "integer",
              "minimum": 1,
              "default": "100"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The maximum number of replicas for each service."
        },
        "minReplicas": {
          "oneOf": [
            {
              "type": "integer",
              "minimum": 1,
              "default": "1"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The minimum number of replicas for each service."
        },
        "refreshPeriodInSeconds": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Refresh period in seconds."
        },
        "status": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Enabled",
                "Disabled"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "If auto-scale is enabled for all services. Each service can turn it off individually."
        },
        "targetUtilization": {
          "oneOf": [
            {
              "type": "number"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The target utilization."
        }
      },
      "description": "AutoScale configuration properties."
    },
    "ContainerRegistryProperties": {
      "type": "object",
      "properties": {
        "resourceId": {
          "type": "string",
          "description": "ARM resource ID of the Azure Container Registry used to store Docker images for web services in the cluster. If not provided one will be created. This cannot be changed once the cluster is created."
        }
      },
      "description": "Properties of Azure Container Registry."
    },
    "GlobalServiceConfiguration": {
      "type": "object",
      "properties": {
        "additionalProperties": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Unmatched properties from the message are deserialized this collection"
        },
        "autoScale": {
          "oneOf": [
            {
              "$ref": "#/definitions/AutoScaleConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "AutoScale configuration properties."
        },
        "etag": {
          "type": "string",
          "description": "The configuration ETag for updates."
        },
        "serviceAuth": {
          "oneOf": [
            {
              "$ref": "#/definitions/ServiceAuthConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Global service auth configuration properties. These are the data-plane authorization keys and are used if a service doesn't define it's own."
        },
        "ssl": {
          "oneOf": [
            {
              "$ref": "#/definitions/SslConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "SSL configuration. If configured data-plane calls to user services will be exposed over SSL only."
        }
      },
      "description": "Global configuration for services in the cluster."
    },
    "KubernetesClusterProperties": {
      "type": "object",
      "properties": {
        "servicePrincipal": {
          "oneOf": [
            {
              "$ref": "#/definitions/ServicePrincipalProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The Azure service principal used by Kubernetes for configuring load balancers"
        }
      },
      "description": "Kubernetes cluster specific properties"
    },
    "OperationalizationClusterProperties": {
      "type": "object",
      "properties": {
        "appInsights": {
          "oneOf": [
            {
              "$ref": "#/definitions/AppInsightsProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Properties of App Insights."
        },
        "clusterType": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "ACS",
                "Local"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The cluster type."
        },
        "containerRegistry": {
          "oneOf": [
            {
              "$ref": "#/definitions/ContainerRegistryProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Properties of Azure Container Registry."
        },
        "containerService": {
          "oneOf": [
            {
              "$ref": "#/definitions/AcsClusterProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Information about the container service backing the cluster"
        },
        "description": {
          "type": "string",
          "description": "The description of the cluster."
        },
        "globalServiceConfiguration": {
          "oneOf": [
            {
              "$ref": "#/definitions/GlobalServiceConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Global configuration for services in the cluster."
        },
        "storageAccount": {
          "oneOf": [
            {
              "$ref": "#/definitions/StorageAccountProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Properties of Storage Account."
        }
      },
      "required": [
        "clusterType"
      ],
      "description": "Properties of an operationalization cluster"
    },
    "ServiceAuthConfiguration": {
      "type": "object",
      "properties": {
        "primaryAuthKeyHash": {
          "type": "string",
          "description": "The primary auth key hash. This is not returned in response of GET/PUT on the resource.. To see this please call listKeys API."
        },
        "secondaryAuthKeyHash": {
          "type": "string",
          "description": "The secondary auth key hash. This is not returned in response of GET/PUT on the resource.. To see this please call listKeys API."
        }
      },
      "required": [
        "primaryAuthKeyHash",
        "secondaryAuthKeyHash"
      ],
      "description": "Global service auth configuration properties. These are the data-plane authorization keys and are used if a service doesn't define it's own."
    },
    "ServicePrincipalProperties": {
      "type": "object",
      "properties": {
        "clientId": {
          "type": "string",
          "description": "The service principal client ID"
        },
        "secret": {
          "type": "string",
          "description": "The service principal secret. This is not returned in response of GET/PUT on the resource. To see this please call listKeys."
        }
      },
      "required": [
        "clientId",
        "secret"
      ],
      "description": "The Azure service principal used by Kubernetes for configuring load balancers"
    },
    "SslConfiguration": {
      "type": "object",
      "properties": {
        "cert": {
          "type": "string",
          "description": "The SSL cert data in PEM format."
        },
        "cname": {
          "type": "string",
          "description": "The CName of the certificate."
        },
        "key": {
          "type": "string",
          "description": "The SSL key data in PEM format. This is not returned in response of GET/PUT on the resource. To see this please call listKeys API."
        },
        "status": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Enabled",
                "Disabled"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "SSL status. Allowed values are Enabled and Disabled."
        }
      },
      "description": "SSL configuration. If configured data-plane calls to user services will be exposed over SSL only."
    },
    "StorageAccountProperties": {
      "type": "object",
      "properties": {
        "resourceId": {
          "type": "string",
          "description": "ARM resource ID of the Azure Storage Account to store CLI specific files. If not provided one will be created. This cannot be changed once the cluster is created."
        }
      },
      "description": "Properties of Storage Account."
    },
    "SystemService": {
      "type": "object",
      "properties": {
        "systemServiceType": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "None",
                "ScoringFrontEnd",
                "BatchFrontEnd"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The system service type."
        }
      },
      "required": [
        "systemServiceType"
      ],
      "description": "Information about a system service deployed in the cluster"
    }
  }
}