{
  "id": "https://schema.management.azure.com/schemas/2018-02-01/Microsoft.Storage.json#",
  "title": "Microsoft.Storage",
  "description": "Microsoft Storage Resource Types",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "resourceDefinitions": {
    "storageAccounts": {
      "description": "Microsoft.Storage/storageAccounts",
      "properties": {
        "apiVersion": {
          "enum": [
            "2018-02-01"
          ],
          "type": "string"
        },
        "identity": {
          "description": "The identity of the resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/Identity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "kind": {
          "description": "Required. Indicates the type of storage account.",
          "oneOf": [
            {
              "enum": [
                "Storage",
                "StorageV2",
                "BlobStorage"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "location": {
          "description": "Required. Gets or sets the location of the resource. This will be one of the supported and registered Azure Geo Regions (e.g. West US, East US, Southeast Asia, etc.). The geo region of a resource cannot be changed once it is created, but if an identical geo region is specified on update, the request will succeed.",
          "type": "string"
        },
        "name": {
          "description": "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.",
          "maxLength": 24,
          "minLength": 3,
          "type": "string"
        },
        "properties": {
          "description": "The parameters used to create the storage account.",
          "oneOf": [
            {
              "$ref": "#/definitions/StorageAccountPropertiesCreateParameters"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "sku": {
          "description": "Required. Gets or sets the sku name.",
          "oneOf": [
            {
              "$ref": "#/definitions/Sku"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Gets or sets a list of key value pairs that describe the resource. These tags can be used for viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key with a length no greater than 128 characters and a value with a length no greater than 256 characters.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.Storage/storageAccounts"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "storageAccounts_blobServices_containers": {
      "description": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "properties": {
        "apiVersion": {
          "enum": [
            "2018-02-01"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the blob container within the specified storage account. Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number.",
          "maxLength": 63,
          "minLength": 3,
          "type": "string"
        },
        "properties": {
          "description": "Properties of the blob container.",
          "oneOf": [
            {
              "$ref": "#/definitions/ContainerProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/storageAccounts_blobServices_containers_immutabilityPolicies_childResource"
              }
            ]
          },
          "type": "array"
        },
        "type": {
          "enum": [
            "Microsoft.Storage/storageAccounts/blobServices/containers"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "storageAccounts_blobServices_containers_immutabilityPolicies": {
      "description": "Microsoft.Storage/storageAccounts/blobServices/containers/immutabilityPolicies",
      "properties": {
        "apiVersion": {
          "enum": [
            "2018-02-01"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the blob container immutabilityPolicy within the specified storage account. ImmutabilityPolicy Name must be 'default'",
          "oneOf": [
            {
              "pattern": "^.*/default$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The properties of an ImmutabilityPolicy of a blob container.",
          "oneOf": [
            {
              "$ref": "#/definitions/ImmutabilityPolicyProperty"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.Storage/storageAccounts/blobServices/containers/immutabilityPolicies"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "apiVersion",
        "type"
      ],
      "type": "object"
    }
  },
  "definitions": {
    "ContainerProperties": {
      "description": "The properties of a container.",
      "properties": {
        "metadata": {
          "description": "A name-value pair to associate with the container as metadata.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "publicAccess": {
          "description": "Specifies whether data in the container may be accessed publicly and the level of access.",
          "oneOf": [
            {
              "enum": [
                "Container",
                "Blob",
                "None"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "CustomDomain": {
      "description": "The custom domain assigned to this storage account. This can be set via Update.",
      "properties": {
        "name": {
          "description": "Gets or sets the custom domain name assigned to the storage account. Name is the CNAME source.",
          "type": "string"
        },
        "useSubDomainName": {
          "description": "Indicates whether indirect CName validation is enabled. Default value is false. This should only be set on updates.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "Encryption": {
      "description": "The encryption settings on the storage account.",
      "properties": {
        "keySource": {
          "description": "The encryption keySource (provider). Possible values (case-insensitive):  Microsoft.Storage, Microsoft.Keyvault",
          "oneOf": [
            {
              "enum": [
                "Microsoft.Storage",
                "Microsoft.Keyvault"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "keyvaultproperties": {
          "description": "Properties provided by key vault.",
          "oneOf": [
            {
              "$ref": "#/definitions/KeyVaultProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "services": {
          "description": "List of services which support encryption.",
          "oneOf": [
            {
              "$ref": "#/definitions/EncryptionServices"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "keySource"
      ],
      "type": "object"
    },
    "EncryptionService": {
      "description": "A service that allows server-side encryption to be used.",
      "properties": {
        "enabled": {
          "description": "A boolean indicating whether or not the service encrypts the data as it is stored.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "EncryptionServices": {
      "description": "A list of services that support encryption.",
      "properties": {
        "blob": {
          "description": "The encryption function of the blob storage service.",
          "oneOf": [
            {
              "$ref": "#/definitions/EncryptionService"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "file": {
          "description": "The encryption function of the file storage service.",
          "oneOf": [
            {
              "$ref": "#/definitions/EncryptionService"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "IPRule": {
      "description": "IP rule with specific IP or IP range in CIDR format.",
      "properties": {
        "action": {
          "description": "The action of IP ACL rule.",
          "oneOf": [
            {
              "enum": [
                "Allow"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "value": {
          "description": "Specifies the IP or IP range in CIDR format. Only IPV4 address is allowed.",
          "type": "string"
        }
      },
      "required": [
        "value"
      ],
      "type": "object"
    },
    "Identity": {
      "description": "Identity for the resource.",
      "properties": {
        "type": {
          "description": "The identity type.",
          "oneOf": [
            {
              "enum": [
                "SystemAssigned"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "type"
      ],
      "type": "object"
    },
    "ImmutabilityPolicyProperty": {
      "description": "The properties of an ImmutabilityPolicy of a blob container.",
      "properties": {
        "immutabilityPeriodSinceCreationInDays": {
          "description": "The immutability period for the blobs in the container since the policy creation, in days.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "immutabilityPeriodSinceCreationInDays"
      ],
      "type": "object"
    },
    "KeyVaultProperties": {
      "description": "Properties of key vault.",
      "properties": {
        "keyname": {
          "description": "The name of KeyVault key.",
          "type": "string"
        },
        "keyvaulturi": {
          "description": "The Uri of KeyVault.",
          "type": "string"
        },
        "keyversion": {
          "description": "The version of KeyVault key.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "NetworkRuleSet": {
      "description": "Network rule set",
      "properties": {
        "bypass": {
          "description": "Specifies whether traffic is bypassed for Logging/Metrics/AzureServices. Possible values are any combination of Logging|Metrics|AzureServices (For example, \"Logging, Metrics\"), or None to bypass none of those traffics.",
          "oneOf": [
            {
              "enum": [
                "None",
                "Logging",
                "Metrics",
                "AzureServices"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "defaultAction": {
          "description": "Specifies the default action of allow or deny when no other rules match.",
          "oneOf": [
            {
              "enum": [
                "Allow",
                "Deny"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "ipRules": {
          "description": "Sets the IP ACL rules",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/IPRule"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "virtualNetworkRules": {
          "description": "Sets the virtual network rules",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/VirtualNetworkRule"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "defaultAction"
      ],
      "type": "object"
    },
    "Restriction": {
      "description": "The restriction because of which SKU cannot be used.",
      "properties": {
        "reasonCode": {
          "description": "The reason for the restriction. As of now this can be \"QuotaId\" or \"NotAvailableForSubscription\". Quota Id is set when the SKU has requiredQuotas parameter as the subscription does not belong to that quota. The \"NotAvailableForSubscription\" is related to capacity at DC.",
          "oneOf": [
            {
              "enum": [
                "QuotaId",
                "NotAvailableForSubscription"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "Sku": {
      "description": "The SKU of the storage account.",
      "properties": {
        "name": {
          "description": "Gets or sets the sku name. Required for account creation; optional for update. Note that in older versions, sku name was called accountType.",
          "oneOf": [
            {
              "enum": [
                "Standard_LRS",
                "Standard_GRS",
                "Standard_RAGRS",
                "Standard_ZRS",
                "Premium_LRS"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "restrictions": {
          "description": "The restrictions because of which SKU cannot be used. This is empty if there are no restrictions.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/Restriction"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "StorageAccountPropertiesCreateParameters": {
      "description": "The parameters used to create the storage account.",
      "properties": {
        "accessTier": {
          "description": "Required for storage accounts where kind = BlobStorage. The access tier used for billing.",
          "oneOf": [
            {
              "enum": [
                "Hot",
                "Cool"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "customDomain": {
          "description": "User domain assigned to the storage account. Name is the CNAME source. Only one custom domain is supported per storage account at this time. To clear the existing custom domain, use an empty string for the custom domain name property.",
          "oneOf": [
            {
              "$ref": "#/definitions/CustomDomain"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "encryption": {
          "description": "Provides the encryption settings on the account. If left unspecified the account encryption settings will remain the same. The default setting is unencrypted.",
          "oneOf": [
            {
              "$ref": "#/definitions/Encryption"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "isHnsEnabled": {
          "description": "Account HierarchicalNamespace enabled if sets to true.",
          "oneOf": [
            {
              "default": false,
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "networkAcls": {
          "description": "Network rule set",
          "oneOf": [
            {
              "$ref": "#/definitions/NetworkRuleSet"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "supportsHttpsTrafficOnly": {
          "description": "Allows https traffic only to storage service if sets to true.",
          "oneOf": [
            {
              "default": false,
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "VirtualNetworkRule": {
      "description": "Virtual Network rule.",
      "properties": {
        "action": {
          "description": "The action of virtual network rule.",
          "oneOf": [
            {
              "enum": [
                "Allow"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "id": {
          "description": "Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}.",
          "type": "string"
        },
        "state": {
          "description": "Gets the state of virtual network rule.",
          "oneOf": [
            {
              "enum": [
                "provisioning",
                "deprovisioning",
                "succeeded",
                "failed",
                "networkSourceDeleted"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "id"
      ],
      "type": "object"
    },
    "storageAccounts_blobServices_containers_immutabilityPolicies_childResource": {
      "description": "Microsoft.Storage/storageAccounts/blobServices/containers/immutabilityPolicies",
      "properties": {
        "apiVersion": {
          "enum": [
            "2018-02-01"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the blob container immutabilityPolicy within the specified storage account. ImmutabilityPolicy Name must be 'default'",
          "oneOf": [
            {
              "enum": [
                "default"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The properties of an ImmutabilityPolicy of a blob container.",
          "oneOf": [
            {
              "$ref": "#/definitions/ImmutabilityPolicyProperty"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "immutabilityPolicies"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    }
  }
}