{
  "id": "https://schema.management.azure.com/schemas/2018-02-14/Microsoft.KeyVault.json#",
  "title": "Microsoft.KeyVault",
  "description": "Microsoft KeyVault Resource Types",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "resourceDefinitions": {
    "vaults": {
      "description": "Microsoft.KeyVault/vaults",
      "properties": {
        "apiVersion": {
          "enum": [
            "2018-02-14"
          ],
          "type": "string"
        },
        "location": {
          "description": "The supported Azure location where the key vault should be created.",
          "type": "string"
        },
        "name": {
          "description": "Name of the vault",
          "oneOf": [
            {
              "pattern": "^[a-zA-Z0-9-]{3,24}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Properties of the vault",
          "oneOf": [
            {
              "$ref": "#/definitions/VaultProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/vaults_accessPolicies_childResource"
              },
              {
                "$ref": "#/definitions/vaults_privateEndpointConnections_childResource"
              }
            ]
          },
          "type": "array"
        },
        "tags": {
          "description": "The tags that will be assigned to the key vault.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.KeyVault/vaults"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "vaults_accessPolicies": {
      "description": "Microsoft.KeyVault/vaults/accessPolicies",
      "properties": {
        "apiVersion": {
          "enum": [
            "2018-02-14"
          ],
          "type": "string"
        },
        "name": {
          "description": "Name of the operation",
          "oneOf": [
            {
              "enum": [
                "add",
                "replace",
                "remove"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Properties of the access policy",
          "oneOf": [
            {
              "$ref": "#/definitions/VaultAccessPolicyProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.KeyVault/vaults/accessPolicies"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "vaults_privateEndpointConnections": {
      "description": "Microsoft.KeyVault/vaults/privateEndpointConnections",
      "properties": {
        "apiVersion": {
          "enum": [
            "2018-02-14"
          ],
          "type": "string"
        },
        "name": {
          "description": "Name of the private endpoint connection associated with the key vault.",
          "type": "string"
        },
        "properties": {
          "description": "Resource properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/PrivateEndpointConnectionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.KeyVault/vaults/privateEndpointConnections"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    }
  },
  "definitions": {
    "AccessPolicyEntry": {
      "description": "An identity that have access to the key vault. All identities in the array must use the same tenant ID as the key vault's tenant ID.",
      "properties": {
        "applicationId": {
          "description": " Application ID of the client making request on behalf of a principal",
          "oneOf": [
            {
              "pattern": "^[0-9a-fA-F]{8}(-[0-9a-fA-F]{4}){3}-[0-9a-fA-F]{12}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "objectId": {
          "description": "The object ID of a user, service principal or security group in the Azure Active Directory tenant for the vault. The object ID must be unique for the list of access policies.",
          "type": "string"
        },
        "permissions": {
          "description": "Permissions the identity has for keys, secrets and certificates.",
          "oneOf": [
            {
              "$ref": "#/definitions/Permissions"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tenantId": {
          "description": "The Azure Active Directory tenant ID that should be used for authenticating requests to the key vault.",
          "oneOf": [
            {
              "pattern": "^[0-9a-fA-F]{8}(-[0-9a-fA-F]{4}){3}-[0-9a-fA-F]{12}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "tenantId",
        "objectId",
        "permissions"
      ],
      "type": "object"
    },
    "IPRule": {
      "description": "A rule governing the accessibility of a vault from a specific ip address or ip range.",
      "properties": {
        "value": {
          "description": "An IPv4 address range in CIDR notation, such as '124.56.78.91' (simple IP address) or '124.56.78.0/24' (all addresses that start with 124.56.78).",
          "type": "string"
        }
      },
      "required": [
        "value"
      ],
      "type": "object"
    },
    "NetworkRuleSet": {
      "description": "A set of rules governing the network accessibility of a vault.",
      "properties": {
        "bypass": {
          "description": "Tells what traffic can bypass network rules. This can be 'AzureServices' or 'None'.  If not specified the default is 'AzureServices'.",
          "oneOf": [
            {
              "enum": [
                "AzureServices",
                "None"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "defaultAction": {
          "description": "The default action when no rule from ipRules and from virtualNetworkRules match. This is only used after the bypass property has been evaluated.",
          "oneOf": [
            {
              "enum": [
                "Allow",
                "Deny"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "ipRules": {
          "description": "The list of IP address rules.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/IPRule"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "virtualNetworkRules": {
          "description": "The list of virtual network rules.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/VirtualNetworkRule"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "Permissions": {
      "description": "Permissions the identity has for keys, secrets, certificates and storage.",
      "properties": {
        "certificates": {
          "description": "Permissions to certificates",
          "oneOf": [
            {
              "items": {
                "enum": [
                  "get",
                  "list",
                  "delete",
                  "create",
                  "import",
                  "update",
                  "managecontacts",
                  "getissuers",
                  "listissuers",
                  "setissuers",
                  "deleteissuers",
                  "manageissuers",
                  "recover",
                  "purge",
                  "backup",
                  "restore"
                ],
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "keys": {
          "description": "Permissions to keys",
          "oneOf": [
            {
              "items": {
                "enum": [
                  "encrypt",
                  "decrypt",
                  "wrapKey",
                  "unwrapKey",
                  "sign",
                  "verify",
                  "get",
                  "list",
                  "create",
                  "update",
                  "import",
                  "delete",
                  "backup",
                  "restore",
                  "recover",
                  "purge"
                ],
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "secrets": {
          "description": "Permissions to secrets",
          "oneOf": [
            {
              "items": {
                "enum": [
                  "get",
                  "list",
                  "set",
                  "delete",
                  "backup",
                  "restore",
                  "recover",
                  "purge"
                ],
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "storage": {
          "description": "Permissions to storage accounts",
          "oneOf": [
            {
              "items": {
                "enum": [
                  "get",
                  "list",
                  "delete",
                  "set",
                  "update",
                  "regeneratekey",
                  "recover",
                  "purge",
                  "backup",
                  "restore",
                  "setsas",
                  "listsas",
                  "getsas",
                  "deletesas"
                ],
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "PrivateEndpoint": {
      "description": "Private endpoint object properties.",
      "properties": {},
      "type": "object"
    },
    "PrivateEndpointConnectionProperties": {
      "description": "Properties of the private endpoint connection resource.",
      "properties": {
        "privateEndpoint": {
          "description": "Properties of the private endpoint object.",
          "oneOf": [
            {
              "$ref": "#/definitions/PrivateEndpoint"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "privateLinkServiceConnectionState": {
          "description": "Approval state of the private link connection.",
          "oneOf": [
            {
              "$ref": "#/definitions/PrivateLinkServiceConnectionState"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "PrivateLinkServiceConnectionState": {
      "description": "An object that represents the approval state of the private link connection.",
      "properties": {
        "actionRequired": {
          "description": "A message indicating if changes on the service provider require any updates on the consumer.",
          "type": "string"
        },
        "description": {
          "description": "The reason for approval or rejection.",
          "type": "string"
        },
        "status": {
          "description": "Indicates whether the connection has been approved, rejected or removed by the key vault owner.",
          "oneOf": [
            {
              "enum": [
                "Pending",
                "Approved",
                "Rejected",
                "Disconnected"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "Sku": {
      "description": "SKU details",
      "properties": {
        "family": {
          "description": "SKU family name",
          "oneOf": [
            {
              "enum": [
                "A"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "name": {
          "description": "SKU name to specify whether the key vault is a standard vault or a premium vault.",
          "oneOf": [
            {
              "enum": [
                "standard",
                "premium"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "family",
        "name"
      ],
      "type": "object"
    },
    "VaultAccessPolicyProperties": {
      "description": "Properties of the vault access policy",
      "properties": {
        "accessPolicies": {
          "description": "An array of 0 to 16 identities that have access to the key vault. All identities in the array must use the same tenant ID as the key vault's tenant ID.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/AccessPolicyEntry"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "accessPolicies"
      ],
      "type": "object"
    },
    "VaultProperties": {
      "description": "Properties of the vault",
      "properties": {
        "accessPolicies": {
          "description": "An array of 0 to 1024 identities that have access to the key vault. All identities in the array must use the same tenant ID as the key vault's tenant ID. When `createMode` is set to `recover`, access policies are not required. Otherwise, access policies are required.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/AccessPolicyEntry"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "createMode": {
          "description": "The vault's create mode to indicate whether the vault need to be recovered or not.",
          "oneOf": [
            {
              "enum": [
                "recover",
                "default"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "enablePurgeProtection": {
          "description": "Property specifying whether protection against purge is enabled for this vault. Setting this property to true activates protection against purge for this vault and its content - only the Key Vault service may initiate a hard, irrecoverable deletion. The setting is effective only if soft delete is also enabled. Enabling this functionality is irreversible - that is, the property does not accept false as its value.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "enableSoftDelete": {
          "description": "Property to specify whether the 'soft delete' functionality is enabled for this key vault. It does not accept false value.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "enabledForDeployment": {
          "description": "Property to specify whether Azure Virtual Machines are permitted to retrieve certificates stored as secrets from the key vault.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "enabledForDiskEncryption": {
          "description": "Property to specify whether Azure Disk Encryption is permitted to retrieve secrets from the vault and unwrap keys.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "enabledForTemplateDeployment": {
          "description": "Property to specify whether Azure Resource Manager is permitted to retrieve secrets from the key vault.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "networkAcls": {
          "description": "Rules governing the accessibility of the key vault from specific network locations.",
          "oneOf": [
            {
              "$ref": "#/definitions/NetworkRuleSet"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "sku": {
          "description": "SKU details",
          "oneOf": [
            {
              "$ref": "#/definitions/Sku"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tenantId": {
          "description": "The Azure Active Directory tenant ID that should be used for authenticating requests to the key vault.",
          "oneOf": [
            {
              "pattern": "^[0-9a-fA-F]{8}(-[0-9a-fA-F]{4}){3}-[0-9a-fA-F]{12}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "vaultUri": {
          "description": "The URI of the vault for performing operations on keys and secrets.",
          "type": "string"
        }
      },
      "required": [
        "tenantId",
        "sku"
      ],
      "type": "object"
    },
    "VirtualNetworkRule": {
      "description": "A rule governing the accessibility of a vault from a specific virtual network.",
      "properties": {
        "id": {
          "description": "Full resource id of a vnet subnet, such as '/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/test-vnet/subnets/subnet1'.",
          "type": "string"
        }
      },
      "required": [
        "id"
      ],
      "type": "object"
    },
    "vaults_accessPolicies_childResource": {
      "description": "Microsoft.KeyVault/vaults/accessPolicies",
      "properties": {
        "apiVersion": {
          "enum": [
            "2018-02-14"
          ],
          "type": "string"
        },
        "name": {
          "description": "Name of the operation",
          "oneOf": [
            {
              "enum": [
                "add",
                "replace",
                "remove"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Properties of the access policy",
          "oneOf": [
            {
              "$ref": "#/definitions/VaultAccessPolicyProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "accessPolicies"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "vaults_privateEndpointConnections_childResource": {
      "description": "Microsoft.KeyVault/vaults/privateEndpointConnections",
      "properties": {
        "apiVersion": {
          "enum": [
            "2018-02-14"
          ],
          "type": "string"
        },
        "name": {
          "description": "Name of the private endpoint connection associated with the key vault.",
          "type": "string"
        },
        "properties": {
          "description": "Resource properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/PrivateEndpointConnectionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "privateEndpointConnections"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    }
  }
}