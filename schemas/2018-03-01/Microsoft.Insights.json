{
  "id": "https://schema.management.azure.com/schemas/2018-03-01/Microsoft.Insights.json#",
  "title": "Microsoft.Insights",
  "description": "Microsoft Insights Resource Types",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "resourceDefinitions": {
    "actionGroups": {
      "description": "microsoft.insights/actionGroups",
      "properties": {
        "apiVersion": {
          "enum": [
            "2018-03-01"
          ],
          "type": "string"
        },
        "location": {
          "description": "Resource location",
          "type": "string"
        },
        "name": {
          "description": "The name of the action group.",
          "type": "string"
        },
        "properties": {
          "description": "The action groups properties of the resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/ActionGroup"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Resource tags",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "microsoft.insights/actionGroups"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "metricAlerts": {
      "description": "Microsoft.Insights/metricAlerts",
      "properties": {
        "apiVersion": {
          "enum": [
            "2018-03-01"
          ],
          "type": "string"
        },
        "location": {
          "description": "Resource location",
          "type": "string"
        },
        "name": {
          "description": "The name of the rule.",
          "type": "string"
        },
        "properties": {
          "description": "The alert rule properties of the resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/MetricAlertProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Resource tags",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.Insights/metricAlerts"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    }
  },
  "definitions": {
    "ActionGroup": {
      "description": "An Azure action group.",
      "properties": {
        "automationRunbookReceivers": {
          "description": "The list of AutomationRunbook receivers that are part of this action group.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/AutomationRunbookReceiver"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "azureAppPushReceivers": {
          "description": "The list of AzureAppPush receivers that are part of this action group.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/AzureAppPushReceiver"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "azureFunctionReceivers": {
          "description": "The list of azure function receivers that are part of this action group.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/AzureFunctionReceiver"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "emailReceivers": {
          "description": "The list of email receivers that are part of this action group.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/EmailReceiver"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "enabled": {
          "description": "Indicates whether this action group is enabled. If an action group is not enabled, then none of its receivers will receive communications.",
          "oneOf": [
            {
              "default": true,
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "groupShortName": {
          "description": "The short name of the action group. This will be used in SMS messages.",
          "maxLength": 12,
          "type": "string"
        },
        "itsmReceivers": {
          "description": "The list of ITSM receivers that are part of this action group.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/ItsmReceiver"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "logicAppReceivers": {
          "description": "The list of logic app receivers that are part of this action group.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/LogicAppReceiver"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "smsReceivers": {
          "description": "The list of SMS receivers that are part of this action group.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/SmsReceiver"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "voiceReceivers": {
          "description": "The list of voice receivers that are part of this action group.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/VoiceReceiver"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "webhookReceivers": {
          "description": "The list of webhook receivers that are part of this action group.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/WebhookReceiver"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "groupShortName",
        "enabled"
      ],
      "type": "object"
    },
    "AutomationRunbookReceiver": {
      "description": "The Azure Automation Runbook notification receiver.",
      "properties": {
        "automationAccountId": {
          "description": "The Azure automation account Id which holds this runbook and authenticate to Azure resource.",
          "type": "string"
        },
        "isGlobalRunbook": {
          "description": "Indicates whether this instance is global runbook.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "name": {
          "description": "Indicates name of the webhook.",
          "type": "string"
        },
        "runbookName": {
          "description": "The name for this runbook.",
          "type": "string"
        },
        "serviceUri": {
          "description": "The URI where webhooks should be sent.",
          "type": "string"
        },
        "webhookResourceId": {
          "description": "The resource id for webhook linked to this runbook.",
          "type": "string"
        }
      },
      "required": [
        "automationAccountId",
        "runbookName",
        "webhookResourceId",
        "isGlobalRunbook"
      ],
      "type": "object"
    },
    "AzureAppPushReceiver": {
      "description": "The Azure mobile App push notification receiver.",
      "properties": {
        "emailAddress": {
          "description": "The email address registered for the Azure mobile app.",
          "type": "string"
        },
        "name": {
          "description": "The name of the Azure mobile app push receiver. Names must be unique across all receivers within an action group.",
          "type": "string"
        }
      },
      "required": [
        "name",
        "emailAddress"
      ],
      "type": "object"
    },
    "AzureFunctionReceiver": {
      "description": "An azure function receiver.",
      "properties": {
        "functionAppResourceId": {
          "description": "The azure resource id of the function app.",
          "type": "string"
        },
        "functionName": {
          "description": "The function name in the function app.",
          "type": "string"
        },
        "httpTriggerUrl": {
          "description": "The http trigger url where http request sent to.",
          "type": "string"
        },
        "name": {
          "description": "The name of the azure function receiver. Names must be unique across all receivers within an action group.",
          "type": "string"
        }
      },
      "required": [
        "name",
        "functionAppResourceId",
        "functionName",
        "httpTriggerUrl"
      ],
      "type": "object"
    },
    "DynamicThresholdFailingPeriods": {
      "description": "The minimum number of violations required within the selected lookback time window required to raise an alert.",
      "properties": {
        "minFailingPeriodsToAlert": {
          "description": "The number of violations to trigger an alert. Should be smaller or equal to numberOfEvaluationPeriods.",
          "oneOf": [
            {
              "type": "number"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "numberOfEvaluationPeriods": {
          "description": "The number of aggregated lookback points. The lookback time window is calculated based on the aggregation granularity (windowSize) and the selected number of aggregated points.",
          "oneOf": [
            {
              "type": "number"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "numberOfEvaluationPeriods",
        "minFailingPeriodsToAlert"
      ],
      "type": "object"
    },
    "EmailReceiver": {
      "description": "An email receiver.",
      "properties": {
        "emailAddress": {
          "description": "The email address of this receiver.",
          "type": "string"
        },
        "name": {
          "description": "The name of the email receiver. Names must be unique across all receivers within an action group.",
          "type": "string"
        }
      },
      "required": [
        "name",
        "emailAddress"
      ],
      "type": "object"
    },
    "ItsmReceiver": {
      "description": "An Itsm receiver.",
      "properties": {
        "connectionId": {
          "description": "Unique identification of ITSM connection among multiple defined in above workspace.",
          "type": "string"
        },
        "name": {
          "description": "The name of the Itsm receiver. Names must be unique across all receivers within an action group.",
          "type": "string"
        },
        "region": {
          "description": "Region in which workspace resides. Supported values:'centralindia','japaneast','southeastasia','australiasoutheast','uksouth','westcentralus','canadacentral','eastus','westeurope'",
          "type": "string"
        },
        "ticketConfiguration": {
          "description": "JSON blob for the configurations of the ITSM action. CreateMultipleWorkItems option will be part of this blob as well.",
          "type": "string"
        },
        "workspaceId": {
          "description": "OMS LA instance identifier.",
          "type": "string"
        }
      },
      "required": [
        "name",
        "workspaceId",
        "connectionId",
        "ticketConfiguration",
        "region"
      ],
      "type": "object"
    },
    "LogicAppReceiver": {
      "description": "A logic app receiver.",
      "properties": {
        "callbackUrl": {
          "description": "The callback url where http request sent to.",
          "type": "string"
        },
        "name": {
          "description": "The name of the logic app receiver. Names must be unique across all receivers within an action group.",
          "type": "string"
        },
        "resourceId": {
          "description": "The azure resource id of the logic app receiver.",
          "type": "string"
        }
      },
      "required": [
        "name",
        "resourceId",
        "callbackUrl"
      ],
      "type": "object"
    },
    "MetricAlertAction": {
      "description": "An alert action.",
      "properties": {
        "actionGroupId": {
          "description": "the id of the action group to use.",
          "type": "string"
        },
        "webHookProperties": {
          "description": "This field allows specifying custom properties, which would be appended to the alert payload sent as input to the webhook.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "MetricAlertCriteria": {
      "additionalProperties": {
        "oneOf": [
          {
            "type": "object"
          },
          {
            "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
          }
        ]
      },
      "description": "The rule criteria that defines the conditions of the alert rule.",
      "oneOf": [
        {
          "description": "Specifies the metric alert criteria for multiple resource that has multiple metric criteria.",
          "properties": {
            "allOf": {
              "description": "the list of multiple metric criteria for this 'all of' operation. ",
              "oneOf": [
                {
                  "items": {
                    "$ref": "#/definitions/MultiMetricCriteria"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "odata.type": {
              "enum": [
                "Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria"
              ],
              "type": "string"
            }
          },
          "required": [
            "odata.type"
          ],
          "type": "object"
        },
        {
          "description": "Specifies the metric alert criteria for a single resource that has multiple metric criteria.",
          "properties": {
            "allOf": {
              "description": "The list of metric criteria for this 'all of' operation. ",
              "oneOf": [
                {
                  "items": {
                    "$ref": "#/definitions/MetricCriteria"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "odata.type": {
              "enum": [
                "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
              ],
              "type": "string"
            }
          },
          "required": [
            "odata.type"
          ],
          "type": "object"
        },
        {
          "description": "Specifies the metric alert rule criteria for a web test resource.",
          "properties": {
            "componentId": {
              "description": "The Application Insights resource Id.",
              "type": "string"
            },
            "failedLocationCount": {
              "description": "The number of failed locations.",
              "oneOf": [
                {
                  "type": "number"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "odata.type": {
              "enum": [
                "Microsoft.Azure.Monitor.WebtestLocationAvailabilityCriteria"
              ],
              "type": "string"
            },
            "webTestId": {
              "description": "The Application Insights web test Id.",
              "type": "string"
            }
          },
          "required": [
            "webTestId",
            "componentId",
            "failedLocationCount",
            "odata.type"
          ],
          "type": "object"
        }
      ],
      "properties": {},
      "type": "object"
    },
    "MetricAlertProperties": {
      "description": "An alert rule.",
      "properties": {
        "actions": {
          "description": "the array of actions that are performed when the alert rule becomes active, and when an alert condition is resolved.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/MetricAlertAction"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "autoMitigate": {
          "description": "the flag that indicates whether the alert should be auto resolved or not. The default is true.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "criteria": {
          "description": "defines the specific alert criteria information.",
          "oneOf": [
            {
              "$ref": "#/definitions/MetricAlertCriteria"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "description": {
          "description": "the description of the metric alert that will be included in the alert email.",
          "type": "string"
        },
        "enabled": {
          "description": "the flag that indicates whether the metric alert is enabled.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "evaluationFrequency": {
          "description": "how often the metric alert is evaluated represented in ISO 8601 duration format.",
          "type": "string"
        },
        "scopes": {
          "description": "the list of resource id's that this metric alert is scoped to.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "severity": {
          "description": "Alert severity {0, 1, 2, 3, 4}",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "targetResourceRegion": {
          "description": "the region of the target resource(s) on which the alert is created/updated. Mandatory if the scope contains a subscription, resource group, or more than one resource.",
          "type": "string"
        },
        "targetResourceType": {
          "description": "the resource type of the target resource(s) on which the alert is created/updated. Mandatory if the scope contains a subscription, resource group, or more than one resource.",
          "type": "string"
        },
        "windowSize": {
          "description": "the period of time (in ISO 8601 duration format) that is used to monitor alert activity based on the threshold.",
          "type": "string"
        }
      },
      "required": [
        "severity",
        "enabled",
        "scopes",
        "evaluationFrequency",
        "windowSize",
        "criteria"
      ],
      "type": "object"
    },
    "MetricCriteria": {
      "additionalProperties": {
        "oneOf": [
          {
            "type": "object"
          },
          {
            "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
          }
        ]
      },
      "description": "Criterion to filter metrics.",
      "properties": {
        "criterionType": {
          "description": "Specifies the type of threshold criteria",
          "oneOf": [
            {
              "enum": [
                "StaticThresholdCriterion",
                "DynamicThresholdCriterion"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "dimensions": {
          "description": "List of dimension conditions.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/MetricDimension"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "metricName": {
          "description": "Name of the metric.",
          "type": "string"
        },
        "metricNamespace": {
          "description": "Namespace of the metric.",
          "type": "string"
        },
        "name": {
          "description": "Name of the criteria.",
          "type": "string"
        },
        "operator": {
          "description": "the criteria operator.",
          "oneOf": [
            {
              "enum": [
                "Equals",
                "GreaterThan",
                "GreaterThanOrEqual",
                "LessThan",
                "LessThanOrEqual"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "skipMetricValidation": {
          "description": "Allows creating an alert rule on a custom metric that isn't yet emitted, by causing the metric validation to be skipped.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "threshold": {
          "description": "the criteria threshold value that activates the alert.",
          "oneOf": [
            {
              "type": "number"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "timeAggregation": {
          "description": "the criteria time aggregation types.",
          "oneOf": [
            {
              "enum": [
                "Average",
                "Count",
                "Minimum",
                "Maximum",
                "Total"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "operator",
        "threshold",
        "criterionType",
        "name",
        "metricName",
        "timeAggregation"
      ],
      "type": "object"
    },
    "MetricDimension": {
      "description": "Specifies a metric dimension.",
      "properties": {
        "name": {
          "description": "Name of the dimension.",
          "type": "string"
        },
        "operator": {
          "description": "the dimension operator. Only 'Include' and 'Exclude' are supported",
          "type": "string"
        },
        "values": {
          "description": "list of dimension values.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "name",
        "operator",
        "values"
      ],
      "type": "object"
    },
    "MultiMetricCriteria": {
      "additionalProperties": {
        "oneOf": [
          {
            "type": "object"
          },
          {
            "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
          }
        ]
      },
      "description": "The types of conditions for a multi resource alert.",
      "oneOf": [
        {
          "description": "Criterion for dynamic threshold.",
          "properties": {
            "alertSensitivity": {
              "description": "The extent of deviation required to trigger an alert. This will affect how tight the threshold is to the metric series pattern.",
              "oneOf": [
                {
                  "enum": [
                    "Low",
                    "Medium",
                    "High"
                  ],
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "criterionType": {
              "enum": [
                "DynamicThresholdCriterion"
              ],
              "type": "string"
            },
            "failingPeriods": {
              "description": "The minimum number of violations required within the selected lookback time window required to raise an alert.",
              "oneOf": [
                {
                  "$ref": "#/definitions/DynamicThresholdFailingPeriods"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "ignoreDataBefore": {
              "description": "Use this option to set the date from which to start learning the metric historical data and calculate the dynamic thresholds (in ISO8601 format)",
              "format": "date-time",
              "type": "string"
            },
            "operator": {
              "description": "The operator used to compare the metric value against the threshold.",
              "oneOf": [
                {
                  "enum": [
                    "GreaterThan",
                    "LessThan",
                    "GreaterOrLessThan"
                  ],
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "operator",
            "alertSensitivity",
            "failingPeriods",
            "criterionType"
          ],
          "type": "object"
        },
        {
          "description": "Criterion to filter metrics.",
          "properties": {
            "criterionType": {
              "enum": [
                "StaticThresholdCriterion"
              ],
              "type": "string"
            },
            "operator": {
              "description": "the criteria operator.",
              "oneOf": [
                {
                  "enum": [
                    "Equals",
                    "GreaterThan",
                    "GreaterThanOrEqual",
                    "LessThan",
                    "LessThanOrEqual"
                  ],
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "threshold": {
              "description": "the criteria threshold value that activates the alert.",
              "oneOf": [
                {
                  "type": "number"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "operator",
            "threshold",
            "criterionType"
          ],
          "type": "object"
        }
      ],
      "properties": {
        "dimensions": {
          "description": "List of dimension conditions.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/MetricDimension"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "metricName": {
          "description": "Name of the metric.",
          "type": "string"
        },
        "metricNamespace": {
          "description": "Namespace of the metric.",
          "type": "string"
        },
        "name": {
          "description": "Name of the criteria.",
          "type": "string"
        },
        "skipMetricValidation": {
          "description": "Allows creating an alert rule on a custom metric that isn't yet emitted, by causing the metric validation to be skipped.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "timeAggregation": {
          "description": "the criteria time aggregation types.",
          "oneOf": [
            {
              "enum": [
                "Average",
                "Count",
                "Minimum",
                "Maximum",
                "Total"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "name",
        "metricName",
        "timeAggregation"
      ],
      "type": "object"
    },
    "SmsReceiver": {
      "description": "An SMS receiver.",
      "properties": {
        "countryCode": {
          "description": "The country code of the SMS receiver.",
          "type": "string"
        },
        "name": {
          "description": "The name of the SMS receiver. Names must be unique across all receivers within an action group.",
          "type": "string"
        },
        "phoneNumber": {
          "description": "The phone number of the SMS receiver.",
          "type": "string"
        }
      },
      "required": [
        "name",
        "countryCode",
        "phoneNumber"
      ],
      "type": "object"
    },
    "VoiceReceiver": {
      "description": "A voice receiver.",
      "properties": {
        "countryCode": {
          "description": "The country code of the voice receiver.",
          "type": "string"
        },
        "name": {
          "description": "The name of the voice receiver. Names must be unique across all receivers within an action group.",
          "type": "string"
        },
        "phoneNumber": {
          "description": "The phone number of the voice receiver.",
          "type": "string"
        }
      },
      "required": [
        "name",
        "countryCode",
        "phoneNumber"
      ],
      "type": "object"
    },
    "WebhookReceiver": {
      "description": "A webhook receiver.",
      "properties": {
        "name": {
          "description": "The name of the webhook receiver. Names must be unique across all receivers within an action group.",
          "type": "string"
        },
        "serviceUri": {
          "description": "The URI where webhooks should be sent.",
          "type": "string"
        }
      },
      "required": [
        "name",
        "serviceUri"
      ],
      "type": "object"
    }
  }
}