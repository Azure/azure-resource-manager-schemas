{
  "id": "https://schema.management.azure.com/schemas/2018-06-01-preview/Microsoft.Media.json#",
  "title": "Microsoft.Media",
  "description": "Microsoft Media Resource Types",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "resourceDefinitions": {
    "mediaServices_assets": {
      "description": "Microsoft.Media/mediaServices/assets",
      "properties": {
        "apiVersion": {
          "enum": [
            "2018-06-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The Asset name.",
          "type": "string"
        },
        "properties": {
          "description": "The resource properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/AssetProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.Media/mediaServices/assets"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "mediaServices_contentKeyPolicies": {
      "description": "Microsoft.Media/mediaServices/contentKeyPolicies",
      "properties": {
        "apiVersion": {
          "enum": [
            "2018-06-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The Content Key Policy name.",
          "type": "string"
        },
        "properties": {
          "description": "The properties of the Content Key Policy.",
          "oneOf": [
            {
              "$ref": "#/definitions/ContentKeyPolicyProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.Media/mediaServices/contentKeyPolicies"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "mediaServices_streamingLocators": {
      "description": "Microsoft.Media/mediaServices/streamingLocators",
      "properties": {
        "apiVersion": {
          "enum": [
            "2018-06-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The Streaming Locator name.",
          "type": "string"
        },
        "properties": {
          "description": "Class to specify properties of Streaming Locator",
          "oneOf": [
            {
              "$ref": "#/definitions/StreamingLocatorProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.Media/mediaServices/streamingLocators"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "mediaServices_streamingPolicies": {
      "description": "Microsoft.Media/mediaServices/streamingPolicies",
      "properties": {
        "apiVersion": {
          "enum": [
            "2018-06-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The Streaming Policy name.",
          "type": "string"
        },
        "properties": {
          "description": "Class to specify properties of Streaming Policy",
          "oneOf": [
            {
              "$ref": "#/definitions/StreamingPolicyProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.Media/mediaServices/streamingPolicies"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "mediaServices_transforms": {
      "description": "Microsoft.Media/mediaServices/transforms",
      "properties": {
        "apiVersion": {
          "enum": [
            "2018-06-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The Transform name.",
          "type": "string"
        },
        "properties": {
          "description": "The resource properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/TransformProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/mediaServices_transforms_jobs_childResource"
              }
            ]
          },
          "type": "array"
        },
        "type": {
          "enum": [
            "Microsoft.Media/mediaServices/transforms"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "mediaServices_transforms_jobs": {
      "description": "Microsoft.Media/mediaServices/transforms/jobs",
      "properties": {
        "apiVersion": {
          "enum": [
            "2018-06-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The Job name.",
          "type": "string"
        },
        "properties": {
          "description": "The resource properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/JobProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.Media/mediaServices/transforms/jobs"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "mediaservices": {
      "description": "Microsoft.Media/mediaservices",
      "properties": {
        "apiVersion": {
          "enum": [
            "2018-06-01-preview"
          ],
          "type": "string"
        },
        "location": {
          "description": "The Azure Region of the resource.",
          "type": "string"
        },
        "name": {
          "description": "The Media Services account name.",
          "type": "string"
        },
        "properties": {
          "description": "The resource properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/MediaServiceProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/mediaServices_assets_childResource"
              },
              {
                "$ref": "#/definitions/mediaServices_transforms_childResource"
              },
              {
                "$ref": "#/definitions/mediaservices_liveEvents_childResource"
              },
              {
                "$ref": "#/definitions/mediaServices_streamingPolicies_childResource"
              },
              {
                "$ref": "#/definitions/mediaServices_streamingLocators_childResource"
              },
              {
                "$ref": "#/definitions/mediaServices_contentKeyPolicies_childResource"
              },
              {
                "$ref": "#/definitions/mediaservices_streamingEndpoints_childResource"
              }
            ]
          },
          "type": "array"
        },
        "tags": {
          "description": "Resource tags.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.Media/mediaservices"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "mediaservices_liveEvents": {
      "description": "Microsoft.Media/mediaservices/liveEvents",
      "properties": {
        "apiVersion": {
          "enum": [
            "2018-06-01-preview"
          ],
          "type": "string"
        },
        "location": {
          "description": "The Azure Region of the resource.",
          "type": "string"
        },
        "name": {
          "description": "The name of the Live Event.",
          "oneOf": [
            {
              "maxLength": 32,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9]+(-*[a-zA-Z0-9])*$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The Live Event properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/LiveEventProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/mediaservices_liveEvents_liveOutputs_childResource"
              }
            ]
          },
          "type": "array"
        },
        "tags": {
          "description": "Resource tags.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.Media/mediaservices/liveEvents"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "mediaservices_liveEvents_liveOutputs": {
      "description": "Microsoft.Media/mediaservices/liveEvents/liveOutputs",
      "properties": {
        "apiVersion": {
          "enum": [
            "2018-06-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the Live Output.",
          "oneOf": [
            {
              "maxLength": 256,
              "minLength": 1,
              "pattern": "^([a-zA-Z0-9])+(-*[a-zA-Z0-9])*$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The Live Output properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/LiveOutputProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.Media/mediaservices/liveEvents/liveOutputs"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "mediaservices_streamingEndpoints": {
      "description": "Microsoft.Media/mediaservices/streamingEndpoints",
      "properties": {
        "apiVersion": {
          "enum": [
            "2018-06-01-preview"
          ],
          "type": "string"
        },
        "location": {
          "description": "The Azure Region of the resource.",
          "type": "string"
        },
        "name": {
          "description": "The name of the StreamingEndpoint.",
          "oneOf": [
            {
              "maxLength": 24,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9]+(-*[a-zA-Z0-9])*$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The StreamingEndpoint properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/StreamingEndpointProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Resource tags.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.Media/mediaservices/streamingEndpoints"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    }
  },
  "subscription_resourceDefinitions": {
    "mediaservices": {
      "description": "Microsoft.Media/mediaservices",
      "properties": {
        "apiVersion": {
          "enum": [
            "2018-06-01-preview"
          ],
          "type": "string"
        },
        "location": {
          "description": "The Azure Region of the resource.",
          "type": "string"
        },
        "name": {
          "description": "The Media Services account name.",
          "type": "string"
        },
        "properties": {
          "description": "The resource properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/MediaServiceProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/mediaServices_assets_childResource"
              },
              {
                "$ref": "#/definitions/mediaServices_transforms_childResource"
              },
              {
                "$ref": "#/definitions/mediaservices_liveEvents_childResource"
              },
              {
                "$ref": "#/definitions/mediaServices_streamingPolicies_childResource"
              },
              {
                "$ref": "#/definitions/mediaServices_streamingLocators_childResource"
              },
              {
                "$ref": "#/definitions/mediaServices_contentKeyPolicies_childResource"
              },
              {
                "$ref": "#/definitions/mediaservices_streamingEndpoints_childResource"
              }
            ]
          },
          "type": "array"
        },
        "tags": {
          "description": "Resource tags.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.Media/mediaservices"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    }
  },
  "definitions": {
    "AkamaiAccessControl": {
      "description": "Akamai access control",
      "properties": {
        "akamaiSignatureHeaderAuthenticationKeyList": {
          "description": "authentication key list",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/AkamaiSignatureHeaderAuthenticationKey"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "AkamaiSignatureHeaderAuthenticationKey": {
      "description": "Akamai Signature Header authentication key.",
      "properties": {
        "base64Key": {
          "description": "authentication key",
          "type": "string"
        },
        "expiration": {
          "description": "The exact time the authentication key.",
          "format": "date-time",
          "type": "string"
        },
        "identifier": {
          "description": "identifier of the key",
          "type": "string"
        }
      },
      "type": "object"
    },
    "AssetProperties": {
      "description": "The Asset properties.",
      "properties": {
        "alternateId": {
          "description": "The alternate ID of the Asset.",
          "type": "string"
        },
        "container": {
          "description": "The name of the asset blob container.",
          "type": "string"
        },
        "description": {
          "description": "The Asset description.",
          "type": "string"
        },
        "storageAccountName": {
          "description": "The name of the storage account.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CbcsDrmConfiguration": {
      "description": "Class to specify DRM configurations of CommonEncryptionCbcs scheme in Streaming Policy",
      "properties": {
        "fairPlay": {
          "description": "FairPlay configurations",
          "oneOf": [
            {
              "$ref": "#/definitions/StreamingPolicyFairPlayConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "playReady": {
          "description": "PlayReady configurations",
          "oneOf": [
            {
              "$ref": "#/definitions/StreamingPolicyPlayReadyConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "widevine": {
          "description": "Widevine configurations",
          "oneOf": [
            {
              "$ref": "#/definitions/StreamingPolicyWidevineConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "CencDrmConfiguration": {
      "description": "Class to specify DRM configurations of CommonEncryptionCenc scheme in Streaming Policy",
      "properties": {
        "playReady": {
          "description": "PlayReady configurations",
          "oneOf": [
            {
              "$ref": "#/definitions/StreamingPolicyPlayReadyConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "widevine": {
          "description": "Widevine configurations",
          "oneOf": [
            {
              "$ref": "#/definitions/StreamingPolicyWidevineConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "Codec": {
      "description": "Describes the basic properties of all codecs.",
      "oneOf": [
        {
          "description": "Describes Advanced Audio Codec (AAC) audio encoding settings.",
          "properties": {
            "bitrate": {
              "description": "The bitrate, in bits per second, of the output encoded audio.",
              "oneOf": [
                {
                  "type": "integer"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "channels": {
              "description": "The number of channels in the audio.",
              "oneOf": [
                {
                  "type": "integer"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "profile": {
              "description": "The encoding profile to be used when encoding audio with AAC.",
              "oneOf": [
                {
                  "enum": [
                    "AacLc",
                    "HeAacV1",
                    "HeAacV2"
                  ],
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "samplingRate": {
              "description": "The sampling rate to use for encoding in hertz.",
              "oneOf": [
                {
                  "type": "integer"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "type": "object"
        },
        {
          "description": "A codec flag, which tells the encoder to copy the input audio bitstream.",
          "properties": {},
          "type": "object"
        },
        {
          "description": "A codec flag, which tells the encoder to copy the input video bitstream without re-encoding.",
          "properties": {},
          "type": "object"
        },
        {
          "description": "Describes all the properties for encoding a video with the H.264 codec.",
          "properties": {
            "complexity": {
              "description": "Tells the encoder how to choose its encoding settings. The default value is Balanced.",
              "oneOf": [
                {
                  "enum": [
                    "Speed",
                    "Balanced",
                    "Quality"
                  ],
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "keyFrameInterval": {
              "description": "The distance between two key frames, thereby defining a group of pictures (GOP). The value should be a non-zero integer in the range [1, 30] seconds, specified in ISO 8601 format. The default is 2 seconds (PT2S).",
              "type": "string"
            },
            "layers": {
              "description": "The collection of output H.264 layers to be produced by the encoder.",
              "oneOf": [
                {
                  "items": {
                    "$ref": "#/definitions/H264Layer"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "sceneChangeDetection": {
              "description": "Whether or not the encoder should insert key frames at scene changes. If not specified, the default is false. This flag should be set to true only when the encoder is being configured to produce a single output video.",
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "stretchMode": {
              "description": "The resizing mode - how the input video will be resized to fit the desired output resolution(s). Default is AutoSize",
              "oneOf": [
                {
                  "enum": [
                    "None",
                    "AutoSize",
                    "AutoFit"
                  ],
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "type": "object"
        },
        {
          "description": "Describes the properties for producing a series of JPEG images from the input video.",
          "properties": {
            "keyFrameInterval": {
              "description": "The distance between two key frames, thereby defining a group of pictures (GOP). The value should be a non-zero integer in the range [1, 30] seconds, specified in ISO 8601 format. The default is 2 seconds (PT2S).",
              "type": "string"
            },
            "layers": {
              "description": "A collection of output JPEG image layers to be produced by the encoder.",
              "oneOf": [
                {
                  "items": {
                    "$ref": "#/definitions/JpgLayer"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "range": {
              "description": "The position in the input video at which to stop generating thumbnails. The value can be in absolute timestamp (ISO 8601, e.g: PT5M30S to stop at 5 minutes and 30 seconds), or a frame count (For example, 300 to stop at the 300th frame), or a relative value (For example, 100%).",
              "type": "string"
            },
            "start": {
              "description": "The position in the input video from where to start generating thumbnails. The value can be in absolute timestamp (ISO 8601, e.g: PT05S), or a frame count (For example, 10 for the 10th frame), or a relative value (For example, 1%). Also supports a macro {Best}, which tells the encoder to select the best thumbnail from the first few seconds of the video.",
              "type": "string"
            },
            "step": {
              "description": "The intervals at which thumbnails are generated. The value can be in absolute timestamp (ISO 8601, e.g: PT05S for one image every 5 seconds), or a frame count (For example, 30 for every 30 frames), or a relative value (For example, 1%).",
              "type": "string"
            },
            "stretchMode": {
              "description": "The resizing mode - how the input video will be resized to fit the desired output resolution(s). Default is AutoSize",
              "oneOf": [
                {
                  "enum": [
                    "None",
                    "AutoSize",
                    "AutoFit"
                  ],
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "type": "object"
        },
        {
          "description": "Describes the properties for producing a series of PNG images from the input video.",
          "properties": {
            "keyFrameInterval": {
              "description": "The distance between two key frames, thereby defining a group of pictures (GOP). The value should be a non-zero integer in the range [1, 30] seconds, specified in ISO 8601 format. The default is 2 seconds (PT2S).",
              "type": "string"
            },
            "layers": {
              "description": "A collection of output PNG image layers to be produced by the encoder.",
              "oneOf": [
                {
                  "items": {
                    "$ref": "#/definitions/PngLayer"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "range": {
              "description": "The position in the input video at which to stop generating thumbnails. The value can be in absolute timestamp (ISO 8601, e.g: PT5M30S to stop at 5 minutes and 30 seconds), or a frame count (For example, 300 to stop at the 300th frame), or a relative value (For example, 100%).",
              "type": "string"
            },
            "start": {
              "description": "The position in the input video from where to start generating thumbnails. The value can be in absolute timestamp (ISO 8601, e.g: PT05S), or a frame count (For example, 10 for the 10th frame), or a relative value (For example, 1%). Also supports a macro {Best}, which tells the encoder to select the best thumbnail from the first few seconds of the video.",
              "type": "string"
            },
            "step": {
              "description": "The intervals at which thumbnails are generated. The value can be in absolute timestamp (ISO 8601, e.g: PT05S for one image every 5 seconds), or a frame count (For example, 30 for every 30 frames), or a relative value (For example, 1%).",
              "type": "string"
            },
            "stretchMode": {
              "description": "The resizing mode - how the input video will be resized to fit the desired output resolution(s). Default is AutoSize",
              "oneOf": [
                {
                  "enum": [
                    "None",
                    "AutoSize",
                    "AutoFit"
                  ],
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "type": "object"
        }
      ],
      "properties": {
        "label": {
          "description": "An optional label for the codec. The label can be used to control muxing behavior.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CommonEncryptionCbcs": {
      "description": "Class for CommonEncryptionCbcs encryption scheme",
      "properties": {
        "clearTracks": {
          "description": "Representing which tracks should not be encrypted",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/TrackSelection"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "contentKeys": {
          "description": "Representing default content key for each encryption scheme and separate content keys for specific tracks",
          "oneOf": [
            {
              "$ref": "#/definitions/StreamingPolicyContentKeys"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "drm": {
          "description": "Configuration of DRMs for current encryption scheme",
          "oneOf": [
            {
              "$ref": "#/definitions/CbcsDrmConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "enabledProtocols": {
          "description": "Representing supported protocols",
          "oneOf": [
            {
              "$ref": "#/definitions/EnabledProtocols"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "CommonEncryptionCenc": {
      "description": "Class for envelope encryption scheme",
      "properties": {
        "clearTracks": {
          "description": "Representing which tracks should not be encrypted",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/TrackSelection"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "contentKeys": {
          "description": "Representing default content key for each encryption scheme and separate content keys for specific tracks",
          "oneOf": [
            {
              "$ref": "#/definitions/StreamingPolicyContentKeys"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "drm": {
          "description": "Configuration of DRMs for CommonEncryptionCenc encryption scheme",
          "oneOf": [
            {
              "$ref": "#/definitions/CencDrmConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "enabledProtocols": {
          "description": "Representing supported protocols",
          "oneOf": [
            {
              "$ref": "#/definitions/EnabledProtocols"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ContentKeyPolicyConfiguration": {
      "description": "Base class for Content Key Policy configuration. A derived class must be used to create a configuration.",
      "oneOf": [
        {
          "description": "Represents a configuration for non-DRM keys.",
          "properties": {},
          "type": "object"
        },
        {
          "description": "Specifies a configuration for FairPlay licenses.",
          "properties": {
            "ask": {
              "description": "The key that must be used as FairPlay ASk."
            },
            "fairPlayPfx": {
              "description": "The Base64 representation of FairPlay certificate in PKCS 12 (pfx) format (including private key).",
              "type": "string"
            },
            "fairPlayPfxPassword": {
              "description": "The password encrypting FairPlay certificate in PKCS 12 (pfx) format.",
              "type": "string"
            },
            "rentalAndLeaseKeyType": {
              "description": "The rental and lease key type.",
              "oneOf": [
                {
                  "enum": [
                    "Unknown",
                    "Undefined",
                    "PersistentUnlimited",
                    "PersistentLimited"
                  ],
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "rentalDuration": {
              "description": "The rental duration. Must be greater than or equal to 0.",
              "oneOf": [
                {
                  "type": "integer"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "ask",
            "fairPlayPfxPassword",
            "fairPlayPfx",
            "rentalAndLeaseKeyType",
            "rentalDuration"
          ],
          "type": "object"
        },
        {
          "description": "Specifies a configuration for PlayReady licenses.",
          "properties": {
            "licenses": {
              "description": "The PlayReady licenses.",
              "oneOf": [
                {
                  "items": {
                    "$ref": "#/definitions/ContentKeyPolicyPlayReadyLicense"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "responseCustomData": {
              "description": "The custom response data.",
              "type": "string"
            }
          },
          "required": [
            "licenses"
          ],
          "type": "object"
        },
        {
          "description": "Represents a ContentKeyPolicyConfiguration that is unavailable in the current API version.",
          "properties": {},
          "type": "object"
        },
        {
          "description": "Specifies a configuration for Widevine licenses.",
          "properties": {
            "widevineTemplate": {
              "description": "The Widevine template.",
              "type": "string"
            }
          },
          "required": [
            "widevineTemplate"
          ],
          "type": "object"
        }
      ],
      "properties": {},
      "type": "object"
    },
    "ContentKeyPolicyOption": {
      "description": "Represents a policy option.",
      "properties": {
        "configuration": {
          "description": "The key delivery configuration.",
          "oneOf": [
            {
              "$ref": "#/definitions/ContentKeyPolicyConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "name": {
          "description": "The Policy Option description.",
          "type": "string"
        },
        "restriction": {
          "description": "The requirements that must be met to deliver keys with this configuration",
          "oneOf": [
            {
              "$ref": "#/definitions/ContentKeyPolicyRestriction"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "configuration",
        "restriction"
      ],
      "type": "object"
    },
    "ContentKeyPolicyPlayReadyContentKeyLocation": {
      "description": "Base class for content key ID location. A derived class must be used to represent the location.",
      "oneOf": [
        {
          "description": "Specifies that the content key ID is in the PlayReady header.",
          "properties": {},
          "type": "object"
        },
        {
          "description": "Specifies that the content key ID is specified in the PlayReady configuration.",
          "properties": {
            "keyId": {
              "description": "The content key ID.",
              "oneOf": [
                {
                  "pattern": "^[0-9a-fA-F]{8}(-[0-9a-fA-F]{4}){3}-[0-9a-fA-F]{12}$",
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "keyId"
          ],
          "type": "object"
        }
      ],
      "properties": {},
      "type": "object"
    },
    "ContentKeyPolicyPlayReadyExplicitAnalogTelevisionRestriction": {
      "description": "Configures the Explicit Analog Television Output Restriction control bits. For further details see the PlayReady Compliance Rules.",
      "properties": {
        "bestEffort": {
          "description": "Indicates whether this restriction is enforced on a Best Effort basis.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "configurationData": {
          "description": "Configures the restriction control bits. Must be between 0 and 3 inclusive.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "bestEffort",
        "configurationData"
      ],
      "type": "object"
    },
    "ContentKeyPolicyPlayReadyLicense": {
      "description": "The PlayReady license",
      "properties": {
        "allowTestDevices": {
          "description": "A flag indicating whether test devices can use the license.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "beginDate": {
          "description": "The begin date of license",
          "format": "date-time",
          "type": "string"
        },
        "contentKeyLocation": {
          "description": "The content key location.",
          "oneOf": [
            {
              "$ref": "#/definitions/ContentKeyPolicyPlayReadyContentKeyLocation"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "contentType": {
          "description": "The PlayReady content type.",
          "oneOf": [
            {
              "enum": [
                "Unknown",
                "Unspecified",
                "UltraVioletDownload",
                "UltraVioletStreaming"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "expirationDate": {
          "description": "The expiration date of license.",
          "format": "date-time",
          "type": "string"
        },
        "gracePeriod": {
          "description": "The grace period of license.",
          "type": "string"
        },
        "licenseType": {
          "description": "The license type.",
          "oneOf": [
            {
              "enum": [
                "Unknown",
                "NonPersistent",
                "Persistent"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "playRight": {
          "description": "The license PlayRight",
          "oneOf": [
            {
              "$ref": "#/definitions/ContentKeyPolicyPlayReadyPlayRight"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "relativeBeginDate": {
          "description": "The relative begin date of license.",
          "type": "string"
        },
        "relativeExpirationDate": {
          "description": "The relative expiration date of license.",
          "type": "string"
        }
      },
      "required": [
        "allowTestDevices",
        "licenseType",
        "contentKeyLocation",
        "contentType"
      ],
      "type": "object"
    },
    "ContentKeyPolicyPlayReadyPlayRight": {
      "description": "Configures the Play Right in the PlayReady license.",
      "properties": {
        "agcAndColorStripeRestriction": {
          "description": "Configures Automatic Gain Control (AGC) and Color Stripe in the license. Must be between 0 and 3 inclusive.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "allowPassingVideoContentToUnknownOutput": {
          "description": "Configures Unknown output handling settings of the license.",
          "oneOf": [
            {
              "enum": [
                "Unknown",
                "NotAllowed",
                "Allowed",
                "AllowedWithVideoConstriction"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "analogVideoOpl": {
          "description": "Specifies the output protection level for compressed digital audio.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "compressedDigitalAudioOpl": {
          "description": "Specifies the output protection level for compressed digital audio.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "compressedDigitalVideoOpl": {
          "description": "Specifies the output protection level for compressed digital video.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "digitalVideoOnlyContentRestriction": {
          "description": "Enables the Image Constraint For Analog Component Video Restriction in the license.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "explicitAnalogTelevisionOutputRestriction": {
          "description": "Configures the Explicit Analog Television Output Restriction in the license. Configuration data must be between 0 and 3 inclusive.",
          "oneOf": [
            {
              "$ref": "#/definitions/ContentKeyPolicyPlayReadyExplicitAnalogTelevisionRestriction"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "firstPlayExpiration": {
          "description": "The amount of time that the license is valid after the license is first used to play content.",
          "type": "string"
        },
        "imageConstraintForAnalogComponentVideoRestriction": {
          "description": "Enables the Image Constraint For Analog Component Video Restriction in the license.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "imageConstraintForAnalogComputerMonitorRestriction": {
          "description": "Enables the Image Constraint For Analog Component Video Restriction in the license.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "scmsRestriction": {
          "description": "Configures the Serial Copy Management System (SCMS) in the license. Must be between 0 and 3 inclusive.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "uncompressedDigitalAudioOpl": {
          "description": "Specifies the output protection level for uncompressed digital audio.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "uncompressedDigitalVideoOpl": {
          "description": "Specifies the output protection level for uncompressed digital video.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "digitalVideoOnlyContentRestriction",
        "imageConstraintForAnalogComponentVideoRestriction",
        "imageConstraintForAnalogComputerMonitorRestriction",
        "allowPassingVideoContentToUnknownOutput"
      ],
      "type": "object"
    },
    "ContentKeyPolicyProperties": {
      "description": "The properties of the Content Key Policy.",
      "properties": {
        "description": {
          "description": "A description for the Policy.",
          "type": "string"
        },
        "options": {
          "description": "The Key Policy options.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/ContentKeyPolicyOption"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "options"
      ],
      "type": "object"
    },
    "ContentKeyPolicyRestriction": {
      "description": "Base class for Content Key Policy restrictions. A derived class must be used to create a restriction.",
      "oneOf": [
        {
          "description": "Represents an open restriction. License or key will be delivered on every request.",
          "properties": {},
          "type": "object"
        },
        {
          "description": "Represents a token restriction. Provided token must match these requirements for successful license or key delivery.",
          "properties": {
            "alternateVerificationKeys": {
              "description": "A list of alternative verification keys.",
              "oneOf": [
                {
                  "items": {
                    "$ref": "#/definitions/ContentKeyPolicyRestrictionTokenKey"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "audience": {
              "description": "The audience for the token.",
              "type": "string"
            },
            "issuer": {
              "description": "The token issuer.",
              "type": "string"
            },
            "openIdConnectDiscoveryDocument": {
              "description": "The OpenID connect discovery document.",
              "type": "string"
            },
            "primaryVerificationKey": {
              "description": "The primary verification key.",
              "oneOf": [
                {
                  "$ref": "#/definitions/ContentKeyPolicyRestrictionTokenKey"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "requiredClaims": {
              "description": "A list of required token claims.",
              "oneOf": [
                {
                  "items": {
                    "$ref": "#/definitions/ContentKeyPolicyTokenClaim"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "restrictionTokenType": {
              "description": "The type of token.",
              "oneOf": [
                {
                  "enum": [
                    "Unknown",
                    "Swt",
                    "Jwt"
                  ],
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "issuer",
            "audience",
            "primaryVerificationKey",
            "restrictionTokenType"
          ],
          "type": "object"
        },
        {
          "description": "Represents a ContentKeyPolicyRestriction that is unavailable in the current API version.",
          "properties": {},
          "type": "object"
        }
      ],
      "properties": {},
      "type": "object"
    },
    "ContentKeyPolicyRestrictionTokenKey": {
      "description": "Base class for Content Key Policy key for token validation. A derived class must be used to create a token key.",
      "oneOf": [
        {
          "description": "Specifies a RSA key for token validation",
          "properties": {
            "exponent": {
              "description": "The RSA Parameter exponent"
            },
            "modulus": {
              "description": "The RSA Parameter modulus"
            }
          },
          "required": [
            "exponent",
            "modulus"
          ],
          "type": "object"
        },
        {
          "description": "Specifies a symmetric key for token validation.",
          "properties": {
            "keyValue": {
              "description": "The key value of the key"
            }
          },
          "required": [
            "keyValue"
          ],
          "type": "object"
        },
        {
          "description": "Specifies a certificate for token validation.",
          "properties": {
            "rawBody": {
              "description": "The raw data field of a certificate in PKCS 12 format (X509Certificate2 in .NET)"
            }
          },
          "required": [
            "rawBody"
          ],
          "type": "object"
        }
      ],
      "properties": {},
      "type": "object"
    },
    "ContentKeyPolicyTokenClaim": {
      "description": "Represents a token claim.",
      "properties": {
        "claimType": {
          "description": "Token claim type.",
          "type": "string"
        },
        "claimValue": {
          "description": "Token claim value.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CrossSiteAccessPolicies": {
      "description": "The client access policy.",
      "properties": {
        "clientAccessPolicy": {
          "description": "The content of clientaccesspolicy.xml used by Silverlight.",
          "type": "string"
        },
        "crossDomainPolicy": {
          "description": "The content of crossdomain.xml used by Silverlight.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DefaultKey": {
      "description": "Class to specify properties of default content key for each encryption scheme",
      "properties": {
        "label": {
          "description": "Label can be used to specify Content Key when creating a Streaming Locator",
          "type": "string"
        },
        "policyName": {
          "description": "Policy used by Default Key",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Deinterlace": {
      "description": "Describes the de-interlacing settings.",
      "properties": {
        "mode": {
          "description": "The deinterlacing mode. Defaults to AutoPixelAdaptive.",
          "oneOf": [
            {
              "enum": [
                "Off",
                "AutoPixelAdaptive"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "parity": {
          "description": "The field parity for de-interlacing, defaults to Auto.",
          "oneOf": [
            {
              "enum": [
                "Auto",
                "TopFieldFirst",
                "BottomFieldFirst"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "EnabledProtocols": {
      "description": "Class to specify which protocols are enabled",
      "properties": {
        "dash": {
          "description": "Enable DASH protocol or not",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "download": {
          "description": "Enable Download protocol or not",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "hls": {
          "description": "Enable HLS protocol or not",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "smoothStreaming": {
          "description": "Enable SmoothStreaming protocol or not",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "download",
        "dash",
        "hls",
        "smoothStreaming"
      ],
      "type": "object"
    },
    "EnvelopeEncryption": {
      "description": "Class for EnvelopeEncryption encryption scheme",
      "properties": {
        "clearTracks": {
          "description": "Representing which tracks should not be encrypted",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/TrackSelection"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "contentKeys": {
          "description": "Representing default content key for each encryption scheme and separate content keys for specific tracks",
          "oneOf": [
            {
              "$ref": "#/definitions/StreamingPolicyContentKeys"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "customKeyAcquisitionUrlTemplate": {
          "description": "KeyAcquisitionUrlTemplate is used to point to user specified service to delivery content keys",
          "type": "string"
        },
        "enabledProtocols": {
          "description": "Representing supported protocols",
          "oneOf": [
            {
              "$ref": "#/definitions/EnabledProtocols"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "Filters": {
      "description": "Describes all the filtering operations, such as de-interlacing, rotation etc. that are to be applied to the input media before encoding.",
      "properties": {
        "crop": {
          "description": "The parameters for the rectangular window with which to crop the input video.",
          "oneOf": [
            {
              "$ref": "#/definitions/Rectangle"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "deinterlace": {
          "description": "The de-interlacing settings.",
          "oneOf": [
            {
              "$ref": "#/definitions/Deinterlace"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "overlays": {
          "description": "The properties of overlays to be applied to the input video. These could be audio, image or video overlays.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/Overlay"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "rotation": {
          "description": "The rotation, if any, to be applied to the input video, before it is encoded. Default is Auto",
          "oneOf": [
            {
              "enum": [
                "Auto",
                "None",
                "Rotate0",
                "Rotate90",
                "Rotate180",
                "Rotate270"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "Format": {
      "description": "Base class for output.",
      "oneOf": [
        {
          "description": "Describes the settings for producing JPEG thumbnails.",
          "properties": {},
          "type": "object"
        },
        {
          "description": "Describes the settings for producing PNG thumbnails.",
          "properties": {},
          "type": "object"
        },
        {
          "description": "Describes the properties for an output ISO MP4 file.",
          "properties": {
            "outputFiles": {
              "description": "The list of output files to produce.  Each entry in the list is a set of audio and video layer labels to be muxed together .",
              "oneOf": [
                {
                  "items": {
                    "$ref": "#/definitions/OutputFile"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "type": "object"
        },
        {
          "description": "Describes the properties for generating an MPEG-2 Transport Stream (ISO/IEC 13818-1) output video file(s).",
          "properties": {
            "outputFiles": {
              "description": "The list of output files to produce.  Each entry in the list is a set of audio and video layer labels to be muxed together .",
              "oneOf": [
                {
                  "items": {
                    "$ref": "#/definitions/OutputFile"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "type": "object"
        }
      ],
      "properties": {
        "filenamePattern": {
          "description": "The pattern of the file names for the generated output files. The following macros are supported in the file name: {Basename} - The base name of the input video {Extension} - The appropriate extension for this format. {Label} - The label assigned to the codec/layer. {Index} - A unique index for thumbnails. Only applicable to thumbnails. {Bitrate} - The audio/video bitrate. Not applicable to thumbnails. {Codec} - The type of the audio/video codec. Any unsubstituted macros will be collapsed and removed from the filename.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "H264Layer": {
      "description": "Describes the settings to be used when encoding the input video into a desired output bitrate layer with the H.264 video codec.",
      "properties": {
        "@odata.type": {
          "description": "The discriminator for derived types.",
          "type": "string"
        },
        "adaptiveBFrame": {
          "description": "Whether or not adaptive B-frames are to be used when encoding this layer. If not specified, the encoder will turn it on whenever the video profile permits its use.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "bFrames": {
          "description": "The number of B-frames to be used when encoding this layer.  If not specified, the encoder chooses an appropriate number based on the video profile and level.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "bitrate": {
          "description": "The average bitrate in bits per second at which to encode the input video when generating this layer. This is a required field.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "bufferWindow": {
          "description": "The VBV buffer window length. The value should be in ISO 8601 format. The value should be in the range [0.1-100] seconds. The default is 5 seconds (for example, PT5S).",
          "type": "string"
        },
        "entropyMode": {
          "description": "The entropy mode to be used for this layer. If not specified, the encoder chooses the mode that is appropriate for the profile and level.",
          "oneOf": [
            {
              "enum": [
                "Cabac",
                "Cavlc"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "frameRate": {
          "description": "The frame rate (in frames per second) at which to encode this layer. The value can be in the form of M/N where M and N are integers (For example, 30000/1001), or in the form of a number (For example, 30, or 29.97). The encoder enforces constraints on allowed frame rates based on the profile and level. If it is not specified, the encoder will use the same frame rate as the input video.",
          "type": "string"
        },
        "height": {
          "description": "The height of the output video for this layer. The value can be absolute (in pixels) or relative (in percentage). For example 50% means the output video has half as many pixels in height as the input.",
          "type": "string"
        },
        "label": {
          "description": "The alphanumeric label for this layer, which can be used in multiplexing different video and audio layers, or in naming the output file.",
          "type": "string"
        },
        "level": {
          "description": "Which level of the H.264 standard should be used when encoding this layer. The value can be Auto, or a number that matches the H.264 profile. If not specified, the default is Auto, which lets the encoder choose the Level that is appropriate for this layer.",
          "type": "string"
        },
        "maxBitrate": {
          "description": "The maximum bitrate (in bits per second), at which the VBV buffer should be assumed to refill. If not specified, defaults to the same value as bitrate.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "profile": {
          "description": "Which profile of the H.264 standard should be used when encoding this layer. Default is Auto.",
          "oneOf": [
            {
              "enum": [
                "Auto",
                "Baseline",
                "Main",
                "High",
                "High422",
                "High444"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "referenceFrames": {
          "description": "The number of reference frames to be used when encoding this layer. If not specified, the encoder determines an appropriate number based on the encoder complexity setting.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "slices": {
          "description": "The number of slices to be used when encoding this layer. If not specified, default is zero, which means that encoder will use a single slice for each frame.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "width": {
          "description": "The width of the output video for this layer. The value can be absolute (in pixels) or relative (in percentage). For example 50% means the output video has half as many pixels in width as the input.",
          "type": "string"
        }
      },
      "required": [
        "@odata.type"
      ],
      "type": "object"
    },
    "Hls": {
      "description": "The HLS configuration.",
      "properties": {
        "fragmentsPerTsSegment": {
          "description": "The amount of fragments per HTTP Live Streaming (HLS) segment.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "IPAccessControl": {
      "description": "The IP access control.",
      "properties": {
        "allow": {
          "description": "The IP allow list.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/IPRange"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "IPRange": {
      "description": "The IP address range in the CIDR scheme.",
      "properties": {
        "address": {
          "description": "The IP address.",
          "type": "string"
        },
        "name": {
          "description": "The friendly name for the IP address range.",
          "type": "string"
        },
        "subnetPrefixLength": {
          "description": "The subnet mask prefix length (see CIDR notation).",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "JobInput": {
      "description": "Base class for inputs to a Job.",
      "oneOf": [
        {
          "description": "Represents an Asset for input into a Job.",
          "properties": {
            "assetName": {
              "description": "The name of the input Asset.",
              "type": "string"
            },
            "files": {
              "description": "List of files. Required for JobInputHttp.",
              "oneOf": [
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "assetName"
          ],
          "type": "object"
        },
        {
          "description": "Represents HTTPS job input.",
          "properties": {
            "baseUri": {
              "description": "Base URI for HTTPS job input. It will be concatenated with provided file names.   If no base uri is given, then the provided file list is assumed to be fully qualified uris.",
              "type": "string"
            },
            "files": {
              "description": "List of files. Required for JobInputHttp.",
              "oneOf": [
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "type": "object"
        },
        {
          "description": "Describes a list of inputs to a Job.",
          "properties": {
            "inputs": {
              "description": "List of inputs to a Job.",
              "oneOf": [
                {
                  "items": {
                    "type": "object"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "type": "object"
        }
      ],
      "properties": {
        "label": {
          "description": "A label that is assigned to a JobInput, that is used to satisfy a reference used in the Transform. For example, a Transform can be authored so as to take an image file with the label 'xyz' and apply it as an overlay onto the input video before it is encoded. When submitting a Job, exactly one of the JobInputs should be the image file, and it should have the label 'xyz'.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "JobOutput": {
      "description": "Describes all the properties of a JobOutput.",
      "oneOf": [
        {
          "description": "Represents an Asset used as a JobOutput.",
          "properties": {
            "assetName": {
              "description": "The name of the output Asset.",
              "type": "string"
            }
          },
          "required": [
            "assetName"
          ],
          "type": "object"
        }
      ],
      "properties": {},
      "type": "object"
    },
    "JobProperties": {
      "description": "Properties of the Job.",
      "properties": {
        "correlationData": {
          "description": "Customer provided correlation data that will be returned in Job completed events.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "description": {
          "description": "Optional customer supplied description of the Job.",
          "type": "string"
        },
        "input": {
          "description": "The inputs for the Job.",
          "oneOf": [
            {
              "$ref": "#/definitions/JobInput"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "outputs": {
          "description": "The outputs for the Job.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/JobOutput"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "priority": {
          "description": "Priority with which the job should be processed. Higher priority jobs are processed before lower priority jobs. If not set, the default is normal.",
          "oneOf": [
            {
              "enum": [
                "Low",
                "Normal",
                "High"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "input",
        "outputs"
      ],
      "type": "object"
    },
    "JpgLayer": {
      "description": "Describes the settings to produce a JPEG image from the input video.",
      "properties": {
        "@odata.type": {
          "description": "The discriminator for derived types.",
          "type": "string"
        },
        "height": {
          "description": "The height of the output video for this layer. The value can be absolute (in pixels) or relative (in percentage). For example 50% means the output video has half as many pixels in height as the input.",
          "type": "string"
        },
        "label": {
          "description": "The alphanumeric label for this layer, which can be used in multiplexing different video and audio layers, or in naming the output file.",
          "type": "string"
        },
        "quality": {
          "description": "The compression quality of the JPEG output. Range is from 0-100 and the default is 70.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "width": {
          "description": "The width of the output video for this layer. The value can be absolute (in pixels) or relative (in percentage). For example 50% means the output video has half as many pixels in width as the input.",
          "type": "string"
        }
      },
      "required": [
        "@odata.type"
      ],
      "type": "object"
    },
    "LiveEventEncoding": {
      "description": "The Live Event encoding.",
      "properties": {
        "encodingType": {
          "description": "The encoding type for Live Event.",
          "oneOf": [
            {
              "enum": [
                "None",
                "Basic"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "presetName": {
          "description": "The encoding preset name.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "LiveEventEndpoint": {
      "description": "The Live Event endpoint.",
      "properties": {
        "protocol": {
          "description": "The endpoint protocol.",
          "type": "string"
        },
        "url": {
          "description": "The endpoint URL.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "LiveEventInput": {
      "description": "The Live Event input.",
      "properties": {
        "accessToken": {
          "description": "The access token.",
          "type": "string"
        },
        "endpoints": {
          "description": "The input endpoints for the Live Event.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/LiveEventEndpoint"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "keyFrameIntervalDuration": {
          "description": "ISO 8601 timespan duration of the key frame interval duration.",
          "type": "string"
        },
        "streamingProtocol": {
          "description": "The streaming protocol for the Live Event.",
          "oneOf": [
            {
              "enum": [
                "FragmentedMP4",
                "RTMP"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "streamingProtocol"
      ],
      "type": "object"
    },
    "LiveEventPreview": {
      "description": "The Live Event preview.",
      "properties": {
        "accessControl": {
          "description": "The access control for LiveEvent preview.",
          "oneOf": [
            {
              "$ref": "#/definitions/LiveEventPreviewAccessControl"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "alternativeMediaId": {
          "description": "An Alternative Media Identifier associated with the preview url.  This identifier can be used to distinguish the preview of different live events for authorization purposes in the CustomLicenseAcquisitionUrlTemplate or the CustomKeyAcquisitionUrlTemplate of the StreamingPolicy specified in the StreamingPolicyName field.",
          "type": "string"
        },
        "endpoints": {
          "description": "The endpoints for preview.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/LiveEventEndpoint"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "previewLocator": {
          "description": "The preview locator Guid.",
          "type": "string"
        },
        "streamingPolicyName": {
          "description": "The name of streaming policy used for LiveEvent preview",
          "type": "string"
        }
      },
      "type": "object"
    },
    "LiveEventPreviewAccessControl": {
      "description": "The IP access control for Live Event preview.",
      "properties": {
        "ip": {
          "description": "The IP access control properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/IPAccessControl"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "LiveEventProperties": {
      "description": "The Live Event properties.",
      "properties": {
        "crossSiteAccessPolicies": {
          "description": "The Live Event access policies.",
          "oneOf": [
            {
              "$ref": "#/definitions/CrossSiteAccessPolicies"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "description": {
          "description": "The Live Event description.",
          "type": "string"
        },
        "encoding": {
          "description": "The Live Event encoding.",
          "oneOf": [
            {
              "$ref": "#/definitions/LiveEventEncoding"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "input": {
          "description": "The Live Event input.",
          "oneOf": [
            {
              "$ref": "#/definitions/LiveEventInput"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "preview": {
          "description": "The Live Event preview.",
          "oneOf": [
            {
              "$ref": "#/definitions/LiveEventPreview"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "streamOptions": {
          "description": "The stream options.",
          "oneOf": [
            {
              "items": {
                "enum": [
                  "Default",
                  "LowLatency"
                ],
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "vanityUrl": {
          "description": "The Live Event vanity URL flag.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "input"
      ],
      "type": "object"
    },
    "LiveOutputProperties": {
      "description": "The JSON object that contains the properties required to create a Live Output.",
      "properties": {
        "archiveWindowLength": {
          "description": "ISO 8601 timespan duration of the archive window length. This is duration that customer want to retain the recorded content.",
          "type": "string"
        },
        "assetName": {
          "description": "The asset name.",
          "type": "string"
        },
        "description": {
          "description": "The description of the Live Output.",
          "type": "string"
        },
        "hls": {
          "description": "The HLS configuration.",
          "oneOf": [
            {
              "$ref": "#/definitions/Hls"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "manifestName": {
          "description": "The manifest file name.",
          "type": "string"
        },
        "outputSnapTime": {
          "description": "The output snapshot time.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "assetName",
        "archiveWindowLength"
      ],
      "type": "object"
    },
    "MediaServiceProperties": {
      "description": "Properties of the Media Services account.",
      "properties": {
        "storageAccounts": {
          "description": "The storage accounts for this resource.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/StorageAccount"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "NoEncryption": {
      "description": "Class for NoEncryption scheme",
      "properties": {
        "enabledProtocols": {
          "description": "Representing supported protocols",
          "oneOf": [
            {
              "$ref": "#/definitions/EnabledProtocols"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "OutputFile": {
      "description": "Represents an output file produced.",
      "properties": {
        "labels": {
          "description": "The list of labels that describe how the encoder should multiplex video and audio into an output file. For example, if the encoder is producing two video layers with labels v1 and v2, and one audio layer with label a1, then an array like '[v1, a1]' tells the encoder to produce an output file with the video track represented by v1 and the audio track represented by a1.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "Overlay": {
      "description": "Base type for all overlays - image, audio or video.",
      "oneOf": [
        {
          "description": "Describes the properties of an audio overlay.",
          "properties": {},
          "type": "object"
        },
        {
          "description": "Describes the properties of a video overlay.",
          "properties": {
            "cropRectangle": {
              "description": "An optional rectangular window used to crop the overlay image or video.",
              "oneOf": [
                {
                  "$ref": "#/definitions/Rectangle"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "opacity": {
              "description": "The opacity of the overlay. This is a value in the range [0 - 1.0]. Default is 1.0 which mean the overlay is opaque.",
              "oneOf": [
                {
                  "type": "number"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "position": {
              "description": "The location in the input video where the overlay is applied.",
              "oneOf": [
                {
                  "$ref": "#/definitions/Rectangle"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "type": "object"
        }
      ],
      "properties": {
        "audioGainLevel": {
          "description": "The gain level of audio in the overlay. The value should be in the range [0, 1.0]. The default is 1.0.",
          "oneOf": [
            {
              "type": "number"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "end": {
          "description": "The position in the input video at which the overlay ends. The value should be in ISO 8601 duration format. For example, PT30S to end the overlay at 30 seconds in to the input video. If not specified the overlay will be applied until the end of the input video if inputLoop is true. Else, if inputLoop is false, then overlay will last as long as the duration of the overlay media.",
          "type": "string"
        },
        "fadeInDuration": {
          "description": "The duration over which the overlay fades in onto the input video. The value should be in ISO 8601 duration format. If not specified the default behavior is to have no fade in (same as PT0S).",
          "type": "string"
        },
        "fadeOutDuration": {
          "description": "The duration over which the overlay fades out of the input video. The value should be in ISO 8601 duration format. If not specified the default behavior is to have no fade out (same as PT0S).",
          "type": "string"
        },
        "inputLabel": {
          "description": "The label of the job input which is to be used as an overlay. The Input must specify exactly one file. You can specify an image file in JPG or PNG formats, or an audio file (such as a WAV, MP3, WMA or M4A file), or a video file. See https://aka.ms/mesformats for the complete list of supported audio and video file formats.",
          "type": "string"
        },
        "start": {
          "description": "The start position, with reference to the input video, at which the overlay starts. The value should be in ISO 8601 format. For example, PT05S to start the overlay at 5 seconds in to the input video. If not specified the overlay starts from the beginning of the input video.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PngLayer": {
      "description": "Describes the settings to produce a PNG image from the input video.",
      "properties": {
        "@odata.type": {
          "description": "The discriminator for derived types.",
          "type": "string"
        },
        "height": {
          "description": "The height of the output video for this layer. The value can be absolute (in pixels) or relative (in percentage). For example 50% means the output video has half as many pixels in height as the input.",
          "type": "string"
        },
        "label": {
          "description": "The alphanumeric label for this layer, which can be used in multiplexing different video and audio layers, or in naming the output file.",
          "type": "string"
        },
        "width": {
          "description": "The width of the output video for this layer. The value can be absolute (in pixels) or relative (in percentage). For example 50% means the output video has half as many pixels in width as the input.",
          "type": "string"
        }
      },
      "required": [
        "@odata.type"
      ],
      "type": "object"
    },
    "Preset": {
      "description": "Base type for all Presets, which define the recipe or instructions on how the input media files should be processed.",
      "oneOf": [
        {
          "description": "A video analyzer preset that extracts insights (rich metadata) from both audio and video, and outputs a JSON format file.",
          "properties": {
            "audioInsightsOnly": {
              "description": "Whether to only extract audio insights when processing a video file.",
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "audioLanguage": {
              "description": "The language for the audio payload in the input using the BCP-47 format of 'language tag-region' (e.g: 'en-US'). The list of supported languages are, 'en-US', 'en-GB', 'es-ES', 'es-MX', 'fr-FR', 'it-IT', 'ja-JP', 'pt-BR', 'zh-CN'.",
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "description": "Describes a built-in preset for encoding the input video with the Standard Encoder.",
          "properties": {
            "presetName": {
              "description": "The built-in preset to be used for encoding videos.",
              "oneOf": [
                {
                  "enum": [
                    "AdaptiveStreaming",
                    "AACGoodQualityAudio",
                    "H264MultipleBitrate1080p",
                    "H264MultipleBitrate720p",
                    "H264MultipleBitrateSD"
                  ],
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "presetName"
          ],
          "type": "object"
        },
        {
          "description": "Describes all the settings to be used when encoding the input video with the Standard Encoder.",
          "properties": {
            "codecs": {
              "description": "The list of codecs to be used when encoding the input video.",
              "oneOf": [
                {
                  "items": {
                    "$ref": "#/definitions/Codec"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "filters": {
              "description": "One or more filtering operations that are applied to the input media before encoding.",
              "oneOf": [
                {
                  "$ref": "#/definitions/Filters"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "formats": {
              "description": "The list of outputs to be produced by the encoder.",
              "oneOf": [
                {
                  "items": {
                    "$ref": "#/definitions/Format"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "type": "object"
        }
      ],
      "properties": {},
      "type": "object"
    },
    "Rectangle": {
      "description": "Describes the properties of a rectangular window applied to the input media before processing it.",
      "properties": {
        "height": {
          "description": "The height of the rectangular region in pixels. This can be absolute pixel value (e.g 100), or relative to the size of the video (For example, 50%).",
          "type": "string"
        },
        "left": {
          "description": "The number of pixels from the left-margin. This can be absolute pixel value (e.g 100), or relative to the size of the video (For example, 50%).",
          "type": "string"
        },
        "top": {
          "description": "The number of pixels from the top-margin. This can be absolute pixel value (e.g 100), or relative to the size of the video (For example, 50%).",
          "type": "string"
        },
        "width": {
          "description": "The width of the rectangular region in pixels. This can be absolute pixel value (e.g 100), or relative to the size of the video (For example, 50%).",
          "type": "string"
        }
      },
      "type": "object"
    },
    "StorageAccount": {
      "description": "The storage account details.",
      "properties": {
        "id": {
          "description": "The ID of the storage account resource. Media Services relies on tables and queues as well as blobs, so the primary storage account must be a Standard Storage account (either Microsoft.ClassicStorage or Microsoft.Storage). Blob only storage accounts can be added as secondary storage accounts.",
          "type": "string"
        },
        "type": {
          "description": "The type of the storage account.",
          "oneOf": [
            {
              "enum": [
                "Primary",
                "Secondary"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "type"
      ],
      "type": "object"
    },
    "StreamingEndpointAccessControl": {
      "description": "StreamingEndpoint access control definition.",
      "properties": {
        "akamai": {
          "description": "The access control of Akamai",
          "oneOf": [
            {
              "$ref": "#/definitions/AkamaiAccessControl"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "ip": {
          "description": "The IP access control of the StreamingEndpoint.",
          "oneOf": [
            {
              "$ref": "#/definitions/IPAccessControl"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "StreamingEndpointProperties": {
      "description": "The StreamingEndpoint properties.",
      "properties": {
        "accessControl": {
          "description": "The access control definition of the StreamingEndpoint.",
          "oneOf": [
            {
              "$ref": "#/definitions/StreamingEndpointAccessControl"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "availabilitySetName": {
          "description": "AvailabilitySet name",
          "type": "string"
        },
        "cdnEnabled": {
          "description": "The CDN enabled flag.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "cdnProfile": {
          "description": "The CDN profile name.",
          "type": "string"
        },
        "cdnProvider": {
          "description": "The CDN provider name.",
          "type": "string"
        },
        "crossSiteAccessPolicies": {
          "description": "The StreamingEndpoint access policies.",
          "oneOf": [
            {
              "$ref": "#/definitions/CrossSiteAccessPolicies"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "customHostNames": {
          "description": "The custom host names of the StreamingEndpoint",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "description": {
          "description": "The StreamingEndpoint description.",
          "type": "string"
        },
        "maxCacheAge": {
          "description": "Max cache age",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "scaleUnits": {
          "description": "The number of scale units.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "StreamingLocatorContentKey": {
      "description": "Class for content key in Streaming Locator",
      "properties": {
        "id": {
          "description": "ID of Content Key",
          "oneOf": [
            {
              "pattern": "^[0-9a-fA-F]{8}(-[0-9a-fA-F]{4}){3}-[0-9a-fA-F]{12}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "label": {
          "description": "Label of Content Key",
          "type": "string"
        },
        "tracks": {
          "description": "Tracks which use this Content Key",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/TrackSelection"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "value": {
          "description": "Value of Content Key",
          "type": "string"
        }
      },
      "required": [
        "id"
      ],
      "type": "object"
    },
    "StreamingLocatorProperties": {
      "description": "Class to specify properties of Streaming Locator",
      "properties": {
        "alternativeMediaId": {
          "description": "An Alternative Media Identifier associated with the StreamingLocator.  This identifier can be used to distinguish different StreamingLocators for the same Asset for authorization purposes in the CustomLicenseAcquisitionUrlTemplate or the CustomKeyAcquisitionUrlTemplate of the StreamingPolicy specified in the StreamingPolicyName field.",
          "type": "string"
        },
        "assetName": {
          "description": "Asset Name",
          "type": "string"
        },
        "contentKeys": {
          "description": "ContentKeys used by this Streaming Locator",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/StreamingLocatorContentKey"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "defaultContentKeyPolicyName": {
          "description": "Default ContentKeyPolicy used by this Streaming Locator",
          "type": "string"
        },
        "endTime": {
          "description": "EndTime of Streaming Locator",
          "format": "date-time",
          "type": "string"
        },
        "startTime": {
          "description": "StartTime of Streaming Locator",
          "format": "date-time",
          "type": "string"
        },
        "streamingLocatorId": {
          "description": "StreamingLocatorId of Streaming Locator",
          "oneOf": [
            {
              "pattern": "^[0-9a-fA-F]{8}(-[0-9a-fA-F]{4}){3}-[0-9a-fA-F]{12}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "streamingPolicyName": {
          "description": "Streaming policy name used by this streaming locator. Either specify the name of streaming policy you created or use one of the predefined streaming polices. The predefined streaming policies available are: 'Predefined_DownloadOnly', 'Predefined_ClearStreamingOnly', 'Predefined_DownloadAndClearStreaming', 'Predefined_ClearKey', 'Predefined_SecureStreaming' and 'Predefined_SecureStreamingWithFairPlay'",
          "type": "string"
        }
      },
      "required": [
        "assetName",
        "streamingPolicyName"
      ],
      "type": "object"
    },
    "StreamingPolicyContentKey": {
      "description": "Class to specify properties of content key",
      "properties": {
        "label": {
          "description": "Label can be used to specify Content Key when creating a Streaming Locator",
          "type": "string"
        },
        "policyName": {
          "description": "Policy used by Content Key",
          "type": "string"
        },
        "tracks": {
          "description": "Tracks which use this content key",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/TrackSelection"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "StreamingPolicyContentKeys": {
      "description": "Class to specify properties of all content keys in Streaming Policy",
      "properties": {
        "defaultKey": {
          "description": "Default content key for an encryption scheme",
          "oneOf": [
            {
              "$ref": "#/definitions/DefaultKey"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "keyToTrackMappings": {
          "description": "Representing tracks needs separate content key",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/StreamingPolicyContentKey"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "StreamingPolicyFairPlayConfiguration": {
      "description": "Class to specify configurations of FairPlay in Streaming Policy",
      "properties": {
        "allowPersistentLicense": {
          "description": "All license to be persistent or not",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "customLicenseAcquisitionUrlTemplate": {
          "description": "The template for a customer service to deliver keys to end users.  Not needed when using Azure Media Services for issuing keys.",
          "type": "string"
        }
      },
      "required": [
        "allowPersistentLicense"
      ],
      "type": "object"
    },
    "StreamingPolicyPlayReadyConfiguration": {
      "description": "Class to specify configurations of PlayReady in Streaming Policy",
      "properties": {
        "customLicenseAcquisitionUrlTemplate": {
          "description": "The template for a customer service to deliver keys to end users.  Not needed when using Azure Media Services for issuing keys.",
          "type": "string"
        },
        "playReadyCustomAttributes": {
          "description": "Custom attributes for PlayReady",
          "type": "string"
        }
      },
      "type": "object"
    },
    "StreamingPolicyProperties": {
      "description": "Class to specify properties of Streaming Policy",
      "properties": {
        "commonEncryptionCbcs": {
          "description": "Configuration of CommonEncryptionCbcs",
          "oneOf": [
            {
              "$ref": "#/definitions/CommonEncryptionCbcs"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "commonEncryptionCenc": {
          "description": "Configuration of CommonEncryptionCenc",
          "oneOf": [
            {
              "$ref": "#/definitions/CommonEncryptionCenc"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "defaultContentKeyPolicyName": {
          "description": "Default ContentKey used by current Streaming Policy",
          "type": "string"
        },
        "envelopeEncryption": {
          "description": "Configuration of EnvelopeEncryption",
          "oneOf": [
            {
              "$ref": "#/definitions/EnvelopeEncryption"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "noEncryption": {
          "description": "Configurations of NoEncryption",
          "oneOf": [
            {
              "$ref": "#/definitions/NoEncryption"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "StreamingPolicyWidevineConfiguration": {
      "description": "Class to specify configurations of Widevine in Streaming Policy",
      "properties": {
        "customLicenseAcquisitionUrlTemplate": {
          "description": "The template for a customer service to deliver keys to end users.  Not needed when using Azure Media Services for issuing keys.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "TrackPropertyCondition": {
      "description": "Class to specify one track property condition",
      "properties": {
        "operation": {
          "description": "Track property condition operation",
          "oneOf": [
            {
              "enum": [
                "Unknown",
                "Equal"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "property": {
          "description": "Track property type",
          "oneOf": [
            {
              "enum": [
                "Unknown",
                "FourCC"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "value": {
          "description": "Track property value",
          "type": "string"
        }
      },
      "required": [
        "property",
        "operation"
      ],
      "type": "object"
    },
    "TrackSelection": {
      "description": "Class to select a track",
      "properties": {
        "trackSelections": {
          "description": "TrackSelections is a track property condition list which can specify track(s)",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/TrackPropertyCondition"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "TransformOutput": {
      "description": "Describes the properties of a TransformOutput, which are the rules to be applied while generating the desired output.",
      "properties": {
        "onError": {
          "description": "A Transform can define more than one outputs. This property defines what the service should do when one output fails - either continue to produce other outputs, or, stop the other outputs. The default is stop.",
          "oneOf": [
            {
              "enum": [
                "StopProcessingJob",
                "ContinueJob"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "preset": {
          "description": "Preset that describes the operations that will be used to modify, transcode, or extract insights from the source file to generate the output.",
          "oneOf": [
            {
              "$ref": "#/definitions/Preset"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "relativePriority": {
          "description": "Sets the relative priority of the TransformOutputs within a Transform. This sets the priority that the service uses for processing TransformOutputs. The default priority is Normal.",
          "oneOf": [
            {
              "enum": [
                "Low",
                "Normal",
                "High"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "preset"
      ],
      "type": "object"
    },
    "TransformProperties": {
      "description": "A Transform.",
      "properties": {
        "description": {
          "description": "An optional verbose description of the Transform.",
          "type": "string"
        },
        "outputs": {
          "description": "An array of one or more TransformOutputs that the Transform should generate.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/TransformOutput"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "outputs"
      ],
      "type": "object"
    },
    "mediaServices_assets_childResource": {
      "description": "Microsoft.Media/mediaServices/assets",
      "properties": {
        "apiVersion": {
          "enum": [
            "2018-06-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The Asset name.",
          "type": "string"
        },
        "properties": {
          "description": "The resource properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/AssetProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "assets"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "mediaServices_contentKeyPolicies_childResource": {
      "description": "Microsoft.Media/mediaServices/contentKeyPolicies",
      "properties": {
        "apiVersion": {
          "enum": [
            "2018-06-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The Content Key Policy name.",
          "type": "string"
        },
        "properties": {
          "description": "The properties of the Content Key Policy.",
          "oneOf": [
            {
              "$ref": "#/definitions/ContentKeyPolicyProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "contentKeyPolicies"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "mediaServices_streamingLocators_childResource": {
      "description": "Microsoft.Media/mediaServices/streamingLocators",
      "properties": {
        "apiVersion": {
          "enum": [
            "2018-06-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The Streaming Locator name.",
          "type": "string"
        },
        "properties": {
          "description": "Class to specify properties of Streaming Locator",
          "oneOf": [
            {
              "$ref": "#/definitions/StreamingLocatorProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "streamingLocators"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "mediaServices_streamingPolicies_childResource": {
      "description": "Microsoft.Media/mediaServices/streamingPolicies",
      "properties": {
        "apiVersion": {
          "enum": [
            "2018-06-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The Streaming Policy name.",
          "type": "string"
        },
        "properties": {
          "description": "Class to specify properties of Streaming Policy",
          "oneOf": [
            {
              "$ref": "#/definitions/StreamingPolicyProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "streamingPolicies"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "mediaServices_transforms_childResource": {
      "description": "Microsoft.Media/mediaServices/transforms",
      "properties": {
        "apiVersion": {
          "enum": [
            "2018-06-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The Transform name.",
          "type": "string"
        },
        "properties": {
          "description": "The resource properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/TransformProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "transforms"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "mediaServices_transforms_jobs_childResource": {
      "description": "Microsoft.Media/mediaServices/transforms/jobs",
      "properties": {
        "apiVersion": {
          "enum": [
            "2018-06-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The Job name.",
          "type": "string"
        },
        "properties": {
          "description": "The resource properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/JobProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "jobs"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "mediaservices_liveEvents_childResource": {
      "description": "Microsoft.Media/mediaservices/liveEvents",
      "properties": {
        "apiVersion": {
          "enum": [
            "2018-06-01-preview"
          ],
          "type": "string"
        },
        "location": {
          "description": "The Azure Region of the resource.",
          "type": "string"
        },
        "name": {
          "description": "The name of the Live Event.",
          "oneOf": [
            {
              "maxLength": 32,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9]+(-*[a-zA-Z0-9])*$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The Live Event properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/LiveEventProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Resource tags.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "liveEvents"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "mediaservices_liveEvents_liveOutputs_childResource": {
      "description": "Microsoft.Media/mediaservices/liveEvents/liveOutputs",
      "properties": {
        "apiVersion": {
          "enum": [
            "2018-06-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the Live Output.",
          "oneOf": [
            {
              "maxLength": 256,
              "minLength": 1,
              "pattern": "^([a-zA-Z0-9])+(-*[a-zA-Z0-9])*$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The Live Output properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/LiveOutputProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "liveOutputs"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "mediaservices_streamingEndpoints_childResource": {
      "description": "Microsoft.Media/mediaservices/streamingEndpoints",
      "properties": {
        "apiVersion": {
          "enum": [
            "2018-06-01-preview"
          ],
          "type": "string"
        },
        "location": {
          "description": "The Azure Region of the resource.",
          "type": "string"
        },
        "name": {
          "description": "The name of the StreamingEndpoint.",
          "oneOf": [
            {
              "maxLength": 24,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9]+(-*[a-zA-Z0-9])*$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The StreamingEndpoint properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/StreamingEndpointProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Resource tags.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "streamingEndpoints"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    }
  }
}