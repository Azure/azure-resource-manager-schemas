{
  "id": "https://schema.management.azure.com/schemas/2018-07-01/Microsoft.Media.json#",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "title": "Microsoft.Media",
  "description": "Microsoft Media Resource Types",
  "resourceDefinitions": {
    "mediaServices": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Media/mediaServices"
          ]
        },
        "apiVersion": {
          "type": "string",
          "enum": [
            "2018-07-01"
          ]
        },
        "tags": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Resource tags."
        },
        "location": {
          "type": "string",
          "description": "The Azure Region of the resource."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/MediaServiceProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The resource properties."
        },
        "resources": {
          "type": "array",
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/mediaServices_streamingEndpoints_childResource"
              },
              {
                "$ref": "#/definitions/mediaServices_liveEvents_childResource"
              }
            ]
          }
        }
      },
      "required": [
        "name",
        "type",
        "apiVersion",
        "properties"
      ],
      "description": "Microsoft.Media/mediaServices"
    },
    "mediaServices_accountFilters": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Media/mediaServices/accountFilters"
          ]
        },
        "apiVersion": {
          "type": "string",
          "enum": [
            "2018-07-01"
          ]
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/MediaFilterProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "name",
        "type",
        "apiVersion",
        "properties"
      ],
      "description": "Microsoft.Media/mediaServices/accountFilters"
    },
    "mediaServices_assets": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Media/mediaServices/assets"
          ]
        },
        "apiVersion": {
          "type": "string",
          "enum": [
            "2018-07-01"
          ]
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/AssetProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The resource properties."
        },
        "resources": {
          "type": "array",
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/mediaServices_assets_assetFilters_childResource"
              }
            ]
          }
        }
      },
      "required": [
        "name",
        "type",
        "apiVersion",
        "properties"
      ],
      "description": "Microsoft.Media/mediaServices/assets"
    },
    "mediaServices_assets_assetFilters": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Media/mediaServices/assets/assetFilters"
          ]
        },
        "apiVersion": {
          "type": "string",
          "enum": [
            "2018-07-01"
          ]
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/MediaFilterProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "name",
        "type",
        "apiVersion",
        "properties"
      ],
      "description": "Microsoft.Media/mediaServices/assets/assetFilters"
    },
    "mediaServices_contentKeyPolicies": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Media/mediaServices/contentKeyPolicies"
          ]
        },
        "apiVersion": {
          "type": "string",
          "enum": [
            "2018-07-01"
          ]
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/ContentKeyPolicyProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "name",
        "type",
        "apiVersion",
        "properties"
      ],
      "description": "Microsoft.Media/mediaServices/contentKeyPolicies"
    },
    "mediaServices_liveEvents": {
      "type": "object",
      "properties": {
        "name": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^[a-zA-Z0-9]+(-*[a-zA-Z0-9])*$"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The name of the Live Event."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Media/mediaServices/liveEvents"
          ]
        },
        "apiVersion": {
          "type": "string",
          "enum": [
            "2018-07-01"
          ]
        },
        "tags": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Resource tags."
        },
        "location": {
          "type": "string",
          "description": "The Azure Region of the resource."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/LiveEventProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The Live Event properties."
        },
        "resources": {
          "type": "array",
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/mediaServices_liveEvents_liveOutputs_childResource"
              }
            ]
          }
        }
      },
      "required": [
        "name",
        "type",
        "apiVersion",
        "properties"
      ],
      "description": "Microsoft.Media/mediaServices/liveEvents"
    },
    "mediaServices_liveEvents_liveOutputs": {
      "type": "object",
      "properties": {
        "name": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^([a-zA-Z0-9])+(-*[a-zA-Z0-9])*$"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The name of the Live Output."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Media/mediaServices/liveEvents/liveOutputs"
          ]
        },
        "apiVersion": {
          "type": "string",
          "enum": [
            "2018-07-01"
          ]
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/LiveOutputProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The Live Output properties."
        }
      },
      "required": [
        "name",
        "type",
        "apiVersion",
        "properties"
      ],
      "description": "Microsoft.Media/mediaServices/liveEvents/liveOutputs"
    },
    "mediaServices_streamingEndpoints": {
      "type": "object",
      "properties": {
        "name": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^[a-zA-Z0-9]+(-*[a-zA-Z0-9])*$"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The name of the StreamingEndpoint."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Media/mediaServices/streamingEndpoints"
          ]
        },
        "apiVersion": {
          "type": "string",
          "enum": [
            "2018-07-01"
          ]
        },
        "tags": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Resource tags."
        },
        "location": {
          "type": "string",
          "description": "The Azure Region of the resource."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/StreamingEndpointProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The StreamingEndpoint properties."
        }
      },
      "required": [
        "name",
        "type",
        "apiVersion",
        "properties"
      ],
      "description": "Microsoft.Media/mediaServices/streamingEndpoints"
    },
    "mediaServices_streamingLocators": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Media/mediaServices/streamingLocators"
          ]
        },
        "apiVersion": {
          "type": "string",
          "enum": [
            "2018-07-01"
          ]
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/StreamingLocatorProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "name",
        "type",
        "apiVersion",
        "properties"
      ],
      "description": "Microsoft.Media/mediaServices/streamingLocators"
    },
    "mediaServices_streamingPolicies": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Media/mediaServices/streamingPolicies"
          ]
        },
        "apiVersion": {
          "type": "string",
          "enum": [
            "2018-07-01"
          ]
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/StreamingPolicyProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "name",
        "type",
        "apiVersion",
        "properties"
      ],
      "description": "Microsoft.Media/mediaServices/streamingPolicies"
    },
    "mediaServices_transforms": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Media/mediaServices/transforms"
          ]
        },
        "apiVersion": {
          "type": "string",
          "enum": [
            "2018-07-01"
          ]
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/TransformProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The resource properties."
        },
        "resources": {
          "type": "array",
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/mediaServices_transforms_jobs_childResource"
              }
            ]
          }
        }
      },
      "required": [
        "name",
        "type",
        "apiVersion",
        "properties"
      ],
      "description": "Microsoft.Media/mediaServices/transforms"
    },
    "mediaServices_transforms_jobs": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Media/mediaServices/transforms/jobs"
          ]
        },
        "apiVersion": {
          "type": "string",
          "enum": [
            "2018-07-01"
          ]
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/JobProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The resource properties."
        }
      },
      "required": [
        "name",
        "type",
        "apiVersion",
        "properties"
      ],
      "description": "Microsoft.Media/mediaServices/transforms/jobs"
    }
  },
  "definitions": {
    "AacAudio": {
      "type": "object",
      "oneOf": [
        {
          "properties": {
            "@odata.type": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "#Microsoft.Media.AacAudio"
                  ]
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          }
        }
      ],
      "properties": {
        "profile": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "AacLc",
                "HeAacV1",
                "HeAacV2"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The encoding profile to be used when encoding audio with AAC."
        },
        "@odata.type": {
          "type": "string"
        }
      },
      "required": [
        "@odata.type"
      ],
      "description": "Describes Advanced Audio Codec (AAC) audio encoding settings."
    },
    "AkamaiAccessControl": {
      "type": "object",
      "properties": {
        "akamaiSignatureHeaderAuthenticationKeyList": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AkamaiSignatureHeaderAuthenticationKey"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "authentication key list"
        }
      },
      "description": "Akamai access control"
    },
    "AkamaiSignatureHeaderAuthenticationKey": {
      "type": "object",
      "properties": {
        "identifier": {
          "type": "string",
          "description": "identifier of the key"
        },
        "base64Key": {
          "type": "string",
          "description": "authentication key"
        },
        "expiration": {
          "type": "string",
          "format": "date-time",
          "description": "The expiration time of the authentication key."
        }
      },
      "description": "Akamai Signature Header authentication key."
    },
    "AssetProperties": {
      "type": "object",
      "properties": {
        "alternateId": {
          "type": "string",
          "description": "The alternate ID of the Asset."
        },
        "description": {
          "type": "string",
          "description": "The Asset description."
        },
        "container": {
          "type": "string",
          "description": "The name of the asset blob container."
        },
        "storageAccountName": {
          "type": "string",
          "description": "The name of the storage account."
        }
      },
      "description": "The Asset properties."
    },
    "Audio": {
      "type": "object",
      "oneOf": [
        {
          "properties": {
            "@odata.type": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "#Microsoft.Media.Audio"
                  ]
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          }
        },
        {
          "allOf": [
            {
              "$ref": "#/definitions/AacAudio"
            }
          ],
          "properties": {
            "@odata.type": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "#Microsoft.Media.AacAudio"
                  ]
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          }
        }
      ],
      "properties": {
        "channels": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The number of channels in the audio."
        },
        "samplingRate": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The sampling rate to use for encoding in hertz."
        },
        "bitrate": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The bitrate, in bits per second, of the output encoded audio."
        },
        "@odata.type": {
          "type": "string"
        }
      },
      "required": [
        "@odata.type"
      ],
      "description": "Defines the common properties for all audio codecs."
    },
    "AudioAnalyzerPreset": {
      "type": "object",
      "oneOf": [
        {
          "properties": {
            "@odata.type": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "#Microsoft.Media.AudioAnalyzerPreset"
                  ]
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          }
        },
        {
          "allOf": [
            {
              "$ref": "#/definitions/VideoAnalyzerPreset"
            }
          ],
          "properties": {
            "@odata.type": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "#Microsoft.Media.VideoAnalyzerPreset"
                  ]
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          }
        }
      ],
      "properties": {
        "audioLanguage": {
          "type": "string",
          "description": "The language for the audio payload in the input using the BCP-47 format of 'language tag-region' (e.g: 'en-US'). The list of supported languages are, 'en-US', 'en-GB', 'es-ES', 'es-MX', 'fr-FR', 'it-IT', 'ja-JP', 'pt-BR', 'zh-CN', 'de-DE', 'ar-EG', 'ru-RU', 'hi-IN'. If not specified, automatic language detection would be employed. This feature currently supports English, Chinese, French, German, Italian, Japanese, Spanish, Russian, and Portuguese. The automatic detection works best with audio recordings with clearly discernable speech. If automatic detection fails to find the language, transcription would fallback to English."
        },
        "@odata.type": {
          "type": "string"
        }
      },
      "required": [
        "@odata.type"
      ],
      "description": "The Audio Analyzer preset applies a pre-defined set of AI-based analysis operations, including speech transcription. Currently, the preset supports processing of content with a single audio track."
    },
    "AudioOverlay": {
      "type": "object",
      "oneOf": [
        {
          "properties": {
            "@odata.type": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "#Microsoft.Media.AudioOverlay"
                  ]
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          }
        }
      ],
      "properties": {
        "@odata.type": {
          "type": "string"
        }
      },
      "required": [
        "@odata.type"
      ],
      "description": "Describes the properties of an audio overlay."
    },
    "BuiltInStandardEncoderPreset": {
      "type": "object",
      "oneOf": [
        {
          "properties": {
            "@odata.type": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "#Microsoft.Media.BuiltInStandardEncoderPreset"
                  ]
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          }
        }
      ],
      "properties": {
        "presetName": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "H264SingleBitrateSD",
                "H264SingleBitrate720p",
                "H264SingleBitrate1080p",
                "AdaptiveStreaming",
                "AACGoodQualityAudio",
                "H264MultipleBitrate1080p",
                "H264MultipleBitrate720p",
                "H264MultipleBitrateSD"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The built-in preset to be used for encoding videos."
        },
        "@odata.type": {
          "type": "string"
        }
      },
      "required": [
        "presetName",
        "@odata.type"
      ],
      "description": "Describes a built-in preset for encoding the input video with the Standard Encoder."
    },
    "CbcsDrmConfiguration": {
      "type": "object",
      "properties": {
        "fairPlay": {
          "oneOf": [
            {
              "$ref": "#/definitions/StreamingPolicyFairPlayConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "FairPlay configurations"
        },
        "playReady": {
          "oneOf": [
            {
              "$ref": "#/definitions/StreamingPolicyPlayReadyConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "PlayReady configurations"
        },
        "widevine": {
          "oneOf": [
            {
              "$ref": "#/definitions/StreamingPolicyWidevineConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Widevine configurations"
        }
      },
      "description": "Class to specify DRM configurations of CommonEncryptionCbcs scheme in Streaming Policy"
    },
    "CencDrmConfiguration": {
      "type": "object",
      "properties": {
        "playReady": {
          "oneOf": [
            {
              "$ref": "#/definitions/StreamingPolicyPlayReadyConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "PlayReady configurations"
        },
        "widevine": {
          "oneOf": [
            {
              "$ref": "#/definitions/StreamingPolicyWidevineConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Widevine configurations"
        }
      },
      "description": "Class to specify DRM configurations of CommonEncryptionCenc scheme in Streaming Policy"
    },
    "Codec": {
      "type": "object",
      "oneOf": [
        {
          "properties": {
            "@odata.type": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "Codec"
                  ]
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          }
        },
        {
          "allOf": [
            {
              "$ref": "#/definitions/Audio"
            }
          ],
          "properties": {
            "@odata.type": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "#Microsoft.Media.Audio"
                  ]
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          }
        },
        {
          "allOf": [
            {
              "$ref": "#/definitions/CopyVideo"
            }
          ],
          "properties": {
            "@odata.type": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "#Microsoft.Media.CopyVideo"
                  ]
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          }
        },
        {
          "allOf": [
            {
              "$ref": "#/definitions/Video"
            }
          ],
          "properties": {
            "@odata.type": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "#Microsoft.Media.Video"
                  ]
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          }
        },
        {
          "allOf": [
            {
              "$ref": "#/definitions/CopyAudio"
            }
          ],
          "properties": {
            "@odata.type": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "#Microsoft.Media.CopyAudio"
                  ]
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          }
        }
      ],
      "properties": {
        "label": {
          "type": "string",
          "description": "An optional label for the codec. The label can be used to control muxing behavior."
        },
        "@odata.type": {
          "type": "string"
        }
      },
      "required": [
        "@odata.type"
      ],
      "description": "Describes the basic properties of all codecs."
    },
    "CommonEncryptionCbcs": {
      "type": "object",
      "properties": {
        "enabledProtocols": {
          "oneOf": [
            {
              "$ref": "#/definitions/EnabledProtocols"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Representing supported protocols"
        },
        "clearTracks": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TrackSelection"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Representing which tracks should not be encrypted"
        },
        "contentKeys": {
          "oneOf": [
            {
              "$ref": "#/definitions/StreamingPolicyContentKeys"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Representing default content key for each encryption scheme and separate content keys for specific tracks"
        },
        "drm": {
          "oneOf": [
            {
              "$ref": "#/definitions/CbcsDrmConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Configuration of DRMs for current encryption scheme"
        }
      },
      "description": "Class for CommonEncryptionCbcs encryption scheme"
    },
    "CommonEncryptionCenc": {
      "type": "object",
      "properties": {
        "enabledProtocols": {
          "oneOf": [
            {
              "$ref": "#/definitions/EnabledProtocols"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Representing supported protocols"
        },
        "clearTracks": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TrackSelection"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Representing which tracks should not be encrypted"
        },
        "contentKeys": {
          "oneOf": [
            {
              "$ref": "#/definitions/StreamingPolicyContentKeys"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Representing default content key for each encryption scheme and separate content keys for specific tracks"
        },
        "drm": {
          "oneOf": [
            {
              "$ref": "#/definitions/CencDrmConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Configuration of DRMs for CommonEncryptionCenc encryption scheme"
        }
      },
      "description": "Class for envelope encryption scheme"
    },
    "ContentKeyPolicyClearKeyConfiguration": {
      "type": "object",
      "oneOf": [
        {
          "properties": {
            "@odata.type": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "#Microsoft.Media.ContentKeyPolicyClearKeyConfiguration"
                  ]
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          }
        }
      ],
      "properties": {
        "@odata.type": {
          "type": "string"
        }
      },
      "required": [
        "@odata.type"
      ],
      "description": "Represents a configuration for non-DRM keys."
    },
    "ContentKeyPolicyConfiguration": {
      "type": "object",
      "oneOf": [
        {
          "properties": {
            "@odata.type": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "ContentKeyPolicyConfiguration"
                  ]
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          }
        },
        {
          "allOf": [
            {
              "$ref": "#/definitions/ContentKeyPolicyClearKeyConfiguration"
            }
          ],
          "properties": {
            "@odata.type": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "#Microsoft.Media.ContentKeyPolicyClearKeyConfiguration"
                  ]
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          }
        },
        {
          "allOf": [
            {
              "$ref": "#/definitions/ContentKeyPolicyUnknownConfiguration"
            }
          ],
          "properties": {
            "@odata.type": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "#Microsoft.Media.ContentKeyPolicyUnknownConfiguration"
                  ]
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          }
        },
        {
          "allOf": [
            {
              "$ref": "#/definitions/ContentKeyPolicyWidevineConfiguration"
            }
          ],
          "properties": {
            "@odata.type": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "#Microsoft.Media.ContentKeyPolicyWidevineConfiguration"
                  ]
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          }
        },
        {
          "allOf": [
            {
              "$ref": "#/definitions/ContentKeyPolicyPlayReadyConfiguration"
            }
          ],
          "properties": {
            "@odata.type": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "#Microsoft.Media.ContentKeyPolicyPlayReadyConfiguration"
                  ]
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          }
        },
        {
          "allOf": [
            {
              "$ref": "#/definitions/ContentKeyPolicyFairPlayConfiguration"
            }
          ],
          "properties": {
            "@odata.type": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "#Microsoft.Media.ContentKeyPolicyFairPlayConfiguration"
                  ]
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          }
        }
      ],
      "properties": {
        "@odata.type": {
          "type": "string"
        }
      },
      "required": [
        "@odata.type"
      ],
      "description": "Base class for Content Key Policy configuration. A derived class must be used to create a configuration."
    },
    "ContentKeyPolicyFairPlayConfiguration": {
      "type": "object",
      "oneOf": [
        {
          "properties": {
            "@odata.type": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "#Microsoft.Media.ContentKeyPolicyFairPlayConfiguration"
                  ]
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          }
        }
      ],
      "properties": {
        "ask": {
          "type": "string",
          "description": "The key that must be used as FairPlay Application Secret key."
        },
        "fairPlayPfxPassword": {
          "type": "string",
          "description": "The password encrypting FairPlay certificate in PKCS 12 (pfx) format."
        },
        "fairPlayPfx": {
          "type": "string",
          "description": "The Base64 representation of FairPlay certificate in PKCS 12 (pfx) format (including private key)."
        },
        "rentalAndLeaseKeyType": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Unknown",
                "Undefined",
                "PersistentUnlimited",
                "PersistentLimited"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The rental and lease key type."
        },
        "rentalDuration": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The rental duration. Must be greater than or equal to 0."
        },
        "@odata.type": {
          "type": "string"
        }
      },
      "required": [
        "ask",
        "fairPlayPfxPassword",
        "fairPlayPfx",
        "rentalAndLeaseKeyType",
        "rentalDuration",
        "@odata.type"
      ],
      "description": "Specifies a configuration for FairPlay licenses."
    },
    "ContentKeyPolicyOpenRestriction": {
      "type": "object",
      "oneOf": [
        {
          "properties": {
            "@odata.type": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "#Microsoft.Media.ContentKeyPolicyOpenRestriction"
                  ]
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          }
        }
      ],
      "properties": {
        "@odata.type": {
          "type": "string"
        }
      },
      "required": [
        "@odata.type"
      ],
      "description": "Represents an open restriction. License or key will be delivered on every request."
    },
    "ContentKeyPolicyOption": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The Policy Option description."
        },
        "configuration": {
          "oneOf": [
            {
              "$ref": "#/definitions/ContentKeyPolicyConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The key delivery configuration."
        },
        "restriction": {
          "oneOf": [
            {
              "$ref": "#/definitions/ContentKeyPolicyRestriction"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The requirements that must be met to deliver keys with this configuration"
        }
      },
      "required": [
        "configuration",
        "restriction"
      ],
      "description": "Represents a policy option."
    },
    "ContentKeyPolicyPlayReadyConfiguration": {
      "type": "object",
      "oneOf": [
        {
          "properties": {
            "@odata.type": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "#Microsoft.Media.ContentKeyPolicyPlayReadyConfiguration"
                  ]
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          }
        }
      ],
      "properties": {
        "licenses": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ContentKeyPolicyPlayReadyLicense"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The PlayReady licenses."
        },
        "responseCustomData": {
          "type": "string",
          "description": "The custom response data."
        },
        "@odata.type": {
          "type": "string"
        }
      },
      "required": [
        "licenses",
        "@odata.type"
      ],
      "description": "Specifies a configuration for PlayReady licenses."
    },
    "ContentKeyPolicyPlayReadyContentEncryptionKeyFromHeader": {
      "type": "object",
      "oneOf": [
        {
          "properties": {
            "@odata.type": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "#Microsoft.Media.ContentKeyPolicyPlayReadyContentEncryptionKeyFromHeader"
                  ]
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          }
        }
      ],
      "properties": {
        "@odata.type": {
          "type": "string"
        }
      },
      "required": [
        "@odata.type"
      ],
      "description": "Specifies that the content key ID is in the PlayReady header."
    },
    "ContentKeyPolicyPlayReadyContentEncryptionKeyFromKeyIdentifier": {
      "type": "object",
      "oneOf": [
        {
          "properties": {
            "@odata.type": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "#Microsoft.Media.ContentKeyPolicyPlayReadyContentEncryptionKeyFromKeyIdentifier"
                  ]
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          }
        }
      ],
      "properties": {
        "keyId": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^[0-9a-fA-F]{8}(-[0-9a-fA-F]{4}){3}-[0-9a-fA-F]{12}$"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The content key ID."
        },
        "@odata.type": {
          "type": "string"
        }
      },
      "required": [
        "keyId",
        "@odata.type"
      ],
      "description": "Specifies that the content key ID is specified in the PlayReady configuration."
    },
    "ContentKeyPolicyPlayReadyContentKeyLocation": {
      "type": "object",
      "oneOf": [
        {
          "properties": {
            "@odata.type": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "ContentKeyPolicyPlayReadyContentKeyLocation"
                  ]
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          }
        },
        {
          "allOf": [
            {
              "$ref": "#/definitions/ContentKeyPolicyPlayReadyContentEncryptionKeyFromHeader"
            }
          ],
          "properties": {
            "@odata.type": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "#Microsoft.Media.ContentKeyPolicyPlayReadyContentEncryptionKeyFromHeader"
                  ]
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          }
        },
        {
          "allOf": [
            {
              "$ref": "#/definitions/ContentKeyPolicyPlayReadyContentEncryptionKeyFromKeyIdentifier"
            }
          ],
          "properties": {
            "@odata.type": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "#Microsoft.Media.ContentKeyPolicyPlayReadyContentEncryptionKeyFromKeyIdentifier"
                  ]
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          }
        }
      ],
      "properties": {
        "@odata.type": {
          "type": "string"
        }
      },
      "required": [
        "@odata.type"
      ],
      "description": "Base class for content key ID location. A derived class must be used to represent the location."
    },
    "ContentKeyPolicyPlayReadyExplicitAnalogTelevisionRestriction": {
      "type": "object",
      "properties": {
        "bestEffort": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Indicates whether this restriction is enforced on a Best Effort basis."
        },
        "configurationData": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Configures the restriction control bits. Must be between 0 and 3 inclusive."
        }
      },
      "required": [
        "bestEffort",
        "configurationData"
      ],
      "description": "Configures the Explicit Analog Television Output Restriction control bits. For further details see the PlayReady Compliance Rules."
    },
    "ContentKeyPolicyPlayReadyLicense": {
      "type": "object",
      "properties": {
        "allowTestDevices": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "A flag indicating whether test devices can use the license."
        },
        "beginDate": {
          "type": "string",
          "format": "date-time",
          "description": "The begin date of license"
        },
        "expirationDate": {
          "type": "string",
          "format": "date-time",
          "description": "The expiration date of license."
        },
        "relativeBeginDate": {
          "type": "string",
          "description": "The relative begin date of license."
        },
        "relativeExpirationDate": {
          "type": "string",
          "description": "The relative expiration date of license."
        },
        "gracePeriod": {
          "type": "string",
          "description": "The grace period of license."
        },
        "playRight": {
          "oneOf": [
            {
              "$ref": "#/definitions/ContentKeyPolicyPlayReadyPlayRight"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The license PlayRight"
        },
        "licenseType": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Unknown",
                "NonPersistent",
                "Persistent"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The license type."
        },
        "contentKeyLocation": {
          "oneOf": [
            {
              "$ref": "#/definitions/ContentKeyPolicyPlayReadyContentKeyLocation"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The content key location."
        },
        "contentType": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Unknown",
                "Unspecified",
                "UltraVioletDownload",
                "UltraVioletStreaming"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The PlayReady content type."
        }
      },
      "required": [
        "allowTestDevices",
        "licenseType",
        "contentKeyLocation",
        "contentType"
      ],
      "description": "The PlayReady license"
    },
    "ContentKeyPolicyPlayReadyPlayRight": {
      "type": "object",
      "properties": {
        "firstPlayExpiration": {
          "type": "string",
          "description": "The amount of time that the license is valid after the license is first used to play content."
        },
        "scmsRestriction": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Configures the Serial Copy Management System (SCMS) in the license. Must be between 0 and 3 inclusive."
        },
        "agcAndColorStripeRestriction": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Configures Automatic Gain Control (AGC) and Color Stripe in the license. Must be between 0 and 3 inclusive."
        },
        "explicitAnalogTelevisionOutputRestriction": {
          "oneOf": [
            {
              "$ref": "#/definitions/ContentKeyPolicyPlayReadyExplicitAnalogTelevisionRestriction"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Configures the Explicit Analog Television Output Restriction in the license. Configuration data must be between 0 and 3 inclusive."
        },
        "digitalVideoOnlyContentRestriction": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Enables the Image Constraint For Analog Component Video Restriction in the license."
        },
        "imageConstraintForAnalogComponentVideoRestriction": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Enables the Image Constraint For Analog Component Video Restriction in the license."
        },
        "imageConstraintForAnalogComputerMonitorRestriction": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Enables the Image Constraint For Analog Component Video Restriction in the license."
        },
        "allowPassingVideoContentToUnknownOutput": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Unknown",
                "NotAllowed",
                "Allowed",
                "AllowedWithVideoConstriction"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Configures Unknown output handling settings of the license."
        },
        "uncompressedDigitalVideoOpl": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Specifies the output protection level for uncompressed digital video."
        },
        "compressedDigitalVideoOpl": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Specifies the output protection level for compressed digital video."
        },
        "analogVideoOpl": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Specifies the output protection level for compressed digital audio."
        },
        "compressedDigitalAudioOpl": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Specifies the output protection level for compressed digital audio."
        },
        "uncompressedDigitalAudioOpl": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Specifies the output protection level for uncompressed digital audio."
        }
      },
      "required": [
        "digitalVideoOnlyContentRestriction",
        "imageConstraintForAnalogComponentVideoRestriction",
        "imageConstraintForAnalogComputerMonitorRestriction",
        "allowPassingVideoContentToUnknownOutput"
      ],
      "description": "Configures the Play Right in the PlayReady license."
    },
    "ContentKeyPolicyProperties": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "A description for the Policy."
        },
        "options": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ContentKeyPolicyOption"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The Key Policy options."
        }
      },
      "required": [
        "options"
      ],
      "description": "The properties of the Content Key Policy."
    },
    "ContentKeyPolicyRestriction": {
      "type": "object",
      "oneOf": [
        {
          "properties": {
            "@odata.type": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "ContentKeyPolicyRestriction"
                  ]
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          }
        },
        {
          "allOf": [
            {
              "$ref": "#/definitions/ContentKeyPolicyOpenRestriction"
            }
          ],
          "properties": {
            "@odata.type": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "#Microsoft.Media.ContentKeyPolicyOpenRestriction"
                  ]
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          }
        },
        {
          "allOf": [
            {
              "$ref": "#/definitions/ContentKeyPolicyUnknownRestriction"
            }
          ],
          "properties": {
            "@odata.type": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "#Microsoft.Media.ContentKeyPolicyUnknownRestriction"
                  ]
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          }
        },
        {
          "allOf": [
            {
              "$ref": "#/definitions/ContentKeyPolicyTokenRestriction"
            }
          ],
          "properties": {
            "@odata.type": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "#Microsoft.Media.ContentKeyPolicyTokenRestriction"
                  ]
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          }
        }
      ],
      "properties": {
        "@odata.type": {
          "type": "string"
        }
      },
      "required": [
        "@odata.type"
      ],
      "description": "Base class for Content Key Policy restrictions. A derived class must be used to create a restriction."
    },
    "ContentKeyPolicyRestrictionTokenKey": {
      "type": "object",
      "oneOf": [
        {
          "properties": {
            "@odata.type": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "ContentKeyPolicyRestrictionTokenKey"
                  ]
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          }
        },
        {
          "allOf": [
            {
              "$ref": "#/definitions/ContentKeyPolicySymmetricTokenKey"
            }
          ],
          "properties": {
            "@odata.type": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "#Microsoft.Media.ContentKeyPolicySymmetricTokenKey"
                  ]
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          }
        },
        {
          "allOf": [
            {
              "$ref": "#/definitions/ContentKeyPolicyRsaTokenKey"
            }
          ],
          "properties": {
            "@odata.type": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "#Microsoft.Media.ContentKeyPolicyRsaTokenKey"
                  ]
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          }
        },
        {
          "allOf": [
            {
              "$ref": "#/definitions/ContentKeyPolicyX509CertificateTokenKey"
            }
          ],
          "properties": {
            "@odata.type": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "#Microsoft.Media.ContentKeyPolicyX509CertificateTokenKey"
                  ]
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          }
        }
      ],
      "properties": {
        "@odata.type": {
          "type": "string"
        }
      },
      "required": [
        "@odata.type"
      ],
      "description": "Base class for Content Key Policy key for token validation. A derived class must be used to create a token key."
    },
    "ContentKeyPolicyRsaTokenKey": {
      "type": "object",
      "oneOf": [
        {
          "properties": {
            "@odata.type": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "#Microsoft.Media.ContentKeyPolicyRsaTokenKey"
                  ]
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          }
        }
      ],
      "properties": {
        "exponent": {
          "type": "string",
          "description": "The RSA Parameter exponent"
        },
        "modulus": {
          "type": "string",
          "description": "The RSA Parameter modulus"
        }
      },
      "required": [
        "exponent",
        "modulus",
        "@odata.type"
      ],
      "description": "Specifies a RSA key for token validation"
    },
    "ContentKeyPolicySymmetricTokenKey": {
      "type": "object",
      "oneOf": [
        {
          "properties": {
            "@odata.type": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "#Microsoft.Media.ContentKeyPolicySymmetricTokenKey"
                  ]
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          }
        }
      ],
      "properties": {
        "keyValue": {
          "type": "string",
          "description": "The key value of the key"
        }
      },
      "required": [
        "keyValue",
        "@odata.type"
      ],
      "description": "Specifies a symmetric key for token validation."
    },
    "ContentKeyPolicyTokenClaim": {
      "type": "object",
      "properties": {
        "claimType": {
          "type": "string",
          "description": "Token claim type."
        },
        "claimValue": {
          "type": "string",
          "description": "Token claim value."
        }
      },
      "description": "Represents a token claim."
    },
    "ContentKeyPolicyTokenRestriction": {
      "type": "object",
      "oneOf": [
        {
          "properties": {
            "@odata.type": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "#Microsoft.Media.ContentKeyPolicyTokenRestriction"
                  ]
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          }
        }
      ],
      "properties": {
        "issuer": {
          "type": "string",
          "description": "The token issuer."
        },
        "audience": {
          "type": "string",
          "description": "The audience for the token."
        },
        "primaryVerificationKey": {
          "oneOf": [
            {
              "$ref": "#/definitions/ContentKeyPolicyRestrictionTokenKey"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The primary verification key."
        },
        "alternateVerificationKeys": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ContentKeyPolicyRestrictionTokenKey"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "A list of alternative verification keys."
        },
        "requiredClaims": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ContentKeyPolicyTokenClaim"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "A list of required token claims."
        },
        "restrictionTokenType": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Unknown",
                "Swt",
                "Jwt"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The type of token."
        },
        "openIdConnectDiscoveryDocument": {
          "type": "string",
          "description": "The OpenID connect discovery document."
        },
        "@odata.type": {
          "type": "string"
        }
      },
      "required": [
        "issuer",
        "audience",
        "primaryVerificationKey",
        "restrictionTokenType",
        "@odata.type"
      ],
      "description": "Represents a token restriction. Provided token must match these requirements for successful license or key delivery."
    },
    "ContentKeyPolicyUnknownConfiguration": {
      "type": "object",
      "oneOf": [
        {
          "properties": {
            "@odata.type": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "#Microsoft.Media.ContentKeyPolicyUnknownConfiguration"
                  ]
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          }
        }
      ],
      "properties": {
        "@odata.type": {
          "type": "string"
        }
      },
      "required": [
        "@odata.type"
      ],
      "description": "Represents a ContentKeyPolicyConfiguration that is unavailable in the current API version."
    },
    "ContentKeyPolicyUnknownRestriction": {
      "type": "object",
      "oneOf": [
        {
          "properties": {
            "@odata.type": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "#Microsoft.Media.ContentKeyPolicyUnknownRestriction"
                  ]
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          }
        }
      ],
      "properties": {
        "@odata.type": {
          "type": "string"
        }
      },
      "required": [
        "@odata.type"
      ],
      "description": "Represents a ContentKeyPolicyRestriction that is unavailable in the current API version."
    },
    "ContentKeyPolicyWidevineConfiguration": {
      "type": "object",
      "oneOf": [
        {
          "properties": {
            "@odata.type": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "#Microsoft.Media.ContentKeyPolicyWidevineConfiguration"
                  ]
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          }
        }
      ],
      "properties": {
        "widevineTemplate": {
          "type": "string",
          "description": "The Widevine template."
        },
        "@odata.type": {
          "type": "string"
        }
      },
      "required": [
        "widevineTemplate",
        "@odata.type"
      ],
      "description": "Specifies a configuration for Widevine licenses."
    },
    "ContentKeyPolicyX509CertificateTokenKey": {
      "type": "object",
      "oneOf": [
        {
          "properties": {
            "@odata.type": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "#Microsoft.Media.ContentKeyPolicyX509CertificateTokenKey"
                  ]
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          }
        }
      ],
      "properties": {
        "rawBody": {
          "type": "string",
          "description": "The raw data field of a certificate in PKCS 12 format (X509Certificate2 in .NET)"
        }
      },
      "required": [
        "rawBody",
        "@odata.type"
      ],
      "description": "Specifies a certificate for token validation."
    },
    "CopyAudio": {
      "type": "object",
      "oneOf": [
        {
          "properties": {
            "@odata.type": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "#Microsoft.Media.CopyAudio"
                  ]
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          }
        }
      ],
      "properties": {
        "@odata.type": {
          "type": "string"
        }
      },
      "required": [
        "@odata.type"
      ],
      "description": "A codec flag, which tells the encoder to copy the input audio bitstream."
    },
    "CopyVideo": {
      "type": "object",
      "oneOf": [
        {
          "properties": {
            "@odata.type": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "#Microsoft.Media.CopyVideo"
                  ]
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          }
        }
      ],
      "properties": {
        "@odata.type": {
          "type": "string"
        }
      },
      "required": [
        "@odata.type"
      ],
      "description": "A codec flag, which tells the encoder to copy the input video bitstream without re-encoding."
    },
    "CrossSiteAccessPolicies": {
      "type": "object",
      "properties": {
        "clientAccessPolicy": {
          "type": "string",
          "description": "The content of clientaccesspolicy.xml used by Silverlight."
        },
        "crossDomainPolicy": {
          "type": "string",
          "description": "The content of crossdomain.xml used by Silverlight."
        }
      },
      "description": "The client access policy."
    },
    "DefaultKey": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string",
          "description": "Label can be used to specify Content Key when creating a Streaming Locator"
        },
        "policyName": {
          "type": "string",
          "description": "Policy used by Default Key"
        }
      },
      "description": "Class to specify properties of default content key for each encryption scheme"
    },
    "Deinterlace": {
      "type": "object",
      "properties": {
        "parity": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Auto",
                "TopFieldFirst",
                "BottomFieldFirst"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The field parity for de-interlacing, defaults to Auto."
        },
        "mode": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Off",
                "AutoPixelAdaptive"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The deinterlacing mode. Defaults to AutoPixelAdaptive."
        }
      },
      "description": "Describes the de-interlacing settings."
    },
    "EnabledProtocols": {
      "type": "object",
      "properties": {
        "download": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Enable Download protocol or not"
        },
        "dash": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Enable DASH protocol or not"
        },
        "hls": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Enable HLS protocol or not"
        },
        "smoothStreaming": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Enable SmoothStreaming protocol or not"
        }
      },
      "required": [
        "download",
        "dash",
        "hls",
        "smoothStreaming"
      ],
      "description": "Class to specify which protocols are enabled"
    },
    "EnvelopeEncryption": {
      "type": "object",
      "properties": {
        "enabledProtocols": {
          "oneOf": [
            {
              "$ref": "#/definitions/EnabledProtocols"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Representing supported protocols"
        },
        "clearTracks": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TrackSelection"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Representing which tracks should not be encrypted"
        },
        "contentKeys": {
          "oneOf": [
            {
              "$ref": "#/definitions/StreamingPolicyContentKeys"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Representing default content key for each encryption scheme and separate content keys for specific tracks"
        },
        "customKeyAcquisitionUrlTemplate": {
          "type": "string",
          "description": "KeyAcquistionUrlTemplate is used to point to user specified service to delivery content keys"
        }
      },
      "description": "Class for EnvelopeEncryption encryption scheme"
    },
    "Filters": {
      "type": "object",
      "properties": {
        "deinterlace": {
          "oneOf": [
            {
              "$ref": "#/definitions/Deinterlace"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The de-interlacing settings."
        },
        "rotation": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Auto",
                "None",
                "Rotate0",
                "Rotate90",
                "Rotate180",
                "Rotate270"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The rotation, if any, to be applied to the input video, before it is encoded. Default is Auto."
        },
        "crop": {
          "oneOf": [
            {
              "$ref": "#/definitions/Rectangle"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The parameters for the rectangular window with which to crop the input video."
        },
        "overlays": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Overlay"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The properties of overlays to be applied to the input video. These could be audio, image or video overlays."
        }
      },
      "description": "Describes all the filtering operations, such as de-interlacing, rotation etc. that are to be applied to the input media before encoding."
    },
    "FilterTrackPropertyCondition": {
      "type": "object",
      "properties": {
        "property": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Unknown",
                "Type",
                "Name",
                "Language",
                "FourCC",
                "Bitrate"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The track property type."
        },
        "value": {
          "type": "string",
          "description": "The track proprty value."
        },
        "operation": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Equal",
                "NotEqual"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The track property condition operation."
        }
      },
      "required": [
        "property",
        "value",
        "operation"
      ],
      "description": "The class to specify one track property condition."
    },
    "FilterTrackSelection": {
      "type": "object",
      "properties": {
        "trackSelections": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FilterTrackPropertyCondition"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The track selections."
        }
      },
      "required": [
        "trackSelections"
      ],
      "description": "Representing a list of FilterTrackPropertyConditions to select a track.  The filters are combined using a logical AND operation."
    },
    "FirstQuality": {
      "type": "object",
      "properties": {
        "bitrate": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The first quality bitrate."
        }
      },
      "required": [
        "bitrate"
      ],
      "description": "Filter First Quality"
    },
    "Format": {
      "type": "object",
      "oneOf": [
        {
          "properties": {
            "@odata.type": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "Format"
                  ]
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          }
        },
        {
          "allOf": [
            {
              "$ref": "#/definitions/ImageFormat"
            }
          ],
          "properties": {
            "@odata.type": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "#Microsoft.Media.ImageFormat"
                  ]
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          }
        },
        {
          "allOf": [
            {
              "$ref": "#/definitions/MultiBitrateFormat"
            }
          ],
          "properties": {
            "@odata.type": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "#Microsoft.Media.MultiBitrateFormat"
                  ]
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          }
        }
      ],
      "properties": {
        "filenamePattern": {
          "type": "string",
          "description": "The pattern of the file names for the generated output files. The following macros are supported in the file name: {Basename} - The base name of the input video {Extension} - The appropriate extension for this format. {Label} - The label assigned to the codec/layer. {Index} - A unique index for thumbnails. Only applicable to thumbnails. {Bitrate} - The audio/video bitrate. Not applicable to thumbnails. {Codec} - The type of the audio/video codec. Any unsubstituted macros will be collapsed and removed from the filename."
        },
        "@odata.type": {
          "type": "string"
        }
      },
      "required": [
        "@odata.type"
      ],
      "description": "Base class for output."
    },
    "H264Layer": {
      "type": "object",
      "oneOf": [
        {
          "properties": {
            "@odata.type": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "#Microsoft.Media.H264Layer"
                  ]
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          }
        }
      ],
      "properties": {
        "width": {
          "type": "string",
          "description": "The width of the output video for this layer. The value can be absolute (in pixels) or relative (in percentage). For example 50% means the output video has half as many pixels in width as the input."
        },
        "height": {
          "type": "string",
          "description": "The height of the output video for this layer. The value can be absolute (in pixels) or relative (in percentage). For example 50% means the output video has half as many pixels in height as the input."
        },
        "label": {
          "type": "string",
          "description": "The alphanumeric label for this layer, which can be used in multiplexing different video and audio layers, or in naming the output file."
        },
        "bitrate": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The average bitrate in bits per second at which to encode the input video when generating this layer. This is a required field."
        },
        "maxBitrate": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The maximum bitrate (in bits per second), at which the VBV buffer should be assumed to refill. If not specified, defaults to the same value as bitrate."
        },
        "bFrames": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The number of B-frames to be used when encoding this layer.  If not specified, the encoder chooses an appropriate number based on the video profile and level."
        },
        "frameRate": {
          "type": "string",
          "description": "The frame rate (in frames per second) at which to encode this layer. The value can be in the form of M/N where M and N are integers (For example, 30000/1001), or in the form of a number (For example, 30, or 29.97). The encoder enforces constraints on allowed frame rates based on the profile and level. If it is not specified, the encoder will use the same frame rate as the input video."
        },
        "slices": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The number of slices to be used when encoding this layer. If not specified, default is zero, which means that encoder will use a single slice for each frame."
        },
        "adaptiveBFrame": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Whether or not adaptive B-frames are to be used when encoding this layer. If not specified, the encoder will turn it on whenever the video profile permits its use."
        },
        "profile": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Auto",
                "Baseline",
                "Main",
                "High",
                "High422",
                "High444"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Which profile of the H.264 standard should be used when encoding this layer. Default is Auto."
        },
        "level": {
          "type": "string",
          "description": "Which level of the H.264 standard should be used when encoding this layer. The value can be Auto, or a number that matches the H.264 profile. If not specified, the default is Auto, which lets the encoder choose the Level that is appropriate for this layer."
        },
        "bufferWindow": {
          "type": "string",
          "description": "The VBV buffer window length. The value should be in ISO 8601 format. The value should be in the range [0.1-100] seconds. The default is 5 seconds (for example, PT5S)."
        },
        "referenceFrames": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The number of reference frames to be used when encoding this layer. If not specified, the encoder determines an appropriate number based on the encoder complexity setting."
        },
        "entropyMode": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Cabac",
                "Cavlc"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The entropy mode to be used for this layer. If not specified, the encoder chooses the mode that is appropriate for the profile and level."
        },
        "@odata.type": {
          "type": "string"
        }
      },
      "required": [
        "@odata.type"
      ],
      "description": "Describes the settings to be used when encoding the input video into a desired output bitrate layer with the H.264 video codec."
    },
    "H264Video": {
      "type": "object",
      "oneOf": [
        {
          "properties": {
            "@odata.type": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "#Microsoft.Media.H264Video"
                  ]
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          }
        }
      ],
      "properties": {
        "sceneChangeDetection": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Whether or not the encoder should insert key frames at scene changes. If not specified, the default is false. This flag should be set to true only when the encoder is being configured to produce a single output video."
        },
        "complexity": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Speed",
                "Balanced",
                "Quality"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Tells the encoder how to choose its encoding settings. The default value is Balanced."
        },
        "layers": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/H264Layer"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The collection of output H.264 layers to be produced by the encoder."
        },
        "@odata.type": {
          "type": "string"
        }
      },
      "required": [
        "@odata.type"
      ],
      "description": "Describes all the properties for encoding a video with the H.264 codec."
    },
    "Hls": {
      "type": "object",
      "properties": {
        "fragmentsPerTsSegment": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The amount of fragments per HTTP Live Streaming (HLS) segment."
        }
      },
      "description": "The HLS configuration."
    },
    "Image": {
      "type": "object",
      "oneOf": [
        {
          "properties": {
            "@odata.type": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "#Microsoft.Media.Image"
                  ]
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          }
        },
        {
          "allOf": [
            {
              "$ref": "#/definitions/JpgImage"
            }
          ],
          "properties": {
            "@odata.type": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "#Microsoft.Media.JpgImage"
                  ]
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          }
        },
        {
          "allOf": [
            {
              "$ref": "#/definitions/PngImage"
            }
          ],
          "properties": {
            "@odata.type": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "#Microsoft.Media.PngImage"
                  ]
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          }
        }
      ],
      "properties": {
        "start": {
          "type": "string",
          "description": "The position in the input video from where to start generating thumbnails. The value can be in absolute timestamp (ISO 8601, e.g: PT05S), or a frame count (For example, 10 for the 10th frame), or a relative value (For example, 1%). Also supports a macro {Best}, which tells the encoder to select the best thumbnail from the first few seconds of the video."
        },
        "step": {
          "type": "string",
          "description": "The intervals at which thumbnails are generated. The value can be in absolute timestamp (ISO 8601, e.g: PT05S for one image every 5 seconds), or a frame count (For example, 30 for every 30 frames), or a relative value (For example, 1%)."
        },
        "range": {
          "type": "string",
          "description": "The position in the input video at which to stop generating thumbnails. The value can be in absolute timestamp (ISO 8601, e.g: PT5M30S to stop at 5 minutes and 30 seconds), or a frame count (For example, 300 to stop at the 300th frame), or a relative value (For example, 100%)."
        },
        "@odata.type": {
          "type": "string"
        }
      },
      "required": [
        "@odata.type"
      ],
      "description": "Describes the basic properties for generating thumbnails from the input video"
    },
    "ImageFormat": {
      "type": "object",
      "oneOf": [
        {
          "properties": {
            "@odata.type": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "#Microsoft.Media.ImageFormat"
                  ]
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          }
        },
        {
          "allOf": [
            {
              "$ref": "#/definitions/JpgFormat"
            }
          ],
          "properties": {
            "@odata.type": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "#Microsoft.Media.JpgFormat"
                  ]
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          }
        },
        {
          "allOf": [
            {
              "$ref": "#/definitions/PngFormat"
            }
          ],
          "properties": {
            "@odata.type": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "#Microsoft.Media.PngFormat"
                  ]
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          }
        }
      ],
      "properties": {
        "@odata.type": {
          "type": "string"
        }
      },
      "required": [
        "@odata.type"
      ],
      "description": "Describes the properties for an output image file."
    },
    "IPAccessControl": {
      "type": "object",
      "properties": {
        "allow": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/IPRange"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The IP allow list."
        }
      },
      "description": "The IP access control."
    },
    "IPRange": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The friendly name for the IP address range."
        },
        "address": {
          "type": "string",
          "description": "The IP address."
        },
        "subnetPrefixLength": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The subnet mask prefix length (see CIDR notation)."
        }
      },
      "description": "The IP address range in the CIDR scheme."
    },
    "JobInput": {
      "type": "object",
      "oneOf": [
        {
          "properties": {
            "@odata.type": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "JobInput"
                  ]
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          }
        },
        {
          "allOf": [
            {
              "$ref": "#/definitions/JobInputClip"
            }
          ],
          "properties": {
            "@odata.type": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "#Microsoft.Media.JobInputClip"
                  ]
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          }
        },
        {
          "allOf": [
            {
              "$ref": "#/definitions/JobInputs"
            }
          ],
          "properties": {
            "@odata.type": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "#Microsoft.Media.JobInputs"
                  ]
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          }
        },
        {
          "allOf": [
            {
              "$ref": "#/definitions/JobInputHttp"
            }
          ],
          "properties": {
            "@odata.type": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "#Microsoft.Media.JobInputHttp"
                  ]
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          }
        },
        {
          "allOf": [
            {
              "$ref": "#/definitions/JobInputAsset"
            }
          ],
          "properties": {
            "@odata.type": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "#Microsoft.Media.JobInputAsset"
                  ]
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          }
        }
      ],
      "properties": {
        "@odata.type": {
          "type": "string"
        }
      },
      "required": [
        "@odata.type"
      ],
      "description": "Base class for inputs to a Job."
    },
    "JobInputAsset": {
      "type": "object",
      "oneOf": [
        {
          "properties": {
            "@odata.type": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "#Microsoft.Media.JobInputAsset"
                  ]
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          }
        }
      ],
      "properties": {
        "assetName": {
          "type": "string",
          "description": "The name of the input Asset."
        },
        "@odata.type": {
          "type": "string"
        }
      },
      "required": [
        "assetName",
        "@odata.type"
      ],
      "description": "Represents an Asset for input into a Job."
    },
    "JobInputClip": {
      "type": "object",
      "oneOf": [
        {
          "properties": {
            "@odata.type": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "#Microsoft.Media.JobInputClip"
                  ]
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          }
        },
        {
          "allOf": [
            {
              "$ref": "#/definitions/JobInputAsset"
            }
          ],
          "properties": {
            "@odata.type": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "#Microsoft.Media.JobInputAsset"
                  ]
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          }
        },
        {
          "allOf": [
            {
              "$ref": "#/definitions/JobInputHttp"
            }
          ],
          "properties": {
            "@odata.type": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "#Microsoft.Media.JobInputHttp"
                  ]
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          }
        }
      ],
      "properties": {
        "files": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "List of files. Required for JobInputHttp."
        },
        "label": {
          "type": "string",
          "description": "A label that is assigned to a JobInputClip, that is used to satisfy a reference used in the Transform. For example, a Transform can be authored so as to take an image file with the label 'xyz' and apply it as an overlay onto the input video before it is encoded. When submitting a Job, exactly one of the JobInputs should be the image file, and it should have the label 'xyz'."
        },
        "@odata.type": {
          "type": "string"
        }
      },
      "required": [
        "@odata.type"
      ],
      "description": "Represents input files for a Job."
    },
    "JobInputHttp": {
      "type": "object",
      "oneOf": [
        {
          "properties": {
            "@odata.type": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "#Microsoft.Media.JobInputHttp"
                  ]
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          }
        }
      ],
      "properties": {
        "baseUri": {
          "type": "string",
          "description": "Base URI for HTTPS job input. It will be concatenated with provided file names.   If no base uri is given, then the provided file list is assumed to be fully qualified uris."
        },
        "@odata.type": {
          "type": "string"
        }
      },
      "required": [
        "@odata.type"
      ],
      "description": "Represents HTTPS job input."
    },
    "JobInputs": {
      "type": "object",
      "oneOf": [
        {
          "properties": {
            "@odata.type": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "#Microsoft.Media.JobInputs"
                  ]
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          }
        }
      ],
      "properties": {
        "inputs": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/JobInput"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "List of inputs to a Job."
        },
        "@odata.type": {
          "type": "string"
        }
      },
      "required": [
        "@odata.type"
      ],
      "description": "Describes a list of of inputs to a Job."
    },
    "JobOutput": {
      "type": "object",
      "oneOf": [
        {
          "properties": {
            "@odata.type": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "JobOutput"
                  ]
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          }
        },
        {
          "allOf": [
            {
              "$ref": "#/definitions/JobOutputAsset"
            }
          ],
          "properties": {
            "@odata.type": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "#Microsoft.Media.JobOutputAsset"
                  ]
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          }
        }
      ],
      "properties": {
        "label": {
          "type": "string",
          "description": "A label that is assigned to a JobOutput in order to help uniquely identify it. This is useful when your Transform has more than one TransformOutput, whereby your Job has more than one JobOutput. In such cases, when you submit the Job, you will add two or more JobOutputs, in the same order as TransformOutputs in the Transform. Subsequently, when you retrieve the Job, either through events or on a GET request, you can use the label to easily identify the JobOutput. If a label is not provided, a default value of '{presetName}_{outputIndex}' will be used, where the preset name is the name of the preset in the corresponding TransformOutput and the output index is the relative index of the this JobOutput within the Job. Note that this index is the same as the relative index of the corresponding TransformOutput within its Transform."
        },
        "@odata.type": {
          "type": "string"
        }
      },
      "required": [
        "@odata.type"
      ],
      "description": "Describes all the properties of a JobOutput."
    },
    "JobOutputAsset": {
      "type": "object",
      "oneOf": [
        {
          "properties": {
            "@odata.type": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "#Microsoft.Media.JobOutputAsset"
                  ]
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          }
        }
      ],
      "properties": {
        "assetName": {
          "type": "string",
          "description": "The name of the output Asset."
        },
        "@odata.type": {
          "type": "string"
        }
      },
      "required": [
        "assetName",
        "@odata.type"
      ],
      "description": "Represents an Asset used as a JobOutput."
    },
    "JobProperties": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "Optional customer supplied description of the Job."
        },
        "input": {
          "oneOf": [
            {
              "$ref": "#/definitions/JobInput"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The inputs for the Job."
        },
        "outputs": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/JobOutput"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The outputs for the Job."
        },
        "priority": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Low",
                "Normal",
                "High"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Priority with which the job should be processed. Higher priority jobs are processed before lower priority jobs. If not set, the default is normal."
        },
        "correlationData": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Customer provided correlation data that will be returned in Job and JobOutput state events."
        }
      },
      "required": [
        "input",
        "outputs"
      ],
      "description": "Properties of the Job."
    },
    "JpgFormat": {
      "type": "object",
      "oneOf": [
        {
          "properties": {
            "@odata.type": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "#Microsoft.Media.JpgFormat"
                  ]
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          }
        }
      ],
      "properties": {
        "@odata.type": {
          "type": "string"
        }
      },
      "required": [
        "@odata.type"
      ],
      "description": "Describes the settings for producing JPEG thumbnails."
    },
    "JpgImage": {
      "type": "object",
      "oneOf": [
        {
          "properties": {
            "@odata.type": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "#Microsoft.Media.JpgImage"
                  ]
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          }
        }
      ],
      "properties": {
        "layers": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/JpgLayer"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "A collection of output JPEG image layers to be produced by the encoder."
        },
        "@odata.type": {
          "type": "string"
        }
      },
      "required": [
        "@odata.type"
      ],
      "description": "Describes the properties for producing a series of JPEG images from the input video."
    },
    "JpgLayer": {
      "type": "object",
      "oneOf": [
        {
          "properties": {
            "@odata.type": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "#Microsoft.Media.JpgLayer"
                  ]
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          }
        }
      ],
      "properties": {
        "width": {
          "type": "string",
          "description": "The width of the output video for this layer. The value can be absolute (in pixels) or relative (in percentage). For example 50% means the output video has half as many pixels in width as the input."
        },
        "height": {
          "type": "string",
          "description": "The height of the output video for this layer. The value can be absolute (in pixels) or relative (in percentage). For example 50% means the output video has half as many pixels in height as the input."
        },
        "label": {
          "type": "string",
          "description": "The alphanumeric label for this layer, which can be used in multiplexing different video and audio layers, or in naming the output file."
        },
        "quality": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The compression quality of the JPEG output. Range is from 0-100 and the default is 70."
        },
        "@odata.type": {
          "type": "string"
        }
      },
      "required": [
        "@odata.type"
      ],
      "description": "Describes the settings to produce a JPEG image from the input video."
    },
    "LiveEventEncoding": {
      "type": "object",
      "properties": {
        "encodingType": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "None",
                "Basic"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The encoding type for Live Event.  This value is specified at creation time and cannot be updated."
        },
        "presetName": {
          "type": "string",
          "description": "The encoding preset name.  This value is specified at creation time and cannot be updated."
        }
      },
      "description": "The Live Event encoding."
    },
    "LiveEventEndpoint": {
      "type": "object",
      "properties": {
        "protocol": {
          "type": "string",
          "description": "The endpoint protocol."
        },
        "url": {
          "type": "string",
          "description": "The endpoint URL."
        }
      },
      "description": "The Live Event endpoint."
    },
    "LiveEventInput": {
      "type": "object",
      "properties": {
        "streamingProtocol": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "FragmentedMP4",
                "RTMP"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The streaming protocol for the Live Event.  This is specified at creation time and cannot be updated."
        },
        "accessControl": {
          "oneOf": [
            {
              "$ref": "#/definitions/LiveEventInputAccessControl"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The access control for LiveEvent Input."
        },
        "keyFrameIntervalDuration": {
          "type": "string",
          "description": "ISO 8601 timespan duration of the key frame interval duration."
        },
        "accessToken": {
          "type": "string",
          "description": "A unique identifier for a stream.  This can be specified at creation time but cannot be updated.  If omitted, the service will generate a unique value."
        },
        "endpoints": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/LiveEventEndpoint"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The input endpoints for the Live Event."
        }
      },
      "required": [
        "streamingProtocol"
      ],
      "description": "The Live Event input."
    },
    "LiveEventInputAccessControl": {
      "type": "object",
      "properties": {
        "ip": {
          "oneOf": [
            {
              "$ref": "#/definitions/IPAccessControl"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The IP access control properties."
        }
      },
      "description": "The IP access control for Live Event Input."
    },
    "LiveEventPreview": {
      "type": "object",
      "properties": {
        "endpoints": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/LiveEventEndpoint"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The endpoints for preview."
        },
        "accessControl": {
          "oneOf": [
            {
              "$ref": "#/definitions/LiveEventPreviewAccessControl"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The access control for LiveEvent preview."
        },
        "previewLocator": {
          "type": "string",
          "description": "The identifier of the preview locator in Guid format.  Specifying this at creation time allows the caller to know the preview locator url before the event is created.  If omitted, the service will generate a random identifier.  This value cannot be updated once the live event is created."
        },
        "streamingPolicyName": {
          "type": "string",
          "description": "The name of streaming policy used for the LiveEvent preview.  This value is specified at creation time and cannot be updated."
        },
        "alternativeMediaId": {
          "type": "string",
          "description": "An Alternative Media Identifier associated with the StreamingLocator created for the preview.  This value is specified at creation time and cannot be updated.  The identifier can be used in the CustomLicenseAcquisitionUrlTemplate or the CustomKeyAcquisitionUrlTemplate of the StreamingPolicy specified in the StreamingPolicyName field."
        }
      },
      "description": "The Live Event preview."
    },
    "LiveEventPreviewAccessControl": {
      "type": "object",
      "properties": {
        "ip": {
          "oneOf": [
            {
              "$ref": "#/definitions/IPAccessControl"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The IP access control properties."
        }
      },
      "description": "The IP access control for Live Event preview."
    },
    "LiveEventProperties": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "The Live Event description."
        },
        "input": {
          "oneOf": [
            {
              "$ref": "#/definitions/LiveEventInput"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The Live Event input."
        },
        "preview": {
          "oneOf": [
            {
              "$ref": "#/definitions/LiveEventPreview"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The Live Event preview."
        },
        "encoding": {
          "oneOf": [
            {
              "$ref": "#/definitions/LiveEventEncoding"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The Live Event encoding."
        },
        "crossSiteAccessPolicies": {
          "oneOf": [
            {
              "$ref": "#/definitions/CrossSiteAccessPolicies"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The Live Event access policies."
        },
        "vanityUrl": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Specifies whether to use a vanity url with the Live Event.  This value is specified at creation time and cannot be updated."
        },
        "streamOptions": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "Default",
                  "LowLatency"
                ]
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The options to use for the LiveEvent.  This value is specified at creation time and cannot be updated."
        }
      },
      "required": [
        "input"
      ],
      "description": "The Live Event properties."
    },
    "LiveOutputProperties": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "The description of the Live Output."
        },
        "assetName": {
          "type": "string",
          "description": "The asset name."
        },
        "archiveWindowLength": {
          "type": "string",
          "description": "ISO 8601 timespan duration of the archive window length. This is duration that customer want to retain the recorded content."
        },
        "manifestName": {
          "type": "string",
          "description": "The manifest file name.  If not provided, the service will generate one automatically."
        },
        "hls": {
          "oneOf": [
            {
              "$ref": "#/definitions/Hls"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The HLS configuration."
        },
        "outputSnapTime": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The output snapshot time."
        }
      },
      "required": [
        "assetName",
        "archiveWindowLength"
      ],
      "description": "The JSON object that contains the properties required to create a Live Output."
    },
    "MediaFilterProperties": {
      "type": "object",
      "properties": {
        "presentationTimeRange": {
          "oneOf": [
            {
              "$ref": "#/definitions/PresentationTimeRange"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The presentation time range."
        },
        "firstQuality": {
          "oneOf": [
            {
              "$ref": "#/definitions/FirstQuality"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The first quality."
        },
        "tracks": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FilterTrackSelection"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The tracks selection conditions."
        }
      },
      "description": "The Media Filter properties."
    },
    "MediaServiceProperties": {
      "type": "object",
      "properties": {
        "storageAccounts": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StorageAccount"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The storage accounts for this resource."
        }
      },
      "description": "Properties of the Media Services account."
    },
    "mediaServices_assets_assetFilters_childResource": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "assetFilters"
          ]
        },
        "apiVersion": {
          "type": "string",
          "enum": [
            "2018-07-01"
          ]
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/MediaFilterProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "name",
        "type",
        "apiVersion",
        "properties"
      ],
      "description": "Microsoft.Media/mediaServices/assets/assetFilters"
    },
    "mediaServices_liveEvents_childResource": {
      "type": "object",
      "properties": {
        "name": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^[a-zA-Z0-9]+(-*[a-zA-Z0-9])*$"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The name of the Live Event."
        },
        "type": {
          "type": "string",
          "enum": [
            "liveEvents"
          ]
        },
        "apiVersion": {
          "type": "string",
          "enum": [
            "2018-07-01"
          ]
        },
        "tags": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Resource tags."
        },
        "location": {
          "type": "string",
          "description": "The Azure Region of the resource."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/LiveEventProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The Live Event properties."
        },
        "resources": {
          "type": "array",
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/mediaServices_liveEvents_liveOutputs_childResource"
              }
            ]
          }
        }
      },
      "required": [
        "name",
        "type",
        "apiVersion",
        "properties"
      ],
      "description": "Microsoft.Media/mediaServices/liveEvents"
    },
    "mediaServices_liveEvents_liveOutputs_childResource": {
      "type": "object",
      "properties": {
        "name": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^([a-zA-Z0-9])+(-*[a-zA-Z0-9])*$"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The name of the Live Output."
        },
        "type": {
          "type": "string",
          "enum": [
            "liveOutputs"
          ]
        },
        "apiVersion": {
          "type": "string",
          "enum": [
            "2018-07-01"
          ]
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/LiveOutputProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The Live Output properties."
        }
      },
      "required": [
        "name",
        "type",
        "apiVersion",
        "properties"
      ],
      "description": "Microsoft.Media/mediaServices/liveEvents/liveOutputs"
    },
    "mediaServices_streamingEndpoints_childResource": {
      "type": "object",
      "properties": {
        "name": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^[a-zA-Z0-9]+(-*[a-zA-Z0-9])*$"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The name of the StreamingEndpoint."
        },
        "type": {
          "type": "string",
          "enum": [
            "streamingEndpoints"
          ]
        },
        "apiVersion": {
          "type": "string",
          "enum": [
            "2018-07-01"
          ]
        },
        "tags": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Resource tags."
        },
        "location": {
          "type": "string",
          "description": "The Azure Region of the resource."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/StreamingEndpointProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The StreamingEndpoint properties."
        }
      },
      "required": [
        "name",
        "type",
        "apiVersion",
        "properties"
      ],
      "description": "Microsoft.Media/mediaServices/streamingEndpoints"
    },
    "mediaServices_transforms_jobs_childResource": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "jobs"
          ]
        },
        "apiVersion": {
          "type": "string",
          "enum": [
            "2018-07-01"
          ]
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/JobProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The resource properties."
        }
      },
      "required": [
        "name",
        "type",
        "apiVersion",
        "properties"
      ],
      "description": "Microsoft.Media/mediaServices/transforms/jobs"
    },
    "Mp4Format": {
      "type": "object",
      "oneOf": [
        {
          "properties": {
            "@odata.type": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "#Microsoft.Media.Mp4Format"
                  ]
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          }
        }
      ],
      "properties": {
        "@odata.type": {
          "type": "string"
        }
      },
      "required": [
        "@odata.type"
      ],
      "description": "Describes the properties for an output ISO MP4 file."
    },
    "MultiBitrateFormat": {
      "type": "object",
      "oneOf": [
        {
          "properties": {
            "@odata.type": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "#Microsoft.Media.MultiBitrateFormat"
                  ]
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          }
        },
        {
          "allOf": [
            {
              "$ref": "#/definitions/Mp4Format"
            }
          ],
          "properties": {
            "@odata.type": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "#Microsoft.Media.Mp4Format"
                  ]
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          }
        },
        {
          "allOf": [
            {
              "$ref": "#/definitions/TransportStreamFormat"
            }
          ],
          "properties": {
            "@odata.type": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "#Microsoft.Media.TransportStreamFormat"
                  ]
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          }
        }
      ],
      "properties": {
        "outputFiles": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OutputFile"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The list of output files to produce.  Each entry in the list is a set of audio and video layer labels to be muxed together ."
        },
        "@odata.type": {
          "type": "string"
        }
      },
      "required": [
        "@odata.type"
      ],
      "description": "Describes the properties for producing a collection of GOP aligned multi-bitrate files. The default behavior is to produce one output file for each video layer which is muxed together with all the audios. The exact output files produced can be controlled by specifying the outputFiles collection."
    },
    "NoEncryption": {
      "type": "object",
      "properties": {
        "enabledProtocols": {
          "oneOf": [
            {
              "$ref": "#/definitions/EnabledProtocols"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Representing supported protocols"
        }
      },
      "description": "Class for NoEncryption scheme"
    },
    "OutputFile": {
      "type": "object",
      "properties": {
        "labels": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The list of labels that describe how the encoder should multiplex video and audio into an output file. For example, if the encoder is producing two video layers with labels v1 and v2, and one audio layer with label a1, then an array like '[v1, a1]' tells the encoder to produce an output file with the video track represented by v1 and the audio track represented by a1."
        }
      },
      "description": "Represents an output file produced."
    },
    "Overlay": {
      "type": "object",
      "oneOf": [
        {
          "properties": {
            "@odata.type": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "Overlay"
                  ]
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          }
        },
        {
          "allOf": [
            {
              "$ref": "#/definitions/AudioOverlay"
            }
          ],
          "properties": {
            "@odata.type": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "#Microsoft.Media.AudioOverlay"
                  ]
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          }
        },
        {
          "allOf": [
            {
              "$ref": "#/definitions/VideoOverlay"
            }
          ],
          "properties": {
            "@odata.type": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "#Microsoft.Media.VideoOverlay"
                  ]
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          }
        }
      ],
      "properties": {
        "inputLabel": {
          "type": "string",
          "description": "The label of the job input which is to be used as an overlay. The Input must specify exactly one file. You can specify an image file in JPG or PNG formats, or an audio file (such as a WAV, MP3, WMA or M4A file), or a video file. See https://aka.ms/mesformats for the complete list of supported audio and video file formats."
        },
        "start": {
          "type": "string",
          "description": "The start position, with reference to the input video, at which the overlay starts. The value should be in ISO 8601 format. For example, PT05S to start the overlay at 5 seconds in to the input video. If not specified the overlay starts from the beginning of the input video."
        },
        "end": {
          "type": "string",
          "description": "The position in the input video at which the overlay ends. The value should be in ISO 8601 duration format. For example, PT30S to end the overlay at 30 seconds in to the input video. If not specified the overlay will be applied until the end of the input video if inputLoop is true. Else, if inputLoop is false, then overlay will last as long as the duration of the overlay media."
        },
        "fadeInDuration": {
          "type": "string",
          "description": "The duration over which the overlay fades in onto the input video. The value should be in ISO 8601 duration format. If not specified the default behavior is to have no fade in (same as PT0S)."
        },
        "fadeOutDuration": {
          "type": "string",
          "description": "The duration over which the overlay fades out of the input video. The value should be in ISO 8601 duration format. If not specified the default behavior is to have no fade out (same as PT0S)."
        },
        "audioGainLevel": {
          "oneOf": [
            {
              "type": "number"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The gain level of audio in the overlay. The value should be in the range [0, 1.0]. The default is 1.0."
        },
        "@odata.type": {
          "type": "string"
        }
      },
      "required": [
        "@odata.type"
      ],
      "description": "Base type for all overlays - image, audio or video."
    },
    "PngFormat": {
      "type": "object",
      "oneOf": [
        {
          "properties": {
            "@odata.type": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "#Microsoft.Media.PngFormat"
                  ]
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          }
        }
      ],
      "properties": {
        "@odata.type": {
          "type": "string"
        }
      },
      "required": [
        "@odata.type"
      ],
      "description": "Describes the settings for producing PNG thumbnails."
    },
    "PngImage": {
      "type": "object",
      "oneOf": [
        {
          "properties": {
            "@odata.type": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "#Microsoft.Media.PngImage"
                  ]
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          }
        }
      ],
      "properties": {
        "layers": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PngLayer"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "A collection of output PNG image layers to be produced by the encoder."
        },
        "@odata.type": {
          "type": "string"
        }
      },
      "required": [
        "@odata.type"
      ],
      "description": "Describes the properties for producing a series of PNG images from the input video."
    },
    "PngLayer": {
      "type": "object",
      "oneOf": [
        {
          "properties": {
            "@odata.type": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "#Microsoft.Media.PngLayer"
                  ]
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          }
        }
      ],
      "properties": {
        "width": {
          "type": "string",
          "description": "The width of the output video for this layer. The value can be absolute (in pixels) or relative (in percentage). For example 50% means the output video has half as many pixels in width as the input."
        },
        "height": {
          "type": "string",
          "description": "The height of the output video for this layer. The value can be absolute (in pixels) or relative (in percentage). For example 50% means the output video has half as many pixels in height as the input."
        },
        "label": {
          "type": "string",
          "description": "The alphanumeric label for this layer, which can be used in multiplexing different video and audio layers, or in naming the output file."
        },
        "@odata.type": {
          "type": "string"
        }
      },
      "required": [
        "@odata.type"
      ],
      "description": "Describes the settings to produce a PNG image from the input video."
    },
    "PresentationTimeRange": {
      "type": "object",
      "properties": {
        "startTimestamp": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The absolute start time boundary."
        },
        "endTimestamp": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The absolute end time boundary."
        },
        "presentationWindowDuration": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The relative to end sliding window."
        },
        "liveBackoffDuration": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The relative to end right edge."
        },
        "timescale": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The time scale of time stamps."
        },
        "forceEndTimestamp": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The indicator of forcing exsiting of end time stamp."
        }
      },
      "required": [
        "startTimestamp",
        "endTimestamp",
        "presentationWindowDuration",
        "liveBackoffDuration",
        "timescale",
        "forceEndTimestamp"
      ],
      "description": "The presentation time range, this is asset related and not recommended for Account Filter."
    },
    "Preset": {
      "type": "object",
      "oneOf": [
        {
          "properties": {
            "@odata.type": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "Preset"
                  ]
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          }
        },
        {
          "allOf": [
            {
              "$ref": "#/definitions/AudioAnalyzerPreset"
            }
          ],
          "properties": {
            "@odata.type": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "#Microsoft.Media.AudioAnalyzerPreset"
                  ]
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          }
        },
        {
          "allOf": [
            {
              "$ref": "#/definitions/BuiltInStandardEncoderPreset"
            }
          ],
          "properties": {
            "@odata.type": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "#Microsoft.Media.BuiltInStandardEncoderPreset"
                  ]
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          }
        },
        {
          "allOf": [
            {
              "$ref": "#/definitions/StandardEncoderPreset"
            }
          ],
          "properties": {
            "@odata.type": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "#Microsoft.Media.StandardEncoderPreset"
                  ]
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          }
        }
      ],
      "properties": {
        "@odata.type": {
          "type": "string"
        }
      },
      "required": [
        "@odata.type"
      ],
      "description": "Base type for all Presets, which define the recipe or instructions on how the input media files should be processed."
    },
    "Rectangle": {
      "type": "object",
      "properties": {
        "left": {
          "type": "string",
          "description": "The number of pixels from the left-margin. This can be absolute pixel value (e.g 100), or relative to the size of the video (For example, 50%)."
        },
        "top": {
          "type": "string",
          "description": "The number of pixels from the top-margin. This can be absolute pixel value (e.g 100), or relative to the size of the video (For example, 50%)."
        },
        "width": {
          "type": "string",
          "description": "The width of the rectangular region in pixels. This can be absolute pixel value (e.g 100), or relative to the size of the video (For example, 50%)."
        },
        "height": {
          "type": "string",
          "description": "The height of the rectangular region in pixels. This can be absolute pixel value (e.g 100), or relative to the size of the video (For example, 50%)."
        }
      },
      "description": "Describes the properties of a rectangular window applied to the input media before processing it."
    },
    "StandardEncoderPreset": {
      "type": "object",
      "oneOf": [
        {
          "properties": {
            "@odata.type": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "#Microsoft.Media.StandardEncoderPreset"
                  ]
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          }
        }
      ],
      "properties": {
        "filters": {
          "oneOf": [
            {
              "$ref": "#/definitions/Filters"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "One or more filtering operations that are applied to the input media before encoding."
        },
        "codecs": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Codec"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The list of codecs to be used when encoding the input video."
        },
        "formats": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Format"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The list of outputs to be produced by the encoder."
        },
        "@odata.type": {
          "type": "string"
        }
      },
      "required": [
        "@odata.type"
      ],
      "description": "Describes all the settings to be used when encoding the input video with the Standard Encoder."
    },
    "StorageAccount": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the storage account resource. Media Services relies on tables and queues as well as blobs, so the primary storage account must be a Standard Storage account (either Microsoft.ClassicStorage or Microsoft.Storage). Blob only storage accounts can be added as secondary storage accounts."
        },
        "type": {
          "type": "string",
          "enum": [
            "Primary",
            "Secondary"
          ],
          "description": "The type of the storage account."
        }
      },
      "required": [
        "type"
      ],
      "description": "The storage account details."
    },
    "StreamingEndpointAccessControl": {
      "type": "object",
      "properties": {
        "akamai": {
          "oneOf": [
            {
              "$ref": "#/definitions/AkamaiAccessControl"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The access control of Akamai"
        },
        "ip": {
          "oneOf": [
            {
              "$ref": "#/definitions/IPAccessControl"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The IP access control of the StreamingEndpoint."
        }
      },
      "description": "StreamingEndpoint access control definition."
    },
    "StreamingEndpointProperties": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "The StreamingEndpoint description."
        },
        "scaleUnits": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The number of scale units.  Use the Scale operation to adjust this value."
        },
        "availabilitySetName": {
          "type": "string",
          "description": "The name of the AvailabilitySet used with this StreamingEndpoint for high availability streaming.  This value can only be set at creation time."
        },
        "accessControl": {
          "oneOf": [
            {
              "$ref": "#/definitions/StreamingEndpointAccessControl"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The access control definition of the StreamingEndpoint."
        },
        "maxCacheAge": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Max cache age"
        },
        "customHostNames": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The custom host names of the StreamingEndpoint"
        },
        "cdnEnabled": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The CDN enabled flag."
        },
        "cdnProvider": {
          "type": "string",
          "description": "The CDN provider name."
        },
        "cdnProfile": {
          "type": "string",
          "description": "The CDN profile name."
        },
        "crossSiteAccessPolicies": {
          "oneOf": [
            {
              "$ref": "#/definitions/CrossSiteAccessPolicies"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The StreamingEndpoint access policies."
        }
      },
      "required": [
        "scaleUnits"
      ],
      "description": "The StreamingEndpoint properties."
    },
    "StreamingLocatorContentKey": {
      "type": "object",
      "properties": {
        "id": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^[0-9a-fA-F]{8}(-[0-9a-fA-F]{4}){3}-[0-9a-fA-F]{12}$"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "ID of Content Key"
        },
        "labelReferenceInStreamingPolicy": {
          "type": "string",
          "description": "Label of Content Key as specified in the Streaming Policy"
        },
        "value": {
          "type": "string",
          "description": "Value of  of Content Key"
        }
      },
      "required": [
        "id"
      ],
      "description": "Class for content key in Streaming Locator"
    },
    "StreamingLocatorProperties": {
      "type": "object",
      "properties": {
        "assetName": {
          "type": "string",
          "description": "Asset Name"
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The start time of the Streaming Locator."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "The end time of the Streaming Locator."
        },
        "streamingLocatorId": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^[0-9a-fA-F]{8}(-[0-9a-fA-F]{4}){3}-[0-9a-fA-F]{12}$"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The StreamingLocatorId of the Streaming Locator."
        },
        "streamingPolicyName": {
          "type": "string",
          "description": "Name of the Streaming Policy used by this Streaming Locator. Either specify the name of Streaming Policy you created or use one of the predefined Streaming Policies. The predefined Streaming Policies available are: 'Predefined_DownloadOnly', 'Predefined_ClearStreamingOnly', 'Predefined_DownloadAndClearStreaming', 'Predefined_ClearKey', 'Predefined_MultiDrmCencStreaming' and 'Predefined_MultiDrmStreaming'"
        },
        "defaultContentKeyPolicyName": {
          "type": "string",
          "description": "Name of the default ContentKeyPolicy used by this Streaming Locator."
        },
        "contentKeys": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StreamingLocatorContentKey"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The ContentKeys used by this Streaming Locator."
        },
        "alternativeMediaId": {
          "type": "string",
          "description": "Alternative Media ID of this Streaming Locator"
        }
      },
      "required": [
        "assetName",
        "streamingPolicyName"
      ],
      "description": "Properties of the Streaming Locator."
    },
    "StreamingPolicyContentKey": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string",
          "description": "Label can be used to specify Content Key when creating a Streaming Locator"
        },
        "policyName": {
          "type": "string",
          "description": "Policy used by Content Key"
        },
        "tracks": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TrackSelection"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Tracks which use this content key"
        }
      },
      "description": "Class to specify properties of content key"
    },
    "StreamingPolicyContentKeys": {
      "type": "object",
      "properties": {
        "defaultKey": {
          "oneOf": [
            {
              "$ref": "#/definitions/DefaultKey"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Default content key for an encryption scheme"
        },
        "keyToTrackMappings": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StreamingPolicyContentKey"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Representing tracks needs separate content key"
        }
      },
      "description": "Class to specify properties of all content keys in Streaming Policy"
    },
    "StreamingPolicyFairPlayConfiguration": {
      "type": "object",
      "properties": {
        "customLicenseAcquisitionUrlTemplate": {
          "type": "string",
          "description": "The template for a customer service to deliver keys to end users.  Not needed when using Azure Media Services for issuing keys."
        },
        "allowPersistentLicense": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "All license to be persistent or not"
        }
      },
      "required": [
        "allowPersistentLicense"
      ],
      "description": "Class to specify configurations of FairPlay in Streaming Policy"
    },
    "StreamingPolicyPlayReadyConfiguration": {
      "type": "object",
      "properties": {
        "customLicenseAcquisitionUrlTemplate": {
          "type": "string",
          "description": "The template for a customer service to deliver keys to end users.  Not needed when using Azure Media Services for issuing keys."
        },
        "playReadyCustomAttributes": {
          "type": "string",
          "description": "Custom attributes for PlayReady"
        }
      },
      "description": "Class to specify configurations of PlayReady in Streaming Policy"
    },
    "StreamingPolicyProperties": {
      "type": "object",
      "properties": {
        "defaultContentKeyPolicyName": {
          "type": "string",
          "description": "Default ContentKey used by current Streaming Policy"
        },
        "envelopeEncryption": {
          "oneOf": [
            {
              "$ref": "#/definitions/EnvelopeEncryption"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Configuration of EnvelopeEncryption"
        },
        "commonEncryptionCenc": {
          "oneOf": [
            {
              "$ref": "#/definitions/CommonEncryptionCenc"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Configuration of CommonEncryptionCenc"
        },
        "commonEncryptionCbcs": {
          "oneOf": [
            {
              "$ref": "#/definitions/CommonEncryptionCbcs"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Configuration of CommonEncryptionCbcs"
        },
        "noEncryption": {
          "oneOf": [
            {
              "$ref": "#/definitions/NoEncryption"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Configurations of NoEncryption"
        }
      },
      "description": "Class to specify properties of Streaming Policy"
    },
    "StreamingPolicyWidevineConfiguration": {
      "type": "object",
      "properties": {
        "customLicenseAcquisitionUrlTemplate": {
          "type": "string",
          "description": "The template for a customer service to deliver keys to end users.  Not needed when using Azure Media Services for issuing keys."
        }
      },
      "description": "Class to specify configurations of Widevine in Streaming Policy"
    },
    "TrackPropertyCondition": {
      "type": "object",
      "properties": {
        "property": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Unknown",
                "FourCC"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Track property type."
        },
        "operation": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Unknown",
                "Equal"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Track property condition operation."
        },
        "value": {
          "type": "string",
          "description": "Track property value"
        }
      },
      "required": [
        "property",
        "operation"
      ],
      "description": "Class to specify one track property condition"
    },
    "TrackSelection": {
      "type": "object",
      "properties": {
        "trackSelections": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TrackPropertyCondition"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "TrackSelections is a track property condition list which can specify track(s)"
        }
      },
      "description": "Class to select a track"
    },
    "TransformOutput": {
      "type": "object",
      "properties": {
        "onError": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "StopProcessingJob",
                "ContinueJob"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "A Transform can define more than one outputs. This property defines what the service should do when one output fails - either continue to produce other outputs, or, stop the other outputs. The overall Job state will not reflect failures of outputs that are specified with 'ContinueJob'. The default is 'StopProcessingJob'."
        },
        "relativePriority": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Low",
                "Normal",
                "High"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Sets the relative priority of the TransformOutputs within a Transform. This sets the priority that the service uses for processing TransformOutputs. The default priority is Normal."
        },
        "preset": {
          "oneOf": [
            {
              "$ref": "#/definitions/Preset"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Preset that describes the operations that will be used to modify, transcode, or extract insights from the source file to generate the output."
        }
      },
      "required": [
        "preset"
      ],
      "description": "Describes the properties of a TransformOutput, which are the rules to be applied while generating the desired output."
    },
    "TransformProperties": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "An optional verbose description of the Transform."
        },
        "outputs": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TransformOutput"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "An array of one or more TransformOutputs that the Transform should generate."
        }
      },
      "required": [
        "outputs"
      ],
      "description": "A Transform."
    },
    "TransportStreamFormat": {
      "type": "object",
      "oneOf": [
        {
          "properties": {
            "@odata.type": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "#Microsoft.Media.TransportStreamFormat"
                  ]
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          }
        }
      ],
      "properties": {
        "@odata.type": {
          "type": "string"
        }
      },
      "required": [
        "@odata.type"
      ],
      "description": "Describes the properties for generating an MPEG-2 Transport Stream (ISO/IEC 13818-1) output video file(s)."
    },
    "Video": {
      "type": "object",
      "oneOf": [
        {
          "properties": {
            "@odata.type": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "#Microsoft.Media.Video"
                  ]
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          }
        },
        {
          "allOf": [
            {
              "$ref": "#/definitions/Image"
            }
          ],
          "properties": {
            "@odata.type": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "#Microsoft.Media.Image"
                  ]
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          }
        },
        {
          "allOf": [
            {
              "$ref": "#/definitions/H264Video"
            }
          ],
          "properties": {
            "@odata.type": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "#Microsoft.Media.H264Video"
                  ]
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          }
        }
      ],
      "properties": {
        "keyFrameInterval": {
          "type": "string",
          "description": "The distance between two key frames, thereby defining a group of pictures (GOP). The value should be a non-zero integer in the range [1, 30] seconds, specified in ISO 8601 format. The default is 2 seconds (PT2S)."
        },
        "stretchMode": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "None",
                "AutoSize",
                "AutoFit"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The resizing mode - how the input video will be resized to fit the desired output resolution(s). Default is AutoSize."
        },
        "@odata.type": {
          "type": "string"
        }
      },
      "required": [
        "@odata.type"
      ],
      "description": "Describes the basic properties for encoding the input video."
    },
    "VideoAnalyzerPreset": {
      "type": "object",
      "oneOf": [
        {
          "properties": {
            "@odata.type": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "#Microsoft.Media.VideoAnalyzerPreset"
                  ]
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          }
        }
      ],
      "properties": {
        "insightsToExtract": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "AudioInsightsOnly",
                "VideoInsightsOnly",
                "AllInsights"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The type of insights to be extracted. If not set then based on the content the type will selected.  If the content is audi only then only audio insights are extraced and if it is video only."
        },
        "@odata.type": {
          "type": "string"
        }
      },
      "required": [
        "@odata.type"
      ],
      "description": "A video analyzer preset that extracts insights (rich metadata) from both audio and video, and outputs a JSON format file."
    },
    "VideoOverlay": {
      "type": "object",
      "oneOf": [
        {
          "properties": {
            "@odata.type": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "#Microsoft.Media.VideoOverlay"
                  ]
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          }
        }
      ],
      "properties": {
        "position": {
          "oneOf": [
            {
              "$ref": "#/definitions/Rectangle"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The location in the input video where the overlay is applied."
        },
        "opacity": {
          "oneOf": [
            {
              "type": "number"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The opacity of the overlay. This is a value in the range [0 - 1.0]. Default is 1.0 which mean the overlay is opaque."
        },
        "cropRectangle": {
          "oneOf": [
            {
              "$ref": "#/definitions/Rectangle"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "An optional rectangular window used to crop the overlay image or video."
        },
        "@odata.type": {
          "type": "string"
        }
      },
      "required": [
        "@odata.type"
      ],
      "description": "Describes the properties of a video overlay."
    }
  }
}
