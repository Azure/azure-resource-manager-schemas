{
  "id": "https://schema.management.azure.com/schemas/2018-09-01-preview/Microsoft.ServiceFabricMesh.json#",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "title": "Microsoft.ServiceFabricMesh",
  "description": "Microsoft ServiceFabricMesh Resource Types",
  "resourceDefinitions": {
    "applications": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The identity of the application."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.ServiceFabricMesh/applications"
          ]
        },
        "apiVersion": {
          "type": "string",
          "enum": [
            "2018-09-01-preview"
          ]
        },
        "tags": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Resource tags."
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives"
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/ApplicationResourceProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "This type describes properties of an application resource."
        }
      },
      "required": [
        "name",
        "type",
        "apiVersion",
        "location",
        "properties"
      ],
      "description": "Microsoft.ServiceFabricMesh/applications"
    },
    "gateways": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The identity of the gateway."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.ServiceFabricMesh/gateways"
          ]
        },
        "apiVersion": {
          "type": "string",
          "enum": [
            "2018-09-01-preview"
          ]
        },
        "tags": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Resource tags."
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives"
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/GatewayResourceProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "This type describes properties of a gateway resource."
        }
      },
      "required": [
        "name",
        "type",
        "apiVersion",
        "location",
        "properties"
      ],
      "description": "Microsoft.ServiceFabricMesh/gateways"
    },
    "networks": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The identity of the network."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.ServiceFabricMesh/networks"
          ]
        },
        "apiVersion": {
          "type": "string",
          "enum": [
            "2018-09-01-preview"
          ]
        },
        "tags": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Resource tags."
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives"
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/NetworkResourceProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Describes properties of a network resource."
        }
      },
      "required": [
        "name",
        "type",
        "apiVersion",
        "location",
        "properties"
      ],
      "description": "Microsoft.ServiceFabricMesh/networks"
    },
    "secrets": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the secret resource."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.ServiceFabricMesh/secrets"
          ]
        },
        "apiVersion": {
          "type": "string",
          "enum": [
            "2018-09-01-preview"
          ]
        },
        "tags": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Resource tags."
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives"
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretResourceProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Describes the properties of a secret resource."
        },
        "resources": {
          "type": "array",
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/secrets_values_childResource"
              }
            ]
          }
        }
      },
      "required": [
        "name",
        "type",
        "apiVersion",
        "location",
        "properties"
      ],
      "description": "Microsoft.ServiceFabricMesh/secrets"
    },
    "secrets_values": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the secret resource value which is typically the version identifier for the value."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.ServiceFabricMesh/secrets/values"
          ]
        },
        "apiVersion": {
          "type": "string",
          "enum": [
            "2018-09-01-preview"
          ]
        },
        "tags": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Resource tags."
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives"
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretValueResourceProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "This type describes properties of a secret value resource."
        }
      },
      "required": [
        "name",
        "type",
        "apiVersion",
        "location",
        "properties"
      ],
      "description": "Microsoft.ServiceFabricMesh/secrets/values"
    },
    "volumes": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The identity of the volume."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.ServiceFabricMesh/volumes"
          ]
        },
        "apiVersion": {
          "type": "string",
          "enum": [
            "2018-09-01-preview"
          ]
        },
        "tags": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Resource tags."
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives"
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/VolumeResourceProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "This type describes properties of a volume resource."
        }
      },
      "required": [
        "name",
        "type",
        "apiVersion",
        "location",
        "properties"
      ],
      "description": "Microsoft.ServiceFabricMesh/volumes"
    }
  },
  "definitions": {
    "ApplicationResourceProperties": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "User readable description of the application."
        },
        "services": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ServiceResourceDescription"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Describes the services in the application. This property is used to create or modify services of the application. On get only the name of the service is returned. The service description can be obtained by querying for the service resource."
        },
        "diagnostics": {
          "oneOf": [
            {
              "$ref": "#/definitions/DiagnosticsDescription"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Describes the diagnostics options available"
        },
        "debugParams": {
          "type": "string",
          "description": "Internal - used by Visual Studio to setup the debugging session on the local development environment."
        }
      },
      "description": "This type describes properties of an application resource."
    },
    "ApplicationScopedVolume": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the volume being referenced."
        },
        "readOnly": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The flag indicating whether the volume is read only. Default is 'false'."
        },
        "destinationPath": {
          "type": "string",
          "description": "The path within the container at which the volume should be mounted. Only valid path characters are allowed."
        },
        "creationParameters": {
          "oneOf": [
            {
              "$ref": "#/definitions/ApplicationScopedVolumeCreationParameters"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Describes parameters for creating application-scoped volumes."
        }
      },
      "required": [
        "name",
        "destinationPath",
        "creationParameters"
      ],
      "description": "Describes a volume whose lifetime is scoped to the application's lifetime."
    },
    "ApplicationScopedVolumeCreationParameters": {
      "type": "object",
      "oneOf": [
        {
          "$ref": "#/definitions/ApplicationScopedVolumeCreationParametersServiceFabricVolumeDisk"
        }
      ],
      "properties": {
        "description": {
          "type": "string",
          "description": "User readable description of the volume."
        }
      },
      "description": "Describes parameters for creating application-scoped volumes."
    },
    "ApplicationScopedVolumeCreationParametersServiceFabricVolumeDisk": {
      "type": "object",
      "properties": {
        "sizeDisk": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Small",
                "Medium",
                "Large"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Volume size."
        },
        "kind": {
          "type": "string",
          "enum": [
            "ServiceFabricVolumeDisk"
          ]
        }
      },
      "required": [
        "sizeDisk",
        "kind"
      ],
      "description": "Describes parameters for creating application-scoped volumes provided by Service Fabric Volume Disks"
    },
    "AutoScalingMechanism": {
      "type": "object",
      "properties": {},
      "description": "Describes the mechanism for performing auto scaling operation. Derived classes will describe the actual mechanism."
    },
    "AutoScalingPolicy": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the auto scaling policy."
        },
        "trigger": {
          "oneOf": [
            {
              "$ref": "#/definitions/AutoScalingTrigger"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Describes the trigger for performing auto scaling operation."
        },
        "mechanism": {
          "oneOf": [
            {
              "$ref": "#/definitions/AutoScalingMechanism"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Describes the mechanism for performing auto scaling operation. Derived classes will describe the actual mechanism."
        }
      },
      "required": [
        "name",
        "trigger",
        "mechanism"
      ],
      "description": "Describes the auto scaling policy"
    },
    "AutoScalingTrigger": {
      "type": "object",
      "properties": {},
      "description": "Describes the trigger for performing auto scaling operation."
    },
    "AzureInternalMonitoringPipelineSinkDescription": {
      "type": "object",
      "properties": {
        "accountName": {
          "type": "string",
          "description": "Azure Internal monitoring pipeline account."
        },
        "namespace": {
          "type": "string",
          "description": "Azure Internal monitoring pipeline account namespace."
        },
        "maConfigUrl": {
          "type": "string",
          "description": "Azure Internal monitoring agent configuration."
        },
        "fluentdConfigUrl": {
          "type": "object",
          "properties": {},
          "description": "Azure Internal monitoring agent fluentd configuration."
        },
        "autoKeyConfigUrl": {
          "type": "string",
          "description": "Azure Internal monitoring pipeline autokey associated with the certificate."
        },
        "kind": {
          "type": "string",
          "enum": [
            "AzureInternalMonitoringPipeline"
          ]
        }
      },
      "required": [
        "kind"
      ],
      "description": "Diagnostics settings for Geneva."
    },
    "ContainerCodePackageProperties": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the code package."
        },
        "image": {
          "type": "string",
          "description": "The Container image to use."
        },
        "imageRegistryCredential": {
          "oneOf": [
            {
              "$ref": "#/definitions/ImageRegistryCredential"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Image registry credential."
        },
        "entrypoint": {
          "type": "string",
          "description": "Override for the default entry point in the container."
        },
        "commands": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Command array to execute within the container in exec form."
        },
        "environmentVariables": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EnvironmentVariable"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The environment variables to set in this container"
        },
        "settings": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Setting"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The settings to set in this container. The setting file path can be fetched from environment variable \"Fabric_SettingPath\". The path for Windows container is \"C:\\\\secrets\". The path for Linux container is \"/var/secrets\"."
        },
        "labels": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ContainerLabel"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The labels to set in this container."
        },
        "endpoints": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EndpointProperties"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The endpoints exposed by this container."
        },
        "resources": {
          "oneOf": [
            {
              "$ref": "#/definitions/ResourceRequirements"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "This type describes the resource requirements for a container or a service."
        },
        "volumeRefs": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/VolumeReference"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Volumes to be attached to the container. The lifetime of these volumes is independent of the application's lifetime."
        },
        "volumes": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ApplicationScopedVolume"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Volumes to be attached to the container. The lifetime of these volumes is scoped to the application's lifetime."
        },
        "diagnostics": {
          "oneOf": [
            {
              "$ref": "#/definitions/DiagnosticsRef"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Reference to sinks in DiagnosticsDescription."
        },
        "reliableCollectionsRefs": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ReliableCollectionsRef"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "A list of ReliableCollection resources used by this particular code package. Please refer to ReliableCollectionsRef for more details."
        }
      },
      "required": [
        "name",
        "image",
        "resources"
      ],
      "description": "Describes a container and its runtime properties."
    },
    "ContainerLabel": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the container label."
        },
        "value": {
          "type": "string",
          "description": "The value of the container label."
        }
      },
      "required": [
        "name",
        "value"
      ],
      "description": "Describes a container label."
    },
    "DiagnosticsDescription": {
      "type": "object",
      "properties": {
        "sinks": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DiagnosticsSinkProperties"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "List of supported sinks that can be referenced."
        },
        "enabled": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Status of whether or not sinks are enabled."
        },
        "defaultSinkRefs": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The sinks to be used if diagnostics is enabled. Sink choices can be overridden at the service and code package level."
        }
      },
      "description": "Describes the diagnostics options available"
    },
    "DiagnosticsRef": {
      "type": "object",
      "properties": {
        "enabled": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Status of whether or not sinks are enabled."
        },
        "sinkRefs": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "List of sinks to be used if enabled. References the list of sinks in DiagnosticsDescription."
        }
      },
      "description": "Reference to sinks in DiagnosticsDescription."
    },
    "DiagnosticsSinkProperties": {
      "type": "object",
      "oneOf": [
        {
          "$ref": "#/definitions/AzureInternalMonitoringPipelineSinkDescription"
        }
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the sink. This value is referenced by DiagnosticsReferenceDescription"
        },
        "description": {
          "type": "string",
          "description": "A description of the sink."
        }
      },
      "description": "Properties of a DiagnosticsSink."
    },
    "EndpointProperties": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the endpoint."
        },
        "port": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Port used by the container."
        }
      },
      "required": [
        "name"
      ],
      "description": "Describes a container endpoint."
    },
    "EndpointRef": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the endpoint."
        }
      },
      "description": "Describes a reference to a service endpoint."
    },
    "EnvironmentVariable": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the environment variable."
        },
        "value": {
          "type": "string",
          "description": "The value of the environment variable."
        }
      },
      "description": "Describes an environment variable for the container."
    },
    "GatewayDestination": {
      "type": "object",
      "properties": {
        "applicationName": {
          "type": "string",
          "description": "Name of the service fabric Mesh application."
        },
        "serviceName": {
          "type": "string",
          "description": "service that contains the endpoint."
        },
        "endpointName": {
          "type": "string",
          "description": "name of the endpoint in the service."
        }
      },
      "required": [
        "applicationName",
        "serviceName",
        "endpointName"
      ],
      "description": "Describes destination endpoint for routing traffic."
    },
    "GatewayResourceProperties": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "User readable description of the gateway."
        },
        "sourceNetwork": {
          "oneOf": [
            {
              "$ref": "#/definitions/NetworkRef"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Describes a network reference in a service."
        },
        "destinationNetwork": {
          "oneOf": [
            {
              "$ref": "#/definitions/NetworkRef"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Describes a network reference in a service."
        },
        "tcp": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TcpConfig"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Configuration for tcp connectivity for this gateway."
        },
        "http": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/HttpConfig"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Configuration for http connectivity for this gateway."
        }
      },
      "required": [
        "sourceNetwork",
        "destinationNetwork"
      ],
      "description": "This type describes properties of a gateway resource."
    },
    "HttpConfig": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "http gateway config name."
        },
        "port": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Specifies the port at which the service endpoint below needs to be exposed."
        },
        "hosts": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/HttpHostConfig"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "description for routing."
        }
      },
      "required": [
        "name",
        "port",
        "hosts"
      ],
      "description": "Describes the http configuration for external connectivity for this network."
    },
    "HttpHostConfig": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "http hostname config name."
        },
        "routes": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/HttpRouteConfig"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Route information to use for routing. Routes are processed in the order they are specified. Specify routes that are more specific before routes that can handle general cases."
        }
      },
      "required": [
        "name",
        "routes"
      ],
      "description": "Describes the hostname properties for http routing."
    },
    "HttpRouteConfig": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "http route name."
        },
        "match": {
          "oneOf": [
            {
              "$ref": "#/definitions/HttpRouteMatchRule"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Describes a rule for http route matching."
        },
        "destination": {
          "oneOf": [
            {
              "$ref": "#/definitions/GatewayDestination"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Describes destination endpoint for routing traffic."
        }
      },
      "required": [
        "name",
        "match",
        "destination"
      ],
      "description": "Describes the hostname properties for http routing."
    },
    "HttpRouteMatchHeader": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of header to match in request."
        },
        "value": {
          "type": "string",
          "description": "Value of header to match in request."
        },
        "type": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "exact"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "how to match header value."
        }
      },
      "required": [
        "name"
      ],
      "description": "Describes header information for http route matching."
    },
    "HttpRouteMatchPath": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string",
          "description": "Uri path to match for request."
        },
        "rewrite": {
          "type": "string",
          "description": "replacement string for matched part of the Uri."
        },
        "type": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "prefix"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "how to match value in the Uri"
        }
      },
      "required": [
        "value",
        "type"
      ],
      "description": "Path to match for routing."
    },
    "HttpRouteMatchRule": {
      "type": "object",
      "properties": {
        "path": {
          "oneOf": [
            {
              "$ref": "#/definitions/HttpRouteMatchPath"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Path to match for routing."
        },
        "headers": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/HttpRouteMatchHeader"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "headers and their values to match in request."
        }
      },
      "required": [
        "path"
      ],
      "description": "Describes a rule for http route matching."
    },
    "ImageRegistryCredential": {
      "type": "object",
      "properties": {
        "server": {
          "type": "string",
          "description": "Docker image registry server, without protocol such as `http` and `https`."
        },
        "username": {
          "type": "string",
          "description": "The username for the private registry."
        },
        "password": {
          "type": "string",
          "description": "The password for the private registry. The password is required for create or update operations, however it is not returned in the get or list operations."
        }
      },
      "required": [
        "server",
        "username"
      ],
      "description": "Image registry credential."
    },
    "InlinedValueSecretResourceProperties": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "enum": [
            "inlinedValue"
          ]
        }
      },
      "required": [
        "kind"
      ],
      "description": "Describes the properties of a secret resource whose value is provided explicitly as plaintext. The secret resource may have multiple values, each being uniquely versioned. The secret value of each version is stored encrypted, and delivered as plaintext into the context of applications referencing it."
    },
    "LocalNetworkResourceProperties": {
      "type": "object",
      "properties": {
        "networkAddressPrefix": {
          "type": "string",
          "description": "Address space for a container network. This is expressed in CIDR notation."
        },
        "kind": {
          "type": "string",
          "enum": [
            "Local"
          ]
        }
      },
      "required": [
        "kind"
      ],
      "description": "Information about a Service Fabric container network local to a single Service Fabric cluster."
    },
    "NetworkRef": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the network"
        },
        "endpointRefs": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EndpointRef"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "A list of endpoints that are exposed on this network."
        }
      },
      "description": "Describes a network reference in a service."
    },
    "NetworkResourceProperties": {
      "type": "object",
      "oneOf": [
        {
          "$ref": "#/definitions/LocalNetworkResourceProperties"
        }
      ],
      "properties": {
        "description": {
          "type": "string",
          "description": "User readable description of the network."
        }
      },
      "description": "Describes properties of a network resource."
    },
    "ReliableCollectionsRef": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of ReliableCollection resource. Right now it's not used and you can use any string."
        },
        "doNotPersistState": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "False (the default) if ReliableCollections state is persisted to disk as usual. True if you do not want to persist state, in which case replication is still enabled and you can use ReliableCollections as distributed cache."
        }
      },
      "required": [
        "name"
      ],
      "description": "Specifying this parameter adds support for reliable collections"
    },
    "ResourceLimits": {
      "type": "object",
      "properties": {
        "memoryInGB": {
          "oneOf": [
            {
              "type": "number"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The memory limit in GB."
        },
        "cpu": {
          "oneOf": [
            {
              "type": "number"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "CPU limits in cores. At present, only full cores are supported."
        }
      },
      "description": "This type describes the resource limits for a given container. It describes the most amount of resources a container is allowed to use before being restarted."
    },
    "ResourceRequests": {
      "type": "object",
      "properties": {
        "memoryInGB": {
          "oneOf": [
            {
              "type": "number"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The memory request in GB for this container."
        },
        "cpu": {
          "oneOf": [
            {
              "type": "number"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Requested number of CPU cores. At present, only full cores are supported."
        }
      },
      "required": [
        "memoryInGB",
        "cpu"
      ],
      "description": "This type describes the requested resources for a given container. It describes the least amount of resources required for the container. A container can consume more than requested resources up to the specified limits before being restarted. Currently, the requested resources are treated as limits."
    },
    "ResourceRequirements": {
      "type": "object",
      "properties": {
        "requests": {
          "oneOf": [
            {
              "$ref": "#/definitions/ResourceRequests"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "This type describes the requested resources for a given container. It describes the least amount of resources required for the container. A container can consume more than requested resources up to the specified limits before being restarted. Currently, the requested resources are treated as limits."
        },
        "limits": {
          "oneOf": [
            {
              "$ref": "#/definitions/ResourceLimits"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "This type describes the resource limits for a given container. It describes the most amount of resources a container is allowed to use before being restarted."
        }
      },
      "required": [
        "requests"
      ],
      "description": "This type describes the resource requirements for a container or a service."
    },
    "SecretResourceProperties": {
      "type": "object",
      "oneOf": [
        {
          "$ref": "#/definitions/InlinedValueSecretResourceProperties"
        }
      ],
      "properties": {
        "description": {
          "type": "string",
          "description": "User readable description of the secret."
        },
        "contentType": {
          "type": "string",
          "description": "The type of the content stored in the secret value. The value of this property is opaque to Service Fabric. Once set, the value of this property cannot be changed."
        }
      },
      "description": "Describes the properties of a secret resource."
    },
    "secrets_values_childResource": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the secret resource value which is typically the version identifier for the value."
        },
        "type": {
          "type": "string",
          "enum": [
            "values"
          ]
        },
        "apiVersion": {
          "type": "string",
          "enum": [
            "2018-09-01-preview"
          ]
        },
        "tags": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Resource tags."
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives"
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretValueResourceProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "This type describes properties of a secret value resource."
        }
      },
      "required": [
        "name",
        "type",
        "apiVersion",
        "location",
        "properties"
      ],
      "description": "Microsoft.ServiceFabricMesh/secrets/values"
    },
    "SecretValueResourceProperties": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string",
          "description": "The actual value of the secret."
        }
      },
      "description": "This type describes properties of a secret value resource."
    },
    "ServiceResourceDescription": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the resource"
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/ServiceResourceProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "This type describes properties of a service resource."
        }
      },
      "required": [
        "properties"
      ],
      "description": "This type describes a service resource."
    },
    "ServiceResourceProperties": {
      "type": "object",
      "properties": {
        "osType": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Linux",
                "Windows"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The operation system required by the code in service."
        },
        "codePackages": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ContainerCodePackageProperties"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Describes the set of code packages that forms the service. A code package describes the container and the properties for running it. All the code packages are started together on the same host and share the same context (network, process etc.)."
        },
        "networkRefs": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NetworkRef"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The names of the private networks that this service needs to be part of."
        },
        "diagnostics": {
          "oneOf": [
            {
              "$ref": "#/definitions/DiagnosticsRef"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Reference to sinks in DiagnosticsDescription."
        },
        "description": {
          "type": "string",
          "description": "User readable description of the service."
        },
        "replicaCount": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The number of replicas of the service to create. Defaults to 1 if not specified."
        },
        "autoScalingPolicies": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AutoScalingPolicy"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Auto scaling policies"
        }
      },
      "required": [
        "osType",
        "codePackages"
      ],
      "description": "This type describes properties of a service resource."
    },
    "Setting": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the setting."
        },
        "value": {
          "type": "string",
          "description": "The value of the setting."
        }
      },
      "description": "Describes a setting for the container. The setting file path can be fetched from environment variable \"Fabric_SettingPath\". The path for Windows container is \"C:\\\\secrets\". The path for Linux container is \"/var/secrets\"."
    },
    "TcpConfig": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "tcp gateway config name."
        },
        "port": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Specifies the port at which the service endpoint below needs to be exposed."
        },
        "destination": {
          "oneOf": [
            {
              "$ref": "#/definitions/GatewayDestination"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Describes destination endpoint for routing traffic."
        }
      },
      "required": [
        "name",
        "port",
        "destination"
      ],
      "description": "Describes the tcp configuration for external connectivity for this network."
    },
    "VolumeProviderParametersAzureFile": {
      "type": "object",
      "properties": {
        "accountName": {
          "type": "string",
          "description": "Name of the Azure storage account for the File Share."
        },
        "accountKey": {
          "type": "string",
          "description": "Access key of the Azure storage account for the File Share."
        },
        "shareName": {
          "type": "string",
          "description": "Name of the Azure Files file share that provides storage for the volume."
        }
      },
      "required": [
        "accountName",
        "shareName"
      ],
      "description": "This type describes a volume provided by an Azure Files file share."
    },
    "VolumeReference": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the volume being referenced."
        },
        "readOnly": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The flag indicating whether the volume is read only. Default is 'false'."
        },
        "destinationPath": {
          "type": "string",
          "description": "The path within the container at which the volume should be mounted. Only valid path characters are allowed."
        }
      },
      "required": [
        "name",
        "destinationPath"
      ],
      "description": "Describes a reference to a volume resource."
    },
    "VolumeResourceProperties": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "User readable description of the volume."
        },
        "provider": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "SFAzureFile"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Provider of the volume."
        },
        "azureFileParameters": {
          "oneOf": [
            {
              "$ref": "#/definitions/VolumeProviderParametersAzureFile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "This type describes a volume provided by an Azure Files file share."
        }
      },
      "required": [
        "provider"
      ],
      "description": "This type describes properties of a volume resource."
    }
  }
}
