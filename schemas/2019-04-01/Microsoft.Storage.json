{
  "id": "https://schema.management.azure.com/schemas/2019-04-01/Microsoft.Storage.json#",
  "title": "Microsoft.Storage",
  "description": "Microsoft Storage Resource Types",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "resourceDefinitions": {
    "storageAccounts": {
      "description": "Microsoft.Storage/storageAccounts",
      "properties": {
        "apiVersion": {
          "enum": [
            "2019-04-01"
          ],
          "type": "string"
        },
        "identity": {
          "description": "The identity of the resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/Identity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "kind": {
          "description": "Required. Indicates the type of storage account.",
          "oneOf": [
            {
              "enum": [
                "Storage",
                "StorageV2",
                "BlobStorage",
                "FileStorage",
                "BlockBlobStorage"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "location": {
          "description": "Required. Gets or sets the location of the resource. This will be one of the supported and registered Azure Geo Regions (e.g. West US, East US, Southeast Asia, etc.). The geo region of a resource cannot be changed once it is created, but if an identical geo region is specified on update, the request will succeed.",
          "type": "string"
        },
        "name": {
          "description": "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.",
          "maxLength": 24,
          "minLength": 3,
          "type": "string"
        },
        "properties": {
          "description": "The parameters used to create the storage account.",
          "oneOf": [
            {
              "$ref": "#/definitions/StorageAccountPropertiesCreateParameters"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/storageAccounts_blobServices_childResource"
              },
              {
                "$ref": "#/definitions/storageAccounts_fileServices_childResource"
              },
              {
                "$ref": "#/definitions/storageAccounts_managementPolicies_childResource"
              }
            ]
          },
          "type": "array"
        },
        "sku": {
          "description": "Required. Gets or sets the SKU name.",
          "oneOf": [
            {
              "$ref": "#/definitions/Sku"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Gets or sets a list of key value pairs that describe the resource. These tags can be used for viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key with a length no greater than 128 characters and a value with a length no greater than 256 characters.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.Storage/storageAccounts"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "storageAccounts_blobServices": {
      "description": "Microsoft.Storage/storageAccounts/blobServices",
      "properties": {
        "apiVersion": {
          "enum": [
            "2019-04-01"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the blob Service within the specified storage account. Blob Service Name must be 'default'",
          "oneOf": [
            {
              "pattern": "^.*/default$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The properties of a storage accountâ€™s Blob service.",
          "oneOf": [
            {
              "$ref": "#/definitions/BlobServicePropertiesProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/storageAccounts_blobServices_containers_childResource"
              }
            ]
          },
          "type": "array"
        },
        "type": {
          "enum": [
            "Microsoft.Storage/storageAccounts/blobServices"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "storageAccounts_blobServices_containers": {
      "description": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "properties": {
        "apiVersion": {
          "enum": [
            "2019-04-01"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the blob container within the specified storage account. Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number.",
          "maxLength": 63,
          "minLength": 3,
          "type": "string"
        },
        "properties": {
          "description": "Properties of the blob container.",
          "oneOf": [
            {
              "$ref": "#/definitions/ContainerProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/storageAccounts_blobServices_containers_immutabilityPolicies_childResource"
              }
            ]
          },
          "type": "array"
        },
        "type": {
          "enum": [
            "Microsoft.Storage/storageAccounts/blobServices/containers"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "storageAccounts_blobServices_containers_immutabilityPolicies": {
      "description": "Microsoft.Storage/storageAccounts/blobServices/containers/immutabilityPolicies",
      "properties": {
        "apiVersion": {
          "enum": [
            "2019-04-01"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the blob container immutabilityPolicy within the specified storage account. ImmutabilityPolicy Name must be 'default'",
          "oneOf": [
            {
              "pattern": "^.*/default$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The properties of an ImmutabilityPolicy of a blob container.",
          "oneOf": [
            {
              "$ref": "#/definitions/ImmutabilityPolicyProperty"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.Storage/storageAccounts/blobServices/containers/immutabilityPolicies"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "storageAccounts_fileServices": {
      "description": "Microsoft.Storage/storageAccounts/fileServices",
      "properties": {
        "apiVersion": {
          "enum": [
            "2019-04-01"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the file Service within the specified storage account. File Service Name must be \"default\"",
          "oneOf": [
            {
              "pattern": "^.*/default$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The properties of File services in storage account.",
          "oneOf": [
            {
              "$ref": "#/definitions/FileServicePropertiesProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/storageAccounts_fileServices_shares_childResource"
              }
            ]
          },
          "type": "array"
        },
        "type": {
          "enum": [
            "Microsoft.Storage/storageAccounts/fileServices"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "storageAccounts_fileServices_shares": {
      "description": "Microsoft.Storage/storageAccounts/fileServices/shares",
      "properties": {
        "apiVersion": {
          "enum": [
            "2019-04-01"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the file share within the specified storage account. File share names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number.",
          "maxLength": 63,
          "minLength": 3,
          "type": "string"
        },
        "properties": {
          "description": "Properties of the file share.",
          "oneOf": [
            {
              "$ref": "#/definitions/FileShareProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.Storage/storageAccounts/fileServices/shares"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "storageAccounts_managementPolicies": {
      "description": "Microsoft.Storage/storageAccounts/managementPolicies",
      "properties": {
        "apiVersion": {
          "enum": [
            "2019-04-01"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the Storage Account Management Policy. It should always be 'default'",
          "oneOf": [
            {
              "pattern": "^.*/default$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Returns the Storage Account Data Policies Rules.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagementPolicyProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.Storage/storageAccounts/managementPolicies"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "apiVersion",
        "type"
      ],
      "type": "object"
    }
  },
  "definitions": {
    "ActiveDirectoryProperties": {
      "description": "Settings properties for Active Directory (AD).",
      "properties": {
        "azureStorageSid": {
          "description": "Specifies the security identifier (SID) for Azure Storage.",
          "type": "string"
        },
        "domainGuid": {
          "description": "Specifies the domain GUID.",
          "type": "string"
        },
        "domainName": {
          "description": "Specifies the primary domain that the AD DNS server is authoritative for.",
          "type": "string"
        },
        "domainSid": {
          "description": "Specifies the security identifier (SID).",
          "type": "string"
        },
        "forestName": {
          "description": "Specifies the Active Directory forest to get.",
          "type": "string"
        },
        "netBiosDomainName": {
          "description": "Specifies the NetBIOS domain name.",
          "type": "string"
        }
      },
      "required": [
        "domainName",
        "netBiosDomainName",
        "forestName",
        "domainGuid",
        "domainSid",
        "azureStorageSid"
      ],
      "type": "object"
    },
    "AzureFilesIdentityBasedAuthentication": {
      "description": "Settings for Azure Files identity based authentication.",
      "properties": {
        "activeDirectoryProperties": {
          "description": "Required if choose AD.",
          "oneOf": [
            {
              "$ref": "#/definitions/ActiveDirectoryProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "directoryServiceOptions": {
          "description": "Indicates the directory service used.",
          "oneOf": [
            {
              "enum": [
                "None",
                "AADDS",
                "AD"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "directoryServiceOptions"
      ],
      "type": "object"
    },
    "BlobServicePropertiesProperties": {
      "description": "The properties of a storage accountâ€™s Blob service.",
      "properties": {
        "automaticSnapshotPolicyEnabled": {
          "description": "Automatic Snapshot is enabled if set to true.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "changeFeed": {
          "description": "The blob service properties for change feed events.",
          "oneOf": [
            {
              "$ref": "#/definitions/ChangeFeed"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "cors": {
          "description": "Specifies CORS rules for the Blob service. You can include up to five CorsRule elements in the request. If no CorsRule elements are included in the request body, all CORS rules will be deleted, and CORS will be disabled for the Blob service.",
          "oneOf": [
            {
              "$ref": "#/definitions/CorsRules"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "defaultServiceVersion": {
          "description": "DefaultServiceVersion indicates the default version to use for requests to the Blob service if an incoming requestâ€™s version is not specified. Possible values include version 2008-10-27 and all more recent versions.",
          "type": "string"
        },
        "deleteRetentionPolicy": {
          "description": "The blob service properties for soft delete.",
          "oneOf": [
            {
              "$ref": "#/definitions/DeleteRetentionPolicy"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ChangeFeed": {
      "description": "The blob service properties for change feed events.",
      "properties": {
        "enabled": {
          "description": "Indicates whether change feed event logging is enabled for the Blob service.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ContainerProperties": {
      "description": "The properties of a container.",
      "properties": {
        "metadata": {
          "description": "A name-value pair to associate with the container as metadata.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "publicAccess": {
          "description": "Specifies whether data in the container may be accessed publicly and the level of access.",
          "oneOf": [
            {
              "enum": [
                "Container",
                "Blob",
                "None"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "CorsRule": {
      "description": "Specifies a CORS rule for the Blob service.",
      "properties": {
        "allowedHeaders": {
          "description": "Required if CorsRule element is present. A list of headers allowed to be part of the cross-origin request.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "allowedMethods": {
          "description": "Required if CorsRule element is present. A list of HTTP methods that are allowed to be executed by the origin.",
          "oneOf": [
            {
              "items": {
                "enum": [
                  "DELETE",
                  "GET",
                  "HEAD",
                  "MERGE",
                  "POST",
                  "OPTIONS",
                  "PUT"
                ],
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "allowedOrigins": {
          "description": "Required if CorsRule element is present. A list of origin domains that will be allowed via CORS, or \"*\" to allow all domains",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "exposedHeaders": {
          "description": "Required if CorsRule element is present. A list of response headers to expose to CORS clients.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "maxAgeInSeconds": {
          "description": "Required if CorsRule element is present. The number of seconds that the client/browser should cache a preflight response.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "allowedOrigins",
        "allowedMethods",
        "maxAgeInSeconds",
        "exposedHeaders",
        "allowedHeaders"
      ],
      "type": "object"
    },
    "CorsRules": {
      "description": "Sets the CORS rules. You can include up to five CorsRule elements in the request. ",
      "properties": {
        "corsRules": {
          "description": "The List of CORS rules. You can include up to five CorsRule elements in the request. ",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/CorsRule"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "CustomDomain": {
      "description": "The custom domain assigned to this storage account. This can be set via Update.",
      "properties": {
        "name": {
          "description": "Gets or sets the custom domain name assigned to the storage account. Name is the CNAME source.",
          "type": "string"
        },
        "useSubDomainName": {
          "description": "Indicates whether indirect CName validation is enabled. Default value is false. This should only be set on updates.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "DateAfterCreation": {
      "description": "Object to define the number of days after creation.",
      "properties": {
        "daysAfterCreationGreaterThan": {
          "description": "Value indicating the age in days after creation",
          "oneOf": [
            {
              "minimum": 0,
              "multipleOf": 1,
              "type": "number"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "daysAfterCreationGreaterThan"
      ],
      "type": "object"
    },
    "DateAfterModification": {
      "description": "Object to define the number of days after last modification.",
      "properties": {
        "daysAfterModificationGreaterThan": {
          "description": "Value indicating the age in days after last modification",
          "oneOf": [
            {
              "minimum": 0,
              "multipleOf": 1,
              "type": "number"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "daysAfterModificationGreaterThan"
      ],
      "type": "object"
    },
    "DeleteRetentionPolicy": {
      "description": "The blob service properties for soft delete.",
      "properties": {
        "days": {
          "description": "Indicates the number of days that the deleted blob should be retained. The minimum specified value can be 1 and the maximum value can be 365.",
          "oneOf": [
            {
              "maximum": 365,
              "minimum": 1,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "enabled": {
          "description": "Indicates whether DeleteRetentionPolicy is enabled for the Blob service.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "Encryption": {
      "description": "The encryption settings on the storage account.",
      "properties": {
        "keySource": {
          "description": "The encryption keySource (provider). Possible values (case-insensitive):  Microsoft.Storage, Microsoft.Keyvault",
          "oneOf": [
            {
              "enum": [
                "Microsoft.Storage",
                "Microsoft.Keyvault"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "keyvaultproperties": {
          "description": "Properties provided by key vault.",
          "oneOf": [
            {
              "$ref": "#/definitions/KeyVaultProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "services": {
          "description": "List of services which support encryption.",
          "oneOf": [
            {
              "$ref": "#/definitions/EncryptionServices"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "keySource"
      ],
      "type": "object"
    },
    "EncryptionService": {
      "description": "A service that allows server-side encryption to be used.",
      "properties": {
        "enabled": {
          "description": "A boolean indicating whether or not the service encrypts the data as it is stored.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "EncryptionServices": {
      "description": "A list of services that support encryption.",
      "properties": {
        "blob": {
          "description": "The encryption function of the blob storage service.",
          "oneOf": [
            {
              "$ref": "#/definitions/EncryptionService"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "file": {
          "description": "The encryption function of the file storage service.",
          "oneOf": [
            {
              "$ref": "#/definitions/EncryptionService"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "FileServicePropertiesProperties": {
      "description": "The properties of File services in storage account.",
      "properties": {
        "cors": {
          "description": "Specifies CORS rules for the File service. You can include up to five CorsRule elements in the request. If no CorsRule elements are included in the request body, all CORS rules will be deleted, and CORS will be disabled for the File service.",
          "oneOf": [
            {
              "$ref": "#/definitions/CorsRules"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "FileShareProperties": {
      "description": "The properties of the file share.",
      "properties": {
        "metadata": {
          "description": "A name-value pair to associate with the share as metadata.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "shareQuota": {
          "description": "The maximum size of the share, in gigabytes. Must be greater than 0, and less than or equal to 5TB (5120).",
          "oneOf": [
            {
              "maximum": 5120,
              "minimum": 1,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "IPRule": {
      "description": "IP rule with specific IP or IP range in CIDR format.",
      "properties": {
        "action": {
          "description": "The action of IP ACL rule.",
          "oneOf": [
            {
              "enum": [
                "Allow"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "value": {
          "description": "Specifies the IP or IP range in CIDR format. Only IPV4 address is allowed.",
          "type": "string"
        }
      },
      "required": [
        "value"
      ],
      "type": "object"
    },
    "Identity": {
      "description": "Identity for the resource.",
      "properties": {
        "type": {
          "description": "The identity type.",
          "oneOf": [
            {
              "enum": [
                "SystemAssigned"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "type"
      ],
      "type": "object"
    },
    "ImmutabilityPolicyProperty": {
      "description": "The properties of an ImmutabilityPolicy of a blob container.",
      "properties": {
        "immutabilityPeriodSinceCreationInDays": {
          "description": "The immutability period for the blobs in the container since the policy creation, in days.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "immutabilityPeriodSinceCreationInDays"
      ],
      "type": "object"
    },
    "KeyVaultProperties": {
      "description": "Properties of key vault.",
      "properties": {
        "keyname": {
          "description": "The name of KeyVault key.",
          "type": "string"
        },
        "keyvaulturi": {
          "description": "The Uri of KeyVault.",
          "type": "string"
        },
        "keyversion": {
          "description": "The version of KeyVault key.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ManagementPolicyAction": {
      "description": "Actions are applied to the filtered blobs when the execution condition is met.",
      "properties": {
        "baseBlob": {
          "description": "The management policy action for base blob",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagementPolicyBaseBlob"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "snapshot": {
          "description": "The management policy action for snapshot",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagementPolicySnapShot"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ManagementPolicyBaseBlob": {
      "description": "Management policy action for base blob.",
      "properties": {
        "delete": {
          "description": "The function to delete the blob",
          "oneOf": [
            {
              "$ref": "#/definitions/DateAfterModification"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tierToArchive": {
          "description": "The function to tier blobs to archive storage. Support blobs currently at Hot or Cool tier",
          "oneOf": [
            {
              "$ref": "#/definitions/DateAfterModification"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tierToCool": {
          "description": "The function to tier blobs to cool storage. Support blobs currently at Hot tier",
          "oneOf": [
            {
              "$ref": "#/definitions/DateAfterModification"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ManagementPolicyDefinition": {
      "description": "An object that defines the Lifecycle rule. Each definition is made up with a filters set and an actions set.",
      "properties": {
        "actions": {
          "description": "An object that defines the action set.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagementPolicyAction"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "filters": {
          "description": "An object that defines the filter set.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagementPolicyFilter"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "actions"
      ],
      "type": "object"
    },
    "ManagementPolicyFilter": {
      "description": "Filters limit rule actions to a subset of blobs within the storage account. If multiple filters are defined, a logical AND is performed on all filters. ",
      "properties": {
        "blobTypes": {
          "description": "An array of predefined enum values. Only blockBlob is supported.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "prefixMatch": {
          "description": "An array of strings for prefixes to be match.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "blobTypes"
      ],
      "type": "object"
    },
    "ManagementPolicyProperties": {
      "description": "The Storage Account ManagementPolicy properties.",
      "properties": {
        "policy": {
          "description": "The Storage Account ManagementPolicy, in JSON format. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagementPolicySchema"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "policy"
      ],
      "type": "object"
    },
    "ManagementPolicyRule": {
      "description": "An object that wraps the Lifecycle rule. Each rule is uniquely defined by name.",
      "properties": {
        "definition": {
          "description": "An object that defines the Lifecycle rule.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagementPolicyDefinition"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "enabled": {
          "description": "Rule is enabled if set to true.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "name": {
          "description": "A rule name can contain any combination of alpha numeric characters. Rule name is case-sensitive. It must be unique within a policy.",
          "type": "string"
        },
        "type": {
          "description": "The valid value is Lifecycle",
          "oneOf": [
            {
              "enum": [
                "Lifecycle"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "name",
        "type",
        "definition"
      ],
      "type": "object"
    },
    "ManagementPolicySchema": {
      "description": "The Storage Account ManagementPolicies Rules. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts.",
      "properties": {
        "rules": {
          "description": "The Storage Account ManagementPolicies Rules. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/ManagementPolicyRule"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "rules"
      ],
      "type": "object"
    },
    "ManagementPolicySnapShot": {
      "description": "Management policy action for snapshot.",
      "properties": {
        "delete": {
          "description": "The function to delete the blob snapshot",
          "oneOf": [
            {
              "$ref": "#/definitions/DateAfterCreation"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "NetworkRuleSet": {
      "description": "Network rule set",
      "properties": {
        "bypass": {
          "description": "Specifies whether traffic is bypassed for Logging/Metrics/AzureServices. Possible values are any combination of Logging|Metrics|AzureServices (For example, \"Logging, Metrics\"), or None to bypass none of those traffics.",
          "oneOf": [
            {
              "enum": [
                "None",
                "Logging",
                "Metrics",
                "AzureServices"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "defaultAction": {
          "description": "Specifies the default action of allow or deny when no other rules match.",
          "oneOf": [
            {
              "enum": [
                "Allow",
                "Deny"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "ipRules": {
          "description": "Sets the IP ACL rules",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/IPRule"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "virtualNetworkRules": {
          "description": "Sets the virtual network rules",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/VirtualNetworkRule"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "defaultAction"
      ],
      "type": "object"
    },
    "Restriction": {
      "description": "The restriction because of which SKU cannot be used.",
      "properties": {
        "reasonCode": {
          "description": "The reason for the restriction. As of now this can be \"QuotaId\" or \"NotAvailableForSubscription\". Quota Id is set when the SKU has requiredQuotas parameter as the subscription does not belong to that quota. The \"NotAvailableForSubscription\" is related to capacity at DC.",
          "oneOf": [
            {
              "enum": [
                "QuotaId",
                "NotAvailableForSubscription"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "Sku": {
      "description": "The SKU of the storage account.",
      "properties": {
        "name": {
          "description": "Gets or sets the SKU name. Required for account creation; optional for update. Note that in older versions, SKU name was called accountType.",
          "oneOf": [
            {
              "enum": [
                "Standard_LRS",
                "Standard_GRS",
                "Standard_RAGRS",
                "Standard_ZRS",
                "Premium_LRS",
                "Premium_ZRS",
                "Standard_GZRS",
                "Standard_RAGZRS"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "restrictions": {
          "description": "The restrictions because of which SKU cannot be used. This is empty if there are no restrictions.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/Restriction"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "StorageAccountPropertiesCreateParameters": {
      "description": "The parameters used to create the storage account.",
      "properties": {
        "accessTier": {
          "description": "Required for storage accounts where kind = BlobStorage. The access tier used for billing.",
          "oneOf": [
            {
              "enum": [
                "Hot",
                "Cool"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "allowBlobPublicAccess": {
          "description": "Allow or disallow public access to all blobs or containers in the storage account. The default interpretation is true for this property.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "allowSharedKeyAccess": {
          "description": "Indicates whether the storage account permits requests to be authorized with the account access key via Shared Key. If false, then all requests, including shared access signatures, must be authorized with Azure Active Directory (Azure AD). The default value is null, which is equivalent to true.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "azureFilesIdentityBasedAuthentication": {
          "description": "Provides the identity based authentication settings for Azure Files.",
          "oneOf": [
            {
              "$ref": "#/definitions/AzureFilesIdentityBasedAuthentication"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "customDomain": {
          "description": "User domain assigned to the storage account. Name is the CNAME source. Only one custom domain is supported per storage account at this time. To clear the existing custom domain, use an empty string for the custom domain name property.",
          "oneOf": [
            {
              "$ref": "#/definitions/CustomDomain"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "encryption": {
          "description": "Not applicable. Azure Storage encryption is enabled for all storage accounts and cannot be disabled.",
          "oneOf": [
            {
              "$ref": "#/definitions/Encryption"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "isHnsEnabled": {
          "description": "Account HierarchicalNamespace enabled if sets to true.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "largeFileSharesState": {
          "description": "Allow large file shares if sets to Enabled. It cannot be disabled once it is enabled.",
          "oneOf": [
            {
              "enum": [
                "Disabled",
                "Enabled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "minimumTlsVersion": {
          "description": "Set the minimum TLS version to be permitted on requests to storage. The default interpretation is TLS 1.0 for this property.",
          "oneOf": [
            {
              "enum": [
                "TLS1_0",
                "TLS1_1",
                "TLS1_2"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "networkAcls": {
          "description": "Network rule set",
          "oneOf": [
            {
              "$ref": "#/definitions/NetworkRuleSet"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "supportsHttpsTrafficOnly": {
          "description": "Allows https traffic only to storage service if sets to true. The default value is true since API version 2019-04-01.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "VirtualNetworkRule": {
      "description": "Virtual Network rule.",
      "properties": {
        "action": {
          "description": "The action of virtual network rule.",
          "oneOf": [
            {
              "enum": [
                "Allow"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "id": {
          "description": "Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}.",
          "type": "string"
        },
        "state": {
          "description": "Gets the state of virtual network rule.",
          "oneOf": [
            {
              "enum": [
                "provisioning",
                "deprovisioning",
                "succeeded",
                "failed",
                "networkSourceDeleted"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "id"
      ],
      "type": "object"
    },
    "storageAccounts_blobServices_childResource": {
      "description": "Microsoft.Storage/storageAccounts/blobServices",
      "properties": {
        "apiVersion": {
          "enum": [
            "2019-04-01"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the blob Service within the specified storage account. Blob Service Name must be 'default'",
          "oneOf": [
            {
              "enum": [
                "default"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The properties of a storage accountâ€™s Blob service.",
          "oneOf": [
            {
              "$ref": "#/definitions/BlobServicePropertiesProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "blobServices"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "storageAccounts_blobServices_containers_childResource": {
      "description": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "properties": {
        "apiVersion": {
          "enum": [
            "2019-04-01"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the blob container within the specified storage account. Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number.",
          "maxLength": 63,
          "minLength": 3,
          "type": "string"
        },
        "properties": {
          "description": "Properties of the blob container.",
          "oneOf": [
            {
              "$ref": "#/definitions/ContainerProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "containers"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "storageAccounts_blobServices_containers_immutabilityPolicies_childResource": {
      "description": "Microsoft.Storage/storageAccounts/blobServices/containers/immutabilityPolicies",
      "properties": {
        "apiVersion": {
          "enum": [
            "2019-04-01"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the blob container immutabilityPolicy within the specified storage account. ImmutabilityPolicy Name must be 'default'",
          "oneOf": [
            {
              "enum": [
                "default"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The properties of an ImmutabilityPolicy of a blob container.",
          "oneOf": [
            {
              "$ref": "#/definitions/ImmutabilityPolicyProperty"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "immutabilityPolicies"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "storageAccounts_fileServices_childResource": {
      "description": "Microsoft.Storage/storageAccounts/fileServices",
      "properties": {
        "apiVersion": {
          "enum": [
            "2019-04-01"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the file Service within the specified storage account. File Service Name must be \"default\"",
          "oneOf": [
            {
              "enum": [
                "default"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The properties of File services in storage account.",
          "oneOf": [
            {
              "$ref": "#/definitions/FileServicePropertiesProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "fileServices"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "storageAccounts_fileServices_shares_childResource": {
      "description": "Microsoft.Storage/storageAccounts/fileServices/shares",
      "properties": {
        "apiVersion": {
          "enum": [
            "2019-04-01"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the file share within the specified storage account. File share names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number.",
          "maxLength": 63,
          "minLength": 3,
          "type": "string"
        },
        "properties": {
          "description": "Properties of the file share.",
          "oneOf": [
            {
              "$ref": "#/definitions/FileShareProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "shares"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "storageAccounts_managementPolicies_childResource": {
      "description": "Microsoft.Storage/storageAccounts/managementPolicies",
      "properties": {
        "apiVersion": {
          "enum": [
            "2019-04-01"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the Storage Account Management Policy. It should always be 'default'",
          "oneOf": [
            {
              "enum": [
                "default"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Returns the Storage Account Data Policies Rules.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagementPolicyProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "managementPolicies"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    }
  }
}