{
  "id": "https://schema.management.azure.com/schemas/2019-04-01/Microsoft.Storage.json#",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "title": "Microsoft.Storage",
  "description": "Microsoft Storage Resource Types",
  "resourceDefinitions": {
    "storageAccounts": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "minLength": 3,
          "maxLength": 24,
          "description": "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Storage/storageAccounts"
          ]
        },
        "apiVersion": {
          "type": "string",
          "enum": [
            "2019-04-01"
          ]
        },
        "sku": {
          "oneOf": [
            {
              "$ref": "#/definitions/Sku"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Required. Gets or sets the SKU name."
        },
        "kind": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Storage",
                "StorageV2",
                "BlobStorage",
                "FileStorage",
                "BlockBlobStorage"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Required. Indicates the type of storage account."
        },
        "location": {
          "type": "string",
          "description": "Required. Gets or sets the location of the resource. This will be one of the supported and registered Azure Geo Regions (e.g. West US, East US, Southeast Asia, etc.). The geo region of a resource cannot be changed once it is created, but if an identical geo region is specified on update, the request will succeed."
        },
        "tags": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Gets or sets a list of key value pairs that describe the resource. These tags can be used for viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key with a length no greater than 128 characters and a value with a length no greater than 256 characters."
        },
        "identity": {
          "oneOf": [
            {
              "$ref": "#/definitions/Identity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The identity of the resource."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/StorageAccountPropertiesCreateParameters"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The parameters used to create the storage account."
        },
        "resources": {
          "type": "array",
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/storageAccounts_blobServices_childResource"
              },
              {
                "$ref": "#/definitions/storageAccounts_managementPolicies_childResource"
              }
            ]
          }
        }
      },
      "required": [
        "name",
        "type",
        "apiVersion",
        "sku",
        "kind",
        "location"
      ],
      "description": "Microsoft.Storage/storageAccounts"
    },
    "storageAccounts_blobServices": {
      "type": "object",
      "properties": {
        "name": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "default"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The name of the blob Service within the specified storage account. Blob Service Name must be 'default'"
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Storage/storageAccounts/blobServices"
          ]
        },
        "apiVersion": {
          "type": "string",
          "enum": [
            "2019-04-01"
          ]
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/BlobServicePropertiesProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The properties of a storage accountâ€™s Blob service."
        },
        "resources": {
          "type": "array",
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/storageAccounts_blobServices_containers_childResource"
              }
            ]
          }
        }
      },
      "required": [
        "name",
        "type",
        "apiVersion"
      ],
      "description": "Microsoft.Storage/storageAccounts/blobServices"
    },
    "storageAccounts_blobServices_containers": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "minLength": 3,
          "maxLength": 63,
          "description": "The name of the blob container within the specified storage account. Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Storage/storageAccounts/blobServices/containers"
          ]
        },
        "apiVersion": {
          "type": "string",
          "enum": [
            "2019-04-01"
          ]
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/ContainerProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Properties of the blob container."
        },
        "resources": {
          "type": "array",
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/storageAccounts_blobServices_containers_immutabilityPolicies_childResource"
              }
            ]
          }
        }
      },
      "required": [
        "name",
        "type",
        "apiVersion"
      ],
      "description": "Microsoft.Storage/storageAccounts/blobServices/containers"
    },
    "storageAccounts_blobServices_containers_immutabilityPolicies": {
      "type": "object",
      "properties": {
        "name": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "default"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The name of the blob container immutabilityPolicy within the specified storage account. ImmutabilityPolicy Name must be 'default'"
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Storage/storageAccounts/blobServices/containers/immutabilityPolicies"
          ]
        },
        "apiVersion": {
          "type": "string",
          "enum": [
            "2019-04-01"
          ]
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/ImmutabilityPolicyProperty"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The properties of an ImmutabilityPolicy of a blob container."
        }
      },
      "required": [
        "name",
        "type",
        "apiVersion"
      ],
      "description": "Microsoft.Storage/storageAccounts/blobServices/containers/immutabilityPolicies"
    },
    "storageAccounts_managementPolicies": {
      "type": "object",
      "properties": {
        "name": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "default"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The name of the Storage Account Management Policy. It should always be 'default'"
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Storage/storageAccounts/managementPolicies"
          ]
        },
        "apiVersion": {
          "type": "string",
          "enum": [
            "2019-04-01"
          ]
        }
      },
      "required": [
        "name",
        "type",
        "apiVersion"
      ],
      "description": "Microsoft.Storage/storageAccounts/managementPolicies"
    }
  },
  "definitions": {
    "BlobServicePropertiesProperties": {
      "type": "object",
      "properties": {
        "cors": {
          "oneOf": [
            {
              "$ref": "#/definitions/CorsRules"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Specifies CORS rules for the Blob service. You can include up to five CorsRule elements in the request. If no CorsRule elements are included in the request body, all CORS rules will be deleted, and CORS will be disabled for the Blob service."
        },
        "defaultServiceVersion": {
          "type": "string",
          "description": "DefaultServiceVersion indicates the default version to use for requests to the Blob service if an incoming requestâ€™s version is not specified. Possible values include version 2008-10-27 and all more recent versions."
        },
        "deleteRetentionPolicy": {
          "oneOf": [
            {
              "$ref": "#/definitions/DeleteRetentionPolicy"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The blob service properties for soft delete."
        },
        "automaticSnapshotPolicyEnabled": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Automatic Snapshot is enabled if set to true."
        }
      },
      "description": "The properties of a storage accountâ€™s Blob service."
    },
    "ContainerProperties": {
      "type": "object",
      "properties": {
        "publicAccess": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Container",
                "Blob",
                "None"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Specifies whether data in the container may be accessed publicly and the level of access."
        },
        "metadata": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "A name-value pair to associate with the container as metadata."
        }
      },
      "description": "The properties of a container."
    },
    "CorsRule": {
      "type": "object",
      "properties": {
        "allowedOrigins": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Required if CorsRule element is present. A list of origin domains that will be allowed via CORS, or \"*\" to allow all domains"
        },
        "allowedMethods": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "DELETE",
                  "GET",
                  "HEAD",
                  "MERGE",
                  "POST",
                  "OPTIONS",
                  "PUT"
                ]
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Required if CorsRule element is present. A list of HTTP methods that are allowed to be executed by the origin."
        },
        "maxAgeInSeconds": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Required if CorsRule element is present. The number of seconds that the client/browser should cache a preflight response."
        },
        "exposedHeaders": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Required if CorsRule element is present. A list of response headers to expose to CORS clients."
        },
        "allowedHeaders": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Required if CorsRule element is present. A list of headers allowed to be part of the cross-origin request."
        }
      },
      "required": [
        "allowedOrigins",
        "allowedMethods",
        "maxAgeInSeconds",
        "exposedHeaders",
        "allowedHeaders"
      ],
      "description": "Specifies a CORS rule for the Blob service."
    },
    "CorsRules": {
      "type": "object",
      "properties": {
        "corsRules": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CorsRule"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The List of CORS rules. You can include up to five CorsRule elements in the request. "
        }
      },
      "description": "Sets the CORS rules. You can include up to five CorsRule elements in the request. "
    },
    "CustomDomain": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Gets or sets the custom domain name assigned to the storage account. Name is the CNAME source."
        },
        "useSubDomainName": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Indicates whether indirect CName validation is enabled. Default value is false. This should only be set on updates."
        }
      },
      "required": [
        "name"
      ],
      "description": "The custom domain assigned to this storage account. This can be set via Update."
    },
    "DeleteRetentionPolicy": {
      "type": "object",
      "properties": {
        "enabled": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Indicates whether DeleteRetentionPolicy is enabled for the Blob service."
        },
        "days": {
          "oneOf": [
            {
              "type": "integer",
              "minimum": 1,
              "maximum": 365
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Indicates the number of days that the deleted blob should be retained. The minimum specified value can be 1 and the maximum value can be 365."
        }
      },
      "description": "The blob service properties for soft delete."
    },
    "Encryption": {
      "type": "object",
      "properties": {
        "services": {
          "oneOf": [
            {
              "$ref": "#/definitions/EncryptionServices"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "List of services which support encryption."
        },
        "keySource": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Microsoft.Storage",
                "Microsoft.Keyvault"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The encryption keySource (provider). Possible values (case-insensitive):  Microsoft.Storage, Microsoft.Keyvault."
        },
        "keyvaultproperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/KeyVaultProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Properties provided by key vault."
        }
      },
      "required": [
        "keySource"
      ],
      "description": "The encryption settings on the storage account."
    },
    "EncryptionService": {
      "type": "object",
      "properties": {
        "enabled": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "A boolean indicating whether or not the service encrypts the data as it is stored."
        }
      },
      "description": "A service that allows server-side encryption to be used."
    },
    "EncryptionServices": {
      "type": "object",
      "properties": {
        "blob": {
          "oneOf": [
            {
              "$ref": "#/definitions/EncryptionService"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The encryption function of the blob storage service."
        },
        "file": {
          "oneOf": [
            {
              "$ref": "#/definitions/EncryptionService"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The encryption function of the file storage service."
        }
      },
      "description": "A list of services that support encryption."
    },
    "Identity": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "SystemAssigned"
          ],
          "description": "The identity type."
        }
      },
      "required": [
        "type"
      ],
      "description": "Identity for the resource."
    },
    "ImmutabilityPolicyProperty": {
      "type": "object",
      "properties": {
        "immutabilityPeriodSinceCreationInDays": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The immutability period for the blobs in the container since the policy creation, in days."
        }
      },
      "required": [
        "immutabilityPeriodSinceCreationInDays"
      ],
      "description": "The properties of an ImmutabilityPolicy of a blob container."
    },
    "IPRule": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string",
          "description": "Specifies the IP or IP range in CIDR format. Only IPV4 address is allowed."
        },
        "action": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Allow"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The action of IP ACL rule."
        }
      },
      "required": [
        "value"
      ],
      "description": "IP rule with specific IP or IP range in CIDR format."
    },
    "KeyVaultProperties": {
      "type": "object",
      "properties": {
        "keyname": {
          "type": "string",
          "description": "The name of KeyVault key."
        },
        "keyversion": {
          "type": "string",
          "description": "The version of KeyVault key."
        },
        "keyvaulturi": {
          "type": "string",
          "description": "The Uri of KeyVault."
        }
      },
      "description": "Properties of key vault."
    },
    "NetworkRuleSet": {
      "type": "object",
      "properties": {
        "bypass": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "None",
                "Logging",
                "Metrics",
                "AzureServices"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Specifies whether traffic is bypassed for Logging/Metrics/AzureServices. Possible values are any combination of Logging|Metrics|AzureServices (For example, \"Logging, Metrics\"), or None to bypass none of those traffics."
        },
        "virtualNetworkRules": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/VirtualNetworkRule"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Sets the virtual network rules"
        },
        "ipRules": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/IPRule"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Sets the IP ACL rules"
        },
        "defaultAction": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Allow",
                "Deny"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Specifies the default action of allow or deny when no other rules match."
        }
      },
      "required": [
        "defaultAction"
      ],
      "description": "Network rule set"
    },
    "Restriction": {
      "type": "object",
      "properties": {
        "reasonCode": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "QuotaId",
                "NotAvailableForSubscription"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The reason for the restriction. As of now this can be \"QuotaId\" or \"NotAvailableForSubscription\". Quota Id is set when the SKU has requiredQuotas parameter as the subscription does not belong to that quota. The \"NotAvailableForSubscription\" is related to capacity at DC."
        }
      },
      "description": "The restriction because of which SKU cannot be used."
    },
    "Sku": {
      "type": "object",
      "properties": {
        "name": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Standard_LRS",
                "Standard_GRS",
                "Standard_RAGRS",
                "Standard_ZRS",
                "Premium_LRS",
                "Premium_ZRS",
                "Standard_GZRS",
                "Standard_RAGZRS"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Gets or sets the SKU name. Required for account creation; optional for update. Note that in older versions, SKU name was called accountType."
        },
        "restrictions": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Restriction"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The restrictions because of which SKU cannot be used. This is empty if there are no restrictions."
        }
      },
      "required": [
        "name"
      ],
      "description": "The SKU of the storage account."
    },
    "StorageAccountPropertiesCreateParameters": {
      "type": "object",
      "properties": {
        "customDomain": {
          "oneOf": [
            {
              "$ref": "#/definitions/CustomDomain"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "User domain assigned to the storage account. Name is the CNAME source. Only one custom domain is supported per storage account at this time. To clear the existing custom domain, use an empty string for the custom domain name property."
        },
        "encryption": {
          "oneOf": [
            {
              "$ref": "#/definitions/Encryption"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Provides the encryption settings on the account. If left unspecified the account encryption settings will remain the same. The default setting is unencrypted."
        },
        "networkAcls": {
          "oneOf": [
            {
              "$ref": "#/definitions/NetworkRuleSet"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Network rule set"
        },
        "accessTier": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Hot",
                "Cool"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Required for storage accounts where kind = BlobStorage. The access tier used for billing."
        },
        "azureFilesAadIntegration": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Enables Azure Files AAD Integration for SMB if sets to true."
        },
        "supportsHttpsTrafficOnly": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Allows https traffic only to storage service if sets to true."
        },
        "isHnsEnabled": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Account HierarchicalNamespace enabled if sets to true."
        }
      },
      "description": "The parameters used to create the storage account."
    },
    "storageAccounts_blobServices_childResource": {
      "type": "object",
      "properties": {
        "name": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "default"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The name of the blob Service within the specified storage account. Blob Service Name must be 'default'"
        },
        "type": {
          "type": "string",
          "enum": [
            "blobServices"
          ]
        },
        "apiVersion": {
          "type": "string",
          "enum": [
            "2019-04-01"
          ]
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/BlobServicePropertiesProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The properties of a storage accountâ€™s Blob service."
        },
        "resources": {
          "type": "array",
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/storageAccounts_blobServices_containers_childResource"
              }
            ]
          }
        }
      },
      "required": [
        "name",
        "type",
        "apiVersion"
      ],
      "description": "Microsoft.Storage/storageAccounts/blobServices"
    },
    "storageAccounts_blobServices_containers_childResource": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the blob container within the specified storage account. Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number."
        },
        "type": {
          "type": "string",
          "enum": [
            "containers"
          ]
        },
        "apiVersion": {
          "type": "string",
          "enum": [
            "2019-04-01"
          ]
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/ContainerProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Properties of the blob container."
        },
        "resources": {
          "type": "array",
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/storageAccounts_blobServices_containers_immutabilityPolicies_childResource"
              }
            ]
          }
        }
      },
      "required": [
        "name",
        "type",
        "apiVersion"
      ],
      "description": "Microsoft.Storage/storageAccounts/blobServices/containers"
    },
    "storageAccounts_blobServices_containers_immutabilityPolicies_childResource": {
      "type": "object",
      "properties": {
        "name": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "default"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The name of the blob container immutabilityPolicy within the specified storage account. ImmutabilityPolicy Name must be 'default'"
        },
        "type": {
          "type": "string",
          "enum": [
            "immutabilityPolicies"
          ]
        },
        "apiVersion": {
          "type": "string",
          "enum": [
            "2019-04-01"
          ]
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/ImmutabilityPolicyProperty"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The properties of an ImmutabilityPolicy of a blob container."
        }
      },
      "required": [
        "name",
        "type",
        "apiVersion"
      ],
      "description": "Microsoft.Storage/storageAccounts/blobServices/containers/immutabilityPolicies"
    },
    "storageAccounts_managementPolicies_childResource": {
      "type": "object",
      "properties": {
        "name": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "default"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The name of the Storage Account Management Policy. It should always be 'default'"
        },
        "type": {
          "type": "string",
          "enum": [
            "managementPolicies"
          ]
        },
        "apiVersion": {
          "type": "string",
          "enum": [
            "2019-04-01"
          ]
        }
      },
      "required": [
        "name",
        "type",
        "apiVersion"
      ],
      "description": "Microsoft.Storage/storageAccounts/managementPolicies"
    },
    "VirtualNetworkRule": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}."
        },
        "action": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Allow"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The action of virtual network rule."
        },
        "state": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "provisioning",
                "deprovisioning",
                "succeeded",
                "failed",
                "networkSourceDeleted"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Gets the state of virtual network rule."
        }
      },
      "required": [
        "id"
      ],
      "description": "Virtual Network rule."
    }
  }
}
