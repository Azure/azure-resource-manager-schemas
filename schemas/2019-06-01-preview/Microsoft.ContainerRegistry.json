{
  "id": "https://schema.management.azure.com/schemas/2019-06-01-preview/Microsoft.ContainerRegistry.json#",
  "title": "Microsoft.ContainerRegistry",
  "description": "Microsoft ContainerRegistry Resource Types",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "resourceDefinitions": {
    "registries_agentPools": {
      "description": "Microsoft.ContainerRegistry/registries/agentPools",
      "properties": {
        "apiVersion": {
          "enum": [
            "2019-06-01-preview"
          ],
          "type": "string"
        },
        "location": {
          "description": "The location of the resource. This cannot be changed after the resource is created.",
          "type": "string"
        },
        "name": {
          "description": "The name of the agent pool.",
          "oneOf": [
            {
              "maxLength": 20,
              "minLength": 3,
              "pattern": "^[a-zA-Z0-9-]*$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The properties associated with the agent pool",
          "oneOf": [
            {
              "$ref": "#/definitions/AgentPoolProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "The tags of the resource.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.ContainerRegistry/registries/agentPools"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "registries_taskRuns": {
      "description": "Microsoft.ContainerRegistry/registries/taskRuns",
      "properties": {
        "apiVersion": {
          "enum": [
            "2019-06-01-preview"
          ],
          "type": "string"
        },
        "identity": {
          "description": "Identity for the resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/IdentityProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "location": {
          "description": "The location of the resource",
          "type": "string"
        },
        "name": {
          "description": "The name of the task run.",
          "oneOf": [
            {
              "maxLength": 50,
              "minLength": 5,
              "pattern": "^[a-zA-Z0-9-]*$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The properties associated with the task run, i.e., request and result of the run",
          "oneOf": [
            {
              "$ref": "#/definitions/TaskRunProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.ContainerRegistry/registries/taskRuns"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "registries_tasks": {
      "description": "Microsoft.ContainerRegistry/registries/tasks",
      "properties": {
        "apiVersion": {
          "enum": [
            "2019-06-01-preview"
          ],
          "type": "string"
        },
        "identity": {
          "description": "Identity for the resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/IdentityProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "location": {
          "description": "The location of the resource. This cannot be changed after the resource is created.",
          "type": "string"
        },
        "name": {
          "description": "The name of the container registry task.",
          "oneOf": [
            {
              "maxLength": 50,
              "minLength": 5,
              "pattern": "^[a-zA-Z0-9-_]*$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The properties of a task.",
          "oneOf": [
            {
              "$ref": "#/definitions/TaskProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "The tags of the resource.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.ContainerRegistry/registries/tasks"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    }
  },
  "definitions": {
    "AgentPoolProperties": {
      "description": "The properties of agent pool.",
      "properties": {
        "count": {
          "description": "The count of agent machine",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "os": {
          "description": "The OS of agent machine",
          "oneOf": [
            {
              "enum": [
                "Windows",
                "Linux"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tier": {
          "description": "The Tier of agent machine",
          "type": "string"
        },
        "virtualNetworkSubnetResourceId": {
          "description": "The Virtual Network Subnet Resource Id of the agent machine",
          "type": "string"
        }
      },
      "type": "object"
    },
    "AgentProperties": {
      "description": "The properties that determine the run agent configuration.",
      "properties": {
        "cpu": {
          "description": "The CPU configuration in terms of number of cores required for the run.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "Argument": {
      "description": "The properties of a run argument.",
      "properties": {
        "isSecret": {
          "description": "Flag to indicate whether the argument represents a secret and want to be removed from build logs.",
          "oneOf": [
            {
              "default": false,
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "name": {
          "description": "The name of the argument.",
          "type": "string"
        },
        "value": {
          "description": "The value of the argument.",
          "type": "string"
        }
      },
      "required": [
        "name",
        "value"
      ],
      "type": "object"
    },
    "AuthInfo": {
      "description": "The authorization properties for accessing the source code repository.",
      "properties": {
        "expiresIn": {
          "description": "Time in seconds that the token remains valid",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "refreshToken": {
          "description": "The refresh token used to refresh the access token.",
          "type": "string"
        },
        "scope": {
          "description": "The scope of the access token.",
          "type": "string"
        },
        "token": {
          "description": "The access token used to access the source control provider.",
          "type": "string"
        },
        "tokenType": {
          "description": "The type of Auth token.",
          "oneOf": [
            {
              "enum": [
                "PAT",
                "OAuth"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "tokenType",
        "token"
      ],
      "type": "object"
    },
    "BaseImageTrigger": {
      "description": "The trigger based on base image dependency.",
      "properties": {
        "baseImageTriggerType": {
          "description": "The type of the auto trigger for base image dependency updates.",
          "oneOf": [
            {
              "enum": [
                "All",
                "Runtime"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "name": {
          "description": "The name of the trigger.",
          "type": "string"
        },
        "status": {
          "description": "The current status of trigger.",
          "oneOf": [
            {
              "enum": [
                "Disabled",
                "Enabled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "updateTriggerEndpoint": {
          "description": "The endpoint URL for receiving update triggers.",
          "type": "string"
        },
        "updateTriggerPayloadType": {
          "description": "Type of Payload body for Base image update triggers.",
          "oneOf": [
            {
              "enum": [
                "Default",
                "Token"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "baseImageTriggerType",
        "name"
      ],
      "type": "object"
    },
    "Credentials": {
      "description": "The parameters that describes a set of credentials that will be used when a run is invoked.",
      "properties": {
        "customRegistries": {
          "description": "Describes the credential parameters for accessing other custom registries. The key\r\nfor the dictionary item will be the registry login server (myregistry.azurecr.io) and\r\nthe value of the item will be the registry credentials for accessing the registry.",
          "oneOf": [
            {
              "additionalProperties": {
                "$ref": "#/definitions/CustomRegistryCredentials"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "sourceRegistry": {
          "description": "Describes the credential parameters for accessing the source registry.",
          "oneOf": [
            {
              "$ref": "#/definitions/SourceRegistryCredentials"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "CustomRegistryCredentials": {
      "description": "Describes the credentials that will be used to access a custom registry during a run.",
      "properties": {
        "identity": {
          "description": "Indicates the managed identity assigned to the custom credential. If a user-assigned identity\r\nthis value is the Client ID. If a system-assigned identity, the value will be `system`. In\r\nthe case of a system-assigned identity, the Client ID will be determined by the runner. This\r\nidentity may be used to authenticate to key vault to retrieve credentials or it may be the only \r\nsource of authentication used for accessing the registry.",
          "type": "string"
        },
        "password": {
          "description": "The password for logging into the custom registry. The password is a secret \r\nobject that allows multiple ways of providing the value for it.",
          "oneOf": [
            {
              "$ref": "#/definitions/SecretObject"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "userName": {
          "description": "The username for logging into the custom registry.",
          "oneOf": [
            {
              "$ref": "#/definitions/SecretObject"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "IdentityProperties": {
      "description": "Managed identity for the resource.",
      "properties": {
        "principalId": {
          "description": "The principal ID of resource identity.",
          "type": "string"
        },
        "tenantId": {
          "description": "The tenant ID of resource.",
          "type": "string"
        },
        "type": {
          "description": "The identity type.",
          "oneOf": [
            {
              "enum": [
                "SystemAssigned",
                "UserAssigned",
                "SystemAssigned, UserAssigned",
                "None"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "userAssignedIdentities": {
          "description": "The list of user identities associated with the resource. The user identity \r\ndictionary key references will be ARM resource ids in the form: \r\n'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/\r\n    providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.",
          "oneOf": [
            {
              "additionalProperties": {
                "$ref": "#/definitions/UserIdentityProperties"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "OverrideTaskStepProperties": {
      "properties": {
        "arguments": {
          "description": "Gets or sets the collection of override arguments to be used when\r\nexecuting a build step.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/Argument"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "contextPath": {
          "description": "The source context against which run has to be queued.",
          "type": "string"
        },
        "file": {
          "description": "The file against which run has to be queued.",
          "type": "string"
        },
        "target": {
          "description": "The name of the target build stage for the docker build.",
          "type": "string"
        },
        "updateTriggerToken": {
          "description": "Base64 encoded update trigger token that will be attached with the base image trigger webhook.",
          "type": "string"
        },
        "values": {
          "description": "The collection of overridable values that can be passed when running a Task.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/SetValue"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "PlatformProperties": {
      "description": "The platform properties against which the run has to happen.",
      "properties": {
        "architecture": {
          "description": "The OS architecture.",
          "oneOf": [
            {
              "enum": [
                "amd64",
                "x86",
                "386",
                "arm",
                "arm64"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "os": {
          "description": "The operating system type required for the run.",
          "oneOf": [
            {
              "enum": [
                "Windows",
                "Linux"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "variant": {
          "description": "Variant of the CPU.",
          "oneOf": [
            {
              "enum": [
                "v6",
                "v7",
                "v8"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "os"
      ],
      "type": "object"
    },
    "RunRequest": {
      "description": "The request parameters for scheduling a run.",
      "oneOf": [
        {
          "description": "The parameters for a docker quick build.",
          "properties": {
            "agentConfiguration": {
              "description": "The machine configuration of the run agent.",
              "oneOf": [
                {
                  "$ref": "#/definitions/AgentProperties"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "arguments": {
              "description": "The collection of override arguments to be used when executing the run.",
              "oneOf": [
                {
                  "items": {
                    "$ref": "#/definitions/Argument"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "credentials": {
              "description": "The properties that describes a set of credentials that will be used when this run is invoked.",
              "oneOf": [
                {
                  "$ref": "#/definitions/Credentials"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "dockerFilePath": {
              "description": "The Docker file path relative to the source location.",
              "type": "string"
            },
            "imageNames": {
              "description": "The fully qualified image names including the repository and tag.",
              "oneOf": [
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "isPushEnabled": {
              "description": "The value of this property indicates whether the image built should be pushed to the registry or not.",
              "oneOf": [
                {
                  "default": true,
                  "type": "boolean"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "noCache": {
              "description": "The value of this property indicates whether the image cache is enabled or not.",
              "oneOf": [
                {
                  "default": false,
                  "type": "boolean"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "platform": {
              "description": "The platform properties against which the run has to happen.",
              "oneOf": [
                {
                  "$ref": "#/definitions/PlatformProperties"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "sourceLocation": {
              "description": "The URL(absolute or relative) of the source context. It can be an URL to a tar or git repository.\r\nIf it is relative URL, the relative path should be obtained from calling listBuildSourceUploadUrl API.",
              "type": "string"
            },
            "target": {
              "description": "The name of the target build stage for the docker build.",
              "type": "string"
            },
            "timeout": {
              "description": "Run timeout in seconds.",
              "oneOf": [
                {
                  "default": 3600,
                  "maximum": 28800,
                  "minimum": 300,
                  "type": "integer"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "type": {
              "enum": [
                "DockerBuildRequest"
              ],
              "type": "string"
            }
          },
          "required": [
            "dockerFilePath",
            "platform",
            "type"
          ],
          "type": "object"
        },
        {
          "description": "The parameters for a quick task run request.",
          "properties": {
            "agentConfiguration": {
              "description": "The machine configuration of the run agent.",
              "oneOf": [
                {
                  "$ref": "#/definitions/AgentProperties"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "credentials": {
              "description": "The properties that describes a set of credentials that will be used when this run is invoked.",
              "oneOf": [
                {
                  "$ref": "#/definitions/Credentials"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "encodedTaskContent": {
              "description": "Base64 encoded value of the template/definition file content.",
              "type": "string"
            },
            "encodedValuesContent": {
              "description": "Base64 encoded value of the parameters/values file content.",
              "type": "string"
            },
            "platform": {
              "description": "The platform properties against which the run has to happen.",
              "oneOf": [
                {
                  "$ref": "#/definitions/PlatformProperties"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "sourceLocation": {
              "description": "The URL(absolute or relative) of the source context. It can be an URL to a tar or git repository.\r\nIf it is relative URL, the relative path should be obtained from calling listBuildSourceUploadUrl API.",
              "type": "string"
            },
            "timeout": {
              "description": "Run timeout in seconds.",
              "oneOf": [
                {
                  "default": 3600,
                  "maximum": 28800,
                  "minimum": 300,
                  "type": "integer"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "type": {
              "enum": [
                "EncodedTaskRunRequest"
              ],
              "type": "string"
            },
            "values": {
              "description": "The collection of overridable values that can be passed when running a task.",
              "oneOf": [
                {
                  "items": {
                    "$ref": "#/definitions/SetValue"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "encodedTaskContent",
            "platform",
            "type"
          ],
          "type": "object"
        },
        {
          "description": "The request parameters for a scheduling run against a task file.",
          "properties": {
            "agentConfiguration": {
              "description": "The machine configuration of the run agent.",
              "oneOf": [
                {
                  "$ref": "#/definitions/AgentProperties"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "credentials": {
              "description": "The properties that describes a set of credentials that will be used when this run is invoked.",
              "oneOf": [
                {
                  "$ref": "#/definitions/Credentials"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "platform": {
              "description": "The platform properties against which the run has to happen.",
              "oneOf": [
                {
                  "$ref": "#/definitions/PlatformProperties"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "sourceLocation": {
              "description": "The URL(absolute or relative) of the source context. It can be an URL to a tar or git repository.\r\nIf it is relative URL, the relative path should be obtained from calling listBuildSourceUploadUrl API.",
              "type": "string"
            },
            "taskFilePath": {
              "description": "The template/definition file path relative to the source.",
              "type": "string"
            },
            "timeout": {
              "description": "Run timeout in seconds.",
              "oneOf": [
                {
                  "default": 3600,
                  "maximum": 28800,
                  "minimum": 300,
                  "type": "integer"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "type": {
              "enum": [
                "FileTaskRunRequest"
              ],
              "type": "string"
            },
            "values": {
              "description": "The collection of overridable values that can be passed when running a task.",
              "oneOf": [
                {
                  "items": {
                    "$ref": "#/definitions/SetValue"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "valuesFilePath": {
              "description": "The values/parameters file path relative to the source.",
              "type": "string"
            }
          },
          "required": [
            "taskFilePath",
            "platform",
            "type"
          ],
          "type": "object"
        },
        {
          "description": "The parameters for a task run request.",
          "properties": {
            "overrideTaskStepProperties": {
              "description": "Set of overridable parameters that can be passed when running a Task.",
              "oneOf": [
                {
                  "$ref": "#/definitions/OverrideTaskStepProperties"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "taskId": {
              "description": "The resource ID of task against which run has to be queued.",
              "type": "string"
            },
            "type": {
              "enum": [
                "TaskRunRequest"
              ],
              "type": "string"
            }
          },
          "required": [
            "taskId",
            "type"
          ],
          "type": "object"
        }
      ],
      "properties": {
        "agentPoolName": {
          "description": "The dedicated agent pool for the run.",
          "type": "string"
        },
        "isArchiveEnabled": {
          "description": "The value that indicates whether archiving is enabled for the run or not.",
          "oneOf": [
            {
              "default": false,
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "logTemplate": {
          "description": "The template that describes the repository and tag information for run log artifact.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "SecretObject": {
      "description": "Describes the properties of a secret object value.",
      "properties": {
        "type": {
          "description": "The type of the secret object which determines how the value of the secret object has to be\r\ninterpreted.",
          "oneOf": [
            {
              "enum": [
                "Opaque",
                "Vaultsecret"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "value": {
          "description": "The value of the secret. The format of this value will be determined\r\nbased on the type of the secret object. If the type is Opaque, the value will be\r\nused as is without any modification.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "SetValue": {
      "description": "The properties of a overridable value that can be passed to a task template.",
      "properties": {
        "isSecret": {
          "description": "Flag to indicate whether the value represents a secret or not.",
          "oneOf": [
            {
              "default": false,
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "name": {
          "description": "The name of the overridable value.",
          "type": "string"
        },
        "value": {
          "description": "The overridable value.",
          "type": "string"
        }
      },
      "required": [
        "name",
        "value"
      ],
      "type": "object"
    },
    "SourceProperties": {
      "description": "The properties of the source code repository.",
      "properties": {
        "branch": {
          "description": "The branch name of the source code.",
          "type": "string"
        },
        "repositoryUrl": {
          "description": "The full URL to the source code repository",
          "type": "string"
        },
        "sourceControlAuthProperties": {
          "description": "The authorization properties for accessing the source code repository and to set up\r\nwebhooks for notifications.",
          "oneOf": [
            {
              "$ref": "#/definitions/AuthInfo"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "sourceControlType": {
          "description": "The type of source control service.",
          "oneOf": [
            {
              "enum": [
                "Github",
                "VisualStudioTeamService"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "sourceControlType",
        "repositoryUrl"
      ],
      "type": "object"
    },
    "SourceRegistryCredentials": {
      "description": "Describes the credential parameters for accessing the source registry.",
      "properties": {
        "loginMode": {
          "description": "The authentication mode which determines the source registry login scope. The credentials for the source registry\r\nwill be generated using the given scope. These credentials will be used to login to\r\nthe source registry during the run.",
          "oneOf": [
            {
              "enum": [
                "None",
                "Default"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "SourceTrigger": {
      "description": "The properties of a source based trigger.",
      "properties": {
        "name": {
          "description": "The name of the trigger.",
          "type": "string"
        },
        "sourceRepository": {
          "description": "The properties that describes the source(code) for the task.",
          "oneOf": [
            {
              "$ref": "#/definitions/SourceProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "sourceTriggerEvents": {
          "description": "The source event corresponding to the trigger.",
          "oneOf": [
            {
              "items": {
                "enum": [
                  "commit",
                  "pullrequest"
                ],
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "status": {
          "description": "The current status of trigger.",
          "oneOf": [
            {
              "enum": [
                "Disabled",
                "Enabled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "sourceRepository",
        "sourceTriggerEvents",
        "name"
      ],
      "type": "object"
    },
    "TaskProperties": {
      "description": "The properties of a task.",
      "properties": {
        "agentConfiguration": {
          "description": "The machine configuration of the run agent.",
          "oneOf": [
            {
              "$ref": "#/definitions/AgentProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "agentPoolName": {
          "description": "The dedicated agent pool for the task.",
          "type": "string"
        },
        "credentials": {
          "description": "The properties that describes a set of credentials that will be used when this run is invoked.",
          "oneOf": [
            {
              "$ref": "#/definitions/Credentials"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "isSystemTask": {
          "description": "The value of this property indicates whether the task resource is system task or not.",
          "oneOf": [
            {
              "default": false,
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "logTemplate": {
          "description": "The template that describes the repository and tag information for run log artifact.",
          "type": "string"
        },
        "platform": {
          "description": "The platform properties against which the run has to happen.",
          "oneOf": [
            {
              "$ref": "#/definitions/PlatformProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "status": {
          "description": "The current status of task.",
          "oneOf": [
            {
              "enum": [
                "Disabled",
                "Enabled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "step": {
          "description": "The properties of a task step.",
          "oneOf": [
            {
              "$ref": "#/definitions/TaskStepProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "timeout": {
          "description": "Run timeout in seconds.",
          "oneOf": [
            {
              "default": 3600,
              "maximum": 28800,
              "minimum": 300,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "trigger": {
          "description": "The properties that describe all triggers for the task.",
          "oneOf": [
            {
              "$ref": "#/definitions/TriggerProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "TaskRunProperties": {
      "description": "The properties of task run.",
      "properties": {
        "forceUpdateTag": {
          "description": "How the run should be forced to rerun even if the run request configuration has not changed",
          "type": "string"
        },
        "runRequest": {
          "description": "The request (parameters) for the run",
          "oneOf": [
            {
              "$ref": "#/definitions/RunRequest"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "TaskStepProperties": {
      "description": "Base properties for any task step.",
      "oneOf": [
        {
          "description": "The Docker build step.",
          "properties": {
            "arguments": {
              "description": "The collection of override arguments to be used when executing this build step.",
              "oneOf": [
                {
                  "items": {
                    "$ref": "#/definitions/Argument"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "dockerFilePath": {
              "description": "The Docker file path relative to the source context.",
              "type": "string"
            },
            "imageNames": {
              "description": "The fully qualified image names including the repository and tag.",
              "oneOf": [
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "isPushEnabled": {
              "description": "The value of this property indicates whether the image built should be pushed to the registry or not.",
              "oneOf": [
                {
                  "default": true,
                  "type": "boolean"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "noCache": {
              "description": "The value of this property indicates whether the image cache is enabled or not.",
              "oneOf": [
                {
                  "default": false,
                  "type": "boolean"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "target": {
              "description": "The name of the target build stage for the docker build.",
              "type": "string"
            },
            "type": {
              "enum": [
                "Docker"
              ],
              "type": "string"
            }
          },
          "required": [
            "dockerFilePath",
            "type"
          ],
          "type": "object"
        },
        {
          "description": "The properties of a encoded task step.",
          "properties": {
            "encodedTaskContent": {
              "description": "Base64 encoded value of the template/definition file content.",
              "type": "string"
            },
            "encodedValuesContent": {
              "description": "Base64 encoded value of the parameters/values file content.",
              "type": "string"
            },
            "type": {
              "enum": [
                "EncodedTask"
              ],
              "type": "string"
            },
            "values": {
              "description": "The collection of overridable values that can be passed when running a task.",
              "oneOf": [
                {
                  "items": {
                    "$ref": "#/definitions/SetValue"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "encodedTaskContent",
            "type"
          ],
          "type": "object"
        },
        {
          "description": "The properties of a task step.",
          "properties": {
            "taskFilePath": {
              "description": "The task template/definition file path relative to the source context.",
              "type": "string"
            },
            "type": {
              "enum": [
                "FileTask"
              ],
              "type": "string"
            },
            "values": {
              "description": "The collection of overridable values that can be passed when running a task.",
              "oneOf": [
                {
                  "items": {
                    "$ref": "#/definitions/SetValue"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "valuesFilePath": {
              "description": "The task values/parameters file path relative to the source context.",
              "type": "string"
            }
          },
          "required": [
            "taskFilePath",
            "type"
          ],
          "type": "object"
        }
      ],
      "properties": {
        "contextAccessToken": {
          "description": "The token (git PAT or SAS token of storage account blob) associated with the context for a step.",
          "type": "string"
        },
        "contextPath": {
          "description": "The URL(absolute or relative) of the source context for the task step.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "TimerTrigger": {
      "description": "The properties of a timer trigger.",
      "properties": {
        "name": {
          "description": "The name of the trigger.",
          "type": "string"
        },
        "schedule": {
          "description": "The CRON expression for the task schedule",
          "type": "string"
        },
        "status": {
          "description": "The current status of trigger.",
          "oneOf": [
            {
              "enum": [
                "Disabled",
                "Enabled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "schedule",
        "name"
      ],
      "type": "object"
    },
    "TriggerProperties": {
      "description": "The properties of a trigger.",
      "properties": {
        "baseImageTrigger": {
          "description": "The trigger based on base image dependencies.",
          "oneOf": [
            {
              "$ref": "#/definitions/BaseImageTrigger"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "sourceTriggers": {
          "description": "The collection of triggers based on source code repository.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/SourceTrigger"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "timerTriggers": {
          "description": "The collection of timer triggers.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/TimerTrigger"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "UserIdentityProperties": {
      "properties": {
        "clientId": {
          "description": "The client id of user assigned identity.",
          "type": "string"
        },
        "principalId": {
          "description": "The principal id of user assigned identity.",
          "type": "string"
        }
      },
      "type": "object"
    }
  }
}