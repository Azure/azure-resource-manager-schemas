{
  "id": "https://schema.management.azure.com/schemas/2019-06-01-preview/Microsoft.Sql.json#",
  "title": "Microsoft.Sql",
  "description": "Microsoft Sql Resource Types",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "resourceDefinitions": {
    "managedInstances_databases": {
      "description": "Microsoft.Sql/managedInstances/databases",
      "properties": {
        "apiVersion": {
          "enum": [
            "2019-06-01-preview"
          ],
          "type": "string"
        },
        "location": {
          "description": "Resource location.",
          "type": "string"
        },
        "name": {
          "description": "The name of the database.",
          "type": "string"
        },
        "properties": {
          "description": "Resource properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedDatabaseProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Resource tags.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.Sql/managedInstances/databases"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "servers": {
      "description": "Microsoft.Sql/servers",
      "properties": {
        "apiVersion": {
          "enum": [
            "2019-06-01-preview"
          ],
          "type": "string"
        },
        "identity": {
          "description": "The Azure Active Directory identity of the server.",
          "oneOf": [
            {
              "$ref": "#/definitions/ResourceIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "location": {
          "description": "Resource location.",
          "type": "string"
        },
        "name": {
          "description": "The name of the server.",
          "type": "string"
        },
        "properties": {
          "description": "Resource properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/ServerProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/servers_databases_childResource"
              },
              {
                "$ref": "#/definitions/servers_administrators_childResource"
              }
            ]
          },
          "type": "array"
        },
        "tags": {
          "description": "Resource tags.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.Sql/servers"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "servers_administrators": {
      "description": "Microsoft.Sql/servers/administrators",
      "properties": {
        "apiVersion": {
          "enum": [
            "2019-06-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of server active directory administrator.",
          "oneOf": [
            {
              "pattern": "^.*/ActiveDirectory$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Resource properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/AdministratorProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.Sql/servers/administrators"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "servers_databases": {
      "description": "Microsoft.Sql/servers/databases",
      "properties": {
        "apiVersion": {
          "enum": [
            "2019-06-01-preview"
          ],
          "type": "string"
        },
        "location": {
          "description": "Resource location.",
          "type": "string"
        },
        "name": {
          "description": "The name of the database.",
          "type": "string"
        },
        "properties": {
          "description": "Resource properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/DatabaseProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/servers_databases_syncGroups_childResource"
              },
              {
                "$ref": "#/definitions/servers_databases_workloadGroups_childResource"
              }
            ]
          },
          "type": "array"
        },
        "sku": {
          "description": "The database SKU.\r\n\r\nThe list of SKUs may vary by region and support offer. To determine the SKUs (including the SKU name, tier/edition, family, and capacity) that are available to your subscription in an Azure region, use the `Capabilities_ListByLocation` REST API or one of the following commands:\r\n\r\n```azurecli\r\naz sql db list-editions -l <location> -o table\r\n````\r\n\r\n```powershell\r\nGet-AzSqlServerServiceObjective -Location <location>\r\n````\r\n",
          "oneOf": [
            {
              "$ref": "#/definitions/Sku"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Resource tags.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.Sql/servers/databases"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "servers_databases_syncGroups": {
      "description": "Microsoft.Sql/servers/databases/syncGroups",
      "properties": {
        "apiVersion": {
          "enum": [
            "2019-06-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the sync group.",
          "type": "string"
        },
        "properties": {
          "description": "Resource properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/SyncGroupProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/servers_databases_syncGroups_syncMembers_childResource"
              }
            ]
          },
          "type": "array"
        },
        "type": {
          "enum": [
            "Microsoft.Sql/servers/databases/syncGroups"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "servers_databases_syncGroups_syncMembers": {
      "description": "Microsoft.Sql/servers/databases/syncGroups/syncMembers",
      "properties": {
        "apiVersion": {
          "enum": [
            "2019-06-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the sync member.",
          "type": "string"
        },
        "properties": {
          "description": "Resource properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/SyncMemberProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.Sql/servers/databases/syncGroups/syncMembers"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "servers_databases_workloadGroups": {
      "description": "Microsoft.Sql/servers/databases/workloadGroups",
      "properties": {
        "apiVersion": {
          "enum": [
            "2019-06-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the workload group.",
          "type": "string"
        },
        "properties": {
          "description": "Resource properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/WorkloadGroupProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/servers_databases_workloadGroups_workloadClassifiers_childResource"
              }
            ]
          },
          "type": "array"
        },
        "type": {
          "enum": [
            "Microsoft.Sql/servers/databases/workloadGroups"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "servers_databases_workloadGroups_workloadClassifiers": {
      "description": "Microsoft.Sql/servers/databases/workloadGroups/workloadClassifiers",
      "properties": {
        "apiVersion": {
          "enum": [
            "2019-06-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the workload classifier to create/update.",
          "type": "string"
        },
        "properties": {
          "description": "Resource properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/WorkloadClassifierProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.Sql/servers/databases/workloadGroups/workloadClassifiers"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    }
  },
  "definitions": {
    "AdministratorProperties": {
      "description": "Properties of a active directory administrator.",
      "properties": {
        "administratorType": {
          "description": "Type of the sever administrator.",
          "oneOf": [
            {
              "enum": [
                "ActiveDirectory"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "login": {
          "description": "Login name of the server administrator.",
          "type": "string"
        },
        "sid": {
          "description": "SID (object ID) of the server administrator.",
          "oneOf": [
            {
              "pattern": "^[0-9a-fA-F]{8}(-[0-9a-fA-F]{4}){3}-[0-9a-fA-F]{12}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tenantId": {
          "description": "Tenant ID of the administrator.",
          "oneOf": [
            {
              "pattern": "^[0-9a-fA-F]{8}(-[0-9a-fA-F]{4}){3}-[0-9a-fA-F]{12}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "administratorType",
        "login",
        "sid"
      ],
      "type": "object"
    },
    "DatabaseProperties": {
      "description": "The database's properties.",
      "properties": {
        "autoPauseDelay": {
          "description": "Time in minutes after which database is automatically paused. A value of -1 means that automatic pause is disabled",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "catalogCollation": {
          "description": "Collation of the metadata catalog.",
          "oneOf": [
            {
              "enum": [
                "DATABASE_DEFAULT",
                "SQL_Latin1_General_CP1_CI_AS"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "collation": {
          "description": "The collation of the database.",
          "type": "string"
        },
        "createMode": {
          "description": "Specifies the mode of database creation.\r\n\r\nDefault: regular database creation.\r\n\r\nCopy: creates a database as a copy of an existing database. sourceDatabaseId must be specified as the resource ID of the source database.\r\n\r\nSecondary: creates a database as a secondary replica of an existing database. sourceDatabaseId must be specified as the resource ID of the existing primary database.\r\n\r\nPointInTimeRestore: Creates a database by restoring a point in time backup of an existing database. sourceDatabaseId must be specified as the resource ID of the existing database, and restorePointInTime must be specified.\r\n\r\nRecovery: Creates a database by restoring a geo-replicated backup. sourceDatabaseId must be specified as the recoverable database resource ID to restore.\r\n\r\nRestore: Creates a database by restoring a backup of a deleted database. sourceDatabaseId must be specified. If sourceDatabaseId is the database's original resource ID, then sourceDatabaseDeletionDate must be specified. Otherwise sourceDatabaseId must be the restorable dropped database resource ID and sourceDatabaseDeletionDate is ignored. restorePointInTime may also be specified to restore from an earlier point in time.\r\n\r\nRestoreLongTermRetentionBackup: Creates a database by restoring from a long term retention vault. recoveryServicesRecoveryPointResourceId must be specified as the recovery point resource ID.\r\n\r\nCopy, Secondary, and RestoreLongTermRetentionBackup are not supported for DataWarehouse edition.",
          "oneOf": [
            {
              "enum": [
                "Default",
                "Copy",
                "Secondary",
                "PointInTimeRestore",
                "Restore",
                "Recovery",
                "RestoreExternalBackup",
                "RestoreExternalBackupSecondary",
                "RestoreLongTermRetentionBackup",
                "OnlineSecondary"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "elasticPoolId": {
          "description": "The resource identifier of the elastic pool containing this database.",
          "type": "string"
        },
        "licenseType": {
          "description": "The license type to apply for this database. `LicenseIncluded` if you need a license, or `BasePrice` if you have a license and are eligible for the Azure Hybrid Benefit.",
          "oneOf": [
            {
              "enum": [
                "LicenseIncluded",
                "BasePrice"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "longTermRetentionBackupResourceId": {
          "description": "The resource identifier of the long term retention backup associated with create operation of this database.",
          "type": "string"
        },
        "maxSizeBytes": {
          "description": "The max size of the database expressed in bytes.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "minCapacity": {
          "description": "Minimal capacity that database will always have allocated, if not paused",
          "oneOf": [
            {
              "type": "number"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "readReplicaCount": {
          "description": "The number of readonly secondary replicas associated with the database.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "readScale": {
          "description": "The state of read-only routing. If enabled, connections that have application intent set to readonly in their connection string may be routed to a readonly secondary replica in the same region.",
          "oneOf": [
            {
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "recoverableDatabaseId": {
          "description": "The resource identifier of the recoverable database associated with create operation of this database.",
          "type": "string"
        },
        "recoveryServicesRecoveryPointId": {
          "description": "The resource identifier of the recovery point associated with create operation of this database.",
          "type": "string"
        },
        "restorableDroppedDatabaseId": {
          "description": "The resource identifier of the restorable dropped database associated with create operation of this database.",
          "type": "string"
        },
        "restorePointInTime": {
          "description": "Specifies the point in time (ISO8601 format) of the source database that will be restored to create the new database.",
          "format": "date-time",
          "type": "string"
        },
        "sampleName": {
          "description": "The name of the sample schema to apply when creating this database.",
          "oneOf": [
            {
              "enum": [
                "AdventureWorksLT",
                "WideWorldImportersStd",
                "WideWorldImportersFull"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "sourceDatabaseDeletionDate": {
          "description": "Specifies the time that the database was deleted.",
          "format": "date-time",
          "type": "string"
        },
        "sourceDatabaseId": {
          "description": "The resource identifier of the source database associated with create operation of this database.",
          "type": "string"
        },
        "sourceResourceId": {
          "description": "The resource identifier of the source associated with the create operation of this database.\r\n\r\nWhen sourceResourceId is specified, sourceDatabaseId, recoverableDatabaseId, restorableDroppedDatabaseId and sourceDatabaseDeletionDate must not be specified and CreateMode must be PointInTimeRestore, Restore or Recover.\r\n\r\nWhen createMode is PointInTimeRestore, sourceResourceId must be the resource ID of an existing database or existing sql pool, and restorePointInTime must be specified.\r\n\r\nWhen createMode is Restore, sourceResourceId must be the resource ID of restorable dropped database or restorable dropped sql pool.\r\n\r\nWhen createMode is Recover, sourceResourceId must be the resource ID of recoverable database or recoverable sql pool.\r\n\r\nThis property allows to restore across subscriptions which is only supported for DataWarehouse edition.\r\n\r\nWhen source subscription belongs to a different tenant than target subscription, “x-ms-authorization-auxiliary” header must contain authentication token for the source tenant. For more details about “x-ms-authorization-auxiliary” header see https://docs.microsoft.com/en-us/azure/azure-resource-manager/management/authenticate-multi-tenant ",
          "type": "string"
        },
        "storageAccountType": {
          "description": "The storage account type used to store backups for this database.",
          "oneOf": [
            {
              "enum": [
                "GRS",
                "LRS",
                "ZRS"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "zoneRedundant": {
          "description": "Whether or not this database is zone redundant, which means the replicas of this database will be spread across multiple availability zones.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ManagedDatabaseProperties": {
      "description": "The managed database's properties.",
      "properties": {
        "catalogCollation": {
          "description": "Collation of the metadata catalog.",
          "oneOf": [
            {
              "enum": [
                "DATABASE_DEFAULT",
                "SQL_Latin1_General_CP1_CI_AS"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "collation": {
          "description": "Collation of the managed database.",
          "type": "string"
        },
        "createMode": {
          "description": "Managed database create mode. PointInTimeRestore: Create a database by restoring a point in time backup of an existing database. SourceDatabaseName, SourceManagedInstanceName and PointInTime must be specified. RestoreExternalBackup: Create a database by restoring from external backup files. Collation, StorageContainerUri and StorageContainerSasToken must be specified. Recovery: Creates a database by restoring a geo-replicated backup. RecoverableDatabaseId must be specified as the recoverable database resource ID to restore. RestoreLongTermRetentionBackup: Create a database by restoring from a long term retention backup (longTermRetentionBackupResourceId required).",
          "oneOf": [
            {
              "enum": [
                "Default",
                "RestoreExternalBackup",
                "PointInTimeRestore",
                "Recovery",
                "RestoreLongTermRetentionBackup"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "longTermRetentionBackupResourceId": {
          "description": "The name of the Long Term Retention backup to be used for restore of this managed database.",
          "type": "string"
        },
        "recoverableDatabaseId": {
          "description": "The resource identifier of the recoverable database associated with create operation of this database.",
          "type": "string"
        },
        "restorableDroppedDatabaseId": {
          "description": "The restorable dropped database resource id to restore when creating this database.",
          "type": "string"
        },
        "restorePointInTime": {
          "description": "Conditional. If createMode is PointInTimeRestore, this value is required. Specifies the point in time (ISO8601 format) of the source database that will be restored to create the new database.",
          "format": "date-time",
          "type": "string"
        },
        "sourceDatabaseId": {
          "description": "The resource identifier of the source database associated with create operation of this database.",
          "type": "string"
        },
        "storageContainerSasToken": {
          "description": "Conditional. If createMode is RestoreExternalBackup, this value is required. Specifies the storage container sas token.",
          "type": "string"
        },
        "storageContainerUri": {
          "description": "Conditional. If createMode is RestoreExternalBackup, this value is required. Specifies the uri of the storage container where backups for this restore are stored.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ResourceIdentity": {
      "description": "Azure Active Directory identity configuration for a resource.",
      "properties": {
        "type": {
          "description": "The identity type. Set this to 'SystemAssigned' in order to automatically create and assign an Azure Active Directory principal for the resource.",
          "oneOf": [
            {
              "enum": [
                "None",
                "SystemAssigned",
                "UserAssigned",
                "SystemAssigned,UserAssigned"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ServerProperties": {
      "description": "The properties of a server.",
      "properties": {
        "administratorLogin": {
          "description": "Administrator username for the server. Once created it cannot be changed.",
          "type": "string"
        },
        "administratorLoginPassword": {
          "description": "The administrator login password (required for server creation).",
          "type": "string"
        },
        "minimalTlsVersion": {
          "description": "Minimal TLS version. Allowed values: '1.0', '1.1', '1.2'",
          "type": "string"
        },
        "publicNetworkAccess": {
          "description": "Whether or not public endpoint access is allowed for this server.  Value is optional but if passed in, must be 'Enabled' or 'Disabled'",
          "oneOf": [
            {
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "version": {
          "description": "The version of the server.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Sku": {
      "description": "An ARM Resource SKU.",
      "properties": {
        "capacity": {
          "description": "Capacity of the particular SKU.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "family": {
          "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here.",
          "type": "string"
        },
        "name": {
          "description": "The name of the SKU, typically, a letter + Number code, e.g. P3.",
          "type": "string"
        },
        "size": {
          "description": "Size of the particular SKU",
          "type": "string"
        },
        "tier": {
          "description": "The tier or edition of the particular SKU, e.g. Basic, Premium.",
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "SyncGroupProperties": {
      "description": "Properties of a sync group.",
      "properties": {
        "conflictResolutionPolicy": {
          "description": "Conflict resolution policy of the sync group.",
          "oneOf": [
            {
              "enum": [
                "HubWin",
                "MemberWin"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "hubDatabasePassword": {
          "description": "Password for the sync group hub database credential.",
          "type": "string"
        },
        "hubDatabaseUserName": {
          "description": "User name for the sync group hub database credential.",
          "type": "string"
        },
        "interval": {
          "description": "Sync interval of the sync group.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "schema": {
          "description": "Sync schema of the sync group.",
          "oneOf": [
            {
              "$ref": "#/definitions/SyncGroupSchema"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "syncDatabaseId": {
          "description": "ARM resource id of the sync database in the sync group.",
          "type": "string"
        },
        "usePrivateLinkConnection": {
          "description": "If use private link connection is enabled.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "SyncGroupSchema": {
      "description": "Properties of sync group schema.",
      "properties": {
        "masterSyncMemberName": {
          "description": "Name of master sync member where the schema is from.",
          "type": "string"
        },
        "tables": {
          "description": "List of tables in sync group schema.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/SyncGroupSchemaTable"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "SyncGroupSchemaTable": {
      "description": "Properties of table in sync group schema.",
      "properties": {
        "columns": {
          "description": "List of columns in sync group schema.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/SyncGroupSchemaTableColumn"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "quotedName": {
          "description": "Quoted name of sync group schema table.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "SyncGroupSchemaTableColumn": {
      "description": "Properties of column in sync group table.",
      "properties": {
        "dataSize": {
          "description": "Data size of the column.",
          "type": "string"
        },
        "dataType": {
          "description": "Data type of the column.",
          "type": "string"
        },
        "quotedName": {
          "description": "Quoted name of sync group table column.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "SyncMemberProperties": {
      "description": "Properties of a sync member.",
      "properties": {
        "databaseName": {
          "description": "Database name of the member database in the sync member.",
          "type": "string"
        },
        "databaseType": {
          "description": "Database type of the sync member.",
          "oneOf": [
            {
              "enum": [
                "AzureSqlDatabase",
                "SqlServerDatabase"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "password": {
          "description": "Password of the member database in the sync member.",
          "type": "string"
        },
        "serverName": {
          "description": "Server name of the member database in the sync member",
          "type": "string"
        },
        "sqlServerDatabaseId": {
          "description": "SQL Server database id of the sync member.",
          "oneOf": [
            {
              "pattern": "^[0-9a-fA-F]{8}(-[0-9a-fA-F]{4}){3}-[0-9a-fA-F]{12}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "syncAgentId": {
          "description": "ARM resource id of the sync agent in the sync member.",
          "type": "string"
        },
        "syncDirection": {
          "description": "Sync direction of the sync member.",
          "oneOf": [
            {
              "enum": [
                "Bidirectional",
                "OneWayMemberToHub",
                "OneWayHubToMember"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "syncMemberAzureDatabaseResourceId": {
          "description": "ARM resource id of the sync member logical database, for sync members in Azure.",
          "type": "string"
        },
        "usePrivateLinkConnection": {
          "description": "Whether to use private link connection.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "userName": {
          "description": "User name of the member database in the sync member.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "WorkloadClassifierProperties": {
      "description": "Workload classifier definition. For more information look at sys.workload_management_workload_classifiers (DMV).",
      "properties": {
        "context": {
          "description": "The workload classifier context.",
          "type": "string"
        },
        "endTime": {
          "description": "The workload classifier end time for classification.",
          "type": "string"
        },
        "importance": {
          "description": "The workload classifier importance.",
          "type": "string"
        },
        "label": {
          "description": "The workload classifier label.",
          "type": "string"
        },
        "memberName": {
          "description": "The workload classifier member name.",
          "type": "string"
        },
        "startTime": {
          "description": "The workload classifier start time for classification.",
          "type": "string"
        }
      },
      "required": [
        "memberName"
      ],
      "type": "object"
    },
    "WorkloadGroupProperties": {
      "description": "Workload group definition. For more information look at sys.workload_management_workload_groups (DMV).",
      "properties": {
        "importance": {
          "description": "The workload group importance level.",
          "type": "string"
        },
        "maxResourcePercent": {
          "description": "The workload group cap percentage resource.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "maxResourcePercentPerRequest": {
          "description": "The workload group request maximum grant percentage.",
          "oneOf": [
            {
              "type": "number"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "minResourcePercent": {
          "description": "The workload group minimum percentage resource.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "minResourcePercentPerRequest": {
          "description": "The workload group request minimum grant percentage.",
          "oneOf": [
            {
              "type": "number"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "queryExecutionTimeout": {
          "description": "The workload group query execution timeout.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "minResourcePercent",
        "maxResourcePercent",
        "minResourcePercentPerRequest"
      ],
      "type": "object"
    },
    "servers_administrators_childResource": {
      "description": "Microsoft.Sql/servers/administrators",
      "properties": {
        "apiVersion": {
          "enum": [
            "2019-06-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of server active directory administrator.",
          "oneOf": [
            {
              "enum": [
                "ActiveDirectory"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Resource properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/AdministratorProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "administrators"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "servers_databases_childResource": {
      "description": "Microsoft.Sql/servers/databases",
      "properties": {
        "apiVersion": {
          "enum": [
            "2019-06-01-preview"
          ],
          "type": "string"
        },
        "location": {
          "description": "Resource location.",
          "type": "string"
        },
        "name": {
          "description": "The name of the database.",
          "type": "string"
        },
        "properties": {
          "description": "Resource properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/DatabaseProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "sku": {
          "description": "The database SKU.\r\n\r\nThe list of SKUs may vary by region and support offer. To determine the SKUs (including the SKU name, tier/edition, family, and capacity) that are available to your subscription in an Azure region, use the `Capabilities_ListByLocation` REST API or one of the following commands:\r\n\r\n```azurecli\r\naz sql db list-editions -l <location> -o table\r\n````\r\n\r\n```powershell\r\nGet-AzSqlServerServiceObjective -Location <location>\r\n````\r\n",
          "oneOf": [
            {
              "$ref": "#/definitions/Sku"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Resource tags.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "databases"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "servers_databases_syncGroups_childResource": {
      "description": "Microsoft.Sql/servers/databases/syncGroups",
      "properties": {
        "apiVersion": {
          "enum": [
            "2019-06-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the sync group.",
          "type": "string"
        },
        "properties": {
          "description": "Resource properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/SyncGroupProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "syncGroups"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "servers_databases_syncGroups_syncMembers_childResource": {
      "description": "Microsoft.Sql/servers/databases/syncGroups/syncMembers",
      "properties": {
        "apiVersion": {
          "enum": [
            "2019-06-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the sync member.",
          "type": "string"
        },
        "properties": {
          "description": "Resource properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/SyncMemberProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "syncMembers"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "servers_databases_workloadGroups_childResource": {
      "description": "Microsoft.Sql/servers/databases/workloadGroups",
      "properties": {
        "apiVersion": {
          "enum": [
            "2019-06-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the workload group.",
          "type": "string"
        },
        "properties": {
          "description": "Resource properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/WorkloadGroupProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "workloadGroups"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "servers_databases_workloadGroups_workloadClassifiers_childResource": {
      "description": "Microsoft.Sql/servers/databases/workloadGroups/workloadClassifiers",
      "properties": {
        "apiVersion": {
          "enum": [
            "2019-06-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the workload classifier to create/update.",
          "type": "string"
        },
        "properties": {
          "description": "Resource properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/WorkloadClassifierProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "workloadClassifiers"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    }
  }
}