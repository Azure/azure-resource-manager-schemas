{
  "id": "https://schema.management.azure.com/schemas/2019-06-01/Microsoft.EventGrid.json#",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "title": "Microsoft.EventGrid",
  "description": "Microsoft EventGrid Resource Types",
  "resourceDefinitions": {
    "topics": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the topic."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.EventGrid/topics"
          ]
        },
        "apiVersion": {
          "type": "string",
          "enum": [
            "2019-06-01"
          ]
        },
        "location": {
          "type": "string",
          "description": "Location of the resource."
        },
        "tags": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Tags of the resource."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/TopicProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Properties of the Topic."
        }
      },
      "required": [
        "name",
        "type",
        "apiVersion",
        "location",
        "properties"
      ],
      "description": "Microsoft.EventGrid/topics"
    },
    "eventSubscriptions": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.EventGrid/eventSubscriptions"
          ]
        },
        "apiVersion": {
          "type": "string",
          "enum": [
            "2019-06-01"
          ]
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/EventSubscriptionProperties"
            }
          ],
          "description": "Properties of the event subscription."
        }
      },
      "required": [
        "properties"
      ],
      "description": "Microsoft.EventGrid/eventSubscription"
    },
    "domains": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the domain."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.EventGrid/domains"
          ]
        },
        "apiVersion": {
          "type": "string",
          "enum": [
            "2019-06-01"
          ]
        },
        "location": {
          "type": "string",
          "description": "Location of the resource."
        },
        "tags": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Tags of the resource."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/DomainProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Properties of the Domain."
        },
        "resources": {
          "type": "array",
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/domains_topics_childResource"
              }
            ]
          }
        }
      },
      "required": [
        "name",
        "type",
        "apiVersion",
        "location",
        "properties"
      ],
      "description": "Microsoft.EventGrid/domains"
    },
    "domains_topics": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the topic."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.EventGrid/domains/topics"
          ]
        },
        "apiVersion": {
          "type": "string",
          "enum": [
            "2019-06-01"
          ]
        }
      },
      "required": [
        "name",
        "type",
        "apiVersion"
      ],
      "description": "Microsoft.EventGrid/domains/topics"
    }
  },
  "definitions": {
    "TopicProperties": {
      "description": "Properties of the Topic"
    },
    "EventSubscriptionProperties": {
      "description": "Properties of the Event Subscription",
      "type": "object",
      "properties": {
        "topic": {
          "description": "Name of the topic of the event subscription.",
          "type": "string",
          "readOnly": true
        },
        "provisioningState": {
          "description": "Provisioning state of the event subscription.",
          "enum": [
            "Creating",
            "Updating",
            "Deleting",
            "Succeeded",
            "Canceled",
            "Failed",
            "AwaitingManualAction"
          ],
          "type": "string",
          "readOnly": true
        },
        "destination": {
          "oneOf": [
            {
              "$ref": "#/definitions/WebHookEventSubscriptionDestination"
            },
            {
              "$ref": "#/definitions/EventHubEventSubscriptionDestination"
            },
            {
              "$ref": "#/definitions/StorageQueueEventSubscriptionDestination"
            },
            {
              "$ref": "#/definitions/HybridConnectionEventSubscriptionDestination"
            },
            {
              "$ref": "#/definitions/ServiceBusQueueEventSubscriptionDestination"
            }
          ],
          "description": "Information about the destination where events have to be delivered for the event subscription."
        },
        "filter": {
          "$ref": "#/definitions/EventSubscriptionFilter",
          "description": "Information about the filter for the event subscription."
        },
        "labels": {
          "description": "List of user defined labels.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "expirationTimeUtc": {
          "format": "date-time",
          "description": "Expiration time of the event subscription.",
          "type": "string"
        },
        "retryPolicy": {
          "$ref": "#/definitions/RetryPolicy",
          "description": "The retry policy for events. This can be used to configure maximum number of delivery attempts and time to live for events."
        },
        "deadLetterDestination": {
          "$ref": "#/definitions/DeadLetterDestination",
          "description": "The DeadLetter destination of the event subscription."
        }
      },
      "required": [
        "destination"
      ]
    },
    "WebHookEventSubscriptionDestination": {
      "description": "Information about the webhook destination for an event subscription.",
      "required": [
        "endpointType",
        "properties"
      ],
      "type": "object",
      "properties": {
        "endpointType": {
          "description": "Type of the endpoint for the event subscription destination.",
          "enum": [
            "WebHook"
          ],
          "type": "string"
        },
        "properties": {
          "$ref": "#/definitions/WebHookEventSubscriptionDestinationProperties",
          "description": "WebHook Properties of the event subscription destination."
        }
      }
    },
    "WebHookEventSubscriptionDestinationProperties": {
      "description": "Information about the webhook destination properties for an event subscription.",
      "type": "object",
      "properties": {
        "endpointUrl": {
          "description": "The URL that represents the endpoint of the destination of an event subscription.",
          "type": "string"
        },
        "endpointBaseUrl": {
          "description": "The base URL that represents the endpoint of the destination of an event subscription.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "EventHubEventSubscriptionDestination": {
      "description": "Information about the event hub destination for an event subscription.",
      "required": [
        "endpointType",
        "properties"
      ],
      "type": "object",
      "properties": {
        "endpointType": {
          "description": "Type of the endpoint for the event subscription destination.",
          "enum": [
            "EventHub"
          ],
          "type": "string"
        },
        "properties": {
          "$ref": "#/definitions/EventHubEventSubscriptionDestinationProperties",
          "description": "Event Hub Properties of the event subscription destination."
        }
      }
    },
    "EventHubEventSubscriptionDestinationProperties": {
      "description": "The properties for a event hub destination.",
      "type": "object",
      "properties": {
        "resourceId": {
          "description": "The Azure Resource Id that represents the endpoint of an Event Hub destination of an event subscription.",
          "type": "string"
        }
      }
    },
    "StorageQueueEventSubscriptionDestination": {
      "description": "Information about the storage queue destination for an event subscription.",
      "required": [
        "endpointType",
        "properties"
      ],
      "type": "object",
      "properties": {
        "endpointType": {
          "description": "Type of the endpoint for the event subscription destination.",
          "enum": [
            "StorageQueue"
          ],
          "type": "string"
        },
        "properties": {
          "$ref": "#/definitions/StorageQueueEventSubscriptionDestinationProperties",
          "description": "Storage Queue Properties of the event subscription destination."
        }
      }
    },
    "StorageQueueEventSubscriptionDestinationProperties": {
      "description": "The properties for a storage queue destination.",
      "type": "object",
      "properties": {
        "resourceId": {
          "description": "The Azure Resource ID of the storage account that contains the queue that is the destination of an event subscription.",
          "type": "string"
        },
        "queueName": {
          "description": "The name of the Storage queue under a storage account that is the destination of an event subscription.",
          "type": "string"
        }
      }
    },
    "HybridConnectionEventSubscriptionDestination": {
      "description": "Information about the HybridConnection destination for an event subscription.",
      "required": [
        "endpointType",
        "properties"
      ],
      "type": "object",
      "properties": {
        "endpointType": {
          "description": "Type of the endpoint for the event subscription destination.",
          "enum": [
            "HybridConnection"
          ],
          "type": "string"
        },
        "properties": {
          "$ref": "#/definitions/HybridConnectionEventSubscriptionDestinationProperties",
          "description": "Hybrid connection Properties of the event subscription destination"
        }
      }
    },
    "HybridConnectionEventSubscriptionDestinationProperties": {
      "description": "The properties for a hybrid connection destination.",
      "type": "object",
      "properties": {
        "resourceId": {
          "description": "The Azure Resource ID of an hybrid connection that is the destination of an event subscription.",
          "type": "string"
        }
      }
    },
    "ServiceBusQueueEventSubscriptionDestination": {
      "description": "Information about the service bus destination for an event subscription",
      "required": [
        "endpointType",
        "properties"
      ],
      "type": "object",
      "properties": {
        "endpointType": {
          "description": "Type of the endpoint for the event subscription destination.",
          "enum": [
            "ServiceBusQueue"
          ],
          "type": "string"
        },
        "properties": {
          "$ref": "#/definitions/ServiceBusQueueEventSubscriptionDestinationProperties",
          "description": "Service Bus Properties of the event subscription destination"
        }
      }
    },
    "ServiceBusQueueEventSubscriptionDestinationProperties": {
      "description": "The properties that represent the Service Bus destination of an event subscription.",
      "type": "object",
      "properties": {
        "resourceId": {
          "description": "The Azure Resource Id that represents the endpoint of the Service Bus destination of an event subscription.",
          "type": "string"
        }
      }
    },
    "EventSubscriptionFilter": {
      "description": "Filter for the Event Subscription.",
      "type": "object",
      "properties": {
        "subjectBeginsWith": {
          "description": "An optional string to filter events for an event subscription based on a resource path prefix.\r\nThe format of this depends on the publisher of the events. \r\nWildcard characters are not supported in this path.",
          "type": "string"
        },
        "subjectEndsWith": {
          "description": "An optional string to filter events for an event subscription based on a resource path suffix.\r\nWildcard characters are not supported in this path.",
          "type": "string"
        },
        "includedEventTypes": {
          "description": "A list of applicable event types that need to be part of the event subscription. If it is desired to subscribe to all default event types, set the IncludedEventTypes to null.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isSubjectCaseSensitive": {
          "description": "Specifies if the SubjectBeginsWith and SubjectEndsWith properties of the filter \r\nshould be compared in a case sensitive manner.",
          "type": "boolean"
        },
        "advancedFilters": {
          "description": "An array of advanced filters that are used for filtering event subscriptions.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AdvancedFilter"
          }
        }
      }
    },
    "RetryPolicy": {
      "description": "Information about the retry policy for an event subscription.",
      "type": "object",
      "properties": {
        "maxDeliveryAttempts": {
          "format": "int32",
          "description": "Maximum number of delivery retry attempts for events.",
          "type": "integer"
        },
        "eventTimeToLiveInMinutes": {
          "format": "int32",
          "description": "Time To Live (in minutes) for events.",
          "type": "integer"
        }
      }
    },
    "DomainProperties": {
      "description": "Properties of the Domain."
    },
    "domains_topics_childResource": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the topic."
        },
        "type": {
          "type": "string",
          "enum": [
            "topics"
          ]
        },
        "apiVersion": {
          "type": "string",
          "enum": [
            "2019-06-01"
          ]
        }
      },
      "required": [
        "name",
        "type",
        "apiVersion"
      ],
      "description": "Microsoft.EventGrid/domains/topics"
    },
    "NumberInAdvancedFilter": {
      "description": "NumberIn Advanced Filter.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AdvancedFilter"
        }
      ],
      "properties": {
        "values": {
          "description": "The set of filter values.",
          "type": "array",
          "items": {
            "format": "double",
            "type": "number"
          }
        }
      }
    },
    "NumberNotInAdvancedFilter": {
      "description": "NumberNotIn Advanced Filter.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AdvancedFilter"
        }
      ],
      "properties": {
        "values": {
          "description": "The set of filter values.",
          "type": "array",
          "items": {
            "format": "double",
            "type": "number"
          }
        }
      }
    },
    "NumberLessThanAdvancedFilter": {
      "description": "NumberLessThan Advanced Filter.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AdvancedFilter"
        }
      ],
      "properties": {
        "value": {
          "format": "double",
          "description": "The filter value.",
          "type": "number"
        }
      }
    },
    "NumberGreaterThanAdvancedFilter": {
      "description": "NumberGreaterThan Advanced Filter.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AdvancedFilter"
        }
      ],
      "properties": {
        "value": {
          "format": "double",
          "description": "The filter value.",
          "type": "number"
        }
      }
    },
    "NumberLessThanOrEqualsAdvancedFilter": {
      "description": "NumberLessThanOrEquals Advanced Filter.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AdvancedFilter"
        }
      ],
      "properties": {
        "value": {
          "format": "double",
          "description": "The filter value.",
          "type": "number"
        }
      }
    },
    "NumberGreaterThanOrEqualsAdvancedFilter": {
      "description": "NumberGreaterThanOrEquals Advanced Filter.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AdvancedFilter"
        }
      ],
      "properties": {
        "value": {
          "format": "double",
          "description": "The filter value.",
          "type": "number"
        }
      }
    },
    "BoolEqualsAdvancedFilter": {
      "description": "BoolEquals Advanced Filter.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AdvancedFilter"
        }
      ],
      "properties": {
        "value": {
          "description": "The boolean filter value.",
          "type": "boolean"
        }
      }
    },
    "StringInAdvancedFilter": {
      "description": "StringIn Advanced Filter.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AdvancedFilter"
        }
      ],
      "properties": {
        "values": {
          "description": "The set of filter values.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "StringNotInAdvancedFilter": {
      "description": "StringNotIn Advanced Filter.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AdvancedFilter"
        }
      ],
      "properties": {
        "values": {
          "description": "The set of filter values.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "StringBeginsWithAdvancedFilter": {
      "description": "StringBeginsWith Advanced Filter.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AdvancedFilter"
        }
      ],
      "properties": {
        "values": {
          "description": "The set of filter values.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "StringEndsWithAdvancedFilter": {
      "description": "StringEndsWith Advanced Filter.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AdvancedFilter"
        }
      ],
      "properties": {
        "values": {
          "description": "The set of filter values.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "StringContainsAdvancedFilter": {
      "description": "StringContains Advanced Filter.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AdvancedFilter"
        }
      ],
      "properties": {
        "values": {
          "description": "The set of filter values.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "AdvancedFilter": {
      "description": "This is the base type that represents an advanced filter. To configure an advanced filter, do not directly instantiate an object of this class. Instead, instantiate an object of a derived class such as BoolEqualsAdvancedFilter, NumberInAdvancedFilter, StringEqualsAdvancedFilter etc. depending on the type of the key based on which you want to filter.",
      "required": [
        "operatorType"
      ],
      "type": "object",
      "properties": {
        "operatorType": {
          "description": "The operator type used for filtering, e.g., NumberIn, StringContains, BoolEquals and others.",
          "enum": [
            "NumberIn",
            "NumberNotIn",
            "NumberLessThan",
            "NumberGreaterThan",
            "NumberLessThanOrEquals",
            "NumberGreaterThanOrEquals",
            "BoolEquals",
            "StringIn",
            "StringNotIn",
            "StringBeginsWith",
            "StringEndsWith",
            "StringContains"
          ],
          "type": "string"
        },
        "key": {
          "description": "The field/property in the event based on which you want to filter.",
          "type": "string"
        }
      },
      "discriminator": "operatorType"
    },
    "StorageBlobDeadLetterDestination": {
      "description": "Information about the storage blob based dead letter destination.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/DeadLetterDestination"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/StorageBlobDeadLetterDestinationProperties",
          "description": "The properties of the Storage Blob based deadletter destination."
        }
      }
    },
    "StorageBlobDeadLetterDestinationProperties": {
      "description": "Properties of the storage blob based dead letter destination.",
      "type": "object",
      "properties": {
        "resourceId": {
          "description": "The Azure Resource ID of the storage account that is the destination of the deadletter events",
          "type": "string"
        },
        "blobContainerName": {
          "description": "The name of the Storage blob container that is the destination of the deadletter events",
          "type": "string"
        }
      }
    },
    "DeadLetterDestination": {
      "description": "Information about the dead letter destination for an event subscription. To configure a deadletter destination, do not directly instantiate an object of this class. Instead, instantiate an object of a derived class. Currently, StorageBlobDeadLetterDestination is the only class that derives from this class.",
      "type": "object",
      "required": [
        "endpointType"
      ],
      "properties": {
        "endpointType": {
          "description": "Type of the endpoint for the dead letter destination",
          "enum": [
            "StorageBlob"
          ],
          "type": "string"
        }
      }
    }
  }
}