{
  "id": "https://schema.management.azure.com/schemas/2019-12-01-preview/Microsoft.ContainerRegistry.json#",
  "title": "Microsoft.ContainerRegistry",
  "description": "Microsoft ContainerRegistry Resource Types",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "resourceDefinitions": {
    "registries": {
      "description": "Microsoft.ContainerRegistry/registries",
      "properties": {
        "apiVersion": {
          "enum": [
            "2019-12-01-preview"
          ],
          "type": "string"
        },
        "identity": {
          "description": "The identity of the container registry.",
          "oneOf": [
            {
              "$ref": "#/definitions/IdentityProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "location": {
          "description": "The location of the resource. This cannot be changed after the resource is created.",
          "type": "string"
        },
        "name": {
          "description": "The name of the container registry.",
          "oneOf": [
            {
              "maxLength": 50,
              "minLength": 5,
              "pattern": "^[a-zA-Z0-9]*$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The properties of the container registry.",
          "oneOf": [
            {
              "$ref": "#/definitions/RegistryProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/registries_webhooks_childResource"
              },
              {
                "$ref": "#/definitions/registries_pipelineRuns_childResource"
              },
              {
                "$ref": "#/definitions/registries_replications_childResource"
              },
              {
                "$ref": "#/definitions/registries_exportPipelines_childResource"
              },
              {
                "$ref": "#/definitions/registries_importPipelines_childResource"
              },
              {
                "$ref": "#/definitions/registries_privateEndpointConnections_childResource"
              }
            ]
          },
          "type": "array"
        },
        "sku": {
          "description": "The SKU of the container registry.",
          "oneOf": [
            {
              "$ref": "#/definitions/Sku"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "The tags of the resource.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.ContainerRegistry/registries"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "registries_exportPipelines": {
      "description": "Microsoft.ContainerRegistry/registries/exportPipelines",
      "properties": {
        "apiVersion": {
          "enum": [
            "2019-12-01-preview"
          ],
          "type": "string"
        },
        "identity": {
          "description": "The identity of the export pipeline.",
          "oneOf": [
            {
              "$ref": "#/definitions/IdentityProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "location": {
          "description": "The location of the export pipeline.",
          "type": "string"
        },
        "name": {
          "description": "The name of the export pipeline.",
          "oneOf": [
            {
              "maxLength": 50,
              "minLength": 5,
              "pattern": "^[a-zA-Z0-9]*$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The properties of the export pipeline.",
          "oneOf": [
            {
              "$ref": "#/definitions/ExportPipelineProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.ContainerRegistry/registries/exportPipelines"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "registries_importPipelines": {
      "description": "Microsoft.ContainerRegistry/registries/importPipelines",
      "properties": {
        "apiVersion": {
          "enum": [
            "2019-12-01-preview"
          ],
          "type": "string"
        },
        "identity": {
          "description": "The identity of the import pipeline.",
          "oneOf": [
            {
              "$ref": "#/definitions/IdentityProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "location": {
          "description": "The location of the import pipeline.",
          "type": "string"
        },
        "name": {
          "description": "The name of the import pipeline.",
          "oneOf": [
            {
              "maxLength": 50,
              "minLength": 5,
              "pattern": "^[a-zA-Z0-9]*$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The properties of the import pipeline.",
          "oneOf": [
            {
              "$ref": "#/definitions/ImportPipelineProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.ContainerRegistry/registries/importPipelines"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "registries_pipelineRuns": {
      "description": "Microsoft.ContainerRegistry/registries/pipelineRuns",
      "properties": {
        "apiVersion": {
          "enum": [
            "2019-12-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the pipeline run.",
          "oneOf": [
            {
              "maxLength": 50,
              "minLength": 5,
              "pattern": "^[a-zA-Z0-9]*$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The properties of a pipeline run.",
          "oneOf": [
            {
              "$ref": "#/definitions/PipelineRunProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.ContainerRegistry/registries/pipelineRuns"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "registries_privateEndpointConnections": {
      "description": "Microsoft.ContainerRegistry/registries/privateEndpointConnections",
      "properties": {
        "apiVersion": {
          "enum": [
            "2019-12-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the private endpoint connection.",
          "type": "string"
        },
        "properties": {
          "description": "The properties of a private endpoint connection.",
          "oneOf": [
            {
              "$ref": "#/definitions/PrivateEndpointConnectionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.ContainerRegistry/registries/privateEndpointConnections"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "registries_replications": {
      "description": "Microsoft.ContainerRegistry/registries/replications",
      "properties": {
        "apiVersion": {
          "enum": [
            "2019-12-01-preview"
          ],
          "type": "string"
        },
        "location": {
          "description": "The location of the resource. This cannot be changed after the resource is created.",
          "type": "string"
        },
        "name": {
          "description": "The name of the replication.",
          "oneOf": [
            {
              "maxLength": 50,
              "minLength": 5,
              "pattern": "^[a-zA-Z0-9]*$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The properties of the replication.",
          "oneOf": [
            {
              "$ref": "#/definitions/ReplicationProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "The tags of the resource.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.ContainerRegistry/registries/replications"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "registries_webhooks": {
      "description": "Microsoft.ContainerRegistry/registries/webhooks",
      "properties": {
        "apiVersion": {
          "enum": [
            "2019-12-01-preview"
          ],
          "type": "string"
        },
        "location": {
          "description": "The location of the webhook. This cannot be changed after the resource is created.",
          "type": "string"
        },
        "name": {
          "description": "The name of the webhook.",
          "oneOf": [
            {
              "maxLength": 50,
              "minLength": 5,
              "pattern": "^[a-zA-Z0-9]*$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The properties that the webhook will be created with.",
          "oneOf": [
            {
              "$ref": "#/definitions/WebhookPropertiesCreateParameters"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "The tags for the webhook.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.ContainerRegistry/registries/webhooks"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    }
  },
  "definitions": {
    "EncryptionProperty": {
      "properties": {
        "keyVaultProperties": {
          "description": "Key vault properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/KeyVaultProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "status": {
          "description": "Indicates whether or not the encryption is enabled for container registry.",
          "oneOf": [
            {
              "enum": [
                "enabled",
                "disabled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ExportPipelineProperties": {
      "description": "The properties of an export pipeline.",
      "properties": {
        "options": {
          "description": "The list of all options configured for the pipeline.",
          "oneOf": [
            {
              "items": {
                "enum": [
                  "OverwriteTags",
                  "OverwriteBlobs",
                  "DeleteSourceBlobOnSuccess",
                  "ContinueOnErrors"
                ],
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "target": {
          "description": "The target properties of the export pipeline.",
          "oneOf": [
            {
              "$ref": "#/definitions/ExportPipelineTargetProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "target"
      ],
      "type": "object"
    },
    "ExportPipelineTargetProperties": {
      "description": "The properties of the export pipeline target.",
      "properties": {
        "keyVaultUri": {
          "description": "They key vault secret uri to obtain the target storage SAS token.",
          "type": "string"
        },
        "type": {
          "description": "The type of target for the export pipeline.",
          "type": "string"
        },
        "uri": {
          "description": "The target uri of the export pipeline.\r\nWhen 'AzureStorageBlob': \"https://accountName.blob.core.windows.net/containerName/blobName\"\r\nWhen 'AzureStorageBlobContainer':  \"https://accountName.blob.core.windows.net/containerName\"",
          "type": "string"
        }
      },
      "required": [
        "keyVaultUri"
      ],
      "type": "object"
    },
    "IPRule": {
      "description": "IP rule with specific IP or IP range in CIDR format.",
      "properties": {
        "action": {
          "description": "The action of IP ACL rule.",
          "oneOf": [
            {
              "enum": [
                "Allow"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "value": {
          "description": "Specifies the IP or IP range in CIDR format. Only IPV4 address is allowed.",
          "type": "string"
        }
      },
      "required": [
        "value"
      ],
      "type": "object"
    },
    "IdentityProperties": {
      "description": "Managed identity for the resource.",
      "properties": {
        "principalId": {
          "description": "The principal ID of resource identity.",
          "type": "string"
        },
        "tenantId": {
          "description": "The tenant ID of resource.",
          "type": "string"
        },
        "type": {
          "description": "The identity type.",
          "oneOf": [
            {
              "enum": [
                "SystemAssigned",
                "UserAssigned",
                "SystemAssigned, UserAssigned",
                "None"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "userAssignedIdentities": {
          "description": "The list of user identities associated with the resource. The user identity \r\ndictionary key references will be ARM resource ids in the form: \r\n'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/\r\n    providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.",
          "oneOf": [
            {
              "additionalProperties": {
                "$ref": "#/definitions/UserIdentityProperties"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ImportPipelineProperties": {
      "description": "The properties of an import pipeline.",
      "properties": {
        "options": {
          "description": "The list of all options configured for the pipeline.",
          "oneOf": [
            {
              "items": {
                "enum": [
                  "OverwriteTags",
                  "OverwriteBlobs",
                  "DeleteSourceBlobOnSuccess",
                  "ContinueOnErrors"
                ],
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "source": {
          "description": "The source properties of the import pipeline.",
          "oneOf": [
            {
              "$ref": "#/definitions/ImportPipelineSourceProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "trigger": {
          "description": "The properties that describe the trigger of the import pipeline.",
          "oneOf": [
            {
              "$ref": "#/definitions/PipelineTriggerProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "source"
      ],
      "type": "object"
    },
    "ImportPipelineSourceProperties": {
      "description": "The properties of the import pipeline source.",
      "properties": {
        "keyVaultUri": {
          "description": "They key vault secret uri to obtain the source storage SAS token.",
          "type": "string"
        },
        "type": {
          "description": "The type of source for the import pipeline.",
          "oneOf": [
            {
              "enum": [
                "AzureStorageBlobContainer"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "uri": {
          "description": "The source uri of the import pipeline.\r\nWhen 'AzureStorageBlob': \"https://accountName.blob.core.windows.net/containerName/blobName\"\r\nWhen 'AzureStorageBlobContainer': \"https://accountName.blob.core.windows.net/containerName\"",
          "type": "string"
        }
      },
      "required": [
        "keyVaultUri"
      ],
      "type": "object"
    },
    "KeyVaultProperties": {
      "properties": {
        "identity": {
          "description": "The client id of the identity which will be used to access key vault.",
          "type": "string"
        },
        "keyIdentifier": {
          "description": "Key vault uri to access the encryption key.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "NetworkRuleSet": {
      "description": "The network rule set for a container registry.",
      "properties": {
        "defaultAction": {
          "description": "The default action of allow or deny when no other rules match.",
          "oneOf": [
            {
              "enum": [
                "Allow",
                "Deny"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "ipRules": {
          "description": "The IP ACL rules.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/IPRule"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "virtualNetworkRules": {
          "description": "The virtual network rules.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/VirtualNetworkRule"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "defaultAction"
      ],
      "type": "object"
    },
    "PipelineRunProperties": {
      "description": "The properties of a pipeline run.",
      "properties": {
        "forceUpdateTag": {
          "description": "How the pipeline run should be forced to recreate even if the pipeline run configuration has not changed.",
          "type": "string"
        },
        "request": {
          "description": "The request parameters for a pipeline run.",
          "oneOf": [
            {
              "$ref": "#/definitions/PipelineRunRequest"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "PipelineRunRequest": {
      "description": "The request properties provided for a pipeline run.",
      "properties": {
        "artifacts": {
          "description": "List of source artifacts to be transferred by the pipeline. \r\nSpecify an image by repository ('hello-world'). This will use the 'latest' tag.\r\nSpecify an image by tag ('hello-world:latest').\r\nSpecify an image by sha256-based manifest digest ('hello-world@sha256:abc123').",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "catalogDigest": {
          "description": "The digest of the tar used to transfer the artifacts.",
          "type": "string"
        },
        "pipelineResourceId": {
          "description": "The resource ID of the pipeline to run.",
          "type": "string"
        },
        "source": {
          "description": "The source properties of the pipeline run.",
          "oneOf": [
            {
              "$ref": "#/definitions/PipelineRunSourceProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "target": {
          "description": "The target properties of the pipeline run.",
          "oneOf": [
            {
              "$ref": "#/definitions/PipelineRunTargetProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "PipelineRunSourceProperties": {
      "properties": {
        "name": {
          "description": "The name of the source.",
          "type": "string"
        },
        "type": {
          "description": "The type of the source.",
          "oneOf": [
            {
              "enum": [
                "AzureStorageBlob"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "PipelineRunTargetProperties": {
      "properties": {
        "name": {
          "description": "The name of the target.",
          "type": "string"
        },
        "type": {
          "description": "The type of the target.",
          "oneOf": [
            {
              "enum": [
                "AzureStorageBlob"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "PipelineSourceTriggerProperties": {
      "properties": {
        "status": {
          "description": "The current status of the source trigger.",
          "oneOf": [
            {
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "status"
      ],
      "type": "object"
    },
    "PipelineTriggerProperties": {
      "properties": {
        "sourceTrigger": {
          "description": "The source trigger properties of the pipeline.",
          "oneOf": [
            {
              "$ref": "#/definitions/PipelineSourceTriggerProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "Policies": {
      "description": "The policies for a container registry.",
      "properties": {
        "quarantinePolicy": {
          "description": "The quarantine policy for a container registry.",
          "oneOf": [
            {
              "$ref": "#/definitions/QuarantinePolicy"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "retentionPolicy": {
          "description": "The retention policy for a container registry.",
          "oneOf": [
            {
              "$ref": "#/definitions/RetentionPolicy"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "trustPolicy": {
          "description": "The content trust policy for a container registry.",
          "oneOf": [
            {
              "$ref": "#/definitions/TrustPolicy"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "PrivateEndpoint": {
      "description": "The Private Endpoint resource.",
      "properties": {
        "id": {
          "description": "This is private endpoint resource created with Microsoft.Network resource provider.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PrivateEndpointConnectionProperties": {
      "description": "The properties of a private endpoint connection.",
      "properties": {
        "privateEndpoint": {
          "description": "The resource of private endpoint.",
          "oneOf": [
            {
              "$ref": "#/definitions/PrivateEndpoint"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "privateLinkServiceConnectionState": {
          "description": "A collection of information about the state of the connection between service consumer and provider.",
          "oneOf": [
            {
              "$ref": "#/definitions/PrivateLinkServiceConnectionState"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "PrivateLinkServiceConnectionState": {
      "description": "The state of a private link service connection.",
      "properties": {
        "actionsRequired": {
          "description": "A message indicating if changes on the service provider require any updates on the consumer.",
          "oneOf": [
            {
              "enum": [
                "None",
                "Recreate"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "description": {
          "description": "The description for connection status. For example if connection is rejected it can indicate reason for rejection.",
          "type": "string"
        },
        "status": {
          "description": "The private link service connection status.",
          "oneOf": [
            {
              "enum": [
                "Approved",
                "Pending",
                "Rejected",
                "Disconnected"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "QuarantinePolicy": {
      "description": "The quarantine policy for a container registry.",
      "properties": {
        "status": {
          "description": "The value that indicates whether the policy is enabled or not.",
          "oneOf": [
            {
              "enum": [
                "enabled",
                "disabled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "RegistryProperties": {
      "description": "The properties of a container registry.",
      "properties": {
        "adminUserEnabled": {
          "description": "The value that indicates whether the admin user is enabled.",
          "oneOf": [
            {
              "default": false,
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "dataEndpointEnabled": {
          "description": "Enable a single data endpoint per region for serving data.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "encryption": {
          "description": "The encryption settings of container registry.",
          "oneOf": [
            {
              "$ref": "#/definitions/EncryptionProperty"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "networkRuleBypassOptions": {
          "description": "Whether to allow trusted Azure services to access a network restricted registry.",
          "oneOf": [
            {
              "enum": [
                "AzureServices",
                "None"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "networkRuleSet": {
          "description": "The network rule set for a container registry.",
          "oneOf": [
            {
              "$ref": "#/definitions/NetworkRuleSet"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "policies": {
          "description": "The policies for a container registry.",
          "oneOf": [
            {
              "$ref": "#/definitions/Policies"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "publicNetworkAccess": {
          "description": "Whether or not public network access is allowed for the container registry.",
          "oneOf": [
            {
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ReplicationProperties": {
      "description": "The properties of a replication.",
      "properties": {
        "regionEndpointEnabled": {
          "description": "Specifies whether the replication's regional endpoint is enabled. Requests will not be routed to a replication whose regional endpoint is disabled, however its data will continue to be synced with other replications.",
          "oneOf": [
            {
              "default": true,
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "RetentionPolicy": {
      "description": "The retention policy for a container registry.",
      "properties": {
        "days": {
          "description": "The number of days to retain an untagged manifest after which it gets purged.",
          "oneOf": [
            {
              "default": 7,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "status": {
          "description": "The value that indicates whether the policy is enabled or not.",
          "oneOf": [
            {
              "enum": [
                "enabled",
                "disabled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "Sku": {
      "description": "The SKU of a container registry.",
      "properties": {
        "name": {
          "description": "The SKU name of the container registry. Required for registry creation.",
          "oneOf": [
            {
              "enum": [
                "Classic",
                "Basic",
                "Standard",
                "Premium"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "TrustPolicy": {
      "description": "The content trust policy for a container registry.",
      "properties": {
        "status": {
          "description": "The value that indicates whether the policy is enabled or not.",
          "oneOf": [
            {
              "enum": [
                "enabled",
                "disabled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "description": "The type of trust policy.",
          "oneOf": [
            {
              "enum": [
                "Notary"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "UserIdentityProperties": {
      "properties": {
        "clientId": {
          "description": "The client id of user assigned identity.",
          "type": "string"
        },
        "principalId": {
          "description": "The principal id of user assigned identity.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "VirtualNetworkRule": {
      "description": "Virtual network rule.",
      "properties": {
        "action": {
          "description": "The action of virtual network rule.",
          "oneOf": [
            {
              "enum": [
                "Allow"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "id": {
          "description": "Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}.",
          "type": "string"
        }
      },
      "required": [
        "id"
      ],
      "type": "object"
    },
    "WebhookPropertiesCreateParameters": {
      "description": "The parameters for creating the properties of a webhook.",
      "properties": {
        "actions": {
          "description": "The list of actions that trigger the webhook to post notifications.",
          "oneOf": [
            {
              "items": {
                "enum": [
                  "push",
                  "delete",
                  "quarantine",
                  "chart_push",
                  "chart_delete"
                ],
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "customHeaders": {
          "description": "Custom headers that will be added to the webhook notifications.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "scope": {
          "description": "The scope of repositories where the event can be triggered. For example, 'foo:*' means events for all tags under repository 'foo'. 'foo:bar' means events for 'foo:bar' only. 'foo' is equivalent to 'foo:latest'. Empty means all events.",
          "type": "string"
        },
        "serviceUri": {
          "description": "The service URI for the webhook to post notifications.",
          "type": "string"
        },
        "status": {
          "description": "The status of the webhook at the time the operation was called.",
          "oneOf": [
            {
              "enum": [
                "enabled",
                "disabled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "serviceUri",
        "actions"
      ],
      "type": "object"
    },
    "registries_exportPipelines_childResource": {
      "description": "Microsoft.ContainerRegistry/registries/exportPipelines",
      "properties": {
        "apiVersion": {
          "enum": [
            "2019-12-01-preview"
          ],
          "type": "string"
        },
        "identity": {
          "description": "The identity of the export pipeline.",
          "oneOf": [
            {
              "$ref": "#/definitions/IdentityProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "location": {
          "description": "The location of the export pipeline.",
          "type": "string"
        },
        "name": {
          "description": "The name of the export pipeline.",
          "oneOf": [
            {
              "maxLength": 50,
              "minLength": 5,
              "pattern": "^[a-zA-Z0-9]*$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The properties of the export pipeline.",
          "oneOf": [
            {
              "$ref": "#/definitions/ExportPipelineProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "exportPipelines"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "registries_importPipelines_childResource": {
      "description": "Microsoft.ContainerRegistry/registries/importPipelines",
      "properties": {
        "apiVersion": {
          "enum": [
            "2019-12-01-preview"
          ],
          "type": "string"
        },
        "identity": {
          "description": "The identity of the import pipeline.",
          "oneOf": [
            {
              "$ref": "#/definitions/IdentityProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "location": {
          "description": "The location of the import pipeline.",
          "type": "string"
        },
        "name": {
          "description": "The name of the import pipeline.",
          "oneOf": [
            {
              "maxLength": 50,
              "minLength": 5,
              "pattern": "^[a-zA-Z0-9]*$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The properties of the import pipeline.",
          "oneOf": [
            {
              "$ref": "#/definitions/ImportPipelineProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "importPipelines"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "registries_pipelineRuns_childResource": {
      "description": "Microsoft.ContainerRegistry/registries/pipelineRuns",
      "properties": {
        "apiVersion": {
          "enum": [
            "2019-12-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the pipeline run.",
          "oneOf": [
            {
              "maxLength": 50,
              "minLength": 5,
              "pattern": "^[a-zA-Z0-9]*$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The properties of a pipeline run.",
          "oneOf": [
            {
              "$ref": "#/definitions/PipelineRunProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "pipelineRuns"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "registries_privateEndpointConnections_childResource": {
      "description": "Microsoft.ContainerRegistry/registries/privateEndpointConnections",
      "properties": {
        "apiVersion": {
          "enum": [
            "2019-12-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the private endpoint connection.",
          "type": "string"
        },
        "properties": {
          "description": "The properties of a private endpoint connection.",
          "oneOf": [
            {
              "$ref": "#/definitions/PrivateEndpointConnectionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "privateEndpointConnections"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "registries_replications_childResource": {
      "description": "Microsoft.ContainerRegistry/registries/replications",
      "properties": {
        "apiVersion": {
          "enum": [
            "2019-12-01-preview"
          ],
          "type": "string"
        },
        "location": {
          "description": "The location of the resource. This cannot be changed after the resource is created.",
          "type": "string"
        },
        "name": {
          "description": "The name of the replication.",
          "oneOf": [
            {
              "maxLength": 50,
              "minLength": 5,
              "pattern": "^[a-zA-Z0-9]*$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The properties of the replication.",
          "oneOf": [
            {
              "$ref": "#/definitions/ReplicationProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "The tags of the resource.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "replications"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "registries_webhooks_childResource": {
      "description": "Microsoft.ContainerRegistry/registries/webhooks",
      "properties": {
        "apiVersion": {
          "enum": [
            "2019-12-01-preview"
          ],
          "type": "string"
        },
        "location": {
          "description": "The location of the webhook. This cannot be changed after the resource is created.",
          "type": "string"
        },
        "name": {
          "description": "The name of the webhook.",
          "oneOf": [
            {
              "maxLength": 50,
              "minLength": 5,
              "pattern": "^[a-zA-Z0-9]*$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The properties that the webhook will be created with.",
          "oneOf": [
            {
              "$ref": "#/definitions/WebhookPropertiesCreateParameters"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "The tags for the webhook.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "webhooks"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    }
  }
}