{
  "id": "https://schema.management.azure.com/schemas/2020-01-01-preview/Microsoft.ServiceFabric.json#",
  "title": "Microsoft.ServiceFabric",
  "description": "Microsoft ServiceFabric Resource Types",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "resourceDefinitions": {
    "managedClusters": {
      "description": "Microsoft.ServiceFabric/managedClusters",
      "properties": {
        "apiVersion": {
          "enum": [
            "2020-01-01-preview"
          ],
          "type": "string"
        },
        "location": {
          "description": "Azure resource location.",
          "type": "string"
        },
        "name": {
          "description": "The name of the cluster resource.",
          "type": "string"
        },
        "properties": {
          "description": "The managed cluster resource properties",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedClusterProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/managedClusters_nodeTypes_childResource"
              }
            ]
          },
          "type": "array"
        },
        "sku": {
          "description": "The sku of the managed cluster",
          "oneOf": [
            {
              "$ref": "#/definitions/Sku"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Azure resource tags.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.ServiceFabric/managedClusters"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "managedClusters_nodeTypes": {
      "description": "Microsoft.ServiceFabric/managedClusters/nodeTypes",
      "properties": {
        "apiVersion": {
          "enum": [
            "2020-01-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the node type.",
          "type": "string"
        },
        "properties": {
          "description": "The node type properties",
          "oneOf": [
            {
              "$ref": "#/definitions/NodeTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Azure resource tags.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.ServiceFabric/managedClusters/nodeTypes"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    }
  },
  "definitions": {
    "AzureActiveDirectory": {
      "description": "The settings to enable AAD authentication on the cluster.",
      "properties": {
        "clientApplication": {
          "description": "Azure active directory client application id.",
          "type": "string"
        },
        "clusterApplication": {
          "description": "Azure active directory cluster application id.",
          "type": "string"
        },
        "tenantId": {
          "description": "Azure active directory tenant id.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ClientCertificate": {
      "description": "Client Certificate definition.",
      "properties": {
        "commonName": {
          "description": "Certificate Common name.",
          "type": "string"
        },
        "isAdmin": {
          "description": "Whether the certificate is admin or not.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "issuerThumbprint": {
          "description": "Issuer thumbprint for the certificate. Only used together with CommonName.",
          "type": "string"
        },
        "thumbprint": {
          "description": "Certificate Thumbprint.",
          "type": "string"
        }
      },
      "required": [
        "isAdmin"
      ],
      "type": "object"
    },
    "EndpointRangeDescription": {
      "description": "Port range details",
      "properties": {
        "endPort": {
          "description": "End port of a range of ports",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "startPort": {
          "description": "Starting port of a range of ports",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "startPort",
        "endPort"
      ],
      "type": "object"
    },
    "LoadBalancingRule": {
      "description": "Describes a load balancing rule.",
      "properties": {
        "backendPort": {
          "description": "The port used for internal connections on the endpoint. Acceptable values are between 1 and 65535.",
          "oneOf": [
            {
              "maximum": 65534,
              "minimum": 1,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "frontendPort": {
          "description": "The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values are between 1 and 65534.",
          "oneOf": [
            {
              "maximum": 65534,
              "minimum": 1,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "probeProtocol": {
          "description": "the reference to the load balancer probe used by the load balancing rule.",
          "oneOf": [
            {
              "enum": [
                "tcp",
                "http",
                "https"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "probeRequestPath": {
          "description": "The probe request path. Only supported for HTTP/HTTPS probes.",
          "type": "string"
        },
        "protocol": {
          "description": "The reference to the transport protocol used by the load balancing rule.",
          "oneOf": [
            {
              "enum": [
                "tcp",
                "udp"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "frontendPort",
        "backendPort",
        "protocol",
        "probeProtocol"
      ],
      "type": "object"
    },
    "ManagedClusterProperties": {
      "description": "Describes the managed cluster resource properties.",
      "properties": {
        "addonFeatures": {
          "description": "client certificates for the cluster.",
          "oneOf": [
            {
              "items": {
                "enum": [
                  "DnsService",
                  "BackupRestoreService",
                  "ResourceMonitorService"
                ],
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "adminPassword": {
          "description": "vm admin user password.",
          "type": "string"
        },
        "adminUserName": {
          "description": "vm admin user name.",
          "type": "string"
        },
        "azureActiveDirectory": {
          "description": "Azure active directory.",
          "oneOf": [
            {
              "$ref": "#/definitions/AzureActiveDirectory"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "clientConnectionPort": {
          "description": "The port used for client connections to the cluster.",
          "oneOf": [
            {
              "default": 19000,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "clients": {
          "description": "client certificates for the cluster.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/ClientCertificate"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "clusterCodeVersion": {
          "description": "The Service Fabric runtime version of the cluster. This property can only by set the user when **upgradeMode** is set to 'Manual'. To get list of available Service Fabric versions for new clusters use [ClusterVersion API](./ClusterVersion.md). To get the list of available version for existing clusters use **availableClusterVersions**.",
          "type": "string"
        },
        "dnsName": {
          "description": "The cluster dns name.",
          "type": "string"
        },
        "fabricSettings": {
          "description": "The list of custom fabric settings to configure the cluster.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/SettingsSectionDescription"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "httpGatewayConnectionPort": {
          "description": "The port used for http connections to the cluster.",
          "oneOf": [
            {
              "default": 19080,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "loadBalancingRules": {
          "description": "Describes load balancing rules.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/LoadBalancingRule"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "dnsName",
        "adminUserName"
      ],
      "type": "object"
    },
    "NodeTypeProperties": {
      "description": "Describes a node type in the cluster, each node type represents sub set of nodes in the cluster.",
      "properties": {
        "applicationPorts": {
          "description": "The range of ports from which cluster assigned port to Service Fabric applications.",
          "oneOf": [
            {
              "$ref": "#/definitions/EndpointRangeDescription"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "capacities": {
          "description": "The capacity tags applied to the nodes in the node type, the cluster resource manager uses these tags to understand how much resource a node has.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "dataDiskSizeGB": {
          "description": "Disk size for each vm in the node type in GBs.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "ephemeralPorts": {
          "description": "The range of ephemeral ports that nodes in this node type should be configured with.",
          "oneOf": [
            {
              "$ref": "#/definitions/EndpointRangeDescription"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "isPrimary": {
          "description": "The node type on which system services will run. Only one node type should be marked as primary. Primary node type cannot be deleted or changed for existing clusters.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "placementProperties": {
          "description": "The placement tags applied to nodes in the node type, which can be used to indicate where certain services (workload) should run.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "vmExtensions": {
          "description": "Set of extensions that should be installed onto the virtual machines.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/VmssExtension"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "vmImageOffer": {
          "description": "The offer type of the Azure Virtual Machines Marketplace image. For example, UbuntuServer or WindowsServer.",
          "type": "string"
        },
        "vmImagePublisher": {
          "description": "The publisher of the Azure Virtual Machines Marketplace image. For example, Canonical or MicrosoftWindowsServer.",
          "type": "string"
        },
        "vmImageSku": {
          "description": "The SKU of the Azure Virtual Machines Marketplace image. For example, 14.04.0-LTS or 2012-R2-Datacenter.",
          "type": "string"
        },
        "vmImageVersion": {
          "description": "The version of the Azure Virtual Machines Marketplace image. A value of 'latest' can be specified to select the latest version of an image. If omitted, the default is 'latest'.",
          "type": "string"
        },
        "vmInstanceCount": {
          "description": "The number of nodes in the node type.",
          "oneOf": [
            {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "vmSecrets": {
          "description": "The secrets to install in the virtual machines.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/VaultSecretGroup"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "vmSize": {
          "description": "The size of virtual machines in the pool. All virtual machines in a pool are the same size. For example, Standard_D3.",
          "type": "string"
        }
      },
      "required": [
        "isPrimary",
        "vmInstanceCount",
        "dataDiskSizeGB"
      ],
      "type": "object"
    },
    "SettingsParameterDescription": {
      "description": "Describes a parameter in fabric settings of the cluster.",
      "properties": {
        "name": {
          "description": "The parameter name of fabric setting.",
          "type": "string"
        },
        "value": {
          "description": "The parameter value of fabric setting.",
          "type": "string"
        }
      },
      "required": [
        "name",
        "value"
      ],
      "type": "object"
    },
    "SettingsSectionDescription": {
      "description": "Describes a section in the fabric settings of the cluster.",
      "properties": {
        "name": {
          "description": "The section name of the fabric settings.",
          "type": "string"
        },
        "parameters": {
          "description": "The collection of parameters in the section.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/SettingsParameterDescription"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "name",
        "parameters"
      ],
      "type": "object"
    },
    "Sku": {
      "description": "Sku definition",
      "properties": {
        "name": {
          "description": "Sku Name.",
          "oneOf": [
            {
              "enum": [
                "Basic",
                "Standard"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "SubResource": {
      "description": "Azure resource identifier.",
      "properties": {
        "id": {
          "description": "Azure resource identifier.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "VaultCertificate": {
      "description": "Describes a single certificate reference in a Key Vault, and where the certificate should reside on the VM.",
      "properties": {
        "certificateStore": {
          "description": "For Windows VMs, specifies the certificate store on the Virtual Machine to which the certificate should be added. The specified certificate store is implicitly in the LocalMachine account. <br><br>For Linux VMs, the certificate file is placed under the /var/lib/waagent directory, with the file name <UppercaseThumbprint>.crt for the X509 certificate file and <UppercaseThumbprint>.prv for private key. Both of these files are .pem formatted.",
          "type": "string"
        },
        "certificateUrl": {
          "description": "This is the URL of a certificate that has been uploaded to Key Vault as a secret. For adding a secret to the Key Vault, see [Add a key or secret to the key vault](https://docs.microsoft.com/azure/key-vault/key-vault-get-started/#add). In this case, your certificate needs to be It is the Base64 encoding of the following JSON Object which is encoded in UTF-8: <br><br> {<br>  \"data\":\"<Base64-encoded-certificate>\",<br>  \"dataType\":\"pfx\",<br>  \"password\":\"<pfx-file-password>\"<br>}",
          "type": "string"
        }
      },
      "required": [
        "certificateUrl",
        "certificateStore"
      ],
      "type": "object"
    },
    "VaultSecretGroup": {
      "description": "Specifies set of certificates that should be installed onto the virtual machines.",
      "properties": {
        "sourceVault": {
          "description": "The relative URL of the Key Vault containing all of the certificates in VaultCertificates.",
          "oneOf": [
            {
              "$ref": "#/definitions/SubResource"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "vaultCertificates": {
          "description": "The list of key vault references in SourceVault which contain certificates.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/VaultCertificate"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "sourceVault",
        "vaultCertificates"
      ],
      "type": "object"
    },
    "VmssExtension": {
      "description": "Specifies set of extensions that should be installed onto the virtual machines.",
      "properties": {
        "name": {
          "description": "The name of the extension.",
          "type": "string"
        },
        "properties": {
          "description": "Describes the properties of a Virtual Machine Scale Set Extension.",
          "oneOf": [
            {
              "$ref": "#/definitions/VmssExtensionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "name",
        "properties"
      ],
      "type": "object"
    },
    "VmssExtensionProperties": {
      "description": "Describes the properties of a Virtual Machine Scale Set Extension.",
      "properties": {
        "autoUpgradeMinorVersion": {
          "description": "Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "forceUpdateTag": {
          "description": "If a value is provided and is different from the previous value, the extension handler will be forced to update even if the extension configuration has not changed.",
          "type": "string"
        },
        "protectedSettings": {
          "description": "The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all.",
          "oneOf": [
            {
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "provisionAfterExtensions": {
          "description": "Collection of extension names after which this extension needs to be provisioned.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "publisher": {
          "description": "The name of the extension handler publisher.",
          "type": "string"
        },
        "settings": {
          "description": "Json formatted public settings for the extension.",
          "oneOf": [
            {
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "description": "Specifies the type of the extension; an example is \"CustomScriptExtension\".",
          "type": "string"
        },
        "typeHandlerVersion": {
          "description": "Specifies the version of the script handler.",
          "type": "string"
        }
      },
      "required": [
        "publisher",
        "type",
        "typeHandlerVersion"
      ],
      "type": "object"
    },
    "managedClusters_nodeTypes_childResource": {
      "description": "Microsoft.ServiceFabric/managedClusters/nodeTypes",
      "properties": {
        "apiVersion": {
          "enum": [
            "2020-01-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the node type.",
          "type": "string"
        },
        "properties": {
          "description": "The node type properties",
          "oneOf": [
            {
              "$ref": "#/definitions/NodeTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Azure resource tags.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "nodeTypes"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    }
  }
}