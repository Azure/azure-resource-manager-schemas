{
  "id": "https://schema.management.azure.com/schemas/2020-02-01-preview/Microsoft.Media.json#",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "title": "Microsoft.Media",
  "description": "Microsoft Media Resource Types",
  "resourceDefinitions": {
    "mediaServices_mediaGraphs": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2020-02-01-preview"
          ]
        },
        "name": {
          "type": "string",
          "description": "The Media Graph name."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/MediaGraphProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Class for Media Graph properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Media/mediaServices/mediaGraphs"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.Media/mediaServices/mediaGraphs"
    }
  },
  "definitions": {
    "MediaGraphAssetSink": {
      "type": "object",
      "properties": {
        "@odata.type": {
          "type": "string",
          "enum": [
            "#Microsoft.Media.MediaGraphAssetSink"
          ]
        },
        "assetName": {
          "type": "string",
          "description": "Asset name."
        }
      },
      "required": [
        "@odata.type",
        "assetName"
      ],
      "description": "Asset sink."
    },
    "MediaGraphCertificateSource": {
      "type": "object",
      "oneOf": [
        {
          "$ref": "#/definitions/MediaGraphPemCertificateList"
        }
      ],
      "properties": {},
      "description": "Base class for certificate sources."
    },
    "MediaGraphClearEndpoint": {
      "type": "object",
      "properties": {
        "@odata.type": {
          "type": "string",
          "enum": [
            "#Microsoft.Media.MediaGraphClearEndpoint"
          ]
        }
      },
      "required": [
        "@odata.type"
      ],
      "description": "An endpoint to connect to with no encryption in transit."
    },
    "MediaGraphCredentials": {
      "type": "object",
      "oneOf": [
        {
          "$ref": "#/definitions/MediaGraphUsernamePasswordCredentials"
        }
      ],
      "properties": {},
      "description": "Credentials to present during authentication."
    },
    "MediaGraphEndpoint": {
      "type": "object",
      "oneOf": [
        {
          "$ref": "#/definitions/MediaGraphClearEndpoint"
        },
        {
          "$ref": "#/definitions/MediaGraphTlsEndpoint"
        }
      ],
      "properties": {
        "credentials": {
          "oneOf": [
            {
              "$ref": "#/definitions/MediaGraphCredentials"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Credentials to present during authentication."
        },
        "url": {
          "type": "string",
          "description": "Url for the endpoint."
        }
      },
      "required": [
        "url"
      ],
      "description": "Base class for endpoints."
    },
    "MediaGraphPemCertificateList": {
      "type": "object",
      "properties": {
        "@odata.type": {
          "type": "string",
          "enum": [
            "#Microsoft.Media.MediaGraphPemCertificateList"
          ]
        },
        "certificates": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "PEM formatted public certificates, one per entry."
        }
      },
      "required": [
        "@odata.type",
        "certificates"
      ],
      "description": "A list of PEM formatted certificates."
    },
    "MediaGraphProperties": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "Media Graph description."
        },
        "sinks": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MediaGraphSink"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Media Graph sinks."
        },
        "sources": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MediaGraphSource"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Media Graph sources."
        }
      },
      "required": [
        "sinks",
        "sources"
      ],
      "description": "Class for Media Graph properties."
    },
    "MediaGraphRtspSource": {
      "type": "object",
      "properties": {
        "@odata.type": {
          "type": "string",
          "enum": [
            "#Microsoft.Media.MediaGraphRtspSource"
          ]
        },
        "endpoint": {
          "oneOf": [
            {
              "$ref": "#/definitions/MediaGraphEndpoint"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Base class for endpoints."
        },
        "transport": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Http",
                "Tcp"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Underlying RTSP transport. This can be used to enable or disable HTTP tunneling."
        }
      },
      "required": [
        "@odata.type",
        "endpoint",
        "transport"
      ],
      "description": "RTSP source."
    },
    "MediaGraphSink": {
      "type": "object",
      "oneOf": [
        {
          "$ref": "#/definitions/MediaGraphAssetSink"
        }
      ],
      "properties": {
        "inputs": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Sink inputs."
        },
        "name": {
          "type": "string",
          "description": "Sink name."
        }
      },
      "required": [
        "inputs",
        "name"
      ],
      "description": "Media Sink."
    },
    "MediaGraphSource": {
      "type": "object",
      "oneOf": [
        {
          "$ref": "#/definitions/MediaGraphRtspSource"
        }
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "Source name."
        }
      },
      "required": [
        "name"
      ],
      "description": "Media source."
    },
    "MediaGraphTlsEndpoint": {
      "type": "object",
      "properties": {
        "@odata.type": {
          "type": "string",
          "enum": [
            "#Microsoft.Media.MediaGraphTlsEndpoint"
          ]
        },
        "trustedCertificates": {
          "oneOf": [
            {
              "$ref": "#/definitions/MediaGraphCertificateSource"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Base class for certificate sources."
        },
        "validationOptions": {
          "oneOf": [
            {
              "$ref": "#/definitions/MediaGraphTlsValidationOptions"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Options for controlling the authentication of TLS endpoints."
        }
      },
      "required": [
        "@odata.type"
      ],
      "description": "An endpoint which must be connected over TLS/SSL."
    },
    "MediaGraphTlsValidationOptions": {
      "type": "object",
      "properties": {
        "ignoreHostname": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Ignore the host name (common name) during validation."
        },
        "ignoreSignature": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Ignore the integrity of the certificate chain at the current time."
        }
      },
      "required": [
        "ignoreHostname",
        "ignoreSignature"
      ],
      "description": "Options for controlling the authentication of TLS endpoints."
    },
    "MediaGraphUsernamePasswordCredentials": {
      "type": "object",
      "properties": {
        "@odata.type": {
          "type": "string",
          "enum": [
            "#Microsoft.Media.MediaGraphUsernamePasswordCredentials"
          ]
        },
        "password": {
          "type": "string",
          "description": "Password for a username/password pair."
        },
        "username": {
          "type": "string",
          "description": "Username for a username/password pair."
        }
      },
      "required": [
        "@odata.type",
        "password",
        "username"
      ],
      "description": "Username/password credential pair."
    }
  }
}
