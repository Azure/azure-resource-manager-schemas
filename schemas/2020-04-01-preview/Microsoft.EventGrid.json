{
  "id": "https://schema.management.azure.com/schemas/2020-04-01-preview/Microsoft.EventGrid.json#",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "title": "Microsoft.EventGrid",
  "description": "Microsoft EventGrid Resource Types",
  "resourceDefinitions": {
    "domains": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2020-04-01-preview"
          ]
        },
        "identity": {
          "oneOf": [
            {
              "$ref": "#/definitions/IdentityInfo"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The identity information for the resource."
        },
        "location": {
          "type": "string",
          "description": "Location of the resource."
        },
        "name": {
          "type": "string",
          "description": "Name of the domain."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/DomainProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Properties of the Domain."
        },
        "resources": {
          "type": "array",
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/domains_topics_childResource"
              },
              {
                "$ref": "#/definitions/domains_privateEndpointConnections_childResource"
              }
            ]
          }
        },
        "sku": {
          "oneOf": [
            {
              "$ref": "#/definitions/ResourceSku"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Describes an EventGrid Resource Sku."
        },
        "tags": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Tags of the resource."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.EventGrid/domains"
          ]
        }
      },
      "required": [
        "apiVersion",
        "location",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.EventGrid/domains"
    },
    "domains_privateEndpointConnections": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2020-04-01-preview"
          ]
        },
        "name": {
          "type": "string",
          "description": "The name of the private endpoint connection connection."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/PrivateEndpointConnectionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Properties of the private endpoint connection resource."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.EventGrid/domains/privateEndpointConnections"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.EventGrid/domains/privateEndpointConnections"
    },
    "domains_topics": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2020-04-01-preview"
          ]
        },
        "name": {
          "type": "string",
          "description": "Name of the domain topic."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.EventGrid/domains/topics"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "type"
      ],
      "description": "Microsoft.EventGrid/domains/topics"
    },
    "partnerNamespaces": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2020-04-01-preview"
          ]
        },
        "location": {
          "type": "string",
          "description": "Location of the resource."
        },
        "name": {
          "type": "string",
          "description": "Name of the partner namespace."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/PartnerNamespaceProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Properties of the partner namespace."
        },
        "resources": {
          "type": "array",
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/partnerNamespaces_eventChannels_childResource"
              }
            ]
          }
        },
        "tags": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Tags of the resource."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.EventGrid/partnerNamespaces"
          ]
        }
      },
      "required": [
        "apiVersion",
        "location",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.EventGrid/partnerNamespaces"
    },
    "partnerNamespaces_eventChannels": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2020-04-01-preview"
          ]
        },
        "name": {
          "type": "string",
          "description": "Name of the event channel."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/EventChannelProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Properties of the Event Channel."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.EventGrid/partnerNamespaces/eventChannels"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.EventGrid/partnerNamespaces/eventChannels"
    },
    "partnerRegistrations": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2020-04-01-preview"
          ]
        },
        "location": {
          "type": "string",
          "description": "Location of the resource."
        },
        "name": {
          "type": "string",
          "description": "Name of the partner registration."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/PartnerRegistrationProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Properties of the partner registration."
        },
        "tags": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Tags of the resource."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.EventGrid/partnerRegistrations"
          ]
        }
      },
      "required": [
        "apiVersion",
        "location",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.EventGrid/partnerRegistrations"
    },
    "partnerTopics_eventSubscriptions": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2020-04-01-preview"
          ]
        },
        "name": {
          "type": "string",
          "description": "Name of the event subscription to be created. Event subscription names must be between 3 and 100 characters in length and use alphanumeric letters only."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/EventSubscriptionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Properties of the Event Subscription."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.EventGrid/partnerTopics/eventSubscriptions"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.EventGrid/partnerTopics/eventSubscriptions"
    },
    "systemTopics": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2020-04-01-preview"
          ]
        },
        "location": {
          "type": "string",
          "description": "Location of the resource."
        },
        "name": {
          "type": "string",
          "description": "Name of the system topic."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/SystemTopicProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Properties of the System Topic."
        },
        "resources": {
          "type": "array",
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/systemTopics_eventSubscriptions_childResource"
              }
            ]
          }
        },
        "tags": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Tags of the resource."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.EventGrid/systemTopics"
          ]
        }
      },
      "required": [
        "apiVersion",
        "location",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.EventGrid/systemTopics"
    },
    "systemTopics_eventSubscriptions": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2020-04-01-preview"
          ]
        },
        "name": {
          "type": "string",
          "description": "Name of the event subscription to be created. Event subscription names must be between 3 and 100 characters in length and use alphanumeric letters only."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/EventSubscriptionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Properties of the Event Subscription."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.EventGrid/systemTopics/eventSubscriptions"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.EventGrid/systemTopics/eventSubscriptions"
    },
    "topics": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2020-04-01-preview"
          ]
        },
        "identity": {
          "oneOf": [
            {
              "$ref": "#/definitions/IdentityInfo"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The identity information for the resource."
        },
        "location": {
          "type": "string",
          "description": "Location of the resource."
        },
        "name": {
          "type": "string",
          "description": "Name of the topic."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/TopicProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Properties of the Topic"
        },
        "resources": {
          "type": "array",
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/topics_privateEndpointConnections_childResource"
              }
            ]
          }
        },
        "sku": {
          "oneOf": [
            {
              "$ref": "#/definitions/ResourceSku"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Describes an EventGrid Resource Sku."
        },
        "tags": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Tags of the resource."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.EventGrid/topics"
          ]
        }
      },
      "required": [
        "apiVersion",
        "location",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.EventGrid/topics"
    },
    "topics_privateEndpointConnections": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2020-04-01-preview"
          ]
        },
        "name": {
          "type": "string",
          "description": "The name of the private endpoint connection connection."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/PrivateEndpointConnectionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Properties of the private endpoint connection resource."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.EventGrid/topics/privateEndpointConnections"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.EventGrid/topics/privateEndpointConnections"
    }
  },
  "unknown_resourceDefinitions": {
    "eventSubscriptions": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2020-04-01-preview"
          ]
        },
        "name": {
          "type": "string",
          "description": "Name of the event subscription. Event subscription names must be between 3 and 64 characters in length and should use alphanumeric letters only."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/EventSubscriptionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Properties of the Event Subscription."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.EventGrid/eventSubscriptions"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.EventGrid/eventSubscriptions"
    }
  },
  "definitions": {
    "AdvancedFilter": {
      "type": "object",
      "oneOf": [
        {
          "$ref": "#/definitions/NumberInAdvancedFilter"
        },
        {
          "$ref": "#/definitions/NumberNotInAdvancedFilter"
        },
        {
          "$ref": "#/definitions/NumberLessThanAdvancedFilter"
        },
        {
          "$ref": "#/definitions/NumberGreaterThanAdvancedFilter"
        },
        {
          "$ref": "#/definitions/NumberLessThanOrEqualsAdvancedFilter"
        },
        {
          "$ref": "#/definitions/NumberGreaterThanOrEqualsAdvancedFilter"
        },
        {
          "$ref": "#/definitions/BoolEqualsAdvancedFilter"
        },
        {
          "$ref": "#/definitions/StringInAdvancedFilter"
        },
        {
          "$ref": "#/definitions/StringNotInAdvancedFilter"
        },
        {
          "$ref": "#/definitions/StringBeginsWithAdvancedFilter"
        },
        {
          "$ref": "#/definitions/StringEndsWithAdvancedFilter"
        },
        {
          "$ref": "#/definitions/StringContainsAdvancedFilter"
        }
      ],
      "properties": {
        "key": {
          "type": "string",
          "description": "The field/property in the event based on which you want to filter."
        }
      },
      "description": "This is the base type that represents an advanced filter. To configure an advanced filter, do not directly instantiate an object of this class. Instead, instantiate an object of a derived class such as BoolEqualsAdvancedFilter, NumberInAdvancedFilter, StringEqualsAdvancedFilter etc. depending on the type of the key based on which you want to filter."
    },
    "AzureFunctionEventSubscriptionDestination": {
      "type": "object",
      "properties": {
        "endpointType": {
          "type": "string",
          "enum": [
            "AzureFunction"
          ]
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/AzureFunctionEventSubscriptionDestinationProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The properties that represent the Azure Function destination of an event subscription."
        }
      },
      "required": [
        "endpointType"
      ],
      "description": "Information about the azure function destination for an event subscription."
    },
    "AzureFunctionEventSubscriptionDestinationProperties": {
      "type": "object",
      "properties": {
        "maxEventsPerBatch": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Maximum number of events per batch."
        },
        "preferredBatchSizeInKilobytes": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Preferred batch size in Kilobytes."
        },
        "resourceId": {
          "type": "string",
          "description": "The Azure Resource Id that represents the endpoint of the Azure Function destination of an event subscription."
        }
      },
      "description": "The properties that represent the Azure Function destination of an event subscription."
    },
    "BoolEqualsAdvancedFilter": {
      "type": "object",
      "properties": {
        "operatorType": {
          "type": "string",
          "enum": [
            "BoolEquals"
          ]
        },
        "value": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The boolean filter value."
        }
      },
      "required": [
        "operatorType"
      ],
      "description": "BoolEquals Advanced Filter."
    },
    "ConnectionState": {
      "type": "object",
      "properties": {
        "actionsRequired": {
          "type": "string",
          "description": "Actions required (if any)."
        },
        "description": {
          "type": "string",
          "description": "Description of the connection state."
        },
        "status": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Pending",
                "Approved",
                "Rejected",
                "Disconnected"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Status of the connection."
        }
      },
      "description": "ConnectionState information."
    },
    "DeadLetterDestination": {
      "type": "object",
      "oneOf": [
        {
          "$ref": "#/definitions/StorageBlobDeadLetterDestination"
        }
      ],
      "properties": {},
      "description": "Information about the dead letter destination for an event subscription. To configure a deadletter destination, do not directly instantiate an object of this class. Instead, instantiate an object of a derived class. Currently, StorageBlobDeadLetterDestination is the only class that derives from this class."
    },
    "DeadLetterWithResourceIdentity": {
      "type": "object",
      "properties": {
        "deadLetterDestination": {
          "oneOf": [
            {
              "$ref": "#/definitions/DeadLetterDestination"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Information about the dead letter destination for an event subscription. To configure a deadletter destination, do not directly instantiate an object of this class. Instead, instantiate an object of a derived class. Currently, StorageBlobDeadLetterDestination is the only class that derives from this class."
        },
        "identity": {
          "oneOf": [
            {
              "$ref": "#/definitions/EventSubscriptionIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The identity information with the event subscription."
        }
      },
      "description": "Information about the deadletter destination with resource identity."
    },
    "DeliveryWithResourceIdentity": {
      "type": "object",
      "properties": {
        "destination": {
          "oneOf": [
            {
              "$ref": "#/definitions/EventSubscriptionDestination"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Information about the destination for an event subscription."
        },
        "identity": {
          "oneOf": [
            {
              "$ref": "#/definitions/EventSubscriptionIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The identity information with the event subscription."
        }
      },
      "description": "Information about the delivery for an event subscription with resource identity."
    },
    "DomainProperties": {
      "type": "object",
      "properties": {
        "inboundIpRules": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/InboundIpRule"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled."
        },
        "inputSchema": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "EventGridSchema",
                "CustomEventSchema",
                "CloudEventSchemaV1_0"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "This determines the format that Event Grid should expect for incoming events published to the domain."
        },
        "inputSchemaMapping": {
          "oneOf": [
            {
              "$ref": "#/definitions/InputSchemaMapping"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "By default, Event Grid expects events to be in the Event Grid event schema. Specifying an input schema mapping enables publishing to Event Grid using a custom input schema. Currently, the only supported type of InputSchemaMapping is 'JsonInputSchemaMapping'."
        },
        "privateEndpointConnections": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PrivateEndpointConnection"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "List of private endpoint connections."
        },
        "publicNetworkAccess": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Enabled",
                "Disabled"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "This determines if traffic is allowed over public network. By default it is enabled. \r\nYou can further restrict to specific IPs by configuring <seealso cref=\"P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.DomainProperties.InboundIpRules\" />."
        }
      },
      "description": "Properties of the Domain."
    },
    "domains_privateEndpointConnections_childResource": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2020-04-01-preview"
          ]
        },
        "name": {
          "type": "string",
          "description": "The name of the private endpoint connection connection."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/PrivateEndpointConnectionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Properties of the private endpoint connection resource."
        },
        "type": {
          "type": "string",
          "enum": [
            "privateEndpointConnections"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.EventGrid/domains/privateEndpointConnections"
    },
    "domains_topics_childResource": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2020-04-01-preview"
          ]
        },
        "name": {
          "type": "string",
          "description": "Name of the domain topic."
        },
        "type": {
          "type": "string",
          "enum": [
            "topics"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "type"
      ],
      "description": "Microsoft.EventGrid/domains/topics"
    },
    "EventChannelDestination": {
      "type": "object",
      "properties": {
        "azureSubscriptionId": {
          "type": "string",
          "description": "Azure subscription ID of the customer creating the event channel. The partner topic\r\nassociated with the event channel will be created under this Azure subscription."
        },
        "partnerTopicName": {
          "type": "string",
          "description": "Name of the partner topic associated with the event channel."
        },
        "resourceGroup": {
          "type": "string",
          "description": "Azure Resource Group of the customer creating the event channel. The partner topic\r\nassociated with the event channel will be created under this resource group."
        }
      },
      "description": "Properties of the destination of an event channel."
    },
    "EventChannelFilter": {
      "type": "object",
      "properties": {
        "advancedFilters": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AdvancedFilter"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "An array of advanced filters that are used for filtering event channels."
        }
      },
      "description": "Filter for the Event Channel."
    },
    "EventChannelProperties": {
      "type": "object",
      "properties": {
        "destination": {
          "oneOf": [
            {
              "$ref": "#/definitions/EventChannelDestination"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Properties of the destination of an event channel."
        },
        "expirationTimeIfNotActivatedUtc": {
          "type": "string",
          "format": "date-time",
          "description": "Expiration time of the event channel. If this timer expires while the corresponding partner topic is never activated,\r\nthe event channel and corresponding partner topic are deleted."
        },
        "filter": {
          "oneOf": [
            {
              "$ref": "#/definitions/EventChannelFilter"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Filter for the Event Channel."
        },
        "partnerTopicFriendlyDescription": {
          "type": "string",
          "description": "Friendly description about the topic. This can be set by the publisher/partner to show custom description for the customer partner topic.\r\nThis will be helpful to remove any ambiguity of the origin of creation of the partner topic for the customer."
        },
        "source": {
          "oneOf": [
            {
              "$ref": "#/definitions/EventChannelSource"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Properties of the source of an event channel."
        }
      },
      "description": "Properties of the Event Channel."
    },
    "EventChannelSource": {
      "type": "object",
      "properties": {
        "source": {
          "type": "string",
          "description": "The identifier of the resource that's the source of the events.\r\nThis represents a unique resource in the partner's resource model."
        }
      },
      "description": "Properties of the source of an event channel."
    },
    "EventHubEventSubscriptionDestination": {
      "type": "object",
      "properties": {
        "endpointType": {
          "type": "string",
          "enum": [
            "EventHub"
          ]
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/EventHubEventSubscriptionDestinationProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The properties for a event hub destination."
        }
      },
      "required": [
        "endpointType"
      ],
      "description": "Information about the event hub destination for an event subscription."
    },
    "EventHubEventSubscriptionDestinationProperties": {
      "type": "object",
      "properties": {
        "resourceId": {
          "type": "string",
          "description": "The Azure Resource Id that represents the endpoint of an Event Hub destination of an event subscription."
        }
      },
      "description": "The properties for a event hub destination."
    },
    "EventSubscriptionDestination": {
      "type": "object",
      "oneOf": [
        {
          "$ref": "#/definitions/WebHookEventSubscriptionDestination"
        },
        {
          "$ref": "#/definitions/EventHubEventSubscriptionDestination"
        },
        {
          "$ref": "#/definitions/StorageQueueEventSubscriptionDestination"
        },
        {
          "$ref": "#/definitions/HybridConnectionEventSubscriptionDestination"
        },
        {
          "$ref": "#/definitions/ServiceBusQueueEventSubscriptionDestination"
        },
        {
          "$ref": "#/definitions/ServiceBusTopicEventSubscriptionDestination"
        },
        {
          "$ref": "#/definitions/AzureFunctionEventSubscriptionDestination"
        }
      ],
      "properties": {},
      "description": "Information about the destination for an event subscription."
    },
    "EventSubscriptionFilter": {
      "type": "object",
      "properties": {
        "advancedFilters": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AdvancedFilter"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "An array of advanced filters that are used for filtering event subscriptions."
        },
        "includedEventTypes": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "A list of applicable event types that need to be part of the event subscription. If it is desired to subscribe to all default event types, set the IncludedEventTypes to null."
        },
        "isSubjectCaseSensitive": {
          "oneOf": [
            {
              "type": "boolean",
              "default": false
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Specifies if the SubjectBeginsWith and SubjectEndsWith properties of the filter\r\nshould be compared in a case sensitive manner."
        },
        "subjectBeginsWith": {
          "type": "string",
          "description": "An optional string to filter events for an event subscription based on a resource path prefix.\r\nThe format of this depends on the publisher of the events.\r\nWildcard characters are not supported in this path."
        },
        "subjectEndsWith": {
          "type": "string",
          "description": "An optional string to filter events for an event subscription based on a resource path suffix.\r\nWildcard characters are not supported in this path."
        }
      },
      "description": "Filter for the Event Subscription."
    },
    "EventSubscriptionIdentity": {
      "type": "object",
      "properties": {
        "type": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "SystemAssigned",
                "UserAssigned"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identity."
        },
        "userAssignedIdentity": {
          "type": "string",
          "description": "The user identity associated with the resource."
        }
      },
      "description": "The identity information with the event subscription."
    },
    "EventSubscriptionProperties": {
      "type": "object",
      "properties": {
        "deadLetterDestination": {
          "oneOf": [
            {
              "$ref": "#/definitions/DeadLetterDestination"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Information about the dead letter destination for an event subscription. To configure a deadletter destination, do not directly instantiate an object of this class. Instead, instantiate an object of a derived class. Currently, StorageBlobDeadLetterDestination is the only class that derives from this class."
        },
        "deadLetterWithResourceIdentity": {
          "oneOf": [
            {
              "$ref": "#/definitions/DeadLetterWithResourceIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Information about the deadletter destination with resource identity."
        },
        "deliveryWithResourceIdentity": {
          "oneOf": [
            {
              "$ref": "#/definitions/DeliveryWithResourceIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Information about the delivery for an event subscription with resource identity."
        },
        "destination": {
          "oneOf": [
            {
              "$ref": "#/definitions/EventSubscriptionDestination"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Information about the destination for an event subscription."
        },
        "eventDeliverySchema": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "EventGridSchema",
                "CustomInputSchema",
                "CloudEventSchemaV1_0"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The event delivery schema for the event subscription."
        },
        "expirationTimeUtc": {
          "type": "string",
          "format": "date-time",
          "description": "Expiration time of the event subscription."
        },
        "filter": {
          "oneOf": [
            {
              "$ref": "#/definitions/EventSubscriptionFilter"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Filter for the Event Subscription."
        },
        "labels": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "List of user defined labels."
        },
        "retryPolicy": {
          "oneOf": [
            {
              "$ref": "#/definitions/RetryPolicy"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Information about the retry policy for an event subscription."
        }
      },
      "description": "Properties of the Event Subscription."
    },
    "HybridConnectionEventSubscriptionDestination": {
      "type": "object",
      "properties": {
        "endpointType": {
          "type": "string",
          "enum": [
            "HybridConnection"
          ]
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/HybridConnectionEventSubscriptionDestinationProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The properties for a hybrid connection destination."
        }
      },
      "required": [
        "endpointType"
      ],
      "description": "Information about the HybridConnection destination for an event subscription."
    },
    "HybridConnectionEventSubscriptionDestinationProperties": {
      "type": "object",
      "properties": {
        "resourceId": {
          "type": "string",
          "description": "The Azure Resource ID of an hybrid connection that is the destination of an event subscription."
        }
      },
      "description": "The properties for a hybrid connection destination."
    },
    "IdentityInfo": {
      "type": "object",
      "properties": {
        "principalId": {
          "type": "string",
          "description": "The principal ID of resource identity."
        },
        "tenantId": {
          "type": "string",
          "description": "The tenant ID of resource."
        },
        "type": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "None",
                "SystemAssigned",
                "UserAssigned",
                "SystemAssigned, UserAssigned"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identity."
        },
        "userAssignedIdentities": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/UserIdentityProperties"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form:\r\n'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.\r\nThis property is currently not used and reserved for future usage."
        }
      },
      "description": "The identity information for the resource."
    },
    "InboundIpRule": {
      "type": "object",
      "properties": {
        "action": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Allow"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Action to perform based on the match or no match of the IpMask."
        },
        "ipMask": {
          "type": "string",
          "description": "IP Address in CIDR notation e.g., 10.0.0.0/8."
        }
      }
    },
    "InputSchemaMapping": {
      "type": "object",
      "oneOf": [
        {
          "$ref": "#/definitions/JsonInputSchemaMapping"
        }
      ],
      "properties": {},
      "description": "By default, Event Grid expects events to be in the Event Grid event schema. Specifying an input schema mapping enables publishing to Event Grid using a custom input schema. Currently, the only supported type of InputSchemaMapping is 'JsonInputSchemaMapping'."
    },
    "JsonField": {
      "type": "object",
      "properties": {
        "sourceField": {
          "type": "string",
          "description": "Name of a field in the input event schema that's to be used as the source of a mapping."
        }
      },
      "description": "This is used to express the source of an input schema mapping for a single target field in the Event Grid Event schema. This is currently used in the mappings for the 'id', 'topic' and 'eventtime' properties. This represents a field in the input event schema."
    },
    "JsonFieldWithDefault": {
      "type": "object",
      "properties": {
        "defaultValue": {
          "type": "string",
          "description": "The default value to be used for mapping when a SourceField is not provided or if there's no property with the specified name in the published JSON event payload."
        },
        "sourceField": {
          "type": "string",
          "description": "Name of a field in the input event schema that's to be used as the source of a mapping."
        }
      },
      "description": "This is used to express the source of an input schema mapping for a single target field\r\nin the Event Grid Event schema. This is currently used in the mappings for the 'subject',\r\n'eventtype' and 'dataversion' properties. This represents a field in the input event schema\r\nalong with a default value to be used, and at least one of these two properties should be provided."
    },
    "JsonInputSchemaMapping": {
      "type": "object",
      "properties": {
        "inputSchemaMappingType": {
          "type": "string",
          "enum": [
            "Json"
          ]
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/JsonInputSchemaMappingProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "This can be used to map properties of a source schema (or default values, for certain supported properties) to properties of the EventGridEvent schema."
        }
      },
      "required": [
        "inputSchemaMappingType"
      ],
      "description": "This enables publishing to Event Grid using a custom input schema. This can be used to map properties from a custom input JSON schema to the Event Grid event schema."
    },
    "JsonInputSchemaMappingProperties": {
      "type": "object",
      "properties": {
        "dataVersion": {
          "oneOf": [
            {
              "$ref": "#/definitions/JsonFieldWithDefault"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "This is used to express the source of an input schema mapping for a single target field\r\nin the Event Grid Event schema. This is currently used in the mappings for the 'subject',\r\n'eventtype' and 'dataversion' properties. This represents a field in the input event schema\r\nalong with a default value to be used, and at least one of these two properties should be provided."
        },
        "eventTime": {
          "oneOf": [
            {
              "$ref": "#/definitions/JsonField"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "This is used to express the source of an input schema mapping for a single target field in the Event Grid Event schema. This is currently used in the mappings for the 'id', 'topic' and 'eventtime' properties. This represents a field in the input event schema."
        },
        "eventType": {
          "oneOf": [
            {
              "$ref": "#/definitions/JsonFieldWithDefault"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "This is used to express the source of an input schema mapping for a single target field\r\nin the Event Grid Event schema. This is currently used in the mappings for the 'subject',\r\n'eventtype' and 'dataversion' properties. This represents a field in the input event schema\r\nalong with a default value to be used, and at least one of these two properties should be provided."
        },
        "id": {
          "oneOf": [
            {
              "$ref": "#/definitions/JsonField"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "This is used to express the source of an input schema mapping for a single target field in the Event Grid Event schema. This is currently used in the mappings for the 'id', 'topic' and 'eventtime' properties. This represents a field in the input event schema."
        },
        "subject": {
          "oneOf": [
            {
              "$ref": "#/definitions/JsonFieldWithDefault"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "This is used to express the source of an input schema mapping for a single target field\r\nin the Event Grid Event schema. This is currently used in the mappings for the 'subject',\r\n'eventtype' and 'dataversion' properties. This represents a field in the input event schema\r\nalong with a default value to be used, and at least one of these two properties should be provided."
        },
        "topic": {
          "oneOf": [
            {
              "$ref": "#/definitions/JsonField"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "This is used to express the source of an input schema mapping for a single target field in the Event Grid Event schema. This is currently used in the mappings for the 'id', 'topic' and 'eventtime' properties. This represents a field in the input event schema."
        }
      },
      "description": "This can be used to map properties of a source schema (or default values, for certain supported properties) to properties of the EventGridEvent schema."
    },
    "NumberGreaterThanAdvancedFilter": {
      "type": "object",
      "properties": {
        "operatorType": {
          "type": "string",
          "enum": [
            "NumberGreaterThan"
          ]
        },
        "value": {
          "oneOf": [
            {
              "type": "number"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The filter value."
        }
      },
      "required": [
        "operatorType"
      ],
      "description": "NumberGreaterThan Advanced Filter."
    },
    "NumberGreaterThanOrEqualsAdvancedFilter": {
      "type": "object",
      "properties": {
        "operatorType": {
          "type": "string",
          "enum": [
            "NumberGreaterThanOrEquals"
          ]
        },
        "value": {
          "oneOf": [
            {
              "type": "number"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The filter value."
        }
      },
      "required": [
        "operatorType"
      ],
      "description": "NumberGreaterThanOrEquals Advanced Filter."
    },
    "NumberInAdvancedFilter": {
      "type": "object",
      "properties": {
        "operatorType": {
          "type": "string",
          "enum": [
            "NumberIn"
          ]
        },
        "values": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "number"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The set of filter values."
        }
      },
      "required": [
        "operatorType"
      ],
      "description": "NumberIn Advanced Filter."
    },
    "NumberLessThanAdvancedFilter": {
      "type": "object",
      "properties": {
        "operatorType": {
          "type": "string",
          "enum": [
            "NumberLessThan"
          ]
        },
        "value": {
          "oneOf": [
            {
              "type": "number"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The filter value."
        }
      },
      "required": [
        "operatorType"
      ],
      "description": "NumberLessThan Advanced Filter."
    },
    "NumberLessThanOrEqualsAdvancedFilter": {
      "type": "object",
      "properties": {
        "operatorType": {
          "type": "string",
          "enum": [
            "NumberLessThanOrEquals"
          ]
        },
        "value": {
          "oneOf": [
            {
              "type": "number"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The filter value."
        }
      },
      "required": [
        "operatorType"
      ],
      "description": "NumberLessThanOrEquals Advanced Filter."
    },
    "NumberNotInAdvancedFilter": {
      "type": "object",
      "properties": {
        "operatorType": {
          "type": "string",
          "enum": [
            "NumberNotIn"
          ]
        },
        "values": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "number"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The set of filter values."
        }
      },
      "required": [
        "operatorType"
      ],
      "description": "NumberNotIn Advanced Filter."
    },
    "PartnerNamespaceProperties": {
      "type": "object",
      "properties": {
        "partnerRegistrationFullyQualifiedId": {
          "type": "string",
          "description": "The fully qualified ARM Id of the partner registration that should be associated with this partner namespace. This takes the following format:\r\n/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerRegistrations/{partnerRegistrationName}."
        }
      },
      "description": "Properties of the partner namespace."
    },
    "partnerNamespaces_eventChannels_childResource": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2020-04-01-preview"
          ]
        },
        "name": {
          "type": "string",
          "description": "Name of the event channel."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/EventChannelProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Properties of the Event Channel."
        },
        "type": {
          "type": "string",
          "enum": [
            "eventChannels"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.EventGrid/partnerNamespaces/eventChannels"
    },
    "PartnerRegistrationProperties": {
      "type": "object",
      "properties": {
        "authorizedAzureSubscriptionIds": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "List of Azure subscription Ids that are authorized to create a partner namespace\r\nassociated with this partner registration. This is an optional property. Creating\r\npartner namespaces is always permitted under the same Azure subscription as the one used\r\nfor creating the partner registration."
        },
        "customerServiceUri": {
          "type": "string",
          "description": "The extension of the customer service URI of the publisher."
        },
        "logoUri": {
          "type": "string",
          "description": "URI of the logo."
        },
        "longDescription": {
          "type": "string",
          "description": "Long description for the custom scenarios and integration to be displayed in the portal if needed.\r\nLength of this description should not exceed 2048 characters."
        },
        "partnerCustomerServiceExtension": {
          "type": "string",
          "description": "The extension of the customer service number of the publisher. Only digits are allowed and number of digits should not exceed 10."
        },
        "partnerCustomerServiceNumber": {
          "type": "string",
          "description": "The customer service number of the publisher. The expected phone format should start with a '+' sign \r\nfollowed by the country code. The remaining digits are then followed. Only digits and spaces are allowed and its\r\nlength cannot exceed 16 digits including country code. Examples of valid phone numbers are: +1 515 123 4567 and\r\n+966 7 5115 2471. Examples of invalid phone numbers are: +1 (515) 123-4567, 1 515 123 4567 and +966 121 5115 24 7 551 1234 43"
        },
        "partnerName": {
          "type": "string",
          "description": "Official name of the partner name. For example: \"Contoso\"."
        },
        "partnerResourceTypeDescription": {
          "type": "string",
          "description": "Short description of the partner resource type. The length of this description should not exceed 256 characters."
        },
        "partnerResourceTypeDisplayName": {
          "type": "string",
          "description": "Display name of the partner resource type."
        },
        "partnerResourceTypeName": {
          "type": "string",
          "description": "Name of the partner resource type."
        },
        "setupUri": {
          "type": "string",
          "description": "URI of the partner website that can be used by Azure customers to setup Event Grid\r\nintegration on an event source."
        },
        "visibilityState": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Hidden",
                "PublicPreview",
                "GenerallyAvailable"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Visibility state of the partner registration."
        }
      },
      "description": "Properties of the partner registration."
    },
    "PrivateEndpoint": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ARM identifier for Private Endpoint."
        }
      },
      "description": "PrivateEndpoint information."
    },
    "PrivateEndpointConnection": {
      "type": "object",
      "properties": {
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/PrivateEndpointConnectionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Properties of the private endpoint connection resource."
        }
      }
    },
    "PrivateEndpointConnectionProperties": {
      "type": "object",
      "properties": {
        "groupIds": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "GroupIds from the private link service resource."
        },
        "privateEndpoint": {
          "oneOf": [
            {
              "$ref": "#/definitions/PrivateEndpoint"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "PrivateEndpoint information."
        },
        "privateLinkServiceConnectionState": {
          "oneOf": [
            {
              "$ref": "#/definitions/ConnectionState"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "ConnectionState information."
        },
        "provisioningState": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Creating",
                "Updating",
                "Deleting",
                "Succeeded",
                "Canceled",
                "Failed"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Provisioning state of the Private Endpoint Connection."
        }
      },
      "description": "Properties of the private endpoint connection resource."
    },
    "ResourceSku": {
      "type": "object",
      "properties": {
        "name": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Basic",
                "Premium"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The Sku name of the resource. The possible values are: Basic or Premium."
        }
      },
      "description": "Describes an EventGrid Resource Sku."
    },
    "RetryPolicy": {
      "type": "object",
      "properties": {
        "eventTimeToLiveInMinutes": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Time To Live (in minutes) for events."
        },
        "maxDeliveryAttempts": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Maximum number of delivery retry attempts for events."
        }
      },
      "description": "Information about the retry policy for an event subscription."
    },
    "ServiceBusQueueEventSubscriptionDestination": {
      "type": "object",
      "properties": {
        "endpointType": {
          "type": "string",
          "enum": [
            "ServiceBusQueue"
          ]
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/ServiceBusQueueEventSubscriptionDestinationProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The properties that represent the Service Bus destination of an event subscription."
        }
      },
      "required": [
        "endpointType"
      ],
      "description": "Information about the service bus destination for an event subscription."
    },
    "ServiceBusQueueEventSubscriptionDestinationProperties": {
      "type": "object",
      "properties": {
        "resourceId": {
          "type": "string",
          "description": "The Azure Resource Id that represents the endpoint of the Service Bus destination of an event subscription."
        }
      },
      "description": "The properties that represent the Service Bus destination of an event subscription."
    },
    "ServiceBusTopicEventSubscriptionDestination": {
      "type": "object",
      "properties": {
        "endpointType": {
          "type": "string",
          "enum": [
            "ServiceBusTopic"
          ]
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/ServiceBusTopicEventSubscriptionDestinationProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The properties that represent the Service Bus Topic destination of an event subscription."
        }
      },
      "required": [
        "endpointType"
      ],
      "description": "Information about the service bus topic destination for an event subscription."
    },
    "ServiceBusTopicEventSubscriptionDestinationProperties": {
      "type": "object",
      "properties": {
        "resourceId": {
          "type": "string",
          "description": "The Azure Resource Id that represents the endpoint of the Service Bus Topic destination of an event subscription."
        }
      },
      "description": "The properties that represent the Service Bus Topic destination of an event subscription."
    },
    "StorageBlobDeadLetterDestination": {
      "type": "object",
      "properties": {
        "endpointType": {
          "type": "string",
          "enum": [
            "StorageBlob"
          ]
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/StorageBlobDeadLetterDestinationProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Properties of the storage blob based dead letter destination."
        }
      },
      "required": [
        "endpointType"
      ],
      "description": "Information about the storage blob based dead letter destination."
    },
    "StorageBlobDeadLetterDestinationProperties": {
      "type": "object",
      "properties": {
        "blobContainerName": {
          "type": "string",
          "description": "The name of the Storage blob container that is the destination of the deadletter events"
        },
        "resourceId": {
          "type": "string",
          "description": "The Azure Resource ID of the storage account that is the destination of the deadletter events"
        }
      },
      "description": "Properties of the storage blob based dead letter destination."
    },
    "StorageQueueEventSubscriptionDestination": {
      "type": "object",
      "properties": {
        "endpointType": {
          "type": "string",
          "enum": [
            "StorageQueue"
          ]
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/StorageQueueEventSubscriptionDestinationProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The properties for a storage queue destination."
        }
      },
      "required": [
        "endpointType"
      ],
      "description": "Information about the storage queue destination for an event subscription."
    },
    "StorageQueueEventSubscriptionDestinationProperties": {
      "type": "object",
      "properties": {
        "queueName": {
          "type": "string",
          "description": "The name of the Storage queue under a storage account that is the destination of an event subscription."
        },
        "resourceId": {
          "type": "string",
          "description": "The Azure Resource ID of the storage account that contains the queue that is the destination of an event subscription."
        }
      },
      "description": "The properties for a storage queue destination."
    },
    "StringBeginsWithAdvancedFilter": {
      "type": "object",
      "properties": {
        "operatorType": {
          "type": "string",
          "enum": [
            "StringBeginsWith"
          ]
        },
        "values": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The set of filter values."
        }
      },
      "required": [
        "operatorType"
      ],
      "description": "StringBeginsWith Advanced Filter."
    },
    "StringContainsAdvancedFilter": {
      "type": "object",
      "properties": {
        "operatorType": {
          "type": "string",
          "enum": [
            "StringContains"
          ]
        },
        "values": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The set of filter values."
        }
      },
      "required": [
        "operatorType"
      ],
      "description": "StringContains Advanced Filter."
    },
    "StringEndsWithAdvancedFilter": {
      "type": "object",
      "properties": {
        "operatorType": {
          "type": "string",
          "enum": [
            "StringEndsWith"
          ]
        },
        "values": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The set of filter values."
        }
      },
      "required": [
        "operatorType"
      ],
      "description": "StringEndsWith Advanced Filter."
    },
    "StringInAdvancedFilter": {
      "type": "object",
      "properties": {
        "operatorType": {
          "type": "string",
          "enum": [
            "StringIn"
          ]
        },
        "values": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The set of filter values."
        }
      },
      "required": [
        "operatorType"
      ],
      "description": "StringIn Advanced Filter."
    },
    "StringNotInAdvancedFilter": {
      "type": "object",
      "properties": {
        "operatorType": {
          "type": "string",
          "enum": [
            "StringNotIn"
          ]
        },
        "values": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The set of filter values."
        }
      },
      "required": [
        "operatorType"
      ],
      "description": "StringNotIn Advanced Filter."
    },
    "SystemTopicProperties": {
      "type": "object",
      "properties": {
        "source": {
          "type": "string",
          "description": "Source for the system topic."
        },
        "topicType": {
          "type": "string",
          "description": "TopicType for the system topic."
        }
      },
      "description": "Properties of the System Topic."
    },
    "systemTopics_eventSubscriptions_childResource": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2020-04-01-preview"
          ]
        },
        "name": {
          "type": "string",
          "description": "Name of the event subscription to be created. Event subscription names must be between 3 and 100 characters in length and use alphanumeric letters only."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/EventSubscriptionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Properties of the Event Subscription."
        },
        "type": {
          "type": "string",
          "enum": [
            "eventSubscriptions"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.EventGrid/systemTopics/eventSubscriptions"
    },
    "TopicProperties": {
      "type": "object",
      "properties": {
        "inboundIpRules": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/InboundIpRule"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled."
        },
        "inputSchema": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "EventGridSchema",
                "CustomEventSchema",
                "CloudEventSchemaV1_0"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "This determines the format that Event Grid should expect for incoming events published to the topic."
        },
        "inputSchemaMapping": {
          "oneOf": [
            {
              "$ref": "#/definitions/InputSchemaMapping"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "By default, Event Grid expects events to be in the Event Grid event schema. Specifying an input schema mapping enables publishing to Event Grid using a custom input schema. Currently, the only supported type of InputSchemaMapping is 'JsonInputSchemaMapping'."
        },
        "privateEndpointConnections": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PrivateEndpointConnection"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "publicNetworkAccess": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Enabled",
                "Disabled"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "This determines if traffic is allowed over public network. By default it is enabled. \r\nYou can further restrict to specific IPs by configuring <seealso cref=\"P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.TopicProperties.InboundIpRules\" />."
        }
      },
      "description": "Properties of the Topic"
    },
    "topics_privateEndpointConnections_childResource": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2020-04-01-preview"
          ]
        },
        "name": {
          "type": "string",
          "description": "The name of the private endpoint connection connection."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/PrivateEndpointConnectionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Properties of the private endpoint connection resource."
        },
        "type": {
          "type": "string",
          "enum": [
            "privateEndpointConnections"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.EventGrid/topics/privateEndpointConnections"
    },
    "UserIdentityProperties": {
      "type": "object",
      "properties": {
        "clientId": {
          "type": "string",
          "description": "The client id of user assigned identity."
        },
        "principalId": {
          "type": "string",
          "description": "The principal id of user assigned identity."
        }
      },
      "description": "The information about the user identity."
    },
    "WebHookEventSubscriptionDestination": {
      "type": "object",
      "properties": {
        "endpointType": {
          "type": "string",
          "enum": [
            "WebHook"
          ]
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/WebHookEventSubscriptionDestinationProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Information about the webhook destination properties for an event subscription."
        }
      },
      "required": [
        "endpointType"
      ],
      "description": "Information about the webhook destination for an event subscription."
    },
    "WebHookEventSubscriptionDestinationProperties": {
      "type": "object",
      "properties": {
        "azureActiveDirectoryApplicationIdOrUri": {
          "type": "string",
          "description": "The Azure Active Directory Application ID or URI to get the access token that will be included as the bearer token in delivery requests."
        },
        "azureActiveDirectoryTenantId": {
          "type": "string",
          "description": "The Azure Active Directory Tenant ID to get the access token that will be included as the bearer token in delivery requests."
        },
        "endpointUrl": {
          "type": "string",
          "description": "The URL that represents the endpoint of the destination of an event subscription."
        },
        "maxEventsPerBatch": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Maximum number of events per batch."
        },
        "preferredBatchSizeInKilobytes": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Preferred batch size in Kilobytes."
        }
      },
      "description": "Information about the webhook destination properties for an event subscription."
    }
  }
}