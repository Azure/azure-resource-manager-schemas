{
  "id": "https://schema.management.azure.com/schemas/2020-05-07/Microsoft.CloudTest.json#",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "title": "Microsoft.CloudTest",
  "description": "Microsoft CloudTest Resource Types",
  "resourceDefinitions": {
    "accounts": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2020-05-07"
          ]
        },
        "identity": {
          "oneOf": [
            {
              "$ref": "#/definitions/Identity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "location": {
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "The name of the CloudTest account."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/AccountProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "type": "object",
          "properties": {}
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.CloudTest/accounts"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.CloudTest/accounts"
    },
    "hostedpools": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2020-05-07"
          ]
        },
        "identity": {
          "oneOf": [
            {
              "$ref": "#/definitions/Identity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "location": {
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "The name of the CloudTest resource pool."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/HostedPoolProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "type": "object",
          "properties": {}
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.CloudTest/hostedpools"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.CloudTest/hostedpools"
    },
    "images": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2020-05-07"
          ]
        },
        "identity": {
          "oneOf": [
            {
              "$ref": "#/definitions/Identity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "location": {
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "The name of image to create or update."
        },
        "properties": {
          "anyOf": [
            {
              "$ref": "#/definitions/ContainerImageProperties"
            },
            {
              "$ref": "#/definitions/GalleryImageProperties"
            },
            {
              "$ref": "#/definitions/GenericImageProperties"
            },
            {
              "$ref": "#/definitions/ManagedImageProperties"
            },
            {
              "$ref": "#/definitions/SharedImageGalleryImageProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Defines the common set of properties for all image types."
        },
        "tags": {
          "type": "object",
          "properties": {}
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.CloudTest/images"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.CloudTest/images"
    },
    "pools": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2020-05-07"
          ]
        },
        "identity": {
          "oneOf": [
            {
              "$ref": "#/definitions/Identity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "location": {
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "The name of the CloudTest resource pool."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/PoolProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "type": "object",
          "properties": {}
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.CloudTest/pools"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.CloudTest/pools"
    }
  },
  "definitions": {
    "AccountProperties": {
      "type": "object",
      "properties": {
        "accessControlUsers": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Gets or sets the list of accounts who have read access to the backing resource group.\r\nThis will also be used for Bastion access."
        },
        "codeCoverageType": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "None",
                "Dynamic",
                "Vsinstr",
                "Custom",
                "DynamicCJson",
                "CodeCoverageConsole"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "contacts": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Gets or sets the list of contacts that has access to the CloudTest resources in the account.\r\nThis will also be used to contact users."
        },
        "failureAnalysisSystem": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "None",
                "Cosine",
                "OneESTest"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "flakyConfigName": {
          "type": "string",
          "description": "Gets or sets the name of the Flaky Test configuration file."
        },
        "installVsPerfToolsOnWorker": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Gets or sets a value that defines whether to install Visual Studio Performance Tools on the worker. This tool suite is needed to load binaries instrumented using vsinstr correctly.\r\nFalse by default."
        },
        "maxConcurrentSessionsPerAccount": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Gets or sets the maximum number of sessions that a service account can run simultaneously."
        },
        "maxConcurrentSessionsPerSystemAccount": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Gets or sets the maximum number of test sessions that a system account can run simultaneously."
        },
        "maxConcurrentSessionsPerUser": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Gets or sets the maximum number of sessions that an user can run simultaneously."
        },
        "newTestCasesRetryCount": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Gets or sets the number of times the new test cases introduced in PR needs to run."
        },
        "notificationSubscribers": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Gets or sets the list of users that will receive summary and lease emails."
        },
        "provisioningState": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Creating",
                "Updating",
                "Deleting",
                "Succeeded",
                "Failed",
                "Canceled"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "reportPerformanceMetrics": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Disabled",
                "Enabled"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "requestId": {
          "type": "string",
          "description": "Gets or sets the current request ID associated with this account."
        },
        "retryOnFailureMode": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "None",
                "TestCase",
                "TestJob",
                "TestCaseOnSameMachine",
                "TestCaseOnSameMachineAndThenNew",
                "TestCaseOnSameMachineEvenKnownFlaky"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "stamp": {
          "type": "string",
          "description": "Gets or sets the stamp."
        },
        "summaryEmail": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Enabled",
                "Disabled"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "systemAccounts": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Gets or sets the list of system accounts allowed to submit test sessions."
        },
        "testLogCompression": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Enabled",
                "Disabled"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "userCertificateResourceId": {
          "type": "string",
          "description": "Gets or sets the user certificate URL in the user's KeyVault."
        },
        "vstsTestJobNameFormat": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "GroupAndJobName",
                "JobName"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "vstsTestResultAttachmentUploadBehavior": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Never",
                "OnlyOnFailure",
                "Always",
                "DynamicJobCaching"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "contacts"
      ]
    },
    "AgentProfile": {
      "type": "object",
      "properties": {
        "resourcePredictions": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "object",
                "additionalProperties": {
                  "type": "integer"
                },
                "properties": {}
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Gets or sets the resource predictions. If no predictions are provided resources will be created on-demand."
        },
        "type": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Stateless",
                "Stateful"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "description": "The agent profile describes the lifetime and behavior for agents in hosted pools."
    },
    "AllocationProfile": {
      "type": "object",
      "properties": {
        "allocationScheme": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Fifo",
                "Absolute"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "failoverProfile": {
          "oneOf": [
            {
              "$ref": "#/definitions/FailoverProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      }
    },
    "Artifact": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Gets or sets the name of the artifact."
        },
        "parameters": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Gets or sets list of parameters for an artifact."
        }
      }
    },
    "ArtifactSource": {
      "type": "object",
      "properties": {
        "azureDevOpsUrl": {
          "type": "string",
          "description": "Gets or sets the Azure DevOps URL."
        },
        "artifactRepo": {
          "type": "string",
          "description": "Gets or sets the Azure DevOps repository name."
        },
        "artifactFolder": {
          "type": "string",
          "description": "Gets or sets the artifact folder."
        },
        "artifactBranch": {
          "type": "string",
          "description": "Gets or sets the artifact branch."
        },
        "accessToken": {
          "type": "string",
          "description": "Gets or sets the access token name to use when accessing Azure DevOps for the artifact."
        }
      }
    },
    "BuildProfile": {
      "type": "object",
      "properties": {
        "runAsSystem": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Gets or sets a value indicating whether artifacts should be installed as SYSTEM instead of a local Administrator."
        },
        "diskSize": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Gets or sets the OS disk size to use on the virtual machine."
        },
        "sku": {
          "type": "string",
          "description": "Gets or sets the SKU to be used to build the image in ImageFactory"
        }
      }
    },
    "ComputeGallery": {
      "type": "object",
      "properties": {
        "computeGalleryId": {
          "type": "string",
          "description": "Gets or sets the compute gallery id"
        }
      }
    },
    "ContainerImageProperties": {
      "allOf": [
        {
          "$ref": "#/definitions/ImageProperties"
        }
      ],
      "properties": {
        "image": {
          "type": "string",
          "minLength": 1
        },
        "osType": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Windows",
                "Linux"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "cpuCores": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "memoryInGb": {
          "oneOf": [
            {
              "type": "number"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "subscriptionId": {
          "type": "string"
        }
      },
      "required": [
        "image",
        "osType",
        "cpuCores",
        "memoryInGb"
      ]
    },
    "DataDisk": {
      "type": "object",
      "properties": {
        "caching": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "None",
                "ReadOnly",
                "ReadWrite"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "diskSizeGiB": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "storageAccountType": {
          "type": "string"
        }
      }
    },
    "DomainProfile": {
      "type": "object",
      "properties": {
        "ouPath": {
          "type": "string"
        },
        "userProfile": {
          "oneOf": [
            {
              "$ref": "#/definitions/UserProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      }
    },
    "DsmsCertificateInfo": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "sourceLocation": {
          "type": "string",
          "format": "uri"
        },
        "storeLocation": {
          "type": "string"
        },
        "storeName": {
          "type": "string"
        }
      }
    },
    "DsmsConfiguration": {
      "type": "object",
      "properties": {
        "certificates": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DsmsCertificateInfo"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "secrets": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DsmsSecretInfo"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      }
    },
    "DsmsSecretInfo": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "sourceLocation": {
          "type": "string",
          "format": "uri"
        }
      }
    },
    "FailoverProfile": {
      "type": "object",
      "properties": {
        "backupPools": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "failoverMode": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Failover",
                "Spillover",
                "LoadBalance"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "skipPrimary": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      }
    },
    "FirewallProfile": {
      "type": "object",
      "properties": {
        "policyName": {
          "type": "string"
        }
      }
    },
    "GalleryImageProperties": {
      "properties": {
        "resourceId": {
          "type": "string",
          "minLength": 1,
          "description": "Gets or sets the resource id of the image to use when creating VMs."
        },
        "provisioningScriptUrl": {
          "type": "string",
          "description": "Gets or sets the path to the provisioning script URL. This will be a Blob Storage URL."
        },
        "provisioningScriptVersion": {
          "type": "string",
          "description": "Gets or sets the provisioning script version."
        }
      },
      "required": [
        "resourceId"
      ]
    },
    "GenericImageProperties": {
      "allOf": [
        {
          "$ref": "#/definitions/ImageProperties"
        }
      ],
      "properties": {
        "genericProperties": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      }
    },
    "HostedPoolProperties": {
      "type": "object",
      "properties": {
        "agentProfile": {
          "oneOf": [
            {
              "$ref": "#/definitions/AgentProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The agent profile describes the lifetime and behavior for agents in hosted pools."
        },
        "allocationProfile": {
          "oneOf": [
            {
              "$ref": "#/definitions/AllocationProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "domainProfile": {
          "oneOf": [
            {
              "$ref": "#/definitions/DomainProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "images": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ImageBuffer"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Gets or sets the images."
        },
        "maxPoolSize": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Gets or sets the maximum number of VMs that will be provisioned at a given time."
        },
        "networkProfile": {
          "oneOf": [
            {
              "$ref": "#/definitions/NetworkProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "organization": {
          "type": "string",
          "format": "uri",
          "description": "Gets or sets the Azure DevOps organization URL."
        },
        "organizationProfile": {
          "oneOf": [
            {
              "$ref": "#/definitions/OrganizationProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "osProfile": {
          "oneOf": [
            {
              "$ref": "#/definitions/OsProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "projects": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Gets or sets the list of projects"
        },
        "provisioningState": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Creating",
                "Updating",
                "Deleting",
                "Succeeded",
                "Failed",
                "Canceled"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "requestId": {
          "type": "string",
          "description": "Gets or sets the current request ID."
        },
        "sku": {
          "oneOf": [
            {
              "$ref": "#/definitions/Sku"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The SKU that will be used for creating VMs to execute tests."
        },
        "stamp": {
          "type": "string",
          "description": "Gets or sets the stamp."
        },
        "storageProfile": {
          "oneOf": [
            {
              "$ref": "#/definitions/StorageProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "userProfile": {
          "oneOf": [
            {
              "$ref": "#/definitions/UserProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "vmProvider": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Azure",
                "Autopilot",
                "HttpResourceProvider",
                "AzureContainerInstances",
                "AzureTiP"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "vmProviderProperties": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Gets or sets the property bag for the VM Provider"
        }
      },
      "required": [
        "agentProfile",
        "images",
        "maxPoolSize",
        "sku"
      ]
    },
    "Identity": {
      "type": "object",
      "properties": {
        "internalResourceId": {
          "type": "string"
        },
        "tenantId": {
          "type": "string"
        },
        "type": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "None",
                "UserAssigned"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "userAssignedIdentities": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/UserAssignedIdentity"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      }
    },
    "ImageBuffer": {
      "type": "object",
      "properties": {
        "imageName": {
          "type": "string"
        },
        "poolBufferPercentage": {
          "type": "string"
        },
        "subscriptionId": {
          "type": "string"
        }
      }
    },
    "ImageProperties": {
      "type": "object",
      "properties": {
        "imageType": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Gallery",
                "SharedImageGallery",
                "Managed",
                "Custom",
                "Generic",
                "Container"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "provisioningState": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Creating",
                "Updating",
                "Deleting",
                "Succeeded",
                "Failed",
                "Canceled"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "requestId": {
          "type": "string"
        }
      },
      "required": [
        "imageType"
      ],
      "description": "Defines the common set of properties for all image types."
    },
    "ManagedImageProperties": {
      "allOf": [
        {
          "$ref": "#/definitions/ImageProperties"
        }
      ],
      "properties": {
        "baseImage": {
          "type": "string",
          "minLength": 1,
          "description": "Gets or sets the resource id of the base image."
        },
        "subscriptionId": {
          "type": "string",
          "description": "Gets or sets the subscription id where the image is created in."
        },
        "buildProfile": {
          "oneOf": [
            {
              "$ref": "#/definitions/BuildProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "platform": {
          "type": "string",
          "description": "Gets or sets the platform for the managed image."
        },
        "artifacts": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Artifact"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Gets or sets the list of artifacts from Image Factory that will be installed on the image."
        },
        "artifactSource": {
          "oneOf": [
            {
              "$ref": "#/definitions/ArtifactSource"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "contacts": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Gets or sets the list of contacts"
        },
        "publishingProfile": {
          "oneOf": [
            {
              "$ref": "#/definitions/PublishingProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "revision": {
          "type": "string",
          "description": "Gets or sets the revision number. This will be manually increased in order to trigger a new image creation."
        },
        "validationQuery": {
          "type": "string",
          "description": "Gets or sets the validation query. This is a Kusto query that will return a list of session IDs to replay\r\nto validate the new image version."
        },
        "validationProfile": {
          "oneOf": [
            {
              "$ref": "#/definitions/ValidationProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "scheduleProfile": {
          "oneOf": [
            {
              "$ref": "#/definitions/ScheduleProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "managementProfile": {
          "oneOf": [
            {
              "$ref": "#/definitions/ManagementProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "versionOverride": {
          "type": "string",
          "description": "Gets or sets the image version that will be used when creating VMs.\r\nThis overrides the current Production version."
        },
        "provisioningScriptUrl": {
          "type": "string",
          "description": "Gets or sets the path to the provisioning script URL. This will be a Blob Storage URL."
        },
        "provisioningScriptVersion": {
          "type": "string",
          "description": "Gets or sets the provisioning scription version."
        }
      },
      "required": [
        "baseImage",
        "artifacts"
      ]
    },
    "ManagementProfile": {
      "type": "object",
      "properties": {
        "retainedVersionCount": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "oldVersionMinimumLifespan": {
          "oneOf": [
            {
              "$ref": "#/definitions/TimeSpan"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      }
    },
    "NetworkProfile": {
      "type": "object",
      "properties": {
        "attachPublicIP": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "customerIPAddressResourceIds": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "firewallProfile": {
          "oneOf": [
            {
              "$ref": "#/definitions/FirewallProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "natGatewayIpAddressCount": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "peeredVirtualNetworkResourceId": {
          "type": "string"
        },
        "subnetId": {
          "type": "string"
        },
        "subnetTenantId": {
          "type": "string"
        }
      }
    },
    "OrganizationProfile": {
      "type": "object",
      "properties": {
        "type": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "AzureDevOps",
                "GitHub",
                "Generic"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "url": {
          "type": "string",
          "format": "uri"
        }
      }
    },
    "OsProfile": {
      "type": "object",
      "properties": {
        "dsmsConfiguration": {
          "oneOf": [
            {
              "$ref": "#/definitions/DsmsConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "secretsManagementSettings": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecretsManagementSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      }
    },
    "PoolProperties": {
      "type": "object",
      "properties": {
        "accounts": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Gets or sets the list of accounts that can access this pool."
        },
        "allocationPriorityFormula": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Fifo",
                "Absolute"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "allocationProfile": {
          "oneOf": [
            {
              "$ref": "#/definitions/AllocationProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "customerIPAddressResourceIds": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Gets or sets customerIPAddressResourceIds.\r\nObsolete. Use properties.networkProfile.customerIPAddressResourceIds instead."
        },
        "defaultLeaseHours": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Gets or sets the default time a lease is valid for."
        },
        "domainProfile": {
          "oneOf": [
            {
              "$ref": "#/definitions/DomainProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "images": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ImageBuffer"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Gets or sets the list of image names and their associated buffers."
        },
        "maxPoolSize": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Gets or sets the maximum number of VMs that will be provisioned at a given time."
        },
        "maxResourcesForLease": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Gets or sets the maximum number of machines that can be held for lease at a given time."
        },
        "maxResourcesForLeasePerUser": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Gets or sets the maximum numbers of machines that an user can hold for debugging at a given time."
        },
        "natGatewayIpAddressCount": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Gets or sets natGatewayIpAddressCount.\r\nObsolete. Use properties.networkProfile.natGatewayIpAddressCount instead."
        },
        "networkProfile": {
          "oneOf": [
            {
              "$ref": "#/definitions/NetworkProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "osProfile": {
          "oneOf": [
            {
              "$ref": "#/definitions/OsProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "peeredVirtualNetworkResourceId": {
          "type": "string",
          "description": "Gets or sets peeredVirtualNetworkResourceId.\r\nObsolete. Use properties.networkProfile.peeredVirtualNetworkResourceId instead."
        },
        "poolBufferScheme": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "None",
                "Balanced",
                "PerformanceOptimized",
                "Performance"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "predictiveProvisioningMode": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Off",
                "BufferSchemeBound",
                "Unrestricted"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "provisioningState": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Creating",
                "Updating",
                "Deleting",
                "Succeeded",
                "Failed",
                "Canceled"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "requestId": {
          "type": "string",
          "description": "Gets or sets the current request ID."
        },
        "resourcePredictions": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "object",
                "additionalProperties": {
                  "type": "integer"
                },
                "properties": {}
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Gets or sets the resource predictions. If no predictions are provided resources will be created on-demand."
        },
        "sku": {
          "oneOf": [
            {
              "$ref": "#/definitions/Sku"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The SKU that will be used for creating VMs to execute tests."
        },
        "stamp": {
          "type": "string",
          "description": "Gets or sets the stamp."
        },
        "storageProfile": {
          "oneOf": [
            {
              "$ref": "#/definitions/StorageProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "userProfile": {
          "oneOf": [
            {
              "$ref": "#/definitions/UserProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "vmProvider": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Azure",
                "Autopilot",
                "HttpResourceProvider",
                "AzureContainerInstances",
                "AzureTiP"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "vmProviderProperties": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {}
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Gets or sets the property bag for the VM Provider"
        }
      },
      "required": [
        "sku"
      ]
    },
    "PublishingProfile": {
      "type": "object",
      "properties": {
        "targetRegions": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TargetRegion"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Gets or sets the managed regions publishing profile"
        },
        "computeGalleries": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ComputeGallery"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Gets or sets the compute galleries publishing profile"
        },
        "storageAccounts": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StorageAccount"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Gets or sets the managed storage accounts publishing profile"
        }
      }
    },
    "ScheduleProfile": {
      "type": "object",
      "properties": {
        "cronExpression": {
          "type": "string",
          "description": "Gets or sets the cron schedule"
        }
      }
    },
    "SecretsManagementSettings": {
      "type": "object",
      "properties": {
        "certificateStoreLocation": {
          "type": "string"
        },
        "observedCertificates": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      }
    },
    "SharedImageGalleryImageProperties": {
      "properties": {
        "resourceId": {
          "type": "string",
          "minLength": 1,
          "description": "Gets or sets the resource id of the shared image gallery image to use. To use the latest image\r\nversion for a shared image gallery image definition, specify 'latest' as the image version."
        },
        "provisioningScriptUrl": {
          "type": "string",
          "description": "Gets or sets the path to the provisioning script URL. This will be a Blob Storage URL."
        },
        "provisioningScriptVersion": {
          "type": "string",
          "description": "Gets or sets the provisioning scription version."
        },
        "architecture": {
          "type": "string",
          "description": "Gets or sets the architecture of the image. \"Arm64\" if an arm image, null otherwise"
        }
      },
      "required": [
        "resourceId"
      ]
    },
    "Sku": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "minLength": 1,
          "description": "Gets or sets the SKU name."
        },
        "type": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "AzureSku",
                "AutoPilotSku",
                "GenericSku",
                "AciSku"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "name"
      ],
      "description": "The SKU that will be used for creating VMs to execute tests."
    },
    "StorageAccount": {
      "type": "object",
      "properties": {
        "storageAccountId": {
          "type": "string",
          "description": "Gets or sets the storage account id"
        }
      }
    },
    "StorageProfile": {
      "type": "object",
      "properties": {
        "dataDisks": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DataDisk"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      }
    },
    "TargetRegion": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Gets or sets the target region name"
        },
        "replicas": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Gets or sets the target region replicas"
        }
      }
    },
    "TimeSpan": {
      "type": "object",
      "properties": {
        "ticks": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      }
    },
    "UserAssignedIdentity": {
      "type": "object",
      "properties": {
        "clientId": {
          "type": "string"
        },
        "principalId": {
          "type": "string"
        }
      }
    },
    "UserProfile": {
      "type": "object",
      "properties": {
        "keyVaultUrl": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "ValidationPipelineProfile": {
      "type": "object",
      "properties": {
        "organization": {
          "type": "string",
          "format": "uri",
          "description": "Gets or sets the Organization URL of a pipeline profile"
        },
        "project": {
          "type": "string",
          "description": "Gets or sets the project name of a pipeline profile"
        },
        "definitionId": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Gets or sets the definition ID of a pipeline profile"
        }
      }
    },
    "ValidationProfile": {
      "type": "object",
      "properties": {
        "validationPipelines": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ValidationPipelineProfile"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Gets or sets the list of validation pipelines. These pipelines are used to run validation on a managed image"
        }
      }
    }
  }
}