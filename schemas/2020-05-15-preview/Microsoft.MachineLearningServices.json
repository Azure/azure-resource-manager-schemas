{
  "id": "https://schema.management.azure.com/schemas/2020-05-15-preview/Microsoft.MachineLearningServices.json#",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "title": "Microsoft.MachineLearningServices",
  "description": "Microsoft MachineLearningServices Resource Types",
  "resourceDefinitions": {
    "workspaces": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2020-05-15-preview"
          ]
        },
        "identity": {
          "oneOf": [
            {
              "$ref": "#/definitions/Identity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Identity for the resource."
        },
        "location": {
          "type": "string",
          "description": "Specifies the location of the resource."
        },
        "name": {
          "type": "string",
          "description": "Name of Azure Machine Learning workspace."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/WorkspaceProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The properties of a machine learning workspace."
        },
        "resources": {
          "type": "array",
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/workspaces_computes_childResource"
              },
              {
                "$ref": "#/definitions/workspaces_privateEndpointConnections_childResource"
              },
              {
                "$ref": "#/definitions/workspaces_linkedWorkspaces_childResource"
              },
              {
                "$ref": "#/definitions/workspaces_services_childResource"
              }
            ]
          }
        },
        "sku": {
          "oneOf": [
            {
              "$ref": "#/definitions/Sku"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Sku of the resource"
        },
        "tags": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Contains resource tags defined as key/value pairs."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.MachineLearningServices/workspaces"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.MachineLearningServices/workspaces"
    },
    "workspaces_computes": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2020-05-15-preview"
          ]
        },
        "identity": {
          "oneOf": [
            {
              "$ref": "#/definitions/Identity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Identity for the resource."
        },
        "location": {
          "type": "string",
          "description": "Specifies the location of the resource."
        },
        "name": {
          "type": "string",
          "description": "Name of the Azure Machine Learning compute."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/Compute"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Machine Learning compute object."
        },
        "sku": {
          "oneOf": [
            {
              "$ref": "#/definitions/Sku"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Sku of the resource"
        },
        "tags": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Contains resource tags defined as key/value pairs."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.MachineLearningServices/workspaces/computes"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.MachineLearningServices/workspaces/computes"
    },
    "workspaces_linkedWorkspaces": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2020-05-15-preview"
          ]
        },
        "name": {
          "type": "string",
          "description": "Friendly name of the linked workspace"
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/LinkedWorkspaceProps"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "LinkedWorkspace specific properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.MachineLearningServices/workspaces/linkedWorkspaces"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.MachineLearningServices/workspaces/linkedWorkspaces"
    },
    "workspaces_privateEndpointConnections": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2020-05-15-preview"
          ]
        },
        "identity": {
          "oneOf": [
            {
              "$ref": "#/definitions/Identity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Identity for the resource."
        },
        "location": {
          "type": "string",
          "description": "Specifies the location of the resource."
        },
        "name": {
          "type": "string",
          "description": "The name of the private endpoint connection associated with the workspace"
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/PrivateEndpointConnectionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Properties of the PrivateEndpointConnectProperties."
        },
        "sku": {
          "oneOf": [
            {
              "$ref": "#/definitions/Sku"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Sku of the resource"
        },
        "tags": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Contains resource tags defined as key/value pairs."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.MachineLearningServices/workspaces/privateEndpointConnections"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.MachineLearningServices/workspaces/privateEndpointConnections"
    },
    "workspaces_services": {
      "type": "object",
      "oneOf": [
        {
          "$ref": "#/definitions/ACIServiceCreateRequest"
        },
        {
          "$ref": "#/definitions/CreateEndpointVariantRequest"
        }
      ],
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2020-05-15-preview"
          ]
        },
        "description": {
          "type": "string",
          "description": "The description of the service."
        },
        "environmentImageRequest": {
          "oneOf": [
            {
              "$ref": "#/definitions/CreateServiceRequestEnvironmentImageRequest"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The Environment, models and assets needed for inferencing."
        },
        "keys": {
          "oneOf": [
            {
              "$ref": "#/definitions/CreateServiceRequestKeys"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The authentication keys."
        },
        "kvTags": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The service tag dictionary. Tags are mutable."
        },
        "location": {
          "type": "string",
          "description": "The name of the Azure location/region."
        },
        "name": {
          "type": "string",
          "description": "Name of the Azure Machine Learning service."
        },
        "properties": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The service properties dictionary. Properties are immutable."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.MachineLearningServices/workspaces/services"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.MachineLearningServices/workspaces/services"
    }
  },
  "definitions": {
    "ACIServiceCreateRequest": {
      "type": "object",
      "properties": {
        "appInsightsEnabled": {
          "oneOf": [
            {
              "type": "boolean",
              "default": false
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Whether or not Application Insights is enabled."
        },
        "authEnabled": {
          "oneOf": [
            {
              "type": "boolean",
              "default": false
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Whether or not authentication is enabled on the service."
        },
        "cname": {
          "type": "string",
          "description": "The CName for the service."
        },
        "computeType": {
          "type": "string",
          "enum": [
            "ACI"
          ]
        },
        "containerResourceRequirements": {
          "oneOf": [
            {
              "$ref": "#/definitions/ContainerResourceRequirements"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The resource requirements for the container (cpu and memory)."
        },
        "dataCollection": {
          "oneOf": [
            {
              "$ref": "#/definitions/ACIServiceCreateRequestDataCollection"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Details of the data collection options specified."
        },
        "dnsNameLabel": {
          "type": "string",
          "description": "The Dns label for the service."
        },
        "encryptionProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/ACIServiceCreateRequestEncryptionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The encryption properties."
        },
        "sslCertificate": {
          "type": "string",
          "description": "The public SSL certificate in PEM format to use if SSL is enabled."
        },
        "sslEnabled": {
          "oneOf": [
            {
              "type": "boolean",
              "default": false
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Whether or not SSL is enabled."
        },
        "sslKey": {
          "type": "string",
          "description": "The public SSL key in PEM format for the certificate."
        },
        "vnetConfiguration": {
          "oneOf": [
            {
              "$ref": "#/definitions/ACIServiceCreateRequestVnetConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The virtual network configuration."
        }
      },
      "required": [
        "computeType"
      ]
    },
    "ACIServiceCreateRequestDataCollection": {
      "type": "object",
      "properties": {
        "eventHubEnabled": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Option for enabling/disabling Event Hub."
        },
        "storageEnabled": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Option for enabling/disabling storage."
        }
      },
      "description": "Details of the data collection options specified."
    },
    "ACIServiceCreateRequestEncryptionProperties": {
      "type": "object",
      "properties": {
        "keyName": {
          "type": "string",
          "description": "Encryption Key name"
        },
        "keyVersion": {
          "type": "string",
          "description": "Encryption Key Version"
        },
        "vaultBaseUrl": {
          "type": "string",
          "description": "vault base Url"
        }
      },
      "required": [
        "keyName",
        "keyVersion",
        "vaultBaseUrl"
      ],
      "description": "The encryption properties."
    },
    "ACIServiceCreateRequestVnetConfiguration": {
      "type": "object",
      "properties": {
        "subnetName": {
          "type": "string",
          "description": "The name of the virtual network subnet."
        },
        "vnetName": {
          "type": "string",
          "description": "The name of the virtual network."
        }
      },
      "description": "The virtual network configuration."
    },
    "AKS": {
      "type": "object",
      "properties": {
        "computeType": {
          "type": "string",
          "enum": [
            "AKS"
          ]
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/AKSProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "AKS properties"
        }
      },
      "required": [
        "computeType"
      ],
      "description": "A Machine Learning compute based on AKS."
    },
    "AksNetworkingConfiguration": {
      "type": "object",
      "properties": {
        "dnsServiceIP": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified in serviceCidr."
        },
        "dockerBridgeCidr": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}(\\/([0-9]|[1-2][0-9]|3[0-2]))?$"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "A CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes service address range."
        },
        "serviceCidr": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}(\\/([0-9]|[1-2][0-9]|3[0-2]))?$"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges."
        },
        "subnetId": {
          "type": "string",
          "description": "Virtual network subnet resource ID the compute nodes belong to"
        }
      },
      "description": "Advance configuration for AKS networking"
    },
    "AKSProperties": {
      "type": "object",
      "properties": {
        "agentCount": {
          "oneOf": [
            {
              "type": "integer",
              "minimum": 1
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Number of agents"
        },
        "agentVMSize": {
          "type": "string",
          "description": "Agent virtual machine size"
        },
        "aksNetworkingConfiguration": {
          "oneOf": [
            {
              "$ref": "#/definitions/AksNetworkingConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Advance configuration for AKS networking"
        },
        "clusterFqdn": {
          "type": "string",
          "description": "Cluster full qualified domain name"
        },
        "sslConfiguration": {
          "oneOf": [
            {
              "$ref": "#/definitions/SslConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The ssl configuration for scoring"
        }
      },
      "description": "AKS properties"
    },
    "AKSServiceCreateRequest": {
      "type": "object",
      "properties": {
        "aadAuthEnabled": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Whether or not AAD authentication is enabled."
        },
        "appInsightsEnabled": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Whether or not Application Insights is enabled."
        },
        "authEnabled": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Whether or not authentication is enabled."
        },
        "autoScaler": {
          "oneOf": [
            {
              "$ref": "#/definitions/AKSServiceCreateRequestAutoScaler"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The auto scaler properties."
        },
        "computeName": {
          "type": "string",
          "description": "The name of the compute resource."
        },
        "computeType": {
          "type": "string",
          "enum": [
            "AKS"
          ]
        },
        "containerResourceRequirements": {
          "oneOf": [
            {
              "$ref": "#/definitions/ContainerResourceRequirements"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The resource requirements for the container (cpu and memory)."
        },
        "dataCollection": {
          "oneOf": [
            {
              "$ref": "#/definitions/AKSServiceCreateRequestDataCollection"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Details of the data collection options specified."
        },
        "livenessProbeRequirements": {
          "oneOf": [
            {
              "$ref": "#/definitions/AKSServiceCreateRequestLivenessProbeRequirements"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The liveness probe requirements."
        },
        "maxConcurrentRequestsPerContainer": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The maximum number of concurrent requests per container."
        },
        "maxQueueWaitMs": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Maximum time a request will wait in the queue (in milliseconds). After this time, the service will return 503 (Service Unavailable)"
        },
        "namespace": {
          "type": "string",
          "description": "Kubernetes namespace for the service."
        },
        "numReplicas": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The number of replicas on the cluster."
        },
        "scoringTimeoutMs": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The scoring timeout in milliseconds."
        }
      },
      "required": [
        "computeType"
      ],
      "description": "The request to create an AKS service."
    },
    "AKSServiceCreateRequestAutoScaler": {
      "type": "object",
      "properties": {
        "autoscaleEnabled": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Option to enable/disable auto scaling."
        },
        "maxReplicas": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The maximum number of replicas in the cluster."
        },
        "minReplicas": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The minimum number of replicas to scale down to."
        },
        "refreshPeriodInSeconds": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The amount of seconds to wait between auto scale updates."
        },
        "targetUtilization": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The target utilization percentage to use for determining whether to scale the cluster."
        }
      },
      "description": "The auto scaler properties."
    },
    "AKSServiceCreateRequestDataCollection": {
      "type": "object",
      "properties": {
        "eventHubEnabled": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Option for enabling/disabling Event Hub."
        },
        "storageEnabled": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Option for enabling/disabling storage."
        }
      },
      "description": "Details of the data collection options specified."
    },
    "AKSServiceCreateRequestLivenessProbeRequirements": {
      "type": "object",
      "properties": {
        "failureThreshold": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The number of failures to allow before returning an unhealthy status."
        },
        "initialDelaySeconds": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The delay before the first probe in seconds."
        },
        "periodSeconds": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The length of time between probes in seconds."
        },
        "successThreshold": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The number of successful probes before returning a healthy status."
        },
        "timeoutSeconds": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The probe timeout in seconds."
        }
      },
      "description": "The liveness probe requirements."
    },
    "AmlCompute": {
      "type": "object",
      "properties": {
        "computeType": {
          "type": "string",
          "enum": [
            "AmlCompute"
          ]
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/AmlComputeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "AML Compute properties"
        }
      },
      "required": [
        "computeType"
      ],
      "description": "An Azure Machine Learning compute."
    },
    "AmlComputeProperties": {
      "type": "object",
      "properties": {
        "enableNodePublicIp": {
          "oneOf": [
            {
              "type": "boolean",
              "default": true
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Enable or disable node public IP address provisioning. Possible values are: Possible values are: true - Indicates that the compute nodes will have public IPs provisioned. false - Indicates that the compute nodes will have a private endpoint and no public IPs."
        },
        "isolatedNetwork": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Network is isolated or not"
        },
        "osType": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Linux",
                "Windows"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Compute OS Type."
        },
        "remoteLoginPortPublicAccess": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Enabled",
                "Disabled",
                "NotSpecified"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "State of the public SSH port. Possible values are: Disabled - Indicates that the public ssh port is closed on all nodes of the cluster. Enabled - Indicates that the public ssh port is open on all nodes of the cluster. NotSpecified - Indicates that the public ssh port is closed on all nodes of the cluster if VNet is defined, else is open all public nodes. It can be default only during cluster creation time, after creation it will be either enabled or disabled."
        },
        "scaleSettings": {
          "oneOf": [
            {
              "$ref": "#/definitions/ScaleSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "scale settings for AML Compute"
        },
        "subnet": {
          "oneOf": [
            {
              "$ref": "#/definitions/ResourceId"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Represents a resource ID. For example, for a subnet, it is the resource URL for the subnet."
        },
        "userAccountCredentials": {
          "oneOf": [
            {
              "$ref": "#/definitions/UserAccountCredentials"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Settings for user account that gets created on each on the nodes of a compute."
        },
        "virtualMachineImage": {
          "oneOf": [
            {
              "$ref": "#/definitions/VirtualMachineImage"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Virtual Machine image for Windows AML Compute"
        },
        "vmPriority": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Dedicated",
                "LowPriority"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Virtual Machine priority."
        },
        "vmSize": {
          "type": "string",
          "description": "Virtual Machine Size"
        }
      },
      "description": "AML Compute properties"
    },
    "Compute": {
      "type": "object",
      "oneOf": [
        {
          "$ref": "#/definitions/AKS"
        },
        {
          "$ref": "#/definitions/AmlCompute"
        },
        {
          "$ref": "#/definitions/VirtualMachine"
        },
        {
          "$ref": "#/definitions/HDInsight"
        },
        {
          "$ref": "#/definitions/DataFactory"
        },
        {
          "$ref": "#/definitions/Databricks"
        },
        {
          "$ref": "#/definitions/DataLakeAnalytics"
        }
      ],
      "properties": {
        "computeLocation": {
          "type": "string",
          "description": "Location for the underlying compute"
        },
        "description": {
          "type": "string",
          "description": "The description of the Machine Learning compute."
        },
        "resourceId": {
          "type": "string",
          "description": "ARM resource id of the underlying compute"
        }
      },
      "description": "Machine Learning compute object."
    },
    "ContainerResourceRequirements": {
      "type": "object",
      "properties": {
        "cpu": {
          "oneOf": [
            {
              "type": "number"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The number of CPU cores on the container."
        },
        "fpga": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The number of FPGA PCIE devices exposed to the container. Must be multiple of 2."
        },
        "gpu": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The number of GPU cores in the container."
        },
        "memoryInGB": {
          "oneOf": [
            {
              "type": "number"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The amount of memory on the container in GB."
        }
      },
      "description": "The resource requirements for the container (cpu and memory)."
    },
    "CreateEndpointVariantRequest": {
      "type": "object",
      "oneOf": [
        {
          "$ref": "#/definitions/AKSServiceCreateRequest"
        }
      ],
      "properties": {
        "computeType": {
          "type": "string",
          "enum": [
            "Custom"
          ]
        },
        "isDefault": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Is this the default variant."
        },
        "trafficPercentile": {
          "oneOf": [
            {
              "type": "number"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The amount of traffic variant receives."
        },
        "type": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Control",
                "Treatment"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The type of the variant."
        }
      },
      "required": [
        "computeType"
      ],
      "description": "The Variant properties."
    },
    "CreateServiceRequestEnvironmentImageRequest": {
      "type": "object",
      "properties": {
        "assets": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ImageAsset"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The list of assets."
        },
        "driverProgram": {
          "type": "string",
          "description": "The name of the driver file."
        },
        "environment": {
          "oneOf": [
            {
              "$ref": "#/definitions/EnvironmentImageRequestEnvironment"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The details of the AZURE ML environment."
        },
        "environmentReference": {
          "oneOf": [
            {
              "$ref": "#/definitions/EnvironmentImageRequestEnvironmentReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The unique identifying details of the AZURE ML environment."
        },
        "modelIds": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The list of model Ids."
        },
        "models": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Model"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The list of models."
        }
      },
      "description": "The Environment, models and assets needed for inferencing."
    },
    "CreateServiceRequestKeys": {
      "type": "object",
      "properties": {
        "primaryKey": {
          "type": "string",
          "description": "The primary key."
        },
        "secondaryKey": {
          "type": "string",
          "description": "The secondary key."
        }
      },
      "description": "The authentication keys."
    },
    "Databricks": {
      "type": "object",
      "properties": {
        "computeType": {
          "type": "string",
          "enum": [
            "Databricks"
          ]
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/DatabricksProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "computeType"
      ],
      "description": "A DataFactory compute."
    },
    "DatabricksProperties": {
      "type": "object",
      "properties": {
        "databricksAccessToken": {
          "type": "string",
          "description": "Databricks access token"
        }
      }
    },
    "DataFactory": {
      "type": "object",
      "properties": {
        "computeType": {
          "type": "string",
          "enum": [
            "DataFactory"
          ]
        }
      },
      "required": [
        "computeType"
      ],
      "description": "A DataFactory compute."
    },
    "DataLakeAnalytics": {
      "type": "object",
      "properties": {
        "computeType": {
          "type": "string",
          "enum": [
            "DataLakeAnalytics"
          ]
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/DataLakeAnalyticsProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "computeType"
      ],
      "description": "A DataLakeAnalytics compute."
    },
    "DataLakeAnalyticsProperties": {
      "type": "object",
      "properties": {
        "dataLakeStoreAccountName": {
          "type": "string",
          "description": "DataLake Store Account Name"
        }
      }
    },
    "DatasetReference": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The id of the dataset reference."
        },
        "name": {
          "type": "string",
          "description": "The name of the dataset reference."
        }
      },
      "description": "The dataset reference object."
    },
    "EncryptionProperty": {
      "type": "object",
      "properties": {
        "keyVaultProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/KeyVaultProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "status": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Enabled",
                "Disabled"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Indicates whether or not the encryption is enabled for the workspace."
        }
      },
      "required": [
        "keyVaultProperties",
        "status"
      ]
    },
    "EnvironmentImageRequestEnvironment": {
      "type": "object",
      "properties": {
        "docker": {
          "oneOf": [
            {
              "$ref": "#/definitions/ModelEnvironmentDefinitionDocker"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The definition of a Docker container."
        },
        "environmentVariables": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Definition of environment variables to be defined in the environment."
        },
        "inferencingStackVersion": {
          "type": "string",
          "description": "The inferencing stack version added to the image. To avoid adding an inferencing stack, do not set this value. Valid values: \"latest\"."
        },
        "name": {
          "type": "string",
          "description": "The name of the environment."
        },
        "python": {
          "oneOf": [
            {
              "$ref": "#/definitions/ModelEnvironmentDefinitionPython"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Settings for a Python environment."
        },
        "r": {
          "oneOf": [
            {
              "$ref": "#/definitions/ModelEnvironmentDefinitionR"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Settings for a R environment."
        },
        "spark": {
          "oneOf": [
            {
              "$ref": "#/definitions/ModelEnvironmentDefinitionSpark"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The configuration for a Spark environment."
        },
        "version": {
          "type": "string",
          "description": "The environment version."
        }
      },
      "description": "The details of the AZURE ML environment."
    },
    "EnvironmentImageRequestEnvironmentReference": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the environment."
        },
        "version": {
          "type": "string",
          "description": "Version of the environment."
        }
      },
      "description": "The unique identifying details of the AZURE ML environment."
    },
    "HDInsight": {
      "type": "object",
      "properties": {
        "computeType": {
          "type": "string",
          "enum": [
            "HDInsight"
          ]
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/HDInsightProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "computeType"
      ],
      "description": "A HDInsight compute."
    },
    "HDInsightProperties": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string",
          "description": "Public IP address of the master node of the cluster."
        },
        "administratorAccount": {
          "oneOf": [
            {
              "$ref": "#/definitions/VirtualMachineSshCredentials"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Admin credentials for virtual machine"
        },
        "sshPort": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Port open for ssh connections on the master node of the cluster."
        }
      }
    },
    "Identity": {
      "type": "object",
      "properties": {
        "type": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "SystemAssigned",
                "SystemAssigned,UserAssigned",
                "UserAssigned",
                "None"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The identity type."
        },
        "userAssignedIdentities": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/UserAssignedIdentity"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "dictionary containing all the user assigned identities, with resourceId of the UAI as key."
        }
      },
      "description": "Identity for the resource."
    },
    "ImageAsset": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The Asset Id."
        },
        "mimeType": {
          "type": "string",
          "description": "The mime type."
        },
        "unpack": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Whether the Asset is unpacked."
        },
        "url": {
          "type": "string",
          "description": "The Url of the Asset."
        }
      },
      "description": "An Image asset."
    },
    "KeyVaultProperties": {
      "type": "object",
      "properties": {
        "identityClientId": {
          "type": "string",
          "description": "For future use - The client id of the identity which will be used to access key vault."
        },
        "keyIdentifier": {
          "type": "string",
          "description": "Key vault uri to access the encryption key."
        },
        "keyVaultArmId": {
          "type": "string",
          "description": "The ArmId of the keyVault where the customer owned encryption key is present."
        }
      },
      "required": [
        "keyIdentifier",
        "keyVaultArmId"
      ]
    },
    "LinkedWorkspaceProps": {
      "type": "object",
      "properties": {
        "linkedWorkspaceResourceId": {
          "type": "string",
          "description": "ResourceId of the link target of the linked workspace."
        },
        "userAssignedIdentityResourceId": {
          "type": "string",
          "description": "ResourceId of the user assigned identity for the linked workspace."
        }
      },
      "description": "LinkedWorkspace specific properties."
    },
    "Model": {
      "type": "object",
      "properties": {
        "createdTime": {
          "type": "string",
          "format": "date-time",
          "description": "The Model creation time (UTC)."
        },
        "datasets": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DatasetReference"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The list of datasets associated with the model."
        },
        "derivedModelIds": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Models derived from this model"
        },
        "description": {
          "type": "string",
          "description": "The Model description text."
        },
        "experimentName": {
          "type": "string",
          "description": "The name of the experiment where this model was created."
        },
        "framework": {
          "type": "string",
          "description": "The Model framework."
        },
        "frameworkVersion": {
          "type": "string",
          "description": "The Model framework version."
        },
        "id": {
          "type": "string",
          "description": "The Model Id."
        },
        "kvTags": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The Model tag dictionary. Items are mutable."
        },
        "mimeType": {
          "type": "string",
          "description": "The MIME type of Model content. For more details about MIME type, please open https://www.iana.org/assignments/media-types/media-types.xhtml"
        },
        "modifiedTime": {
          "type": "string",
          "format": "date-time",
          "description": "The Model last modified time (UTC)."
        },
        "name": {
          "type": "string",
          "description": "The Model name."
        },
        "parentModelId": {
          "type": "string",
          "description": "The Parent Model Id."
        },
        "properties": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The Model property dictionary. Properties are immutable."
        },
        "resourceRequirements": {
          "oneOf": [
            {
              "$ref": "#/definitions/ContainerResourceRequirements"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The resource requirements for the container (cpu and memory)."
        },
        "runId": {
          "type": "string",
          "description": "The RunId that created this model."
        },
        "sampleInputData": {
          "type": "string",
          "description": "Sample Input Data for the Model. A reference to a dataset in the workspace in the format aml://dataset/{datasetId}"
        },
        "sampleOutputData": {
          "type": "string",
          "description": "Sample Output Data for the Model. A reference to a dataset in the workspace in the format aml://dataset/{datasetId}"
        },
        "unpack": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Indicates whether we need to unpack the Model during docker Image creation."
        },
        "url": {
          "type": "string",
          "description": "The URL of the Model. Usually a SAS URL."
        },
        "version": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The Model version assigned by Model Management Service."
        }
      },
      "required": [
        "mimeType",
        "name",
        "url"
      ],
      "description": "An Azure Machine Learning Model."
    },
    "ModelDockerSectionBaseImageRegistry": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      },
      "description": "Image registry that contains the base image."
    },
    "ModelEnvironmentDefinitionDocker": {
      "type": "object",
      "properties": {
        "baseDockerfile": {
          "type": "string",
          "description": "Base Dockerfile used for Docker-based runs. Mutually exclusive with BaseImage."
        },
        "baseImage": {
          "type": "string",
          "description": "Base image used for Docker-based runs. Mutually exclusive with BaseDockerfile."
        },
        "baseImageRegistry": {
          "oneOf": [
            {
              "$ref": "#/definitions/ModelDockerSectionBaseImageRegistry"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Image registry that contains the base image."
        }
      },
      "description": "The definition of a Docker container."
    },
    "ModelEnvironmentDefinitionPython": {
      "type": "object",
      "properties": {
        "baseCondaEnvironment": {
          "type": "string"
        },
        "condaDependencies": {
          "type": "object",
          "properties": {},
          "description": "A JObject containing Conda dependencies."
        },
        "interpreterPath": {
          "type": "string",
          "description": "The python interpreter path to use if an environment build is not required. The path specified gets used to call the user script."
        },
        "userManagedDependencies": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "True means that AzureML reuses an existing python environment; False means that AzureML will create a python environment based on the Conda dependencies specification."
        }
      },
      "description": "Settings for a Python environment."
    },
    "ModelEnvironmentDefinitionR": {
      "type": "object",
      "properties": {
        "bioConductorPackages": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The packages from Bioconductor."
        },
        "cranPackages": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RCranPackage"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The CRAN packages to use."
        },
        "customUrlPackages": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The packages from custom urls."
        },
        "gitHubPackages": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RGitHubPackage"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The packages directly from GitHub."
        },
        "rscriptPath": {
          "type": "string",
          "description": "The Rscript path to use if an environment build is not required.\r\nThe path specified gets used to call the user script."
        },
        "rVersion": {
          "type": "string",
          "description": "The version of R to be installed"
        },
        "snapshotDate": {
          "type": "string",
          "description": "Date of MRAN snapshot to use in YYYY-MM-DD format, e.g. \"2019-04-17\""
        },
        "userManaged": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Indicates whether the environment is managed by user or by AzureML."
        }
      },
      "description": "Settings for a R environment."
    },
    "ModelEnvironmentDefinitionSpark": {
      "type": "object",
      "properties": {
        "packages": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SparkMavenPackage"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The Spark packages to use."
        },
        "precachePackages": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Whether to precache the packages."
        },
        "repositories": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The list of spark repositories."
        }
      },
      "description": "The configuration for a Spark environment."
    },
    "PrivateEndpoint": {
      "type": "object",
      "properties": {},
      "description": "The Private Endpoint resource."
    },
    "PrivateEndpointConnectionProperties": {
      "type": "object",
      "properties": {
        "privateEndpoint": {
          "oneOf": [
            {
              "$ref": "#/definitions/PrivateEndpoint"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The Private Endpoint resource."
        },
        "privateLinkServiceConnectionState": {
          "oneOf": [
            {
              "$ref": "#/definitions/PrivateLinkServiceConnectionState"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "A collection of information about the state of the connection between service consumer and provider."
        },
        "provisioningState": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Succeeded",
                "Creating",
                "Deleting",
                "Failed"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The provisioning state of the private endpoint connection resource."
        }
      },
      "required": [
        "privateLinkServiceConnectionState"
      ],
      "description": "Properties of the PrivateEndpointConnectProperties."
    },
    "PrivateLinkServiceConnectionState": {
      "type": "object",
      "properties": {
        "actionsRequired": {
          "type": "string",
          "description": "A message indicating if changes on the service provider require any updates on the consumer."
        },
        "description": {
          "type": "string",
          "description": "The reason for approval/rejection of the connection."
        },
        "status": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Pending",
                "Approved",
                "Rejected",
                "Disconnected",
                "Timeout"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service."
        }
      },
      "description": "A collection of information about the state of the connection between service consumer and provider."
    },
    "RCranPackage": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The package name."
        },
        "repository": {
          "type": "string",
          "description": "The repository name."
        }
      }
    },
    "ResourceId": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the resource"
        }
      },
      "required": [
        "id"
      ],
      "description": "Represents a resource ID. For example, for a subnet, it is the resource URL for the subnet."
    },
    "RGitHubPackage": {
      "type": "object",
      "properties": {
        "authToken": {
          "type": "string",
          "description": "Personal access token to install from a private repo"
        },
        "repository": {
          "type": "string",
          "description": "Repository address in the format username/repo[/subdir][@ref|#pull]."
        }
      }
    },
    "ScaleSettings": {
      "type": "object",
      "properties": {
        "maxNodeCount": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Max number of nodes to use"
        },
        "minNodeCount": {
          "oneOf": [
            {
              "type": "integer",
              "default": "0"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Min number of nodes to use"
        },
        "nodeIdleTimeBeforeScaleDown": {
          "type": "string",
          "format": "duration",
          "description": "Node Idle Time before scaling down amlCompute. This string needs to be in the RFC Format."
        }
      },
      "required": [
        "maxNodeCount"
      ],
      "description": "scale settings for AML Compute"
    },
    "SharedPrivateLinkResource": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Unique name of the private link."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/SharedPrivateLinkResourceProperty"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Properties of a shared private link resource."
        }
      }
    },
    "SharedPrivateLinkResourceProperty": {
      "type": "object",
      "properties": {
        "groupId": {
          "type": "string",
          "description": "The private link resource group id."
        },
        "privateLinkResourceId": {
          "type": "string",
          "description": "The resource id that private link links to."
        },
        "requestMessage": {
          "type": "string",
          "description": "Request message."
        },
        "status": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Pending",
                "Approved",
                "Rejected",
                "Disconnected",
                "Timeout"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service."
        }
      },
      "description": "Properties of a shared private link resource."
    },
    "Sku": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the sku"
        },
        "tier": {
          "type": "string",
          "description": "Tier of the sku like Basic or Enterprise"
        }
      },
      "description": "Sku of the resource"
    },
    "SparkMavenPackage": {
      "type": "object",
      "properties": {
        "artifact": {
          "type": "string"
        },
        "group": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      }
    },
    "SslConfiguration": {
      "type": "object",
      "properties": {
        "cert": {
          "type": "string",
          "description": "Cert data"
        },
        "cname": {
          "type": "string",
          "description": "CNAME of the cert"
        },
        "key": {
          "type": "string",
          "description": "Key data"
        },
        "status": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Disabled",
                "Enabled"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Enable or disable ssl for scoring."
        }
      },
      "description": "The ssl configuration for scoring"
    },
    "UserAccountCredentials": {
      "type": "object",
      "properties": {
        "adminUserName": {
          "type": "string",
          "description": "Name of the administrator user account which can be used to SSH to nodes."
        },
        "adminUserPassword": {
          "type": "string",
          "description": "Password of the administrator user account."
        },
        "adminUserSshPublicKey": {
          "type": "string",
          "description": "SSH public key of the administrator user account."
        }
      },
      "required": [
        "adminUserName"
      ],
      "description": "Settings for user account that gets created on each on the nodes of a compute."
    },
    "UserAssignedIdentity": {
      "type": "object",
      "properties": {},
      "description": "User Assigned Identity"
    },
    "VirtualMachine": {
      "type": "object",
      "properties": {
        "computeType": {
          "type": "string",
          "enum": [
            "VirtualMachine"
          ]
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/VirtualMachineProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "computeType"
      ],
      "description": "A Machine Learning compute based on Azure Virtual Machines."
    },
    "VirtualMachineImage": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Virtual Machine image path"
        }
      },
      "required": [
        "id"
      ],
      "description": "Virtual Machine image for Windows AML Compute"
    },
    "VirtualMachineProperties": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string",
          "description": "Public IP address of the virtual machine."
        },
        "administratorAccount": {
          "oneOf": [
            {
              "$ref": "#/definitions/VirtualMachineSshCredentials"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Admin credentials for virtual machine"
        },
        "sshPort": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Port open for ssh connections."
        },
        "virtualMachineSize": {
          "type": "string",
          "description": "Virtual Machine size"
        }
      }
    },
    "VirtualMachineSshCredentials": {
      "type": "object",
      "properties": {
        "password": {
          "type": "string",
          "description": "Password of admin account"
        },
        "privateKeyData": {
          "type": "string",
          "description": "Private key data"
        },
        "publicKeyData": {
          "type": "string",
          "description": "Public key data"
        },
        "username": {
          "type": "string",
          "description": "Username of admin account"
        }
      },
      "description": "Admin credentials for virtual machine"
    },
    "WorkspaceProperties": {
      "type": "object",
      "properties": {
        "allowPublicAccessWhenBehindVnet": {
          "oneOf": [
            {
              "type": "boolean",
              "default": false
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The flag to indicate whether to allow public access when behind VNet."
        },
        "applicationInsights": {
          "type": "string",
          "description": "ARM id of the application insights associated with this workspace. This cannot be changed once the workspace has been created"
        },
        "containerRegistry": {
          "type": "string",
          "description": "ARM id of the container registry associated with this workspace. This cannot be changed once the workspace has been created"
        },
        "description": {
          "type": "string",
          "description": "The description of this workspace."
        },
        "discoveryUrl": {
          "type": "string",
          "description": "Url for the discovery service to identify regional endpoints for machine learning experimentation services"
        },
        "encryption": {
          "oneOf": [
            {
              "$ref": "#/definitions/EncryptionProperty"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "friendlyName": {
          "type": "string",
          "description": "The friendly name for this workspace. This name in mutable"
        },
        "hbiWorkspace": {
          "oneOf": [
            {
              "type": "boolean",
              "default": false
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The flag to signal HBI data in the workspace and reduce diagnostic data collected by the service"
        },
        "imageBuildCompute": {
          "type": "string",
          "description": "The compute name for image build"
        },
        "keyVault": {
          "type": "string",
          "description": "ARM id of the key vault associated with this workspace. This cannot be changed once the workspace has been created"
        },
        "sharedPrivateLinkResources": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SharedPrivateLinkResource"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The list of shared private link resources in this workspace."
        },
        "storageAccount": {
          "type": "string",
          "description": "ARM id of the storage account associated with this workspace. This cannot be changed once the workspace has been created"
        }
      },
      "description": "The properties of a machine learning workspace."
    },
    "workspaces_computes_childResource": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2020-05-15-preview"
          ]
        },
        "identity": {
          "oneOf": [
            {
              "$ref": "#/definitions/Identity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Identity for the resource."
        },
        "location": {
          "type": "string",
          "description": "Specifies the location of the resource."
        },
        "name": {
          "type": "string",
          "description": "Name of the Azure Machine Learning compute."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/Compute"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Machine Learning compute object."
        },
        "sku": {
          "oneOf": [
            {
              "$ref": "#/definitions/Sku"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Sku of the resource"
        },
        "tags": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Contains resource tags defined as key/value pairs."
        },
        "type": {
          "type": "string",
          "enum": [
            "computes"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.MachineLearningServices/workspaces/computes"
    },
    "workspaces_linkedWorkspaces_childResource": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2020-05-15-preview"
          ]
        },
        "name": {
          "type": "string",
          "description": "Friendly name of the linked workspace"
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/LinkedWorkspaceProps"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "LinkedWorkspace specific properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "linkedWorkspaces"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.MachineLearningServices/workspaces/linkedWorkspaces"
    },
    "workspaces_privateEndpointConnections_childResource": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2020-05-15-preview"
          ]
        },
        "identity": {
          "oneOf": [
            {
              "$ref": "#/definitions/Identity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Identity for the resource."
        },
        "location": {
          "type": "string",
          "description": "Specifies the location of the resource."
        },
        "name": {
          "type": "string",
          "description": "The name of the private endpoint connection associated with the workspace"
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/PrivateEndpointConnectionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Properties of the PrivateEndpointConnectProperties."
        },
        "sku": {
          "oneOf": [
            {
              "$ref": "#/definitions/Sku"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Sku of the resource"
        },
        "tags": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Contains resource tags defined as key/value pairs."
        },
        "type": {
          "type": "string",
          "enum": [
            "privateEndpointConnections"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.MachineLearningServices/workspaces/privateEndpointConnections"
    },
    "workspaces_services_childResource": {
      "type": "object",
      "oneOf": [
        {
          "$ref": "#/definitions/ACIServiceCreateRequest"
        },
        {
          "$ref": "#/definitions/CreateEndpointVariantRequest"
        }
      ],
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2020-05-15-preview"
          ]
        },
        "description": {
          "type": "string",
          "description": "The description of the service."
        },
        "environmentImageRequest": {
          "oneOf": [
            {
              "$ref": "#/definitions/CreateServiceRequestEnvironmentImageRequest"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The Environment, models and assets needed for inferencing."
        },
        "keys": {
          "oneOf": [
            {
              "$ref": "#/definitions/CreateServiceRequestKeys"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The authentication keys."
        },
        "kvTags": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The service tag dictionary. Tags are mutable."
        },
        "location": {
          "type": "string",
          "description": "The name of the Azure location/region."
        },
        "name": {
          "type": "string",
          "description": "Name of the Azure Machine Learning service."
        },
        "properties": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The service properties dictionary. Properties are immutable."
        },
        "type": {
          "type": "string",
          "enum": [
            "services"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.MachineLearningServices/workspaces/services"
    }
  }
}
