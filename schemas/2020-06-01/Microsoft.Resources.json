{
  "id": "https://schema.management.azure.com/schemas/2020-06-01/Microsoft.Resources.json#",
  "title": "Microsoft.Resources",
  "description": "Microsoft Resources Resource Types",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "subscription_resourceDefinitions": {
    "resourceGroups": {
      "type": "object",
      "properties": {
        "name": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^[-\\w\\._\\(\\)]+$",
              "maxLength": 90,
              "description": "the resource group name"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Resources/resourceGroups"
          ]
        },
        "apiVersion": {
          "type": "string",
          "enum": [
            "2020-06-01"
          ]
        },
        "location": {
          "type": "string",
          "description": "the resource group location"
        },
        "tags": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The resource group tags."
        }
      },
      "required": [
        "name",
        "type",
        "apiVersion",
        "location"
      ],
      "description": "Microsoft.Resources/resourceGroups"
    }
  },
  "unknown_resourceDefinitions": {
    "deployments": {
      "description": "Microsoft.Resources/deployments",
      "properties": {
        "apiVersion": {
          "enum": [
            "2020-06-01"
          ],
          "type": "string"
        },
        "location": {
          "description": "The location to store the deployment data.",
          "type": "string"
        },
        "name": {
          "description": "The name of the deployment.",
          "maxLength": 64,
          "minLength": 1,
          "type": "string"
        },
        "properties": {
          "description": "The deployment properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/DeploymentProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Deployment tags",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.Resources/deployments"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "tags": {
      "description": "Microsoft.Resources/tags",
      "properties": {
        "apiVersion": {
          "enum": [
            "2020-06-01"
          ],
          "type": "string"
        },
        "name": {
          "oneOf": [
            {
              "enum": [
                "default"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The set of tags.",
          "oneOf": [
            {
              "$ref": "#/definitions/Tags"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.Resources/tags"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    }
  },
  "definitions": {
    "DebugSetting": {
      "description": "The debug setting.",
      "properties": {
        "detailLevel": {
          "description": "Specifies the type of information to log for debugging. The permitted values are none, requestContent, responseContent, or both requestContent and responseContent separated by a comma. The default is none. When setting this value, carefully consider the type of information you are passing in during deployment. By logging information about the request or response, you could potentially expose sensitive data that is retrieved through the deployment operations.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DeploymentProperties": {
      "description": "Deployment properties.",
      "properties": {
        "debugSetting": {
          "description": "The debug setting of the deployment.",
          "oneOf": [
            {
              "$ref": "#/definitions/DebugSetting"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "expressionEvaluationOptions": {
          "description": "Specifies whether template expressions are evaluated within the scope of the parent template or nested template. Only applicable to nested templates. If not specified, default value is outer.",
          "oneOf": [
            {
              "$ref": "#/definitions/ExpressionEvaluationOptions"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "mode": {
          "description": "The mode that is used to deploy resources. This value can be either Incremental or Complete. In Incremental mode, resources are deployed without deleting existing resources that are not included in the template. In Complete mode, resources are deployed and existing resources in the resource group that are not included in the template are deleted. Be careful when using Complete mode as you may unintentionally delete resources.",
          "oneOf": [
            {
              "enum": [
                "Incremental",
                "Complete"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "onErrorDeployment": {
          "description": "The deployment on error behavior.",
          "oneOf": [
            {
              "$ref": "#/definitions/OnErrorDeployment"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "parameters": {
          "description": "Name and value pairs that define the deployment parameters for the template. You use this element when you want to provide the parameter values directly in the request rather than link to an existing parameter file. Use either the parametersLink property or the parameters property, but not both. It can be a JObject or a well formed JSON string.",
          "oneOf": [
            {
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "parametersLink": {
          "description": "The URI of parameters file. You use this element to link to an existing parameters file. Use either the parametersLink property or the parameters property, but not both.",
          "oneOf": [
            {
              "$ref": "#/definitions/ParametersLink"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "template": {
          "description": "The template content. You use this element when you want to pass the template syntax directly in the request rather than link to an existing template. It can be a JObject or well-formed JSON string. Use either the templateLink property or the template property, but not both.",
          "oneOf": [
            {
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "templateLink": {
          "description": "The URI of the template. Use either the templateLink property or the template property, but not both.",
          "oneOf": [
            {
              "$ref": "#/definitions/TemplateLink"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "mode"
      ],
      "type": "object"
    },
    "ExpressionEvaluationOptions": {
      "description": "Specifies whether template expressions are evaluated within the scope of the parent template or nested template.",
      "properties": {
        "scope": {
          "description": "The scope to be used for evaluation of parameters, variables and functions in a nested template.",
          "oneOf": [
            {
              "enum": [
                "NotSpecified",
                "Outer",
                "Inner"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "OnErrorDeployment": {
      "description": "Deployment on error behavior.",
      "properties": {
        "deploymentName": {
          "description": "The deployment to be used on error case.",
          "type": "string"
        },
        "type": {
          "description": "The deployment on error behavior type. Possible values are LastSuccessful and SpecificDeployment.",
          "oneOf": [
            {
              "enum": [
                "LastSuccessful",
                "SpecificDeployment"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ParametersLink": {
      "description": "Entity representing the reference to the deployment parameters.",
      "properties": {
        "contentVersion": {
          "description": "If included, must match the ContentVersion in the template.",
          "type": "string"
        },
        "uri": {
          "description": "The URI of the parameters file.",
          "type": "string"
        }
      },
      "required": [
        "uri"
      ],
      "type": "object"
    },
    "ResourceGroupProperties": {
      "description": "The resource group properties.",
      "properties": {},
      "type": "object"
    },
    "Tags": {
      "description": "A dictionary of name and value pairs.",
      "properties": {
        "tags": {
          "description": "Dictionary of <string>",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "TemplateLink": {
      "description": "Entity representing the reference to the template.",
      "properties": {
        "contentVersion": {
          "description": "If included, must match the ContentVersion in the template.",
          "type": "string"
        },
        "id": {
          "description": "The resource id of a Template Spec. Use either the id or uri property, but not both.",
          "type": "string"
        },
        "relativePath": {
          "description": "Applicable only if this template link references a Template Spec. This relativePath property can optionally be used to reference a Template Spec artifact by path.",
          "type": "string"
        },
        "uri": {
          "description": "The URI of the template to deploy. Use either the uri or id property, but not both.",
          "type": "string"
        }
      },
      "type": "object"
    }
  }
}