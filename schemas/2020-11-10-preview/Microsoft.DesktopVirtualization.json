{
  "id": "https://schema.management.azure.com/schemas/2020-11-10-preview/Microsoft.DesktopVirtualization.json#",
  "title": "Microsoft.DesktopVirtualization",
  "description": "Microsoft DesktopVirtualization Resource Types",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "resourceDefinitions": {
    "applicationGroups": {
      "description": "Microsoft.DesktopVirtualization/applicationGroups",
      "properties": {
        "apiVersion": {
          "enum": [
            "2020-11-10-preview"
          ],
          "type": "string"
        },
        "location": {
          "description": "The geo-location where the resource lives",
          "type": "string"
        },
        "name": {
          "description": "The name of the application group",
          "maxLength": 24,
          "minLength": 3,
          "type": "string"
        },
        "properties": {
          "description": "Detailed properties for ApplicationGroup",
          "oneOf": [
            {
              "$ref": "#/definitions/ApplicationGroupProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/applicationGroups_applications_childResource"
              }
            ]
          },
          "type": "array"
        },
        "tags": {
          "description": "Resource tags.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.DesktopVirtualization/applicationGroups"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "applicationGroups_applications": {
      "description": "Microsoft.DesktopVirtualization/applicationGroups/applications",
      "properties": {
        "apiVersion": {
          "enum": [
            "2020-11-10-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the application within the specified application group",
          "maxLength": 24,
          "minLength": 3,
          "type": "string"
        },
        "properties": {
          "description": "Detailed properties for Application",
          "oneOf": [
            {
              "$ref": "#/definitions/ApplicationProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.DesktopVirtualization/applicationGroups/applications"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "hostPools": {
      "description": "Microsoft.DesktopVirtualization/hostPools",
      "properties": {
        "apiVersion": {
          "enum": [
            "2020-11-10-preview"
          ],
          "type": "string"
        },
        "location": {
          "description": "The geo-location where the resource lives",
          "type": "string"
        },
        "name": {
          "description": "The name of the host pool within the specified resource group",
          "maxLength": 24,
          "minLength": 3,
          "type": "string"
        },
        "properties": {
          "description": "Detailed properties for HostPool",
          "oneOf": [
            {
              "$ref": "#/definitions/HostPoolProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/hostPools_msixPackages_childResource"
              }
            ]
          },
          "type": "array"
        },
        "tags": {
          "description": "Resource tags.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.DesktopVirtualization/hostPools"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "hostPools_msixPackages": {
      "description": "Microsoft.DesktopVirtualization/hostPools/msixPackages",
      "properties": {
        "apiVersion": {
          "enum": [
            "2020-11-10-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The version specific package full name of the MSIX package within specified hostpool",
          "maxLength": 100,
          "minLength": 3,
          "type": "string"
        },
        "properties": {
          "description": "Detailed properties for MSIX Package",
          "oneOf": [
            {
              "$ref": "#/definitions/MsixPackageProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.DesktopVirtualization/hostPools/msixPackages"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "scalingPlans": {
      "description": "Microsoft.DesktopVirtualization/scalingPlans",
      "properties": {
        "apiVersion": {
          "enum": [
            "2020-11-10-preview"
          ],
          "type": "string"
        },
        "location": {
          "description": "The geo-location where the resource lives",
          "type": "string"
        },
        "name": {
          "description": "The name of the scaling plan.",
          "maxLength": 24,
          "minLength": 3,
          "type": "string"
        },
        "properties": {
          "description": "Detailed properties for scaling plan.",
          "oneOf": [
            {
              "$ref": "#/definitions/ScalingPlanProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Resource tags.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.DesktopVirtualization/scalingPlans"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "workspaces": {
      "description": "Microsoft.DesktopVirtualization/workspaces",
      "properties": {
        "apiVersion": {
          "enum": [
            "2020-11-10-preview"
          ],
          "type": "string"
        },
        "location": {
          "description": "The geo-location where the resource lives",
          "type": "string"
        },
        "name": {
          "description": "The name of the workspace",
          "maxLength": 24,
          "minLength": 3,
          "type": "string"
        },
        "properties": {
          "description": "Detailed properties for Workspace",
          "oneOf": [
            {
              "$ref": "#/definitions/WorkspaceProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Resource tags.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.DesktopVirtualization/workspaces"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    }
  },
  "definitions": {
    "ApplicationGroupProperties": {
      "description": "Schema for ApplicationGroup properties.",
      "properties": {
        "applicationGroupType": {
          "description": "Resource Type of ApplicationGroup.",
          "oneOf": [
            {
              "enum": [
                "RemoteApp",
                "Desktop"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "description": {
          "description": "Description of ApplicationGroup.",
          "type": "string"
        },
        "friendlyName": {
          "description": "Friendly name of ApplicationGroup.",
          "type": "string"
        },
        "hostPoolArmPath": {
          "description": "HostPool arm path of ApplicationGroup.",
          "type": "string"
        }
      },
      "required": [
        "hostPoolArmPath",
        "applicationGroupType"
      ],
      "type": "object"
    },
    "ApplicationProperties": {
      "description": "Schema for Application properties.",
      "properties": {
        "applicationType": {
          "description": "Resource Type of Application.",
          "oneOf": [
            {
              "enum": [
                "InBuilt",
                "MsixApplication"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "commandLineArguments": {
          "description": "Command Line Arguments for Application.",
          "type": "string"
        },
        "commandLineSetting": {
          "description": "Specifies whether this published application can be launched with command line arguments provided by the client, command line arguments specified at publish time, or no command line arguments at all.",
          "oneOf": [
            {
              "enum": [
                "DoNotAllow",
                "Allow",
                "Require"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "description": {
          "description": "Description of Application.",
          "type": "string"
        },
        "filePath": {
          "description": "Specifies a path for the executable file for the application.",
          "type": "string"
        },
        "friendlyName": {
          "description": "Friendly name of Application.",
          "type": "string"
        },
        "iconIndex": {
          "description": "Index of the icon.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "iconPath": {
          "description": "Path to icon.",
          "type": "string"
        },
        "msixPackageApplicationId": {
          "description": "Specifies the package application Id for MSIX applications",
          "type": "string"
        },
        "msixPackageFamilyName": {
          "description": "Specifies the package family name for MSIX applications",
          "type": "string"
        },
        "showInPortal": {
          "description": "Specifies whether to show the RemoteApp program in the RD Web Access server.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "commandLineSetting"
      ],
      "type": "object"
    },
    "HostPoolProperties": {
      "description": "Properties of HostPool.",
      "properties": {
        "customRdpProperty": {
          "description": "Custom rdp property of HostPool.",
          "type": "string"
        },
        "description": {
          "description": "Description of HostPool.",
          "type": "string"
        },
        "friendlyName": {
          "description": "Friendly name of HostPool.",
          "type": "string"
        },
        "hostPoolType": {
          "description": "HostPool type for desktop.",
          "oneOf": [
            {
              "enum": [
                "Personal",
                "Pooled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "loadBalancerType": {
          "description": "The type of the load balancer.",
          "oneOf": [
            {
              "enum": [
                "BreadthFirst",
                "DepthFirst",
                "Persistent"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "maxSessionLimit": {
          "description": "The max session limit of HostPool.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "personalDesktopAssignmentType": {
          "description": "PersonalDesktopAssignment type for HostPool.",
          "oneOf": [
            {
              "enum": [
                "Automatic",
                "Direct"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "preferredAppGroupType": {
          "description": "The type of preferred application group type, default to Desktop Application Group",
          "oneOf": [
            {
              "enum": [
                "None",
                "Desktop",
                "RailApplications"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "registrationInfo": {
          "description": "The registration info of HostPool.",
          "oneOf": [
            {
              "$ref": "#/definitions/RegistrationInfo"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "ring": {
          "description": "The ring number of HostPool.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "ssoClientId": {
          "description": "ClientId for the registered Relying Party used to issue WVD SSO certificates.",
          "type": "string"
        },
        "ssoClientSecretKeyVaultPath": {
          "description": "Path to Azure KeyVault storing the secret used for communication to ADFS.",
          "type": "string"
        },
        "ssoSecretType": {
          "description": "The type of single sign on Secret Type.",
          "oneOf": [
            {
              "enum": [
                "SharedKey",
                "Certificate",
                "SharedKeyInKeyVault",
                "CertificateInKeyVault"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "ssoadfsAuthority": {
          "description": "URL to customer ADFS server for signing WVD SSO certificates.",
          "type": "string"
        },
        "startVMOnConnect": {
          "description": "The flag to turn on/off StartVMOnConnect feature.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "validationEnvironment": {
          "description": "Is validation environment.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "vmTemplate": {
          "description": "VM template for sessionhosts configuration within hostpool.",
          "type": "string"
        }
      },
      "required": [
        "hostPoolType",
        "loadBalancerType",
        "preferredAppGroupType"
      ],
      "type": "object"
    },
    "MsixPackageApplications": {
      "description": "Schema for MSIX Package Application properties.",
      "properties": {
        "appId": {
          "description": "Package Application Id, found in appxmanifest.xml.",
          "type": "string"
        },
        "appUserModelID": {
          "description": "Used to activate Package Application. Consists of Package Name and ApplicationID. Found in appxmanifest.xml.",
          "type": "string"
        },
        "description": {
          "description": "Description of Package Application.",
          "type": "string"
        },
        "friendlyName": {
          "description": "User friendly name.",
          "type": "string"
        },
        "iconImageName": {
          "description": "User friendly name.",
          "type": "string"
        },
        "rawIcon": {
          "description": "the icon a 64 bit string as a byte array."
        },
        "rawPng": {
          "description": "the icon a 64 bit string as a byte array."
        }
      },
      "type": "object"
    },
    "MsixPackageDependencies": {
      "description": "Schema for MSIX Package Dependencies properties.",
      "properties": {
        "dependencyName": {
          "description": "Name of package dependency.",
          "type": "string"
        },
        "minVersion": {
          "description": "Dependency version required.",
          "type": "string"
        },
        "publisher": {
          "description": "Name of dependency publisher.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MsixPackageProperties": {
      "description": "Schema for MSIX Package properties.",
      "properties": {
        "displayName": {
          "description": "User friendly Name to be displayed in the portal. ",
          "type": "string"
        },
        "imagePath": {
          "description": "VHD/CIM image path on Network Share.",
          "type": "string"
        },
        "isActive": {
          "description": "Make this version of the package the active one across the hostpool. ",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "isRegularRegistration": {
          "description": "Specifies how to register Package in feed.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "lastUpdated": {
          "description": "Date Package was last updated, found in the appxmanifest.xml. ",
          "format": "date-time",
          "type": "string"
        },
        "packageApplications": {
          "description": "List of package applications. ",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/MsixPackageApplications"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "packageDependencies": {
          "description": "List of package dependencies. ",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/MsixPackageDependencies"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "packageFamilyName": {
          "description": "Package Family Name from appxmanifest.xml. Contains Package Name and Publisher name. ",
          "type": "string"
        },
        "packageName": {
          "description": "Package Name from appxmanifest.xml. ",
          "type": "string"
        },
        "packageRelativePath": {
          "description": "Relative Path to the package inside the image. ",
          "type": "string"
        },
        "version": {
          "description": "Package Version found in the appxmanifest.xml. ",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RegistrationInfo": {
      "description": "Represents a RegistrationInfo definition.",
      "properties": {
        "expirationTime": {
          "description": "Expiration time of registration token.",
          "format": "date-time",
          "type": "string"
        },
        "registrationTokenOperation": {
          "description": "The type of resetting the token.",
          "oneOf": [
            {
              "enum": [
                "Delete",
                "None",
                "Update"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "token": {
          "description": "The registration token base64 encoded string.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ScalingHostPoolReference": {
      "description": "Scaling plan reference to hostpool.",
      "properties": {
        "hostPoolArmPath": {
          "description": "Arm path of referenced hostpool.",
          "type": "string"
        },
        "scalingPlanEnabled": {
          "description": "Is the scaling plan enabled for this hostpool.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ScalingPlanProperties": {
      "description": "Scaling plan properties.",
      "properties": {
        "description": {
          "description": "Description of scaling plan.",
          "type": "string"
        },
        "exclusionTag": {
          "description": "Exclusion tag for scaling plan.",
          "type": "string"
        },
        "friendlyName": {
          "description": "User friendly name of scaling plan.",
          "type": "string"
        },
        "hostPoolReferences": {
          "description": "List of ScalingHostPoolReference definitions.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/ScalingHostPoolReference"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "hostPoolType": {
          "description": "HostPool type for scaling plan.",
          "oneOf": [
            {
              "enum": [
                "Personal",
                "Pooled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "schedules": {
          "description": "List of ScalingSchedule definitions.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/ScalingSchedule"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "timeZone": {
          "description": "Timezone of the scaling plan.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ScalingSchedule": {
      "description": "Scaling plan schedule.",
      "properties": {
        "daysOfWeek": {
          "description": "Set of days of the week on which this schedule is active.",
          "oneOf": [
            {
              "items": {
                "enum": [
                  "Sunday",
                  "Monday",
                  "Tuesday",
                  "Wednesday",
                  "Thursday",
                  "Friday",
                  "Saturday"
                ],
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "name": {
          "description": "Name of the scaling schedule.",
          "type": "string"
        },
        "offPeakLoadBalancingAlgorithm": {
          "description": "Load balancing algorithm for off-peak period.",
          "oneOf": [
            {
              "enum": [
                "BreadthFirst",
                "DepthFirst"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "offPeakStartTime": {
          "description": "Starting time for off-peak period.",
          "format": "date-time",
          "type": "string"
        },
        "peakLoadBalancingAlgorithm": {
          "description": "Load balancing algorithm for peak period.",
          "oneOf": [
            {
              "enum": [
                "BreadthFirst",
                "DepthFirst"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "peakStartTime": {
          "description": "Starting time for peak period.",
          "format": "date-time",
          "type": "string"
        },
        "rampDownCapacityThresholdPct": {
          "description": "Capacity threshold for ramp down period.",
          "oneOf": [
            {
              "maximum": 100,
              "minimum": 0,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "rampDownForceLogoffUsers": {
          "description": "Should users be logged off forcefully from hosts.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "rampDownLoadBalancingAlgorithm": {
          "description": "Load balancing algorithm for ramp down period.",
          "oneOf": [
            {
              "enum": [
                "BreadthFirst",
                "DepthFirst"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "rampDownMinimumHostsPct": {
          "description": "Minimum host percentage for ramp down period.",
          "oneOf": [
            {
              "maximum": 100,
              "minimum": 0,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "rampDownNotificationMessage": {
          "description": "Notification message for users during ramp down period.",
          "type": "string"
        },
        "rampDownStartTime": {
          "description": "Starting time for ramp down period.",
          "format": "date-time",
          "type": "string"
        },
        "rampDownStopHostsWhen": {
          "description": "Specifies when to stop hosts during ramp down period.",
          "oneOf": [
            {
              "enum": [
                "ZeroSessions",
                "ZeroActiveSessions"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "rampDownWaitTimeMinutes": {
          "description": "Number of minutes to wait to stop hosts during ramp down period.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "rampUpCapacityThresholdPct": {
          "description": "Capacity threshold for ramp up period.",
          "oneOf": [
            {
              "maximum": 100,
              "minimum": 0,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "rampUpLoadBalancingAlgorithm": {
          "description": "Load balancing algorithm for ramp up period.",
          "oneOf": [
            {
              "enum": [
                "BreadthFirst",
                "DepthFirst"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "rampUpMinimumHostsPct": {
          "description": "Minimum host percentage for ramp up period.",
          "oneOf": [
            {
              "maximum": 100,
              "minimum": 0,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "rampUpStartTime": {
          "description": "Starting time for ramp up period.",
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "WorkspaceProperties": {
      "description": "Schema for Workspace properties.",
      "properties": {
        "applicationGroupReferences": {
          "description": "List of applicationGroup resource Ids.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "description": {
          "description": "Description of Workspace.",
          "type": "string"
        },
        "friendlyName": {
          "description": "Friendly name of Workspace.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "applicationGroups_applications_childResource": {
      "description": "Microsoft.DesktopVirtualization/applicationGroups/applications",
      "properties": {
        "apiVersion": {
          "enum": [
            "2020-11-10-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the application within the specified application group",
          "maxLength": 24,
          "minLength": 3,
          "type": "string"
        },
        "properties": {
          "description": "Detailed properties for Application",
          "oneOf": [
            {
              "$ref": "#/definitions/ApplicationProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "applications"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "hostPools_msixPackages_childResource": {
      "description": "Microsoft.DesktopVirtualization/hostPools/msixPackages",
      "properties": {
        "apiVersion": {
          "enum": [
            "2020-11-10-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The version specific package full name of the MSIX package within specified hostpool",
          "maxLength": 100,
          "minLength": 3,
          "type": "string"
        },
        "properties": {
          "description": "Detailed properties for MSIX Package",
          "oneOf": [
            {
              "$ref": "#/definitions/MsixPackageProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "msixPackages"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    }
  }
}