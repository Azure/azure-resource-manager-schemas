{
  "id": "https://schema.management.azure.com/schemas/2021-01-01-preview/Microsoft.ServiceFabric.json#",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "title": "Microsoft.ServiceFabric",
  "description": "Microsoft ServiceFabric Resource Types",
  "resourceDefinitions": {
    "managedClusters": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2021-01-01-preview"
          ]
        },
        "location": {
          "type": "string",
          "description": "Azure resource location."
        },
        "name": {
          "type": "string",
          "description": "The name of the cluster resource."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedClusterProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Describes the managed cluster resource properties."
        },
        "resources": {
          "type": "array",
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/managedclusters_applicationTypes_childResource"
              },
              {
                "$ref": "#/definitions/managedclusters_applications_childResource"
              },
              {
                "$ref": "#/definitions/managedClusters_nodeTypes_childResource"
              }
            ]
          }
        },
        "sku": {
          "oneOf": [
            {
              "$ref": "#/definitions/Sku"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Service Fabric managed cluster Sku definition"
        },
        "systemData": {
          "oneOf": [
            {
              "$ref": "#/definitions/SystemData"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Metadata pertaining to creation and last modification of the resource."
        },
        "tags": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure resource tags."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.ServiceFabric/managedClusters"
          ]
        }
      },
      "required": [
        "apiVersion",
        "location",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.ServiceFabric/managedClusters"
    },
    "managedclusters_applications": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2021-01-01-preview"
          ]
        },
        "identity": {
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Describes the managed identities for an Azure resource."
        },
        "location": {
          "type": "string",
          "description": "Resource location depends on the parent resource."
        },
        "name": {
          "type": "string",
          "description": "The name of the application resource."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/ApplicationResourceProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The application resource properties."
        },
        "resources": {
          "type": "array",
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/managedclusters_applications_services_childResource"
              }
            ]
          }
        },
        "systemData": {
          "oneOf": [
            {
              "$ref": "#/definitions/SystemData"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Metadata pertaining to creation and last modification of the resource."
        },
        "tags": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure resource tags."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.ServiceFabric/managedclusters/applications"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.ServiceFabric/managedclusters/applications"
    },
    "managedclusters_applications_services": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2021-01-01-preview"
          ]
        },
        "location": {
          "type": "string",
          "description": "Resource location depends on the parent resource."
        },
        "name": {
          "type": "string",
          "description": "The name of the service resource in the format of {applicationName}~{serviceName}."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/ServiceResourceProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The service resource properties."
        },
        "systemData": {
          "oneOf": [
            {
              "$ref": "#/definitions/SystemData"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Metadata pertaining to creation and last modification of the resource."
        },
        "tags": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure resource tags."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.ServiceFabric/managedclusters/applications/services"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.ServiceFabric/managedclusters/applications/services"
    },
    "managedclusters_applicationTypes": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2021-01-01-preview"
          ]
        },
        "location": {
          "type": "string",
          "description": "Resource location depends on the parent resource."
        },
        "name": {
          "type": "string",
          "description": "The name of the application type name resource."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/ApplicationTypeResourceProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The application type name properties"
        },
        "resources": {
          "type": "array",
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/managedclusters_applicationTypes_versions_childResource"
              }
            ]
          }
        },
        "systemData": {
          "oneOf": [
            {
              "$ref": "#/definitions/SystemData"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Metadata pertaining to creation and last modification of the resource."
        },
        "tags": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure resource tags."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.ServiceFabric/managedclusters/applicationTypes"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.ServiceFabric/managedclusters/applicationTypes"
    },
    "managedclusters_applicationTypes_versions": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2021-01-01-preview"
          ]
        },
        "location": {
          "type": "string",
          "description": "Resource location depends on the parent resource."
        },
        "name": {
          "type": "string",
          "description": "The application type version."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/ApplicationTypeVersionResourceProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The properties of the application type version resource."
        },
        "systemData": {
          "oneOf": [
            {
              "$ref": "#/definitions/SystemData"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Metadata pertaining to creation and last modification of the resource."
        },
        "tags": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure resource tags."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.ServiceFabric/managedclusters/applicationTypes/versions"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.ServiceFabric/managedclusters/applicationTypes/versions"
    },
    "managedClusters_nodeTypes": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2021-01-01-preview"
          ]
        },
        "name": {
          "type": "string",
          "description": "The name of the node type."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/NodeTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Describes a node type in the cluster, each node type represents sub set of nodes in the cluster."
        },
        "systemData": {
          "oneOf": [
            {
              "$ref": "#/definitions/SystemData"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Metadata pertaining to creation and last modification of the resource."
        },
        "tags": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure resource tags."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.ServiceFabric/managedClusters/nodeTypes"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.ServiceFabric/managedClusters/nodeTypes"
    }
  },
  "definitions": {
    "ApplicationHealthPolicy": {
      "type": "object",
      "properties": {
        "considerWarningAsError": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Indicates whether warnings are treated with the same severity as errors."
        },
        "defaultServiceTypeHealthPolicy": {
          "oneOf": [
            {
              "$ref": "#/definitions/ServiceTypeHealthPolicy"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Represents the health policy used to evaluate the health of services belonging to a service type.\n"
        },
        "maxPercentUnhealthyDeployedApplications": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The maximum allowed percentage of unhealthy deployed applications. Allowed values are Byte values from zero to 100.\nThe percentage represents the maximum tolerated percentage of deployed applications that can be unhealthy before the application is considered in error.\nThis is calculated by dividing the number of unhealthy deployed applications over the number of nodes where the application is currently deployed on in the cluster.\nThe computation rounds up to tolerate one failure on small numbers of nodes. Default percentage is zero.\n"
        },
        "serviceTypeHealthPolicyMap": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/ServiceTypeHealthPolicy"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Defines a ServiceTypeHealthPolicy per service type name.\n\nThe entries in the map replace the default service type health policy for each specified service type.\nFor example, in an application that contains both a stateless gateway service type and a stateful engine service type, the health policies for the stateless and stateful services can be configured differently.\nWith policy per service type, there's more granular control of the health of the service.\n\nIf no policy is specified for a service type name, the DefaultServiceTypeHealthPolicy is used for evaluation.\n"
        }
      },
      "required": [
        "considerWarningAsError",
        "maxPercentUnhealthyDeployedApplications"
      ],
      "description": "Defines a health policy used to evaluate the health of an application or one of its children entities.\n"
    },
    "ApplicationResourceProperties": {
      "type": "object",
      "properties": {
        "managedIdentities": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ApplicationUserAssignedIdentity"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "List of user assigned identities for the application, each mapped to a friendly name."
        },
        "parameters": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "List of application parameters with overridden values from their default values specified in the application manifest."
        },
        "upgradePolicy": {
          "oneOf": [
            {
              "$ref": "#/definitions/ApplicationUpgradePolicy"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Describes the policy for a monitored application upgrade."
        },
        "version": {
          "type": "string",
          "description": "The version of the application type as defined in the application manifest.\nThis name must be the full Arm Resource ID for the referenced application type version.\n"
        }
      },
      "description": "The application resource properties."
    },
    "ApplicationTypeResourceProperties": {
      "type": "object",
      "properties": {},
      "description": "The application type name properties"
    },
    "ApplicationTypeVersionResourceProperties": {
      "type": "object",
      "properties": {
        "appPackageUrl": {
          "type": "string",
          "description": "The URL to the application package"
        }
      },
      "required": [
        "appPackageUrl"
      ],
      "description": "The properties of the application type version resource."
    },
    "ApplicationTypeVersionsCleanupPolicy": {
      "type": "object",
      "properties": {
        "maxUnusedVersionsToKeep": {
          "oneOf": [
            {
              "type": "integer",
              "minimum": 0
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Number of unused versions per application type to keep."
        }
      },
      "required": [
        "maxUnusedVersionsToKeep"
      ],
      "description": "The policy used to clean up unused versions."
    },
    "ApplicationUpgradePolicy": {
      "type": "object",
      "properties": {
        "applicationHealthPolicy": {
          "oneOf": [
            {
              "$ref": "#/definitions/ApplicationHealthPolicy"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Defines a health policy used to evaluate the health of an application or one of its children entities.\n"
        },
        "forceRestart": {
          "oneOf": [
            {
              "type": "boolean",
              "default": false
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "If true, then processes are forcefully restarted during upgrade even when the code version has not changed (the upgrade only changes configuration or data)."
        },
        "instanceCloseDelayDuration": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Duration in seconds, to wait before a stateless instance is closed, to allow the active requests to drain gracefully. This would be effective when the instance is closing during the application/cluster upgrade, only for those instances which have a non-zero delay duration configured in the service description. See InstanceCloseDelayDurationSeconds property in StatelessServiceDescription for details. Note, the default value of InstanceCloseDelayDurationInSeconds is 4294967295, which indicates that the behavior will entirely depend on the delay configured in the stateless service description."
        },
        "recreateApplication": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Determines whether the application should be recreated on update. If value=true, the rest of the upgrade policy parameters are not allowed."
        },
        "rollingUpgradeMonitoringPolicy": {
          "oneOf": [
            {
              "$ref": "#/definitions/RollingUpgradeMonitoringPolicy"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The policy used for monitoring the application upgrade"
        },
        "upgradeMode": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Monitored",
                "UnmonitoredAuto"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "upgradeReplicaSetCheckTimeout": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The maximum amount of time to block processing of an upgrade domain and prevent loss of availability when there are unexpected issues. When this timeout expires, processing of the upgrade domain will proceed regardless of availability loss issues. The timeout is reset at the start of each upgrade domain. Valid values are between 0 and 42949672925 inclusive. (unsigned 32-bit integer)."
        }
      },
      "description": "Describes the policy for a monitored application upgrade."
    },
    "ApplicationUserAssignedIdentity": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The friendly name of user assigned identity."
        },
        "principalId": {
          "type": "string",
          "description": "The principal id of user assigned identity."
        }
      },
      "required": [
        "name",
        "principalId"
      ]
    },
    "AzureActiveDirectory": {
      "type": "object",
      "properties": {
        "clientApplication": {
          "type": "string",
          "description": "Azure active directory client application id."
        },
        "clusterApplication": {
          "type": "string",
          "description": "Azure active directory cluster application id."
        },
        "tenantId": {
          "type": "string",
          "description": "Azure active directory tenant id."
        }
      },
      "description": "The settings to enable AAD authentication on the cluster."
    },
    "ClientCertificate": {
      "type": "object",
      "properties": {
        "commonName": {
          "type": "string",
          "description": "Certificate common name."
        },
        "isAdmin": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Indicates if the client certificate has admin access to the cluster. Non admin clients can perform only read only operations on the cluster."
        },
        "issuerThumbprint": {
          "type": "string",
          "description": "Issuer thumbprint for the certificate. Only used together with CommonName."
        },
        "thumbprint": {
          "type": "string",
          "description": "Certificate thumbprint."
        }
      },
      "required": [
        "isAdmin"
      ],
      "description": "Client certificate definition."
    },
    "EndpointRangeDescription": {
      "type": "object",
      "properties": {
        "endPort": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "End port of a range of ports"
        },
        "startPort": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Starting port of a range of ports"
        }
      },
      "required": [
        "endPort",
        "startPort"
      ],
      "description": "Port range details"
    },
    "LoadBalancingRule": {
      "type": "object",
      "properties": {
        "backendPort": {
          "oneOf": [
            {
              "type": "integer",
              "minimum": 1,
              "maximum": 65534
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The port used for internal connections on the endpoint. Acceptable values are between 1 and 65535."
        },
        "frontendPort": {
          "oneOf": [
            {
              "type": "integer",
              "minimum": 1,
              "maximum": 65534
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer. Acceptable values are between 1 and 65534."
        },
        "probeProtocol": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "tcp",
                "http",
                "https"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "the reference to the load balancer probe used by the load balancing rule."
        },
        "probeRequestPath": {
          "type": "string",
          "description": "The probe request path. Only supported for HTTP/HTTPS probes."
        },
        "protocol": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "tcp",
                "udp"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The reference to the transport protocol used by the load balancing rule."
        }
      },
      "required": [
        "backendPort",
        "frontendPort",
        "probeProtocol",
        "protocol"
      ],
      "description": "Describes a load balancing rule."
    },
    "ManagedClusterProperties": {
      "type": "object",
      "properties": {
        "addonFeatures": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "DnsService",
                  "BackupRestoreService",
                  "ResourceMonitorService"
                ]
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "List of add-on features to enable on the cluster."
        },
        "adminPassword": {
          "type": "string",
          "format": "password",
          "description": "VM admin user password."
        },
        "adminUserName": {
          "type": "string",
          "description": "VM admin user name."
        },
        "allowRdpAccess": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Setting this to true enables RDP access to the VM. The default NSG rule opens RDP port to internet which can be overridden with custom Network Security Rules. The default value for this setting is false."
        },
        "applicationTypeVersionsCleanupPolicy": {
          "oneOf": [
            {
              "$ref": "#/definitions/ApplicationTypeVersionsCleanupPolicy"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The policy used to clean up unused versions."
        },
        "azureActiveDirectory": {
          "oneOf": [
            {
              "$ref": "#/definitions/AzureActiveDirectory"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The settings to enable AAD authentication on the cluster."
        },
        "clientConnectionPort": {
          "oneOf": [
            {
              "type": "integer",
              "default": "19000"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The port used for client connections to the cluster."
        },
        "clients": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ClientCertificate"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Client certificates that are allowed to manage the cluster."
        },
        "clusterCodeVersion": {
          "type": "string",
          "description": "The Service Fabric runtime version of the cluster. This property can only by set the user when **upgradeMode** is set to 'Manual'. To get list of available Service Fabric versions for new clusters use [ClusterVersion API](./ClusterVersion.md). To get the list of available version for existing clusters use **availableClusterVersions**."
        },
        "dnsName": {
          "type": "string",
          "description": "The cluster dns name."
        },
        "enableAutoOSUpgrade": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Setting this to true enables automatic OS upgrade for the node types that are created using any platform OS image with version 'latest'. The default value for this setting is false."
        },
        "fabricSettings": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SettingsSectionDescription"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The list of custom fabric settings to configure the cluster."
        },
        "httpGatewayConnectionPort": {
          "oneOf": [
            {
              "type": "integer",
              "default": "19080"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The port used for HTTP connections to the cluster."
        },
        "loadBalancingRules": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/LoadBalancingRule"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Load balancing rules that are applied to the public load balancer of the cluster."
        },
        "networkSecurityRules": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NetworkSecurityRule"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Custom Network Security Rules that are applied to the virtual network of the cluster."
        }
      },
      "required": [
        "adminUserName",
        "dnsName"
      ],
      "description": "Describes the managed cluster resource properties."
    },
    "managedclusters_applications_childResource": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2021-01-01-preview"
          ]
        },
        "identity": {
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Describes the managed identities for an Azure resource."
        },
        "location": {
          "type": "string",
          "description": "Resource location depends on the parent resource."
        },
        "name": {
          "type": "string",
          "description": "The name of the application resource."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/ApplicationResourceProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The application resource properties."
        },
        "systemData": {
          "oneOf": [
            {
              "$ref": "#/definitions/SystemData"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Metadata pertaining to creation and last modification of the resource."
        },
        "tags": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure resource tags."
        },
        "type": {
          "type": "string",
          "enum": [
            "applications"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.ServiceFabric/managedclusters/applications"
    },
    "managedclusters_applications_services_childResource": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2021-01-01-preview"
          ]
        },
        "location": {
          "type": "string",
          "description": "Resource location depends on the parent resource."
        },
        "name": {
          "type": "string",
          "description": "The name of the service resource in the format of {applicationName}~{serviceName}."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/ServiceResourceProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The service resource properties."
        },
        "systemData": {
          "oneOf": [
            {
              "$ref": "#/definitions/SystemData"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Metadata pertaining to creation and last modification of the resource."
        },
        "tags": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure resource tags."
        },
        "type": {
          "type": "string",
          "enum": [
            "services"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.ServiceFabric/managedclusters/applications/services"
    },
    "managedclusters_applicationTypes_childResource": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2021-01-01-preview"
          ]
        },
        "location": {
          "type": "string",
          "description": "Resource location depends on the parent resource."
        },
        "name": {
          "type": "string",
          "description": "The name of the application type name resource."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/ApplicationTypeResourceProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The application type name properties"
        },
        "systemData": {
          "oneOf": [
            {
              "$ref": "#/definitions/SystemData"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Metadata pertaining to creation and last modification of the resource."
        },
        "tags": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure resource tags."
        },
        "type": {
          "type": "string",
          "enum": [
            "applicationTypes"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.ServiceFabric/managedclusters/applicationTypes"
    },
    "managedclusters_applicationTypes_versions_childResource": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2021-01-01-preview"
          ]
        },
        "location": {
          "type": "string",
          "description": "Resource location depends on the parent resource."
        },
        "name": {
          "type": "string",
          "description": "The application type version."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/ApplicationTypeVersionResourceProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The properties of the application type version resource."
        },
        "systemData": {
          "oneOf": [
            {
              "$ref": "#/definitions/SystemData"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Metadata pertaining to creation and last modification of the resource."
        },
        "tags": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure resource tags."
        },
        "type": {
          "type": "string",
          "enum": [
            "versions"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.ServiceFabric/managedclusters/applicationTypes/versions"
    },
    "managedClusters_nodeTypes_childResource": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2021-01-01-preview"
          ]
        },
        "name": {
          "type": "string",
          "description": "The name of the node type."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/NodeTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Describes a node type in the cluster, each node type represents sub set of nodes in the cluster."
        },
        "systemData": {
          "oneOf": [
            {
              "$ref": "#/definitions/SystemData"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Metadata pertaining to creation and last modification of the resource."
        },
        "tags": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure resource tags."
        },
        "type": {
          "type": "string",
          "enum": [
            "nodeTypes"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.ServiceFabric/managedClusters/nodeTypes"
    },
    "ManagedIdentity": {
      "type": "object",
      "properties": {
        "type": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "None",
                "SystemAssigned",
                "UserAssigned",
                "SystemAssigned, UserAssigned"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "userAssignedIdentities": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/UserAssignedIdentity"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form:\n'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.\n"
        }
      },
      "description": "Describes the managed identities for an Azure resource."
    },
    "NetworkSecurityRule": {
      "type": "object",
      "properties": {
        "access": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "allow",
                "deny"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The network traffic is allowed or denied."
        },
        "description": {
          "type": "string",
          "description": "Network security rule description."
        },
        "destinationAddressPrefixes": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The destination address prefixes. CIDR or destination IP ranges."
        },
        "destinationPortRanges": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The destination port ranges."
        },
        "direction": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "inbound",
                "outbound"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Network security rule direction."
        },
        "name": {
          "type": "string",
          "description": "Network security rule name."
        },
        "priority": {
          "oneOf": [
            {
              "type": "integer",
              "minimum": 1000,
              "maximum": 3000
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The priority of the rule. The value can be in the range 1000 to 3000. Values outside this range are reserved for Service Fabric ManagerCluster Resource Provider. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule."
        },
        "protocol": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "http",
                "https",
                "tcp",
                "udp",
                "icmp",
                "ah",
                "esp"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Network protocol this rule applies to."
        },
        "sourceAddressPrefixes": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The CIDR or source IP ranges."
        },
        "sourcePortRanges": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The source port ranges."
        }
      },
      "required": [
        "access",
        "direction",
        "name",
        "priority",
        "protocol"
      ],
      "description": "Describes a network security rule."
    },
    "NodeTypeProperties": {
      "type": "object",
      "properties": {
        "applicationPorts": {
          "oneOf": [
            {
              "$ref": "#/definitions/EndpointRangeDescription"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Port range details"
        },
        "capacities": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The capacity tags applied to the nodes in the node type, the cluster resource manager uses these tags to understand how much resource a node has."
        },
        "dataDiskSizeGB": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Disk size for each vm in the node type in GBs."
        },
        "ephemeralPorts": {
          "oneOf": [
            {
              "$ref": "#/definitions/EndpointRangeDescription"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Port range details"
        },
        "isPrimary": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The node type on which system services will run. Only one node type should be marked as primary. Primary node type cannot be deleted or changed for existing clusters."
        },
        "placementProperties": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The placement tags applied to nodes in the node type, which can be used to indicate where certain services (workload) should run."
        },
        "vmExtensions": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/VMSSExtension"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Set of extensions that should be installed onto the virtual machines."
        },
        "vmImageOffer": {
          "type": "string",
          "description": "The offer type of the Azure Virtual Machines Marketplace image. For example, UbuntuServer or WindowsServer."
        },
        "vmImagePublisher": {
          "type": "string",
          "description": "The publisher of the Azure Virtual Machines Marketplace image. For example, Canonical or MicrosoftWindowsServer."
        },
        "vmImageSku": {
          "type": "string",
          "description": "The SKU of the Azure Virtual Machines Marketplace image. For example, 14.04.0-LTS or 2012-R2-Datacenter."
        },
        "vmImageVersion": {
          "type": "string",
          "description": "The version of the Azure Virtual Machines Marketplace image. A value of 'latest' can be specified to select the latest version of an image. If omitted, the default is 'latest'."
        },
        "vmInstanceCount": {
          "oneOf": [
            {
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The number of nodes in the node type."
        },
        "vmManagedIdentity": {
          "oneOf": [
            {
              "$ref": "#/definitions/VmManagedIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Identities for the virtual machine scale set under the node type."
        },
        "vmSecrets": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/VaultSecretGroup"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The secrets to install in the virtual machines."
        },
        "vmSize": {
          "type": "string",
          "description": "The size of virtual machines in the pool. All virtual machines in a pool are the same size. For example, Standard_D3."
        }
      },
      "required": [
        "dataDiskSizeGB",
        "isPrimary",
        "vmInstanceCount"
      ],
      "description": "Describes a node type in the cluster, each node type represents sub set of nodes in the cluster."
    },
    "Partition": {
      "type": "object",
      "oneOf": [
        {
          "$ref": "#/definitions/SingletonPartitionScheme"
        }
      ],
      "properties": {},
      "description": "Describes how the service is partitioned."
    },
    "RollingUpgradeMonitoringPolicy": {
      "type": "object",
      "properties": {
        "failureAction": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Rollback",
                "Manual"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The compensating action to perform when a Monitored upgrade encounters monitoring policy or health policy violations. Invalid indicates the failure action is invalid. Rollback specifies that the upgrade will start rolling back automatically. Manual indicates that the upgrade will switch to UnmonitoredManual upgrade mode."
        },
        "healthCheckRetryTimeout": {
          "type": "string",
          "description": "The amount of time to retry health evaluation when the application or cluster is unhealthy before FailureAction is executed. It is interpreted as a string representing an ISO 8601 duration with following format \"hh:mm:ss.fff\"."
        },
        "healthCheckStableDuration": {
          "type": "string",
          "description": "The amount of time that the application or cluster must remain healthy before the upgrade proceeds to the next upgrade domain. It is interpreted as a string representing an ISO 8601 duration with following format \"hh:mm:ss.fff\"."
        },
        "healthCheckWaitDuration": {
          "type": "string",
          "description": "The amount of time to wait after completing an upgrade domain before applying health policies. It is interpreted as a string representing an ISO 8601 duration with following format \"hh:mm:ss.fff\"."
        },
        "upgradeDomainTimeout": {
          "type": "string",
          "description": "The amount of time each upgrade domain has to complete before FailureAction is executed. Cannot be larger than 12 hours. It is interpreted as a string representing an ISO 8601 duration with following format \"hh:mm:ss.fff\"."
        },
        "upgradeTimeout": {
          "type": "string",
          "description": "The amount of time the overall upgrade has to complete before FailureAction is executed. Cannot be larger than 12 hours. It is interpreted as a string representing an ISO 8601 duration with following format \"hh:mm:ss.fff\"."
        }
      },
      "required": [
        "failureAction",
        "healthCheckRetryTimeout",
        "healthCheckStableDuration",
        "healthCheckWaitDuration",
        "upgradeDomainTimeout",
        "upgradeTimeout"
      ],
      "description": "The policy used for monitoring the application upgrade"
    },
    "ScalingMechanism": {
      "type": "object",
      "properties": {},
      "description": "Describes the mechanism for performing a scaling operation."
    },
    "ScalingPolicy": {
      "type": "object",
      "properties": {
        "scalingMechanism": {
          "oneOf": [
            {
              "$ref": "#/definitions/ScalingMechanism"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Describes the mechanism for performing a scaling operation."
        },
        "scalingTrigger": {
          "oneOf": [
            {
              "$ref": "#/definitions/ScalingTrigger"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Describes the trigger for performing a scaling operation."
        }
      },
      "required": [
        "scalingMechanism",
        "scalingTrigger"
      ],
      "description": "Specifies a metric to load balance a service during runtime."
    },
    "ScalingTrigger": {
      "type": "object",
      "properties": {},
      "description": "Describes the trigger for performing a scaling operation."
    },
    "ServiceCorrelation": {
      "type": "object",
      "properties": {
        "scheme": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "AlignedAffinity",
                "NonAlignedAffinity"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The ServiceCorrelationScheme which describes the relationship between this service and the service specified via ServiceName."
        },
        "serviceName": {
          "type": "string",
          "description": "The full ARM Resource ID describing the service resource"
        }
      },
      "required": [
        "scheme",
        "serviceName"
      ],
      "description": "Creates a particular correlation between services."
    },
    "ServiceLoadMetric": {
      "type": "object",
      "properties": {
        "defaultLoad": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Used only for Stateless services. The default amount of load, as a number, that this service creates for this metric."
        },
        "name": {
          "type": "string",
          "description": "The name of the metric. If the service chooses to report load during runtime, the load metric name should match the name that is specified in Name exactly. Note that metric names are case sensitive."
        },
        "primaryDefaultLoad": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Used only for Stateful services. The default amount of load, as a number, that this service creates for this metric when it is a Primary replica."
        },
        "secondaryDefaultLoad": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Used only for Stateful services. The default amount of load, as a number, that this service creates for this metric when it is a Secondary replica."
        },
        "weight": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Zero",
                "Low",
                "Medium",
                "High"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The service load metric relative weight, compared to other metrics configured for this service, as a number."
        }
      },
      "required": [
        "name"
      ],
      "description": "Specifies a metric to load balance a service during runtime."
    },
    "ServicePlacementNonPartiallyPlaceServicePolicy": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "NonPartiallyPlaceService"
          ]
        }
      },
      "required": [
        "type"
      ],
      "description": "ServicePlacementNonPartiallyPlaceServicePolicy"
    },
    "ServicePlacementPolicy": {
      "type": "object",
      "oneOf": [
        {
          "$ref": "#/definitions/ServicePlacementNonPartiallyPlaceServicePolicy"
        }
      ],
      "properties": {},
      "description": "Describes the policy to be used for placement of a Service Fabric service."
    },
    "ServiceResourceProperties": {
      "type": "object",
      "oneOf": [
        {
          "$ref": "#/definitions/StatefulServiceProperties"
        },
        {
          "$ref": "#/definitions/StatelessServiceProperties"
        }
      ],
      "properties": {
        "correlationScheme": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ServiceCorrelation"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "A list that describes the correlation of the service with other services."
        },
        "defaultMoveCost": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Zero",
                "Low",
                "Medium",
                "High"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "partitionDescription": {
          "oneOf": [
            {
              "$ref": "#/definitions/Partition"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Describes how the service is partitioned."
        },
        "placementConstraints": {
          "type": "string",
          "description": "The placement constraints as a string. Placement constraints are boolean expressions on node properties and allow for restricting a service to particular nodes based on the service requirements. For example, to place a service on nodes where NodeType is blue specify the following: \"NodeColor == blue)\"."
        },
        "scalingPolicies": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ScalingPolicy"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Scaling policies for this service."
        },
        "serviceDnsName": {
          "type": "string",
          "description": "The DNS name of the service. It requires the DNS system service to be enabled in Service Fabric cluster."
        },
        "serviceLoadMetrics": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ServiceLoadMetric"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The service load metrics is given as an array of ServiceLoadMetric objects."
        },
        "servicePackageActivationMode": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "SharedProcess",
                "ExclusiveProcess"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The activation Mode of the service package."
        },
        "servicePlacementPolicies": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ServicePlacementPolicy"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "A list that describes the correlation of the service with other services."
        },
        "serviceTypeName": {
          "type": "string",
          "description": "The name of the service type"
        }
      },
      "required": [
        "partitionDescription",
        "serviceTypeName"
      ],
      "description": "The service resource properties."
    },
    "ServiceTypeHealthPolicy": {
      "type": "object",
      "properties": {
        "maxPercentUnhealthyPartitionsPerService": {
          "oneOf": [
            {
              "type": "integer",
              "minimum": 0,
              "maximum": 100
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The maximum allowed percentage of unhealthy partitions per service.\n\nThe percentage represents the maximum tolerated percentage of partitions that can be unhealthy before the service is considered in error.\nIf the percentage is respected but there is at least one unhealthy partition, the health is evaluated as Warning.\nThe percentage is calculated by dividing the number of unhealthy partitions over the total number of partitions in the service.\nThe computation rounds up to tolerate one failure on small numbers of partitions.\n"
        },
        "maxPercentUnhealthyReplicasPerPartition": {
          "oneOf": [
            {
              "type": "integer",
              "minimum": 0,
              "maximum": 100
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The maximum allowed percentage of unhealthy replicas per partition.\n\nThe percentage represents the maximum tolerated percentage of replicas that can be unhealthy before the partition is considered in error.\nIf the percentage is respected but there is at least one unhealthy replica, the health is evaluated as Warning.\nThe percentage is calculated by dividing the number of unhealthy replicas over the total number of replicas in the partition.\nThe computation rounds up to tolerate one failure on small numbers of replicas.\n"
        },
        "maxPercentUnhealthyServices": {
          "oneOf": [
            {
              "type": "integer",
              "minimum": 0,
              "maximum": 100
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The maximum allowed percentage of unhealthy services.\n\nThe percentage represents the maximum tolerated percentage of services that can be unhealthy before the application is considered in error.\nIf the percentage is respected but there is at least one unhealthy service, the health is evaluated as Warning.\nThis is calculated by dividing the number of unhealthy services of the specific service type over the total number of services of the specific service type.\nThe computation rounds up to tolerate one failure on small numbers of services.\n"
        }
      },
      "required": [
        "maxPercentUnhealthyPartitionsPerService",
        "maxPercentUnhealthyReplicasPerPartition",
        "maxPercentUnhealthyServices"
      ],
      "description": "Represents the health policy used to evaluate the health of services belonging to a service type.\n"
    },
    "SettingsParameterDescription": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The parameter name of fabric setting."
        },
        "value": {
          "type": "string",
          "description": "The parameter value of fabric setting."
        }
      },
      "required": [
        "name",
        "value"
      ],
      "description": "Describes a parameter in fabric settings of the cluster."
    },
    "SettingsSectionDescription": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The section name of the fabric settings."
        },
        "parameters": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SettingsParameterDescription"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The collection of parameters in the section."
        }
      },
      "required": [
        "name",
        "parameters"
      ],
      "description": "Describes a section in the fabric settings of the cluster."
    },
    "SingletonPartitionScheme": {
      "type": "object",
      "properties": {
        "partitionScheme": {
          "type": "string",
          "enum": [
            "Singleton"
          ]
        }
      },
      "required": [
        "partitionScheme"
      ],
      "description": "SingletonPartitionScheme"
    },
    "Sku": {
      "type": "object",
      "properties": {
        "name": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Basic",
                "Standard"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Sku Name."
        }
      },
      "required": [
        "name"
      ],
      "description": "Service Fabric managed cluster Sku definition"
    },
    "StatefulServiceProperties": {
      "type": "object",
      "properties": {
        "dropSourceReplicaOnMove": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Indicates whether to drop source Secondary replica even if the target replica has not finished build. If desired behavior is to drop it as soon as possible the value of this property is true, if not it is false."
        },
        "hasPersistedState": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "A flag indicating whether this is a persistent service which stores states on the local disk. If it is then the value of this property is true, if not it is false."
        },
        "minReplicaSetSize": {
          "oneOf": [
            {
              "type": "integer",
              "minimum": 1
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The minimum replica set size as a number."
        },
        "quorumLossWaitDuration": {
          "type": "string",
          "description": "The maximum duration for which a partition is allowed to be in a state of quorum loss, represented in ISO 8601 format \"hh:mm:ss\"."
        },
        "replicaRestartWaitDuration": {
          "type": "string",
          "description": "The duration between when a replica goes down and when a new replica is created, represented in ISO 8601 format \"hh:mm:ss\"."
        },
        "serviceKind": {
          "type": "string",
          "enum": [
            "Stateful"
          ]
        },
        "servicePlacementTimeLimit": {
          "type": "string",
          "description": "The duration for which replicas can stay InBuild before reporting that build is stuck, represented in ISO 8601 format \"hh:mm:ss\"."
        },
        "standByReplicaKeepDuration": {
          "type": "string",
          "description": "The definition on how long StandBy replicas should be maintained before being removed, represented in ISO 8601 format \"hh:mm:ss\"."
        },
        "targetReplicaSetSize": {
          "oneOf": [
            {
              "type": "integer",
              "minimum": 1
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The target replica set size as a number."
        }
      },
      "required": [
        "serviceKind"
      ],
      "description": "The properties of a stateful service resource."
    },
    "StatelessServiceProperties": {
      "type": "object",
      "properties": {
        "instanceCloseDelayDuration": {
          "type": "string",
          "default": "0",
          "description": "Duration represented in ISO 8601 format \"hh:mm:ss\", to wait before a stateless instance is closed, to allow the active requests to drain gracefully. This would be effective when the instance is closing during the application/cluster upgrade and disabling node. The endpoint exposed on this instance is removed prior to starting the delay, which prevents new connections to this instance. In addition, clients that have subscribed to service endpoint change events(https://docs.microsoft.com/dotnet/api/system.fabric.fabricclient.servicemanagementclient.registerservicenotificationfilterasync), can do the following upon receiving the endpoint removal notification: - Stop sending new requests to this instance. - Close existing connections after in-flight requests have completed. - Connect to a different instance of the service partition for future requests. Note, the default value of InstanceCloseDelayDuration is 0, which indicates that there won't be any delay or removal of the endpoint prior to closing the instance."
        },
        "instanceCount": {
          "oneOf": [
            {
              "type": "integer",
              "minimum": -1
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The instance count."
        },
        "minInstanceCount": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "MinInstanceCount is the minimum number of instances that must be up to meet the EnsureAvailability safety check during operations like upgrade or deactivate node. The actual number that is used is max( MinInstanceCount, ceil( MinInstancePercentage/100.0 * InstanceCount) ). Note, if InstanceCount is set to -1, during MinInstanceCount computation -1 is first converted into the number of nodes on which the instances are allowed to be placed according to the placement constraints on the service."
        },
        "minInstancePercentage": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "MinInstancePercentage is the minimum percentage of InstanceCount that must be up to meet the EnsureAvailability safety check during operations like upgrade or deactivate node. The actual number that is used is max( MinInstanceCount, ceil( MinInstancePercentage/100.0 * InstanceCount) ). Note, if InstanceCount is set to -1, during MinInstancePercentage computation, -1 is first converted into the number of nodes on which the instances are allowed to be placed according to the placement constraints on the service."
        },
        "serviceKind": {
          "type": "string",
          "enum": [
            "Stateless"
          ]
        }
      },
      "required": [
        "instanceCount",
        "serviceKind"
      ],
      "description": "The properties of a stateless service resource."
    },
    "SubResource": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Azure resource identifier."
        }
      },
      "description": "Azure resource identifier."
    },
    "SystemData": {
      "type": "object",
      "properties": {
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource creation (UTC)."
        },
        "createdBy": {
          "type": "string",
          "description": "The identity that created the resource."
        },
        "createdByType": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The type of identity that created the resource."
        },
        "lastModifiedAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource last modification (UTC)."
        },
        "lastModifiedBy": {
          "type": "string",
          "description": "The identity that last modified the resource."
        },
        "lastModifiedByType": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The type of identity that last modified the resource."
        }
      },
      "description": "Metadata pertaining to creation and last modification of the resource."
    },
    "UserAssignedIdentity": {
      "type": "object",
      "properties": {}
    },
    "VaultCertificate": {
      "type": "object",
      "properties": {
        "certificateStore": {
          "type": "string",
          "description": "For Windows VMs, specifies the certificate store on the Virtual Machine to which the certificate should be added. The specified certificate store is implicitly in the LocalMachine account. <br><br>For Linux VMs, the certificate file is placed under the /var/lib/waagent directory, with the file name <UppercaseThumbprint>.crt for the X509 certificate file and <UppercaseThumbprint>.prv for private key. Both of these files are .pem formatted."
        },
        "certificateUrl": {
          "type": "string",
          "description": "This is the URL of a certificate that has been uploaded to Key Vault as a secret. For adding a secret to the Key Vault, see [Add a key or secret to the key vault](https://docs.microsoft.com/azure/key-vault/key-vault-get-started/#add). In this case, your certificate needs to be It is the Base64 encoding of the following JSON Object which is encoded in UTF-8: <br><br> {<br>  \"data\":\"<Base64-encoded-certificate>\",<br>  \"dataType\":\"pfx\",<br>  \"password\":\"<pfx-file-password>\"<br>}"
        }
      },
      "required": [
        "certificateStore",
        "certificateUrl"
      ],
      "description": "Describes a single certificate reference in a Key Vault, and where the certificate should reside on the VM."
    },
    "VaultSecretGroup": {
      "type": "object",
      "properties": {
        "sourceVault": {
          "oneOf": [
            {
              "$ref": "#/definitions/SubResource"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Azure resource identifier."
        },
        "vaultCertificates": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/VaultCertificate"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The list of key vault references in SourceVault which contain certificates."
        }
      },
      "required": [
        "sourceVault",
        "vaultCertificates"
      ],
      "description": "Specifies set of certificates that should be installed onto the virtual machines."
    },
    "VmManagedIdentity": {
      "type": "object",
      "properties": {
        "userAssignedIdentities": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The list of user identities associated with the virtual machine scale set under the node type. Each entry will be an ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'."
        }
      },
      "description": "Identities for the virtual machine scale set under the node type."
    },
    "VMSSExtension": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the extension."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/VMSSExtensionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Describes the properties of a Virtual Machine Scale Set Extension."
        }
      },
      "required": [
        "name",
        "properties"
      ],
      "description": "Specifies set of extensions that should be installed onto the virtual machines."
    },
    "VMSSExtensionProperties": {
      "type": "object",
      "properties": {
        "autoUpgradeMinorVersion": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true."
        },
        "forceUpdateTag": {
          "type": "string",
          "description": "If a value is provided and is different from the previous value, the extension handler will be forced to update even if the extension configuration has not changed."
        },
        "protectedSettings": {
          "type": "object",
          "properties": {},
          "description": "The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all."
        },
        "provisionAfterExtensions": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Collection of extension names after which this extension needs to be provisioned."
        },
        "publisher": {
          "type": "string",
          "description": "The name of the extension handler publisher."
        },
        "settings": {
          "type": "object",
          "properties": {},
          "description": "Json formatted public settings for the extension."
        },
        "type": {
          "type": "string",
          "description": "Specifies the type of the extension; an example is \"CustomScriptExtension\"."
        },
        "typeHandlerVersion": {
          "type": "string",
          "description": "Specifies the version of the script handler."
        }
      },
      "required": [
        "publisher",
        "type",
        "typeHandlerVersion"
      ],
      "description": "Describes the properties of a Virtual Machine Scale Set Extension."
    }
  }
}
