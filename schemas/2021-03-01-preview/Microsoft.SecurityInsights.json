{
  "id": "https://schema.management.azure.com/schemas/2021-03-01-preview/Microsoft.SecurityInsights.json#",
  "title": "Microsoft.SecurityInsights",
  "description": "Microsoft SecurityInsights Resource Types",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "extension_resourceDefinitions": {
    "alertRules": {
      "description": "Microsoft.SecurityInsights/alertRules",
      "properties": {
        "apiVersion": {
          "enum": [
            "2021-03-01-preview"
          ],
          "type": "string"
        },
        "etag": {
          "description": "Etag of the azure resource",
          "type": "string"
        },
        "name": {
          "description": "Alert rule ID",
          "type": "string"
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/alertRules_actions_childResource"
              }
            ]
          },
          "type": "array"
        },
        "type": {
          "enum": [
            "Microsoft.SecurityInsights/alertRules"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "alertRules_actions": {
      "description": "Microsoft.SecurityInsights/alertRules/actions",
      "properties": {
        "apiVersion": {
          "enum": [
            "2021-03-01-preview"
          ],
          "type": "string"
        },
        "etag": {
          "description": "Etag of the azure resource",
          "type": "string"
        },
        "name": {
          "description": "Action ID",
          "type": "string"
        },
        "properties": {
          "description": "Action properties for put request",
          "oneOf": [
            {
              "$ref": "#/definitions/ActionRequestProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.SecurityInsights/alertRules/actions"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "dataConnectors": {
      "description": "Microsoft.SecurityInsights/dataConnectors",
      "properties": {
        "apiVersion": {
          "enum": [
            "2021-03-01-preview"
          ],
          "type": "string"
        },
        "etag": {
          "description": "Etag of the azure resource",
          "type": "string"
        },
        "name": {
          "description": "Connector ID",
          "type": "string"
        },
        "type": {
          "enum": [
            "Microsoft.SecurityInsights/dataConnectors"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "entityQueries": {
      "description": "Microsoft.SecurityInsights/entityQueries",
      "properties": {
        "apiVersion": {
          "enum": [
            "2021-03-01-preview"
          ],
          "type": "string"
        },
        "etag": {
          "description": "Etag of the azure resource",
          "type": "string"
        },
        "name": {
          "description": "entity query ID",
          "type": "string"
        },
        "type": {
          "enum": [
            "Microsoft.SecurityInsights/entityQueries"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "incidents": {
      "description": "Microsoft.SecurityInsights/incidents",
      "properties": {
        "apiVersion": {
          "enum": [
            "2021-03-01-preview"
          ],
          "type": "string"
        },
        "etag": {
          "description": "Etag of the azure resource",
          "type": "string"
        },
        "name": {
          "description": "Incident ID",
          "type": "string"
        },
        "properties": {
          "description": "Incident properties",
          "oneOf": [
            {
              "$ref": "#/definitions/IncidentProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/incidents_comments_childResource"
              },
              {
                "$ref": "#/definitions/incidents_relations_childResource"
              }
            ]
          },
          "type": "array"
        },
        "type": {
          "enum": [
            "Microsoft.SecurityInsights/incidents"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "incidents_comments": {
      "description": "Microsoft.SecurityInsights/incidents/comments",
      "properties": {
        "apiVersion": {
          "enum": [
            "2021-03-01-preview"
          ],
          "type": "string"
        },
        "etag": {
          "description": "Etag of the azure resource",
          "type": "string"
        },
        "name": {
          "description": "Incident comment ID",
          "type": "string"
        },
        "properties": {
          "description": "Incident comment properties",
          "oneOf": [
            {
              "$ref": "#/definitions/IncidentCommentProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.SecurityInsights/incidents/comments"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "incidents_relations": {
      "description": "Microsoft.SecurityInsights/incidents/relations",
      "properties": {
        "apiVersion": {
          "enum": [
            "2021-03-01-preview"
          ],
          "type": "string"
        },
        "etag": {
          "description": "Etag of the azure resource",
          "type": "string"
        },
        "name": {
          "description": "Relation Name",
          "type": "string"
        },
        "properties": {
          "description": "Relation properties",
          "oneOf": [
            {
              "$ref": "#/definitions/RelationProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.SecurityInsights/incidents/relations"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "metadata": {
      "description": "Microsoft.SecurityInsights/metadata",
      "properties": {
        "apiVersion": {
          "enum": [
            "2021-03-01-preview"
          ],
          "type": "string"
        },
        "etag": {
          "description": "Etag of the azure resource",
          "type": "string"
        },
        "name": {
          "description": "The Metadata name.",
          "type": "string"
        },
        "properties": {
          "description": "Metadata properties",
          "oneOf": [
            {
              "$ref": "#/definitions/MetadataProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.SecurityInsights/metadata"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "onboardingStates": {
      "description": "Microsoft.SecurityInsights/onboardingStates",
      "properties": {
        "apiVersion": {
          "enum": [
            "2021-03-01-preview"
          ],
          "type": "string"
        },
        "etag": {
          "description": "Etag of the azure resource",
          "type": "string"
        },
        "name": {
          "description": "The Sentinel onboarding state name. Supports - default",
          "type": "string"
        },
        "properties": {
          "description": "The Sentinel onboarding state object",
          "oneOf": [
            {
              "$ref": "#/definitions/SentinelOnboardingStateProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.SecurityInsights/onboardingStates"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "settings": {
      "description": "Microsoft.SecurityInsights/settings",
      "properties": {
        "apiVersion": {
          "enum": [
            "2021-03-01-preview"
          ],
          "type": "string"
        },
        "etag": {
          "description": "Etag of the azure resource",
          "type": "string"
        },
        "name": {
          "description": "The setting name. Supports - Anomalies, EyesOn, EntityAnalytics, Ueba",
          "type": "string"
        },
        "type": {
          "enum": [
            "Microsoft.SecurityInsights/settings"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "sourcecontrols": {
      "description": "Microsoft.SecurityInsights/sourcecontrols",
      "properties": {
        "apiVersion": {
          "enum": [
            "2021-03-01-preview"
          ],
          "type": "string"
        },
        "etag": {
          "description": "Etag of the azure resource",
          "type": "string"
        },
        "name": {
          "description": "Source control Id",
          "type": "string"
        },
        "properties": {
          "description": "source control properties",
          "oneOf": [
            {
              "$ref": "#/definitions/SourceControlProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.SecurityInsights/sourcecontrols"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "watchlists": {
      "description": "Microsoft.SecurityInsights/watchlists",
      "properties": {
        "apiVersion": {
          "enum": [
            "2021-03-01-preview"
          ],
          "type": "string"
        },
        "etag": {
          "description": "Etag of the azure resource",
          "type": "string"
        },
        "name": {
          "description": "Watchlist Alias",
          "type": "string"
        },
        "properties": {
          "description": "Watchlist properties",
          "oneOf": [
            {
              "$ref": "#/definitions/WatchlistProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/watchlists_watchlistItems_childResource"
              }
            ]
          },
          "type": "array"
        },
        "type": {
          "enum": [
            "Microsoft.SecurityInsights/watchlists"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "watchlists_watchlistItems": {
      "description": "Microsoft.SecurityInsights/watchlists/watchlistItems",
      "properties": {
        "apiVersion": {
          "enum": [
            "2021-03-01-preview"
          ],
          "type": "string"
        },
        "etag": {
          "description": "Etag of the azure resource",
          "type": "string"
        },
        "name": {
          "description": "Watchlist Item Id (GUID)",
          "type": "string"
        },
        "properties": {
          "description": "Watchlist Item properties",
          "oneOf": [
            {
              "$ref": "#/definitions/WatchlistItemProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.SecurityInsights/watchlists/watchlistItems"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    }
  },
  "definitions": {
    "ActionRequestProperties": {
      "description": "Action property bag.",
      "properties": {
        "logicAppResourceId": {
          "description": "Logic App Resource Id, /subscriptions/{my-subscription}/resourceGroups/{my-resource-group}/providers/Microsoft.Logic/workflows/{my-workflow-id}.",
          "type": "string"
        },
        "triggerUri": {
          "description": "Logic App Callback URL for this specific workflow.",
          "type": "string"
        }
      },
      "required": [
        "triggerUri",
        "logicAppResourceId"
      ],
      "type": "object"
    },
    "ContentPathMap": {
      "description": "The mapping of content type to a repo path.",
      "properties": {
        "contentType": {
          "description": "Content type.",
          "oneOf": [
            {
              "enum": [
                "AnalyticsRule",
                "Workbook"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "path": {
          "description": "The path to the content.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "IncidentCommentProperties": {
      "description": "Incident comment property bag.",
      "properties": {
        "message": {
          "description": "The comment message",
          "type": "string"
        }
      },
      "required": [
        "message"
      ],
      "type": "object"
    },
    "IncidentLabel": {
      "description": "Represents an incident label",
      "properties": {
        "labelName": {
          "description": "The name of the label",
          "type": "string"
        }
      },
      "required": [
        "labelName"
      ],
      "type": "object"
    },
    "IncidentOwnerInfo": {
      "description": "Information on the user an incident is assigned to",
      "properties": {
        "assignedTo": {
          "description": "The name of the user the incident is assigned to.",
          "type": "string"
        },
        "email": {
          "description": "The email of the user the incident is assigned to.",
          "type": "string"
        },
        "objectId": {
          "description": "The object id of the user the incident is assigned to.",
          "oneOf": [
            {
              "pattern": "^[0-9a-fA-F]{8}(-[0-9a-fA-F]{4}){3}-[0-9a-fA-F]{12}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "userPrincipalName": {
          "description": "The user principal name of the user the incident is assigned to.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "IncidentProperties": {
      "description": "Describes incident properties",
      "properties": {
        "classification": {
          "description": "The reason the incident was closed",
          "oneOf": [
            {
              "enum": [
                "Undetermined",
                "TruePositive",
                "BenignPositive",
                "FalsePositive"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "classificationComment": {
          "description": "Describes the reason the incident was closed",
          "type": "string"
        },
        "classificationReason": {
          "description": "The classification reason the incident was closed with",
          "oneOf": [
            {
              "enum": [
                "SuspiciousActivity",
                "SuspiciousButExpected",
                "IncorrectAlertLogic",
                "InaccurateData"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "description": {
          "description": "The description of the incident",
          "type": "string"
        },
        "firstActivityTimeUtc": {
          "description": "The time of the first activity in the incident",
          "format": "date-time",
          "type": "string"
        },
        "labels": {
          "description": "List of labels relevant to this incident",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/IncidentLabel"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "lastActivityTimeUtc": {
          "description": "The time of the last activity in the incident",
          "format": "date-time",
          "type": "string"
        },
        "owner": {
          "description": "Describes a user that the incident is assigned to",
          "oneOf": [
            {
              "$ref": "#/definitions/IncidentOwnerInfo"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "providerIncidentId": {
          "description": "The incident ID assigned by the incident provider",
          "type": "string"
        },
        "providerName": {
          "description": "The name of the source provider that generated the incident",
          "type": "string"
        },
        "severity": {
          "description": "The severity of the incident",
          "oneOf": [
            {
              "enum": [
                "High",
                "Medium",
                "Low",
                "Informational"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "status": {
          "description": "The status of the incident",
          "oneOf": [
            {
              "enum": [
                "New",
                "Active",
                "Closed"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "teamInformation": {
          "description": "Describes a team for the incident",
          "oneOf": [
            {
              "$ref": "#/definitions/TeamInformation"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "title": {
          "description": "The title of the incident",
          "type": "string"
        }
      },
      "required": [
        "severity",
        "status",
        "title"
      ],
      "type": "object"
    },
    "MetadataAuthor": {
      "description": "Publisher or creator of the content item.",
      "properties": {
        "email": {
          "description": "Email of author contact",
          "type": "string"
        },
        "link": {
          "description": "Link for author/vendor page",
          "type": "string"
        },
        "name": {
          "description": "Name of the author. Company or person.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MetadataCategories": {
      "description": "ies for the solution content item",
      "properties": {
        "domains": {
          "description": "domain for the solution content item",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "verticals": {
          "description": "Industry verticals for the solution content item",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "MetadataDependencies": {
      "description": "Dependencies for the content item, what other content items it requires to work.  Can describe more complex dependencies using a recursive/nested structure. For a single dependency an id/kind/version can be supplied or operator/criteria for complex dependencies.",
      "properties": {
        "contentId": {
          "description": "Id of the content item we depend on",
          "type": "string"
        },
        "criteria": {
          "description": "This is the list of dependencies we must fulfill, according to the AND/OR operator",
          "oneOf": [
            {
              "items": {
                "type": "object"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "kind": {
          "description": "Type of the content item we depend on",
          "oneOf": [
            {
              "enum": [
                "DataConnector",
                "DataType",
                "Workbook",
                "WorkbookTemplate",
                "Playbook",
                "PlaybookTemplate",
                "AnalyticsRuleTemplate",
                "AnalyticsRule",
                "HuntingQuery",
                "InvestigationQuery",
                "Parser",
                "Watchlist",
                "WatchlistTemplate",
                "Solution"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "name": {
          "description": "Name of the content item",
          "type": "string"
        },
        "operator": {
          "description": "Operator used for list of dependencies in criteria array.",
          "oneOf": [
            {
              "enum": [
                "AND",
                "OR"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "version": {
          "description": "Version of the the content item we depend on.  Can be blank, * or missing to indicate any version fulfills the dependency.  If version does not match our defined numeric format then an exact match is required.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MetadataProperties": {
      "description": "Metadata property bag.",
      "properties": {
        "author": {
          "description": "The creator of the content item.",
          "oneOf": [
            {
              "$ref": "#/definitions/MetadataAuthor"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "categories": {
          "description": "Categories for the solution content item",
          "oneOf": [
            {
              "$ref": "#/definitions/MetadataCategories"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "contentId": {
          "description": "Static ID for the content.  Used to identify dependencies and content from solutions or community.  Hard-coded/static for out of the box content and solutions. Dynamic for user-created.  This is the resource name",
          "type": "string"
        },
        "dependencies": {
          "description": "Dependencies for the content item, what other content items it requires to work.  Can describe more complex dependencies using a recursive/nested structure. For a single dependency an id/kind/version can be supplied or operator/criteria for complex formats.",
          "oneOf": [
            {
              "$ref": "#/definitions/MetadataDependencies"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "firstPublishDate": {
          "description": "first publish date solution content item",
          "type": "string"
        },
        "kind": {
          "description": "The kind of content the metadata is for.",
          "oneOf": [
            {
              "enum": [
                "DataConnector",
                "DataType",
                "Workbook",
                "WorkbookTemplate",
                "Playbook",
                "PlaybookTemplate",
                "AnalyticsRuleTemplate",
                "AnalyticsRule",
                "HuntingQuery",
                "InvestigationQuery",
                "Parser",
                "Watchlist",
                "WatchlistTemplate",
                "Solution"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "lastPublishDate": {
          "description": "last publish date for the solution content item",
          "type": "string"
        },
        "parentId": {
          "description": "Full parent resource ID of the content item the metadata is for.  This is the full resource ID including the scope (subscription and resource group)",
          "type": "string"
        },
        "providers": {
          "description": "Providers for the solution content item",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "source": {
          "description": "Source of the content.  This is where/how it was created.",
          "oneOf": [
            {
              "$ref": "#/definitions/MetadataSource"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "support": {
          "description": "Support information for the metadata - type, name, contact information",
          "oneOf": [
            {
              "$ref": "#/definitions/MetadataSupport"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "version": {
          "description": "Version of the content.  Default and recommended format is numeric (e.g. 1, 1.0, 1.0.0, 1.0.0.0), following ARM template best practices.  Can also be any string, but then we cannot guarantee any version checks",
          "type": "string"
        }
      },
      "required": [
        "parentId",
        "kind"
      ],
      "type": "object"
    },
    "MetadataSource": {
      "description": "The original source of the content item, where it comes from.",
      "properties": {
        "kind": {
          "description": "Source type of the content",
          "oneOf": [
            {
              "enum": [
                "LocalWorkspace",
                "Community",
                "Solution",
                "SourceRepository"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "name": {
          "description": "Name of the content source.  The repo name, solution name, LA workspace name etc.",
          "type": "string"
        },
        "sourceId": {
          "description": "ID of the content source.  The solution ID, workspace ID, etc",
          "type": "string"
        }
      },
      "required": [
        "kind"
      ],
      "type": "object"
    },
    "MetadataSupport": {
      "description": "Support information for the content item.",
      "properties": {
        "email": {
          "description": "Email of support contact",
          "type": "string"
        },
        "link": {
          "description": "Link for support help, like to support page to open a ticket etc.",
          "type": "string"
        },
        "name": {
          "description": "Name of the support contact. Company or person.",
          "type": "string"
        },
        "tier": {
          "description": "Type of support for content item",
          "oneOf": [
            {
              "enum": [
                "Microsoft",
                "Partner",
                "Community"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "tier"
      ],
      "type": "object"
    },
    "RelationProperties": {
      "description": "Relation property bag.",
      "properties": {
        "relatedResourceId": {
          "description": "The resource ID of the related resource",
          "type": "string"
        }
      },
      "required": [
        "relatedResourceId"
      ],
      "type": "object"
    },
    "Repository": {
      "description": "metadata of a repository.",
      "properties": {
        "branch": {
          "description": "Branch name of repository.",
          "type": "string"
        },
        "deploymentLogsUrl": {
          "description": "Url to access repository action logs.",
          "type": "string"
        },
        "displayUrl": {
          "description": "Display url of repository.",
          "type": "string"
        },
        "pathMapping": {
          "description": "Dictionary of source control content type and path mapping.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/ContentPathMap"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "url": {
          "description": "Url of repository.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "SentinelOnboardingStateProperties": {
      "description": "The Sentinel onboarding state properties",
      "properties": {
        "customerManagedKey": {
          "description": "Flag that indicates the status of the CMK setting",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "SourceControlProperties": {
      "description": "Describes source control properties",
      "properties": {
        "contentTypes": {
          "description": "Array of source control content types.",
          "oneOf": [
            {
              "items": {
                "enum": [
                  "AnalyticsRule",
                  "Workbook"
                ],
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "description": {
          "description": "A description of the source control",
          "type": "string"
        },
        "displayName": {
          "description": "The display name of the source control",
          "type": "string"
        },
        "id": {
          "description": "The id (a Guid) of the source control",
          "type": "string"
        },
        "repoType": {
          "description": "The repository type of the source control",
          "oneOf": [
            {
              "enum": [
                "Github",
                "DevOps"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "repository": {
          "description": "Repository metadata.",
          "oneOf": [
            {
              "$ref": "#/definitions/Repository"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "displayName",
        "repoType",
        "contentTypes",
        "repository"
      ],
      "type": "object"
    },
    "TeamInformation": {
      "description": "Describes team information",
      "properties": {},
      "type": "object"
    },
    "UserInfo": {
      "description": "User information that made some action",
      "properties": {
        "objectId": {
          "description": "The object id of the user.",
          "oneOf": [
            {
              "pattern": "^[0-9a-fA-F]{8}(-[0-9a-fA-F]{4}){3}-[0-9a-fA-F]{12}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "WatchlistItemProperties": {
      "description": "Describes watchlist item properties",
      "properties": {
        "created": {
          "description": "The time the watchlist item was created",
          "format": "date-time",
          "type": "string"
        },
        "createdBy": {
          "description": "Describes a user that created the watchlist item",
          "oneOf": [
            {
              "$ref": "#/definitions/UserInfo"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "entityMapping": {
          "description": "key-value pairs for a watchlist item entity mapping",
          "oneOf": [
            {
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "isDeleted": {
          "description": "A flag that indicates if the watchlist item is deleted or not",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "itemsKeyValue": {
          "description": "key-value pairs for a watchlist item",
          "oneOf": [
            {
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tenantId": {
          "description": "The tenantId to which the watchlist item belongs to",
          "type": "string"
        },
        "updated": {
          "description": "The last time the watchlist item was updated",
          "format": "date-time",
          "type": "string"
        },
        "updatedBy": {
          "description": "Describes a user that updated the watchlist item",
          "oneOf": [
            {
              "$ref": "#/definitions/UserInfo"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "watchlistItemId": {
          "description": "The id (a Guid) of the watchlist item",
          "type": "string"
        },
        "watchlistItemType": {
          "description": "The type of the watchlist item",
          "type": "string"
        }
      },
      "required": [
        "itemsKeyValue"
      ],
      "type": "object"
    },
    "WatchlistProperties": {
      "description": "Describes watchlist properties",
      "properties": {
        "contentType": {
          "description": "The content type of the raw content. Example : text/csv or text/tsv ",
          "type": "string"
        },
        "created": {
          "description": "The time the watchlist was created",
          "format": "date-time",
          "type": "string"
        },
        "createdBy": {
          "description": "Describes a user that created the watchlist",
          "oneOf": [
            {
              "$ref": "#/definitions/UserInfo"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "defaultDuration": {
          "description": "The default duration of a watchlist (in ISO 8601 duration format)",
          "type": "string"
        },
        "description": {
          "description": "A description of the watchlist",
          "type": "string"
        },
        "displayName": {
          "description": "The display name of the watchlist",
          "type": "string"
        },
        "isDeleted": {
          "description": "A flag that indicates if the watchlist is deleted or not",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "itemsSearchKey": {
          "description": "The search key is used to optimize query performance when using watchlists for joins with other data. For example, enable a column with IP addresses to be the designated SearchKey field, then use this field as the key field when joining to other event data by IP address.",
          "type": "string"
        },
        "labels": {
          "description": "List of labels relevant to this watchlist",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "numberOfLinesToSkip": {
          "description": "The number of lines in a csv/tsv content to skip before the header",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "provider": {
          "description": "The provider of the watchlist",
          "type": "string"
        },
        "rawContent": {
          "description": "The raw content that represents to watchlist items to create. In case of csv/tsv content type, it's the content of the file that will parsed by the endpoint",
          "type": "string"
        },
        "source": {
          "description": "The source of the watchlist",
          "oneOf": [
            {
              "enum": [
                "Local file",
                "Remote storage"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tenantId": {
          "description": "The tenantId where the watchlist belongs to",
          "type": "string"
        },
        "updated": {
          "description": "The last time the watchlist was updated",
          "format": "date-time",
          "type": "string"
        },
        "updatedBy": {
          "description": "Describes a user that updated the watchlist",
          "oneOf": [
            {
              "$ref": "#/definitions/UserInfo"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "uploadStatus": {
          "description": "The status of the Watchlist upload : New, InProgress or Complete. Pls note : When a Watchlist upload status is equal to InProgress, the Watchlist cannot be deleted",
          "type": "string"
        },
        "watchlistAlias": {
          "description": "The alias of the watchlist",
          "type": "string"
        },
        "watchlistId": {
          "description": "The id (a Guid) of the watchlist",
          "type": "string"
        },
        "watchlistItemsCount": {
          "description": "The number of Watchlist Items in the Watchlist",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "watchlistType": {
          "description": "The type of the watchlist",
          "type": "string"
        }
      },
      "required": [
        "displayName",
        "provider",
        "source",
        "itemsSearchKey"
      ],
      "type": "object"
    },
    "alertRules_actions_childResource": {
      "description": "Microsoft.SecurityInsights/alertRules/actions",
      "properties": {
        "apiVersion": {
          "enum": [
            "2021-03-01-preview"
          ],
          "type": "string"
        },
        "etag": {
          "description": "Etag of the azure resource",
          "type": "string"
        },
        "name": {
          "description": "Action ID",
          "type": "string"
        },
        "properties": {
          "description": "Action properties for put request",
          "oneOf": [
            {
              "$ref": "#/definitions/ActionRequestProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "actions"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "incidents_comments_childResource": {
      "description": "Microsoft.SecurityInsights/incidents/comments",
      "properties": {
        "apiVersion": {
          "enum": [
            "2021-03-01-preview"
          ],
          "type": "string"
        },
        "etag": {
          "description": "Etag of the azure resource",
          "type": "string"
        },
        "name": {
          "description": "Incident comment ID",
          "type": "string"
        },
        "properties": {
          "description": "Incident comment properties",
          "oneOf": [
            {
              "$ref": "#/definitions/IncidentCommentProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "comments"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "incidents_relations_childResource": {
      "description": "Microsoft.SecurityInsights/incidents/relations",
      "properties": {
        "apiVersion": {
          "enum": [
            "2021-03-01-preview"
          ],
          "type": "string"
        },
        "etag": {
          "description": "Etag of the azure resource",
          "type": "string"
        },
        "name": {
          "description": "Relation Name",
          "type": "string"
        },
        "properties": {
          "description": "Relation properties",
          "oneOf": [
            {
              "$ref": "#/definitions/RelationProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "relations"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "watchlists_watchlistItems_childResource": {
      "description": "Microsoft.SecurityInsights/watchlists/watchlistItems",
      "properties": {
        "apiVersion": {
          "enum": [
            "2021-03-01-preview"
          ],
          "type": "string"
        },
        "etag": {
          "description": "Etag of the azure resource",
          "type": "string"
        },
        "name": {
          "description": "Watchlist Item Id (GUID)",
          "type": "string"
        },
        "properties": {
          "description": "Watchlist Item properties",
          "oneOf": [
            {
              "$ref": "#/definitions/WatchlistItemProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "watchlistItems"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    }
  }
}