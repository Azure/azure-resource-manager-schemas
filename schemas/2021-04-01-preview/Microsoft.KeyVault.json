{
  "id": "https://schema.management.azure.com/schemas/2021-04-01-preview/Microsoft.KeyVault.json#",
  "title": "Microsoft.KeyVault",
  "description": "Microsoft KeyVault Resource Types",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "resourceDefinitions": {
    "managedHSMs": {
      "description": "Microsoft.KeyVault/managedHSMs",
      "properties": {
        "apiVersion": {
          "enum": [
            "2021-04-01-preview"
          ],
          "type": "string"
        },
        "location": {
          "description": "The supported Azure location where the managed HSM Pool should be created.",
          "type": "string"
        },
        "name": {
          "description": "Name of the managed HSM Pool",
          "type": "string"
        },
        "properties": {
          "description": "Properties of the managed HSM",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedHsmProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/managedHSMs_privateEndpointConnections_childResource"
              }
            ]
          },
          "type": "array"
        },
        "sku": {
          "description": "SKU details",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedHsmSku"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Resource tags",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.KeyVault/managedHSMs"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "managedHSMs_privateEndpointConnections": {
      "description": "Microsoft.KeyVault/managedHSMs/privateEndpointConnections",
      "properties": {
        "apiVersion": {
          "enum": [
            "2021-04-01-preview"
          ],
          "type": "string"
        },
        "etag": {
          "description": "Modified whenever there is a change in the state of private endpoint connection.",
          "type": "string"
        },
        "location": {
          "description": "The supported Azure location where the managed HSM Pool should be created.",
          "type": "string"
        },
        "name": {
          "description": "Name of the private endpoint connection associated with the managed hsm pool.",
          "type": "string"
        },
        "properties": {
          "description": "Resource properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/MhsmPrivateEndpointConnectionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "sku": {
          "description": "SKU details",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedHsmSku"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Resource tags",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.KeyVault/managedHSMs/privateEndpointConnections"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "vaults": {
      "description": "Microsoft.KeyVault/vaults",
      "properties": {
        "apiVersion": {
          "enum": [
            "2021-04-01-preview"
          ],
          "type": "string"
        },
        "location": {
          "description": "The supported Azure location where the key vault should be created.",
          "type": "string"
        },
        "name": {
          "description": "Name of the vault",
          "oneOf": [
            {
              "pattern": "^[a-zA-Z0-9-]{3,24}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Properties of the vault",
          "oneOf": [
            {
              "$ref": "#/definitions/VaultProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/vaults_keys_childResource"
              },
              {
                "$ref": "#/definitions/vaults_secrets_childResource"
              },
              {
                "$ref": "#/definitions/vaults_accessPolicies_childResource"
              },
              {
                "$ref": "#/definitions/vaults_privateEndpointConnections_childResource"
              }
            ]
          },
          "type": "array"
        },
        "tags": {
          "description": "The tags that will be assigned to the key vault.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.KeyVault/vaults"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "vaults_accessPolicies": {
      "description": "Microsoft.KeyVault/vaults/accessPolicies",
      "properties": {
        "apiVersion": {
          "enum": [
            "2021-04-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Name of the operation",
          "oneOf": [
            {
              "enum": [
                "add",
                "replace",
                "remove"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Properties of the access policy",
          "oneOf": [
            {
              "$ref": "#/definitions/VaultAccessPolicyProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.KeyVault/vaults/accessPolicies"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "vaults_keys": {
      "description": "Microsoft.KeyVault/vaults/keys",
      "properties": {
        "apiVersion": {
          "enum": [
            "2021-04-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the key to be created.",
          "oneOf": [
            {
              "pattern": "^[a-zA-Z0-9-]{1,127}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The properties of the key to be created.",
          "oneOf": [
            {
              "$ref": "#/definitions/KeyProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "The tags that will be assigned to the key.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.KeyVault/vaults/keys"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "vaults_privateEndpointConnections": {
      "description": "Microsoft.KeyVault/vaults/privateEndpointConnections",
      "properties": {
        "apiVersion": {
          "enum": [
            "2021-04-01-preview"
          ],
          "type": "string"
        },
        "etag": {
          "description": "Modified whenever there is a change in the state of private endpoint connection.",
          "type": "string"
        },
        "name": {
          "description": "Name of the private endpoint connection associated with the key vault.",
          "type": "string"
        },
        "properties": {
          "description": "Resource properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/PrivateEndpointConnectionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.KeyVault/vaults/privateEndpointConnections"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "vaults_secrets": {
      "description": "Microsoft.KeyVault/vaults/secrets",
      "properties": {
        "apiVersion": {
          "enum": [
            "2021-04-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Name of the secret",
          "oneOf": [
            {
              "pattern": "^[a-zA-Z0-9-]{1,127}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Properties of the secret",
          "oneOf": [
            {
              "$ref": "#/definitions/SecretProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "The tags that will be assigned to the secret. ",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.KeyVault/vaults/secrets"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    }
  },
  "definitions": {
    "AccessPolicyEntry": {
      "description": "An identity that have access to the key vault. All identities in the array must use the same tenant ID as the key vault's tenant ID.",
      "properties": {
        "applicationId": {
          "description": " Application ID of the client making request on behalf of a principal",
          "oneOf": [
            {
              "pattern": "^[0-9a-fA-F]{8}(-[0-9a-fA-F]{4}){3}-[0-9a-fA-F]{12}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "objectId": {
          "description": "The object ID of a user, service principal or security group in the Azure Active Directory tenant for the vault. The object ID must be unique for the list of access policies.",
          "type": "string"
        },
        "permissions": {
          "description": "Permissions the identity has for keys, secrets and certificates.",
          "oneOf": [
            {
              "$ref": "#/definitions/Permissions"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tenantId": {
          "description": "The Azure Active Directory tenant ID that should be used for authenticating requests to the key vault.",
          "oneOf": [
            {
              "pattern": "^[0-9a-fA-F]{8}(-[0-9a-fA-F]{4}){3}-[0-9a-fA-F]{12}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "tenantId",
        "objectId",
        "permissions"
      ],
      "type": "object"
    },
    "Action": {
      "properties": {
        "type": {
          "description": "The type of the action. The value should be compared case-insensitively.",
          "oneOf": [
            {
              "enum": [
                "Rotate",
                "Notify"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "IPRule": {
      "description": "A rule governing the accessibility of a vault from a specific ip address or ip range.",
      "properties": {
        "value": {
          "description": "An IPv4 address range in CIDR notation, such as '124.56.78.91' (simple IP address) or '124.56.78.0/24' (all addresses that start with 124.56.78).",
          "type": "string"
        }
      },
      "required": [
        "value"
      ],
      "type": "object"
    },
    "KeyAttributes": {
      "description": "The object attributes managed by the Azure Key Vault service.",
      "properties": {
        "enabled": {
          "description": "Determines whether or not the object is enabled.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "exp": {
          "description": "Expiry date in seconds since 1970-01-01T00:00:00Z.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "nbf": {
          "description": "Not before date in seconds since 1970-01-01T00:00:00Z.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "KeyProperties": {
      "description": "The properties of the key.",
      "properties": {
        "attributes": {
          "description": "The attributes of the key.",
          "oneOf": [
            {
              "$ref": "#/definitions/KeyAttributes"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "curveName": {
          "description": "The elliptic curve name. For valid values, see JsonWebKeyCurveName.",
          "oneOf": [
            {
              "enum": [
                "P-256",
                "P-384",
                "P-521",
                "P-256K"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "keyOps": {
          "description": "Array of JsonWebKeyOperation",
          "oneOf": [
            {
              "items": {
                "enum": [
                  "encrypt",
                  "decrypt",
                  "sign",
                  "verify",
                  "wrapKey",
                  "unwrapKey",
                  "import"
                ],
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "keySize": {
          "description": "The key size in bits. For example: 2048, 3072, or 4096 for RSA.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "kty": {
          "description": "The type of the key. For valid values, see JsonWebKeyType.",
          "oneOf": [
            {
              "enum": [
                "EC",
                "EC-HSM",
                "RSA",
                "RSA-HSM"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "rotationPolicy": {
          "description": "Key rotation policy in response. It will be used for both output and input. Omitted if empty",
          "oneOf": [
            {
              "$ref": "#/definitions/RotationPolicy"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "KeyRotationPolicyAttributes": {
      "properties": {
        "expiryTime": {
          "description": "The expiration time for the new key version. It should be in ISO8601 format. Eg: 'P90D', 'P1Y'.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "LifetimeAction": {
      "properties": {
        "action": {
          "description": "The action of key rotation policy lifetimeAction.",
          "oneOf": [
            {
              "$ref": "#/definitions/Action"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "trigger": {
          "description": "The trigger of key rotation policy lifetimeAction.",
          "oneOf": [
            {
              "$ref": "#/definitions/Trigger"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ManagedHsmProperties": {
      "description": "Properties of the managed HSM Pool",
      "properties": {
        "createMode": {
          "description": "The create mode to indicate whether the resource is being created or is being recovered from a deleted resource.",
          "oneOf": [
            {
              "enum": [
                "recover",
                "default"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "enablePurgeProtection": {
          "description": "Property specifying whether protection against purge is enabled for this managed HSM pool. Setting this property to true activates protection against purge for this managed HSM pool and its content - only the Managed HSM service may initiate a hard, irrecoverable deletion. Enabling this functionality is irreversible.",
          "oneOf": [
            {
              "default": true,
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "enableSoftDelete": {
          "description": "Property to specify whether the 'soft delete' functionality is enabled for this managed HSM pool. Soft delete is enabled by default for all managed HSMs and is immutable.",
          "oneOf": [
            {
              "default": true,
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "initialAdminObjectIds": {
          "description": "Array of initial administrators object ids for this managed hsm pool.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "networkAcls": {
          "description": "Rules governing the accessibility of the key vault from specific network locations.",
          "oneOf": [
            {
              "$ref": "#/definitions/MhsmNetworkRuleSet"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "publicNetworkAccess": {
          "description": "Control permission to the managed HSM from public networks.",
          "oneOf": [
            {
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "softDeleteRetentionInDays": {
          "description": "Soft deleted data retention days. When you delete an HSM or a key, it will remain recoverable for the configured retention period or for a default period of 90 days. It accepts values between 7 and 90.",
          "oneOf": [
            {
              "default": 90,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tenantId": {
          "description": "The Azure Active Directory tenant ID that should be used for authenticating requests to the managed HSM pool.",
          "oneOf": [
            {
              "pattern": "^[0-9a-fA-F]{8}(-[0-9a-fA-F]{4}){3}-[0-9a-fA-F]{12}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ManagedHsmSku": {
      "description": "SKU details",
      "properties": {
        "family": {
          "description": "SKU Family of the managed HSM Pool",
          "oneOf": [
            {
              "enum": [
                "B"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "name": {
          "description": "SKU of the managed HSM Pool",
          "oneOf": [
            {
              "enum": [
                "Standard_B1",
                "Custom_B32",
                "Custom_B6"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "family",
        "name"
      ],
      "type": "object"
    },
    "MhsmNetworkRuleSet": {
      "description": "A set of rules governing the network accessibility of a managed hsm pool.",
      "properties": {
        "bypass": {
          "description": "Tells what traffic can bypass network rules. This can be 'AzureServices' or 'None'.  If not specified the default is 'AzureServices'.",
          "oneOf": [
            {
              "enum": [
                "AzureServices",
                "None"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "defaultAction": {
          "description": "The default action when no rule from ipRules and from virtualNetworkRules match. This is only used after the bypass property has been evaluated.",
          "oneOf": [
            {
              "enum": [
                "Allow",
                "Deny"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "ipRules": {
          "description": "The list of IP address rules.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/MhsmipRule"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "virtualNetworkRules": {
          "description": "The list of virtual network rules.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/MhsmVirtualNetworkRule"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "MhsmPrivateEndpoint": {
      "description": "Private endpoint object properties.",
      "properties": {},
      "type": "object"
    },
    "MhsmPrivateEndpointConnectionProperties": {
      "description": "Properties of the private endpoint connection resource.",
      "properties": {
        "privateEndpoint": {
          "description": "Properties of the private endpoint object.",
          "oneOf": [
            {
              "$ref": "#/definitions/MhsmPrivateEndpoint"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "privateLinkServiceConnectionState": {
          "description": "Approval state of the private link connection.",
          "oneOf": [
            {
              "$ref": "#/definitions/MhsmPrivateLinkServiceConnectionState"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "provisioningState": {
          "description": "Provisioning state of the private endpoint connection.",
          "oneOf": [
            {
              "enum": [
                "Succeeded",
                "Creating",
                "Updating",
                "Deleting",
                "Failed",
                "Disconnected"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "MhsmPrivateLinkServiceConnectionState": {
      "description": "An object that represents the approval state of the private link connection.",
      "properties": {
        "actionsRequired": {
          "description": "A message indicating if changes on the service provider require any updates on the consumer.",
          "oneOf": [
            {
              "enum": [
                "None"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "description": {
          "description": "The reason for approval or rejection.",
          "type": "string"
        },
        "status": {
          "description": "Indicates whether the connection has been approved, rejected or removed by the key vault owner.",
          "oneOf": [
            {
              "enum": [
                "Pending",
                "Approved",
                "Rejected",
                "Disconnected"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "MhsmVirtualNetworkRule": {
      "description": "A rule governing the accessibility of a managed hsm pool from a specific virtual network.",
      "properties": {
        "id": {
          "description": "Full resource id of a vnet subnet, such as '/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/test-vnet/subnets/subnet1'.",
          "type": "string"
        }
      },
      "required": [
        "id"
      ],
      "type": "object"
    },
    "MhsmipRule": {
      "description": "A rule governing the accessibility of a managed hsm pool from a specific ip address or ip range.",
      "properties": {
        "value": {
          "description": "An IPv4 address range in CIDR notation, such as '124.56.78.91' (simple IP address) or '124.56.78.0/24' (all addresses that start with 124.56.78).",
          "type": "string"
        }
      },
      "required": [
        "value"
      ],
      "type": "object"
    },
    "NetworkRuleSet": {
      "description": "A set of rules governing the network accessibility of a vault.",
      "properties": {
        "bypass": {
          "description": "Tells what traffic can bypass network rules. This can be 'AzureServices' or 'None'.  If not specified the default is 'AzureServices'.",
          "oneOf": [
            {
              "enum": [
                "AzureServices",
                "None"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "defaultAction": {
          "description": "The default action when no rule from ipRules and from virtualNetworkRules match. This is only used after the bypass property has been evaluated.",
          "oneOf": [
            {
              "enum": [
                "Allow",
                "Deny"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "ipRules": {
          "description": "The list of IP address rules.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/IPRule"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "virtualNetworkRules": {
          "description": "The list of virtual network rules.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/VirtualNetworkRule"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "Permissions": {
      "description": "Permissions the identity has for keys, secrets, certificates and storage.",
      "properties": {
        "certificates": {
          "description": "Permissions to certificates",
          "oneOf": [
            {
              "items": {
                "enum": [
                  "get",
                  "list",
                  "delete",
                  "create",
                  "import",
                  "update",
                  "managecontacts",
                  "getissuers",
                  "listissuers",
                  "setissuers",
                  "deleteissuers",
                  "manageissuers",
                  "recover",
                  "purge",
                  "backup",
                  "restore"
                ],
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "keys": {
          "description": "Permissions to keys",
          "oneOf": [
            {
              "items": {
                "enum": [
                  "encrypt",
                  "decrypt",
                  "wrapKey",
                  "unwrapKey",
                  "sign",
                  "verify",
                  "get",
                  "list",
                  "create",
                  "update",
                  "import",
                  "delete",
                  "backup",
                  "restore",
                  "recover",
                  "purge",
                  "release"
                ],
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "secrets": {
          "description": "Permissions to secrets",
          "oneOf": [
            {
              "items": {
                "enum": [
                  "get",
                  "list",
                  "set",
                  "delete",
                  "backup",
                  "restore",
                  "recover",
                  "purge"
                ],
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "storage": {
          "description": "Permissions to storage accounts",
          "oneOf": [
            {
              "items": {
                "enum": [
                  "get",
                  "list",
                  "delete",
                  "set",
                  "update",
                  "regeneratekey",
                  "recover",
                  "purge",
                  "backup",
                  "restore",
                  "setsas",
                  "listsas",
                  "getsas",
                  "deletesas"
                ],
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "PrivateEndpoint": {
      "description": "Private endpoint object properties.",
      "properties": {},
      "type": "object"
    },
    "PrivateEndpointConnectionProperties": {
      "description": "Properties of the private endpoint connection resource.",
      "properties": {
        "privateEndpoint": {
          "description": "Properties of the private endpoint object.",
          "oneOf": [
            {
              "$ref": "#/definitions/PrivateEndpoint"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "privateLinkServiceConnectionState": {
          "description": "Approval state of the private link connection.",
          "oneOf": [
            {
              "$ref": "#/definitions/PrivateLinkServiceConnectionState"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "provisioningState": {
          "description": "Provisioning state of the private endpoint connection.",
          "oneOf": [
            {
              "enum": [
                "Succeeded",
                "Creating",
                "Updating",
                "Deleting",
                "Failed",
                "Disconnected"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "PrivateLinkServiceConnectionState": {
      "description": "An object that represents the approval state of the private link connection.",
      "properties": {
        "actionsRequired": {
          "description": "A message indicating if changes on the service provider require any updates on the consumer.",
          "oneOf": [
            {
              "enum": [
                "None"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "description": {
          "description": "The reason for approval or rejection.",
          "type": "string"
        },
        "status": {
          "description": "Indicates whether the connection has been approved, rejected or removed by the key vault owner.",
          "oneOf": [
            {
              "enum": [
                "Pending",
                "Approved",
                "Rejected",
                "Disconnected"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "RotationPolicy": {
      "properties": {
        "attributes": {
          "description": "The attributes of key rotation policy.",
          "oneOf": [
            {
              "$ref": "#/definitions/KeyRotationPolicyAttributes"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "lifetimeActions": {
          "description": "The lifetimeActions for key rotation action.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/LifetimeAction"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "SecretAttributes": {
      "description": "The secret management attributes.",
      "properties": {
        "enabled": {
          "description": "Determines whether the object is enabled.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "exp": {
          "description": "Expiry date in seconds since 1970-01-01T00:00:00Z.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "nbf": {
          "description": "Not before date in seconds since 1970-01-01T00:00:00Z.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "SecretProperties": {
      "description": "Properties of the secret",
      "properties": {
        "attributes": {
          "description": "The attributes of the secret.",
          "oneOf": [
            {
              "$ref": "#/definitions/SecretAttributes"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "contentType": {
          "description": "The content type of the secret.",
          "type": "string"
        },
        "value": {
          "description": "The value of the secret. NOTE: 'value' will never be returned from the service, as APIs using this model are is intended for internal use in ARM deployments. Users should use the data-plane REST service for interaction with vault secrets.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Sku": {
      "description": "SKU details",
      "properties": {
        "family": {
          "description": "SKU family name",
          "oneOf": [
            {
              "enum": [
                "A"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "name": {
          "description": "SKU name to specify whether the key vault is a standard vault or a premium vault.",
          "oneOf": [
            {
              "enum": [
                "standard",
                "premium"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "family",
        "name"
      ],
      "type": "object"
    },
    "Trigger": {
      "properties": {
        "timeAfterCreate": {
          "description": "The time duration after key creation to rotate the key. It should be in ISO8601 format. Eg: 'P90D', 'P1Y'.",
          "type": "string"
        },
        "timeBeforeExpiry": {
          "description": "The time duration before key expiring to rotate the key. It should be in ISO8601 format. Eg: 'P90D', 'P1Y'.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "VaultAccessPolicyProperties": {
      "description": "Properties of the vault access policy",
      "properties": {
        "accessPolicies": {
          "description": "An array of 0 to 16 identities that have access to the key vault. All identities in the array must use the same tenant ID as the key vault's tenant ID.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/AccessPolicyEntry"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "accessPolicies"
      ],
      "type": "object"
    },
    "VaultProperties": {
      "description": "Properties of the vault",
      "properties": {
        "accessPolicies": {
          "description": "An array of 0 to 1024 identities that have access to the key vault. All identities in the array must use the same tenant ID as the key vault's tenant ID. When `createMode` is set to `recover`, access policies are not required. Otherwise, access policies are required.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/AccessPolicyEntry"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "createMode": {
          "description": "The vault's create mode to indicate whether the vault need to be recovered or not.",
          "oneOf": [
            {
              "enum": [
                "recover",
                "default"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "enablePurgeProtection": {
          "description": "Property specifying whether protection against purge is enabled for this vault. Setting this property to true activates protection against purge for this vault and its content - only the Key Vault service may initiate a hard, irrecoverable deletion. The setting is effective only if soft delete is also enabled. Enabling this functionality is irreversible - that is, the property does not accept false as its value.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "enableRbacAuthorization": {
          "description": "Property that controls how data actions are authorized. When true, the key vault will use Role Based Access Control (RBAC) for authorization of data actions, and the access policies specified in vault properties will be  ignored. When false, the key vault will use the access policies specified in vault properties, and any policy stored on Azure Resource Manager will be ignored. If null or not specified, the vault is created with the default value of false. Note that management actions are always authorized with RBAC.",
          "oneOf": [
            {
              "default": false,
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "enableSoftDelete": {
          "description": "Property to specify whether the 'soft delete' functionality is enabled for this key vault. If it's not set to any value(true or false) when creating new key vault, it will be set to true by default. Once set to true, it cannot be reverted to false.",
          "oneOf": [
            {
              "default": true,
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "enabledForDeployment": {
          "description": "Property to specify whether Azure Virtual Machines are permitted to retrieve certificates stored as secrets from the key vault.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "enabledForDiskEncryption": {
          "description": "Property to specify whether Azure Disk Encryption is permitted to retrieve secrets from the vault and unwrap keys.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "enabledForTemplateDeployment": {
          "description": "Property to specify whether Azure Resource Manager is permitted to retrieve secrets from the key vault.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "networkAcls": {
          "description": "Rules governing the accessibility of the key vault from specific network locations.",
          "oneOf": [
            {
              "$ref": "#/definitions/NetworkRuleSet"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "provisioningState": {
          "description": "Provisioning state of the vault.",
          "oneOf": [
            {
              "enum": [
                "Succeeded",
                "RegisteringDns"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "sku": {
          "description": "SKU details",
          "oneOf": [
            {
              "$ref": "#/definitions/Sku"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "softDeleteRetentionInDays": {
          "description": "softDelete data retention days. It accepts >=7 and <=90.",
          "oneOf": [
            {
              "default": 90,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tenantId": {
          "description": "The Azure Active Directory tenant ID that should be used for authenticating requests to the key vault.",
          "oneOf": [
            {
              "pattern": "^[0-9a-fA-F]{8}(-[0-9a-fA-F]{4}){3}-[0-9a-fA-F]{12}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "vaultUri": {
          "description": "The URI of the vault for performing operations on keys and secrets.",
          "type": "string"
        }
      },
      "required": [
        "tenantId",
        "sku"
      ],
      "type": "object"
    },
    "VirtualNetworkRule": {
      "description": "A rule governing the accessibility of a vault from a specific virtual network.",
      "properties": {
        "id": {
          "description": "Full resource id of a vnet subnet, such as '/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/test-vnet/subnets/subnet1'.",
          "type": "string"
        },
        "ignoreMissingVnetServiceEndpoint": {
          "description": "Property to specify whether NRP will ignore the check if parent subnet has serviceEndpoints configured.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "id"
      ],
      "type": "object"
    },
    "managedHSMs_privateEndpointConnections_childResource": {
      "description": "Microsoft.KeyVault/managedHSMs/privateEndpointConnections",
      "properties": {
        "apiVersion": {
          "enum": [
            "2021-04-01-preview"
          ],
          "type": "string"
        },
        "etag": {
          "description": "Modified whenever there is a change in the state of private endpoint connection.",
          "type": "string"
        },
        "location": {
          "description": "The supported Azure location where the managed HSM Pool should be created.",
          "type": "string"
        },
        "name": {
          "description": "Name of the private endpoint connection associated with the managed hsm pool.",
          "type": "string"
        },
        "properties": {
          "description": "Resource properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/MhsmPrivateEndpointConnectionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "sku": {
          "description": "SKU details",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedHsmSku"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Resource tags",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "privateEndpointConnections"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "vaults_accessPolicies_childResource": {
      "description": "Microsoft.KeyVault/vaults/accessPolicies",
      "properties": {
        "apiVersion": {
          "enum": [
            "2021-04-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Name of the operation",
          "oneOf": [
            {
              "enum": [
                "add",
                "replace",
                "remove"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Properties of the access policy",
          "oneOf": [
            {
              "$ref": "#/definitions/VaultAccessPolicyProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "accessPolicies"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "vaults_keys_childResource": {
      "description": "Microsoft.KeyVault/vaults/keys",
      "properties": {
        "apiVersion": {
          "enum": [
            "2021-04-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the key to be created.",
          "oneOf": [
            {
              "pattern": "^[a-zA-Z0-9-]{1,127}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The properties of the key to be created.",
          "oneOf": [
            {
              "$ref": "#/definitions/KeyProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "The tags that will be assigned to the key.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "keys"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "vaults_privateEndpointConnections_childResource": {
      "description": "Microsoft.KeyVault/vaults/privateEndpointConnections",
      "properties": {
        "apiVersion": {
          "enum": [
            "2021-04-01-preview"
          ],
          "type": "string"
        },
        "etag": {
          "description": "Modified whenever there is a change in the state of private endpoint connection.",
          "type": "string"
        },
        "name": {
          "description": "Name of the private endpoint connection associated with the key vault.",
          "type": "string"
        },
        "properties": {
          "description": "Resource properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/PrivateEndpointConnectionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "privateEndpointConnections"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "vaults_secrets_childResource": {
      "description": "Microsoft.KeyVault/vaults/secrets",
      "properties": {
        "apiVersion": {
          "enum": [
            "2021-04-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Name of the secret",
          "oneOf": [
            {
              "pattern": "^[a-zA-Z0-9-]{1,127}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Properties of the secret",
          "oneOf": [
            {
              "$ref": "#/definitions/SecretProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "The tags that will be assigned to the secret. ",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "secrets"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    }
  }
}