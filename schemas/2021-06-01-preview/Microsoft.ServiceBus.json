{
  "id": "https://schema.management.azure.com/schemas/2021-06-01-preview/Microsoft.ServiceBus.json#",
  "title": "Microsoft.ServiceBus",
  "description": "Microsoft ServiceBus Resource Types",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "resourceDefinitions": {
    "namespaces": {
      "description": "Microsoft.ServiceBus/namespaces",
      "properties": {
        "apiVersion": {
          "enum": [
            "2021-06-01-preview"
          ],
          "type": "string"
        },
        "identity": {
          "description": "Properties of BYOK Identity description",
          "oneOf": [
            {
              "$ref": "#/definitions/Identity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "location": {
          "description": "The Geo-location where the resource lives",
          "type": "string"
        },
        "name": {
          "description": "The namespace name.",
          "type": "string"
        },
        "properties": {
          "description": "Properties of the namespace.",
          "oneOf": [
            {
              "$ref": "#/definitions/SBNamespaceProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/namespaces_queues_childResource"
              },
              {
                "$ref": "#/definitions/namespaces_topics_childResource"
              },
              {
                "$ref": "#/definitions/namespaces_networkRuleSets_childResource"
              },
              {
                "$ref": "#/definitions/namespaces_AuthorizationRules_childResource"
              },
              {
                "$ref": "#/definitions/namespaces_disasterRecoveryConfigs_childResource"
              },
              {
                "$ref": "#/definitions/namespaces_migrationConfigurations_childResource"
              },
              {
                "$ref": "#/definitions/namespaces_privateEndpointConnections_childResource"
              }
            ]
          },
          "type": "array"
        },
        "sku": {
          "description": "Properties of SKU",
          "oneOf": [
            {
              "$ref": "#/definitions/SBSku"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Resource tags",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.ServiceBus/namespaces"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "namespaces_AuthorizationRules": {
      "description": "Microsoft.ServiceBus/namespaces/AuthorizationRules",
      "properties": {
        "apiVersion": {
          "enum": [
            "2021-06-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The authorization rule name.",
          "maxLength": 50,
          "minLength": 1,
          "type": "string"
        },
        "properties": {
          "description": "AuthorizationRule properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/SBAuthorizationRuleProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.ServiceBus/namespaces/AuthorizationRules"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "namespaces_disasterRecoveryConfigs": {
      "description": "Microsoft.ServiceBus/namespaces/disasterRecoveryConfigs",
      "properties": {
        "apiVersion": {
          "enum": [
            "2021-06-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The Disaster Recovery configuration name",
          "maxLength": 50,
          "minLength": 1,
          "type": "string"
        },
        "properties": {
          "description": "Properties required to the Create Or Update Alias(Disaster Recovery configurations)",
          "oneOf": [
            {
              "$ref": "#/definitions/ArmDisasterRecoveryProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.ServiceBus/namespaces/disasterRecoveryConfigs"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "namespaces_migrationConfigurations": {
      "description": "Microsoft.ServiceBus/namespaces/migrationConfigurations",
      "properties": {
        "apiVersion": {
          "enum": [
            "2021-06-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The configuration name. Should always be \"$default\".",
          "oneOf": [
            {
              "pattern": "^.*/\\$default$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Properties required to the Create Migration Configuration",
          "oneOf": [
            {
              "$ref": "#/definitions/MigrationConfigPropertiesProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.ServiceBus/namespaces/migrationConfigurations"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "namespaces_networkRuleSets": {
      "description": "Microsoft.ServiceBus/namespaces/networkRuleSets",
      "properties": {
        "apiVersion": {
          "enum": [
            "2021-06-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "oneOf": [
            {
              "pattern": "^.*/default$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "NetworkRuleSet properties",
          "oneOf": [
            {
              "$ref": "#/definitions/NetworkRuleSetProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.ServiceBus/namespaces/networkRuleSets"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "namespaces_privateEndpointConnections": {
      "description": "Microsoft.ServiceBus/namespaces/privateEndpointConnections",
      "properties": {
        "apiVersion": {
          "enum": [
            "2021-06-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The PrivateEndpointConnection name",
          "type": "string"
        },
        "properties": {
          "description": "Properties of the PrivateEndpointConnection.",
          "oneOf": [
            {
              "$ref": "#/definitions/PrivateEndpointConnectionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.ServiceBus/namespaces/privateEndpointConnections"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "namespaces_queues": {
      "description": "Microsoft.ServiceBus/namespaces/queues",
      "properties": {
        "apiVersion": {
          "enum": [
            "2021-06-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The queue name.",
          "minLength": 1,
          "type": "string"
        },
        "properties": {
          "description": "Queue Properties",
          "oneOf": [
            {
              "$ref": "#/definitions/SBQueueProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/namespaces_queues_authorizationRules_childResource"
              }
            ]
          },
          "type": "array"
        },
        "type": {
          "enum": [
            "Microsoft.ServiceBus/namespaces/queues"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "namespaces_queues_authorizationRules": {
      "description": "Microsoft.ServiceBus/namespaces/queues/authorizationRules",
      "properties": {
        "apiVersion": {
          "enum": [
            "2021-06-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The authorization rule name.",
          "maxLength": 50,
          "minLength": 1,
          "type": "string"
        },
        "properties": {
          "description": "AuthorizationRule properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/SBAuthorizationRuleProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.ServiceBus/namespaces/queues/authorizationRules"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "namespaces_topics": {
      "description": "Microsoft.ServiceBus/namespaces/topics",
      "properties": {
        "apiVersion": {
          "enum": [
            "2021-06-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The topic name.",
          "minLength": 1,
          "type": "string"
        },
        "properties": {
          "description": "Properties of topic resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/SBTopicProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/namespaces_topics_subscriptions_childResource"
              },
              {
                "$ref": "#/definitions/namespaces_topics_authorizationRules_childResource"
              }
            ]
          },
          "type": "array"
        },
        "type": {
          "enum": [
            "Microsoft.ServiceBus/namespaces/topics"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "namespaces_topics_authorizationRules": {
      "description": "Microsoft.ServiceBus/namespaces/topics/authorizationRules",
      "properties": {
        "apiVersion": {
          "enum": [
            "2021-06-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The authorization rule name.",
          "maxLength": 50,
          "minLength": 1,
          "type": "string"
        },
        "properties": {
          "description": "AuthorizationRule properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/SBAuthorizationRuleProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.ServiceBus/namespaces/topics/authorizationRules"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "namespaces_topics_subscriptions": {
      "description": "Microsoft.ServiceBus/namespaces/topics/subscriptions",
      "properties": {
        "apiVersion": {
          "enum": [
            "2021-06-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The subscription name.",
          "maxLength": 50,
          "minLength": 1,
          "type": "string"
        },
        "properties": {
          "description": "Properties of subscriptions resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/SBSubscriptionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/namespaces_topics_subscriptions_rules_childResource"
              }
            ]
          },
          "type": "array"
        },
        "type": {
          "enum": [
            "Microsoft.ServiceBus/namespaces/topics/subscriptions"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "namespaces_topics_subscriptions_rules": {
      "description": "Microsoft.ServiceBus/namespaces/topics/subscriptions/rules",
      "properties": {
        "apiVersion": {
          "enum": [
            "2021-06-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The rule name.",
          "maxLength": 50,
          "minLength": 1,
          "type": "string"
        },
        "properties": {
          "description": "Properties of Rule resource",
          "oneOf": [
            {
              "$ref": "#/definitions/Ruleproperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.ServiceBus/namespaces/topics/subscriptions/rules"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    }
  },
  "definitions": {
    "Action": {
      "description": "Represents the filter actions which are allowed for the transformation of a message that have been matched by a filter expression.",
      "properties": {
        "compatibilityLevel": {
          "description": "This property is reserved for future use. An integer value showing the compatibility level, currently hard-coded to 20.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "requiresPreprocessing": {
          "description": "Value that indicates whether the rule action requires preprocessing.",
          "oneOf": [
            {
              "default": true,
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "sqlExpression": {
          "description": "SQL expression. e.g. MyProperty='ABC'",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ArmDisasterRecoveryProperties": {
      "description": "Properties required to the Create Or Update Alias(Disaster Recovery configurations)",
      "properties": {
        "alternateName": {
          "description": "Primary/Secondary eventhub namespace name, which is part of GEO DR pairing",
          "type": "string"
        },
        "partnerNamespace": {
          "description": "ARM Id of the Primary/Secondary eventhub namespace name, which is part of GEO DR pairing",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ConnectionState": {
      "description": "ConnectionState information.",
      "properties": {
        "description": {
          "description": "Description of the connection state.",
          "type": "string"
        },
        "status": {
          "description": "Status of the connection.",
          "oneOf": [
            {
              "enum": [
                "Pending",
                "Approved",
                "Rejected",
                "Disconnected"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "CorrelationFilter": {
      "description": "Represents the correlation filter expression.",
      "properties": {
        "contentType": {
          "description": "Content type of the message.",
          "type": "string"
        },
        "correlationId": {
          "description": "Identifier of the correlation.",
          "type": "string"
        },
        "label": {
          "description": "Application specific label.",
          "type": "string"
        },
        "messageId": {
          "description": "Identifier of the message.",
          "type": "string"
        },
        "properties": {
          "description": "dictionary object for custom filters",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "replyTo": {
          "description": "Address of the queue to reply to.",
          "type": "string"
        },
        "replyToSessionId": {
          "description": "Session identifier to reply to.",
          "type": "string"
        },
        "requiresPreprocessing": {
          "description": "Value that indicates whether the rule action requires preprocessing.",
          "oneOf": [
            {
              "default": true,
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "sessionId": {
          "description": "Session identifier.",
          "type": "string"
        },
        "to": {
          "description": "Address to send to.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Encryption": {
      "description": "Properties to configure Encryption",
      "properties": {
        "keySource": {
          "description": "Enumerates the possible value of keySource for Encryption",
          "oneOf": [
            {
              "enum": [
                "Microsoft.KeyVault"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "keyVaultProperties": {
          "description": "Properties of KeyVault",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/KeyVaultProperties"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "requireInfrastructureEncryption": {
          "description": "Enable Infrastructure Encryption (Double Encryption)",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "Identity": {
      "description": "Properties to configure User Assigned Identities for Bring your Own Keys",
      "properties": {
        "type": {
          "description": "Type of managed service identity.",
          "oneOf": [
            {
              "enum": [
                "SystemAssigned",
                "UserAssigned",
                "SystemAssigned, UserAssigned",
                "None"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "userAssignedIdentities": {
          "description": "Properties for User Assigned Identities",
          "oneOf": [
            {
              "additionalProperties": {
                "$ref": "#/definitions/UserAssignedIdentity"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "KeyVaultProperties": {
      "description": "Properties to configure keyVault Properties",
      "properties": {
        "identity": {
          "oneOf": [
            {
              "$ref": "#/definitions/UserAssignedIdentityProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "keyName": {
          "description": "Name of the Key from KeyVault",
          "type": "string"
        },
        "keyVaultUri": {
          "description": "Uri of KeyVault",
          "type": "string"
        },
        "keyVersion": {
          "description": "Version of KeyVault",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MigrationConfigPropertiesProperties": {
      "description": "Properties required to the Create Migration Configuration",
      "properties": {
        "postMigrationName": {
          "description": "Name to access Standard Namespace after migration",
          "type": "string"
        },
        "targetNamespace": {
          "description": "Existing premium Namespace ARM Id name which has no entities, will be used for migration",
          "type": "string"
        }
      },
      "required": [
        "targetNamespace",
        "postMigrationName"
      ],
      "type": "object"
    },
    "NWRuleSetIpRules": {
      "description": "Description of NetWorkRuleSet - IpRules resource.",
      "properties": {
        "action": {
          "description": "The IP Filter Action",
          "oneOf": [
            {
              "enum": [
                "Allow"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "ipMask": {
          "description": "IP Mask",
          "type": "string"
        }
      },
      "type": "object"
    },
    "NWRuleSetVirtualNetworkRules": {
      "description": "Description of VirtualNetworkRules - NetworkRules resource.",
      "properties": {
        "ignoreMissingVnetServiceEndpoint": {
          "description": "Value that indicates whether to ignore missing VNet Service Endpoint",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "subnet": {
          "description": "Subnet properties",
          "oneOf": [
            {
              "$ref": "#/definitions/Subnet"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "NetworkRuleSetProperties": {
      "description": "NetworkRuleSet properties",
      "properties": {
        "defaultAction": {
          "description": "Default Action for Network Rule Set",
          "oneOf": [
            {
              "enum": [
                "Allow",
                "Deny"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "ipRules": {
          "description": "List of IpRules",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/NWRuleSetIpRules"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "publicNetworkAccess": {
          "description": "This determines if traffic is allowed over public network. By default it is enabled.",
          "oneOf": [
            {
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "trustedServiceAccessEnabled": {
          "description": "Value that indicates whether Trusted Service Access is Enabled or not.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "virtualNetworkRules": {
          "description": "List VirtualNetwork Rules",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/NWRuleSetVirtualNetworkRules"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "PrivateEndpoint": {
      "description": "PrivateEndpoint information.",
      "properties": {
        "id": {
          "description": "The ARM identifier for Private Endpoint.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PrivateEndpointConnection": {
      "description": "Properties of the PrivateEndpointConnection.",
      "properties": {
        "properties": {
          "description": "Properties of the PrivateEndpointConnection.",
          "oneOf": [
            {
              "$ref": "#/definitions/PrivateEndpointConnectionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "PrivateEndpointConnectionProperties": {
      "description": "Properties of the private endpoint connection resource.",
      "properties": {
        "privateEndpoint": {
          "description": "The Private Endpoint resource for this Connection.",
          "oneOf": [
            {
              "$ref": "#/definitions/PrivateEndpoint"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "privateLinkServiceConnectionState": {
          "description": "Details about the state of the connection.",
          "oneOf": [
            {
              "$ref": "#/definitions/ConnectionState"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "provisioningState": {
          "description": "Provisioning state of the Private Endpoint Connection.",
          "oneOf": [
            {
              "enum": [
                "Creating",
                "Updating",
                "Deleting",
                "Succeeded",
                "Canceled",
                "Failed"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "Ruleproperties": {
      "description": "Description of Rule Resource.",
      "properties": {
        "action": {
          "description": "Represents the filter actions which are allowed for the transformation of a message that have been matched by a filter expression.",
          "oneOf": [
            {
              "$ref": "#/definitions/Action"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "correlationFilter": {
          "description": "Properties of correlationFilter",
          "oneOf": [
            {
              "$ref": "#/definitions/CorrelationFilter"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "filterType": {
          "description": "Filter type that is evaluated against a BrokeredMessage.",
          "oneOf": [
            {
              "enum": [
                "SqlFilter",
                "CorrelationFilter"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "sqlFilter": {
          "description": "Properties of sqlFilter",
          "oneOf": [
            {
              "$ref": "#/definitions/SqlFilter"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "SBAuthorizationRuleProperties": {
      "description": "AuthorizationRule properties.",
      "properties": {
        "rights": {
          "description": "The rights associated with the rule.",
          "oneOf": [
            {
              "items": {
                "enum": [
                  "Manage",
                  "Send",
                  "Listen"
                ],
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "rights"
      ],
      "type": "object"
    },
    "SBClientAffineProperties": {
      "description": "Properties specific to client affine subscriptions.",
      "properties": {
        "clientId": {
          "description": "Indicates the Client ID of the application that created the client-affine subscription.",
          "type": "string"
        },
        "isDurable": {
          "description": "For client-affine subscriptions, this value indicates whether the subscription is durable or not.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "isShared": {
          "description": "For client-affine subscriptions, this value indicates whether the subscription is shared or not.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "SBNamespaceProperties": {
      "description": "Properties of the namespace.",
      "properties": {
        "disableLocalAuth": {
          "description": "This property disables SAS authentication for the Service Bus namespace.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "encryption": {
          "description": "Properties of BYOK Encryption description",
          "oneOf": [
            {
              "$ref": "#/definitions/Encryption"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "privateEndpointConnections": {
          "description": "List of private endpoint connections.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/PrivateEndpointConnection"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "zoneRedundant": {
          "description": "Enabling this property creates a Premium Service Bus Namespace in regions supported availability zones.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "SBQueueProperties": {
      "description": "The Queue Properties definition.",
      "properties": {
        "autoDeleteOnIdle": {
          "description": "ISO 8061 timeSpan idle interval after which the queue is automatically deleted. The minimum duration is 5 minutes.",
          "type": "string"
        },
        "deadLetteringOnMessageExpiration": {
          "description": "A value that indicates whether this queue has dead letter support when a message expires.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "defaultMessageTimeToLive": {
          "description": "ISO 8601 default message timespan to live value. This is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself.",
          "type": "string"
        },
        "duplicateDetectionHistoryTimeWindow": {
          "description": "ISO 8601 timeSpan structure that defines the duration of the duplicate detection history. The default value is 10 minutes.",
          "type": "string"
        },
        "enableBatchedOperations": {
          "description": "Value that indicates whether server-side batched operations are enabled.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "enableExpress": {
          "description": "A value that indicates whether Express Entities are enabled. An express queue holds a message in memory temporarily before writing it to persistent storage.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "enablePartitioning": {
          "description": "A value that indicates whether the queue is to be partitioned across multiple message brokers.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "forwardDeadLetteredMessagesTo": {
          "description": "Queue/Topic name to forward the Dead Letter message",
          "type": "string"
        },
        "forwardTo": {
          "description": "Queue/Topic name to forward the messages",
          "type": "string"
        },
        "lockDuration": {
          "description": "ISO 8601 timespan duration of a peek-lock; that is, the amount of time that the message is locked for other receivers. The maximum value for LockDuration is 5 minutes; the default value is 1 minute.",
          "type": "string"
        },
        "maxDeliveryCount": {
          "description": "The maximum delivery count. A message is automatically deadlettered after this number of deliveries. default value is 10.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "maxMessageSizeInKilobytes": {
          "description": "Maximum size (in KB) of the message payload that can be accepted by the queue. This property is only used in Premium today and default is 1024.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "maxSizeInMegabytes": {
          "description": "The maximum size of the queue in megabytes, which is the size of memory allocated for the queue. Default is 1024.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "requiresDuplicateDetection": {
          "description": "A value indicating if this queue requires duplicate detection.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "requiresSession": {
          "description": "A value that indicates whether the queue supports the concept of sessions.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "status": {
          "description": "Enumerates the possible values for the status of a messaging entity.",
          "oneOf": [
            {
              "enum": [
                "Active",
                "Disabled",
                "Restoring",
                "SendDisabled",
                "ReceiveDisabled",
                "Creating",
                "Deleting",
                "Renaming",
                "Unknown"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "SBSku": {
      "description": "SKU of the namespace.",
      "properties": {
        "capacity": {
          "description": "The specified messaging units for the tier. For Premium tier, capacity are 1,2 and 4.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "name": {
          "description": "Name of this SKU.",
          "oneOf": [
            {
              "enum": [
                "Basic",
                "Standard",
                "Premium"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tier": {
          "description": "The billing tier of this particular SKU.",
          "oneOf": [
            {
              "enum": [
                "Basic",
                "Standard",
                "Premium"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "SBSubscriptionProperties": {
      "description": "Description of Subscription Resource.",
      "properties": {
        "autoDeleteOnIdle": {
          "description": "ISO 8061 timeSpan idle interval after which the topic is automatically deleted. The minimum duration is 5 minutes.",
          "type": "string"
        },
        "clientAffineProperties": {
          "description": "Properties specific to client affine subscriptions.",
          "oneOf": [
            {
              "$ref": "#/definitions/SBClientAffineProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "deadLetteringOnFilterEvaluationExceptions": {
          "description": "Value that indicates whether a subscription has dead letter support on filter evaluation exceptions.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "deadLetteringOnMessageExpiration": {
          "description": "Value that indicates whether a subscription has dead letter support when a message expires.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "defaultMessageTimeToLive": {
          "description": "ISO 8061 Default message timespan to live value. This is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself.",
          "type": "string"
        },
        "duplicateDetectionHistoryTimeWindow": {
          "description": "ISO 8601 timeSpan structure that defines the duration of the duplicate detection history. The default value is 10 minutes.",
          "type": "string"
        },
        "enableBatchedOperations": {
          "description": "Value that indicates whether server-side batched operations are enabled.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "forwardDeadLetteredMessagesTo": {
          "description": "Queue/Topic name to forward the Dead Letter message",
          "type": "string"
        },
        "forwardTo": {
          "description": "Queue/Topic name to forward the messages",
          "type": "string"
        },
        "isClientAffine": {
          "description": "Value that indicates whether the subscription has an affinity to the client id.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "lockDuration": {
          "description": "ISO 8061 lock duration timespan for the subscription. The default value is 1 minute.",
          "type": "string"
        },
        "maxDeliveryCount": {
          "description": "Number of maximum deliveries.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "requiresSession": {
          "description": "Value indicating if a subscription supports the concept of sessions.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "status": {
          "description": "Enumerates the possible values for the status of a messaging entity.",
          "oneOf": [
            {
              "enum": [
                "Active",
                "Disabled",
                "Restoring",
                "SendDisabled",
                "ReceiveDisabled",
                "Creating",
                "Deleting",
                "Renaming",
                "Unknown"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "SBTopicProperties": {
      "description": "The Topic Properties definition.",
      "properties": {
        "autoDeleteOnIdle": {
          "description": "ISO 8601 timespan idle interval after which the topic is automatically deleted. The minimum duration is 5 minutes.",
          "type": "string"
        },
        "defaultMessageTimeToLive": {
          "description": "ISO 8601 Default message timespan to live value. This is the duration after which the message expires, starting from when the message is sent to Service Bus. This is the default value used when TimeToLive is not set on a message itself.",
          "type": "string"
        },
        "duplicateDetectionHistoryTimeWindow": {
          "description": "ISO8601 timespan structure that defines the duration of the duplicate detection history. The default value is 10 minutes.",
          "type": "string"
        },
        "enableBatchedOperations": {
          "description": "Value that indicates whether server-side batched operations are enabled.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "enableExpress": {
          "description": "Value that indicates whether Express Entities are enabled. An express topic holds a message in memory temporarily before writing it to persistent storage.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "enablePartitioning": {
          "description": "Value that indicates whether the topic to be partitioned across multiple message brokers is enabled.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "maxMessageSizeInKilobytes": {
          "description": "Maximum size (in KB) of the message payload that can be accepted by the topic. This property is only used in Premium today and default is 1024.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "maxSizeInMegabytes": {
          "description": "Maximum size of the topic in megabytes, which is the size of the memory allocated for the topic. Default is 1024.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "requiresDuplicateDetection": {
          "description": "Value indicating if this topic requires duplicate detection.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "status": {
          "description": "Enumerates the possible values for the status of a messaging entity.",
          "oneOf": [
            {
              "enum": [
                "Active",
                "Disabled",
                "Restoring",
                "SendDisabled",
                "ReceiveDisabled",
                "Creating",
                "Deleting",
                "Renaming",
                "Unknown"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "supportOrdering": {
          "description": "Value that indicates whether the topic supports ordering.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "SqlFilter": {
      "description": "Represents a filter which is a composition of an expression and an action that is executed in the pub/sub pipeline.",
      "properties": {
        "compatibilityLevel": {
          "description": "This property is reserved for future use. An integer value showing the compatibility level, currently hard-coded to 20.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "requiresPreprocessing": {
          "description": "Value that indicates whether the rule action requires preprocessing.",
          "oneOf": [
            {
              "default": true,
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "sqlExpression": {
          "description": "The SQL expression. e.g. MyProperty='ABC'",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Subnet": {
      "description": "Properties supplied for Subnet",
      "properties": {
        "id": {
          "description": "Resource ID of Virtual Network Subnet",
          "type": "string"
        }
      },
      "required": [
        "id"
      ],
      "type": "object"
    },
    "UserAssignedIdentity": {
      "description": "Recognized Dictionary value.",
      "properties": {},
      "type": "object"
    },
    "UserAssignedIdentityProperties": {
      "properties": {
        "userAssignedIdentity": {
          "description": "ARM ID of user Identity selected for encryption",
          "type": "string"
        }
      },
      "type": "object"
    },
    "namespaces_AuthorizationRules_childResource": {
      "description": "Microsoft.ServiceBus/namespaces/AuthorizationRules",
      "properties": {
        "apiVersion": {
          "enum": [
            "2021-06-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The authorization rule name.",
          "maxLength": 50,
          "minLength": 1,
          "type": "string"
        },
        "properties": {
          "description": "AuthorizationRule properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/SBAuthorizationRuleProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "AuthorizationRules"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "namespaces_disasterRecoveryConfigs_childResource": {
      "description": "Microsoft.ServiceBus/namespaces/disasterRecoveryConfigs",
      "properties": {
        "apiVersion": {
          "enum": [
            "2021-06-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The Disaster Recovery configuration name",
          "maxLength": 50,
          "minLength": 1,
          "type": "string"
        },
        "properties": {
          "description": "Properties required to the Create Or Update Alias(Disaster Recovery configurations)",
          "oneOf": [
            {
              "$ref": "#/definitions/ArmDisasterRecoveryProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "disasterRecoveryConfigs"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "namespaces_migrationConfigurations_childResource": {
      "description": "Microsoft.ServiceBus/namespaces/migrationConfigurations",
      "properties": {
        "apiVersion": {
          "enum": [
            "2021-06-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The configuration name. Should always be \"$default\".",
          "oneOf": [
            {
              "enum": [
                "$default"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Properties required to the Create Migration Configuration",
          "oneOf": [
            {
              "$ref": "#/definitions/MigrationConfigPropertiesProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "migrationConfigurations"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "namespaces_networkRuleSets_childResource": {
      "description": "Microsoft.ServiceBus/namespaces/networkRuleSets",
      "properties": {
        "apiVersion": {
          "enum": [
            "2021-06-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "oneOf": [
            {
              "enum": [
                "default"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "NetworkRuleSet properties",
          "oneOf": [
            {
              "$ref": "#/definitions/NetworkRuleSetProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "networkRuleSets"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "namespaces_privateEndpointConnections_childResource": {
      "description": "Microsoft.ServiceBus/namespaces/privateEndpointConnections",
      "properties": {
        "apiVersion": {
          "enum": [
            "2021-06-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The PrivateEndpointConnection name",
          "type": "string"
        },
        "properties": {
          "description": "Properties of the PrivateEndpointConnection.",
          "oneOf": [
            {
              "$ref": "#/definitions/PrivateEndpointConnectionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "privateEndpointConnections"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "namespaces_queues_authorizationRules_childResource": {
      "description": "Microsoft.ServiceBus/namespaces/queues/authorizationRules",
      "properties": {
        "apiVersion": {
          "enum": [
            "2021-06-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The authorization rule name.",
          "maxLength": 50,
          "minLength": 1,
          "type": "string"
        },
        "properties": {
          "description": "AuthorizationRule properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/SBAuthorizationRuleProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "authorizationRules"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "namespaces_queues_childResource": {
      "description": "Microsoft.ServiceBus/namespaces/queues",
      "properties": {
        "apiVersion": {
          "enum": [
            "2021-06-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The queue name.",
          "minLength": 1,
          "type": "string"
        },
        "properties": {
          "description": "Queue Properties",
          "oneOf": [
            {
              "$ref": "#/definitions/SBQueueProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "queues"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "namespaces_topics_authorizationRules_childResource": {
      "description": "Microsoft.ServiceBus/namespaces/topics/authorizationRules",
      "properties": {
        "apiVersion": {
          "enum": [
            "2021-06-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The authorization rule name.",
          "maxLength": 50,
          "minLength": 1,
          "type": "string"
        },
        "properties": {
          "description": "AuthorizationRule properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/SBAuthorizationRuleProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "authorizationRules"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "namespaces_topics_childResource": {
      "description": "Microsoft.ServiceBus/namespaces/topics",
      "properties": {
        "apiVersion": {
          "enum": [
            "2021-06-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The topic name.",
          "minLength": 1,
          "type": "string"
        },
        "properties": {
          "description": "Properties of topic resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/SBTopicProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "topics"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "namespaces_topics_subscriptions_childResource": {
      "description": "Microsoft.ServiceBus/namespaces/topics/subscriptions",
      "properties": {
        "apiVersion": {
          "enum": [
            "2021-06-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The subscription name.",
          "maxLength": 50,
          "minLength": 1,
          "type": "string"
        },
        "properties": {
          "description": "Properties of subscriptions resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/SBSubscriptionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "subscriptions"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "namespaces_topics_subscriptions_rules_childResource": {
      "description": "Microsoft.ServiceBus/namespaces/topics/subscriptions/rules",
      "properties": {
        "apiVersion": {
          "enum": [
            "2021-06-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The rule name.",
          "maxLength": 50,
          "minLength": 1,
          "type": "string"
        },
        "properties": {
          "description": "Properties of Rule resource",
          "oneOf": [
            {
              "$ref": "#/definitions/Ruleproperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "rules"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    }
  }
}