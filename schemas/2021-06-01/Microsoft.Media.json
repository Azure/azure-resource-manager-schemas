{
  "id": "https://schema.management.azure.com/schemas/2021-06-01/Microsoft.Media.json#",
  "title": "Microsoft.Media",
  "description": "Microsoft Media Resource Types",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "resourceDefinitions": {
    "mediaServices_accountFilters": {
      "description": "Microsoft.Media/mediaServices/accountFilters",
      "properties": {
        "apiVersion": {
          "enum": [
            "2021-06-01"
          ],
          "type": "string"
        },
        "name": {
          "description": "The Account Filter name",
          "type": "string"
        },
        "properties": {
          "description": "The Media Filter properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/MediaFilterProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.Media/mediaServices/accountFilters"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "mediaServices_assets": {
      "description": "Microsoft.Media/mediaServices/assets",
      "properties": {
        "apiVersion": {
          "enum": [
            "2021-06-01"
          ],
          "type": "string"
        },
        "name": {
          "description": "The Asset name.",
          "type": "string"
        },
        "properties": {
          "description": "The resource properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/AssetProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/mediaServices_assets_assetFilters_childResource"
              }
            ]
          },
          "type": "array"
        },
        "type": {
          "enum": [
            "Microsoft.Media/mediaServices/assets"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "mediaServices_assets_assetFilters": {
      "description": "Microsoft.Media/mediaServices/assets/assetFilters",
      "properties": {
        "apiVersion": {
          "enum": [
            "2021-06-01"
          ],
          "type": "string"
        },
        "name": {
          "description": "The Asset Filter name",
          "type": "string"
        },
        "properties": {
          "description": "The Media Filter properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/MediaFilterProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.Media/mediaServices/assets/assetFilters"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "mediaServices_contentKeyPolicies": {
      "description": "Microsoft.Media/mediaServices/contentKeyPolicies",
      "properties": {
        "apiVersion": {
          "enum": [
            "2021-06-01"
          ],
          "type": "string"
        },
        "name": {
          "description": "The Content Key Policy name.",
          "type": "string"
        },
        "properties": {
          "description": "The properties of the Content Key Policy.",
          "oneOf": [
            {
              "$ref": "#/definitions/ContentKeyPolicyProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.Media/mediaServices/contentKeyPolicies"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "mediaServices_streamingLocators": {
      "description": "Microsoft.Media/mediaServices/streamingLocators",
      "properties": {
        "apiVersion": {
          "enum": [
            "2021-06-01"
          ],
          "type": "string"
        },
        "name": {
          "description": "The Streaming Locator name.",
          "type": "string"
        },
        "properties": {
          "description": "Properties of the Streaming Locator.",
          "oneOf": [
            {
              "$ref": "#/definitions/StreamingLocatorProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.Media/mediaServices/streamingLocators"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "mediaServices_streamingPolicies": {
      "description": "Microsoft.Media/mediaServices/streamingPolicies",
      "properties": {
        "apiVersion": {
          "enum": [
            "2021-06-01"
          ],
          "type": "string"
        },
        "name": {
          "description": "The Streaming Policy name.",
          "type": "string"
        },
        "properties": {
          "description": "Class to specify properties of Streaming Policy",
          "oneOf": [
            {
              "$ref": "#/definitions/StreamingPolicyProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.Media/mediaServices/streamingPolicies"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "mediaServices_transforms": {
      "description": "Microsoft.Media/mediaServices/transforms",
      "properties": {
        "apiVersion": {
          "enum": [
            "2021-06-01"
          ],
          "type": "string"
        },
        "name": {
          "description": "The Transform name.",
          "type": "string"
        },
        "properties": {
          "description": "The resource properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/TransformProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/mediaServices_transforms_jobs_childResource"
              }
            ]
          },
          "type": "array"
        },
        "type": {
          "enum": [
            "Microsoft.Media/mediaServices/transforms"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "mediaServices_transforms_jobs": {
      "description": "Microsoft.Media/mediaServices/transforms/jobs",
      "properties": {
        "apiVersion": {
          "enum": [
            "2021-06-01"
          ],
          "type": "string"
        },
        "name": {
          "description": "The Job name.",
          "type": "string"
        },
        "properties": {
          "description": "The resource properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/JobProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.Media/mediaServices/transforms/jobs"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "mediaservices": {
      "description": "Microsoft.Media/mediaservices",
      "properties": {
        "apiVersion": {
          "enum": [
            "2021-06-01"
          ],
          "type": "string"
        },
        "identity": {
          "description": "The Managed Identity for the Media Services account.",
          "oneOf": [
            {
              "$ref": "#/definitions/MediaServiceIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "location": {
          "description": "The geo-location where the resource lives",
          "type": "string"
        },
        "name": {
          "description": "The Media Services account name.",
          "type": "string"
        },
        "properties": {
          "description": "The resource properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/MediaServiceProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/mediaServices_assets_childResource"
              },
              {
                "$ref": "#/definitions/mediaServices_transforms_childResource"
              },
              {
                "$ref": "#/definitions/mediaservices_liveEvents_childResource"
              },
              {
                "$ref": "#/definitions/mediaServices_accountFilters_childResource"
              },
              {
                "$ref": "#/definitions/mediaServices_streamingPolicies_childResource"
              },
              {
                "$ref": "#/definitions/mediaServices_streamingLocators_childResource"
              },
              {
                "$ref": "#/definitions/mediaServices_contentKeyPolicies_childResource"
              },
              {
                "$ref": "#/definitions/mediaservices_streamingEndpoints_childResource"
              },
              {
                "$ref": "#/definitions/mediaservices_privateEndpointConnections_childResource"
              }
            ]
          },
          "type": "array"
        },
        "tags": {
          "description": "Resource tags.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.Media/mediaservices"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "mediaservices_liveEvents": {
      "description": "Microsoft.Media/mediaservices/liveEvents",
      "properties": {
        "apiVersion": {
          "enum": [
            "2021-06-01"
          ],
          "type": "string"
        },
        "location": {
          "description": "The geo-location where the resource lives",
          "type": "string"
        },
        "name": {
          "description": "The name of the live event, maximum length is 32.",
          "oneOf": [
            {
              "maxLength": 32,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9]+(-*[a-zA-Z0-9])*$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The live event properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/LiveEventProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/mediaservices_liveEvents_liveOutputs_childResource"
              }
            ]
          },
          "type": "array"
        },
        "tags": {
          "description": "Resource tags.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.Media/mediaservices/liveEvents"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "mediaservices_liveEvents_liveOutputs": {
      "description": "Microsoft.Media/mediaservices/liveEvents/liveOutputs",
      "properties": {
        "apiVersion": {
          "enum": [
            "2021-06-01"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the live output.",
          "oneOf": [
            {
              "maxLength": 256,
              "minLength": 1,
              "pattern": "^([a-zA-Z0-9])+(-*[a-zA-Z0-9])*$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Live output properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/LiveOutputProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.Media/mediaservices/liveEvents/liveOutputs"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "mediaservices_privateEndpointConnections": {
      "description": "Microsoft.Media/mediaservices/privateEndpointConnections",
      "properties": {
        "apiVersion": {
          "enum": [
            "2021-06-01"
          ],
          "type": "string"
        },
        "name": {
          "description": "",
          "type": "string"
        },
        "properties": {
          "description": "Resource properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/PrivateEndpointConnectionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.Media/mediaservices/privateEndpointConnections"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "mediaservices_streamingEndpoints": {
      "description": "Microsoft.Media/mediaservices/streamingEndpoints",
      "properties": {
        "apiVersion": {
          "enum": [
            "2021-06-01"
          ],
          "type": "string"
        },
        "location": {
          "description": "The geo-location where the resource lives",
          "type": "string"
        },
        "name": {
          "description": "The name of the streaming endpoint, maximum length is 24.",
          "oneOf": [
            {
              "maxLength": 24,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9]+(-*[a-zA-Z0-9])*$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The streaming endpoint properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/StreamingEndpointProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Resource tags.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.Media/mediaservices/streamingEndpoints"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    }
  },
  "definitions": {
    "AccessControl": {
      "properties": {
        "defaultAction": {
          "description": "The behavior for IP access control in Key Delivery.",
          "oneOf": [
            {
              "enum": [
                "Allow",
                "Deny"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "ipAllowList": {
          "description": "The IP allow list for access control in Key Delivery. If the default action is set to 'Allow', the IP allow list must be empty.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "AccountEncryption": {
      "properties": {
        "identity": {
          "description": "The Key Vault identity.",
          "oneOf": [
            {
              "$ref": "#/definitions/ResourceIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "keyVaultProperties": {
          "description": "The properties of the key used to encrypt the account.",
          "oneOf": [
            {
              "$ref": "#/definitions/KeyVaultProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "description": "The type of key used to encrypt the Account Key.",
          "oneOf": [
            {
              "enum": [
                "SystemKey",
                "CustomerKey"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "type"
      ],
      "type": "object"
    },
    "AkamaiAccessControl": {
      "description": "Akamai access control",
      "properties": {
        "akamaiSignatureHeaderAuthenticationKeyList": {
          "description": "authentication key list",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/AkamaiSignatureHeaderAuthenticationKey"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "AkamaiSignatureHeaderAuthenticationKey": {
      "description": "Akamai Signature Header authentication key.",
      "properties": {
        "base64Key": {
          "description": "authentication key",
          "type": "string"
        },
        "expiration": {
          "description": "The expiration time of the authentication key.",
          "format": "date-time",
          "type": "string"
        },
        "identifier": {
          "description": "identifier of the key",
          "type": "string"
        }
      },
      "type": "object"
    },
    "AssetProperties": {
      "description": "The Asset properties.",
      "properties": {
        "alternateId": {
          "description": "The alternate ID of the Asset.",
          "type": "string"
        },
        "container": {
          "description": "The name of the asset blob container.",
          "type": "string"
        },
        "description": {
          "description": "The Asset description.",
          "type": "string"
        },
        "storageAccountName": {
          "description": "The name of the storage account.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CbcsDrmConfiguration": {
      "description": "Class to specify DRM configurations of CommonEncryptionCbcs scheme in Streaming Policy",
      "properties": {
        "fairPlay": {
          "description": "FairPlay configurations",
          "oneOf": [
            {
              "$ref": "#/definitions/StreamingPolicyFairPlayConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "playReady": {
          "description": "PlayReady configurations",
          "oneOf": [
            {
              "$ref": "#/definitions/StreamingPolicyPlayReadyConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "widevine": {
          "description": "Widevine configurations",
          "oneOf": [
            {
              "$ref": "#/definitions/StreamingPolicyWidevineConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "CencDrmConfiguration": {
      "description": "Class to specify DRM configurations of CommonEncryptionCenc scheme in Streaming Policy",
      "properties": {
        "playReady": {
          "description": "PlayReady configurations",
          "oneOf": [
            {
              "$ref": "#/definitions/StreamingPolicyPlayReadyConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "widevine": {
          "description": "Widevine configurations",
          "oneOf": [
            {
              "$ref": "#/definitions/StreamingPolicyWidevineConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ClipTime": {
      "description": "Base class for specifying a clip time. Use sub classes of this class to specify the time position in the media.",
      "oneOf": [
        {
          "description": "Specifies the clip time as an absolute time position in the media file.  The absolute time can point to a different position depending on whether the media file starts from a timestamp of zero or not.",
          "properties": {
            "@odata.type": {
              "enum": [
                "#Microsoft.Media.AbsoluteClipTime"
              ],
              "type": "string"
            },
            "time": {
              "description": "The time position on the timeline of the input media. It is usually specified as an ISO8601 period. e.g PT30S for 30 seconds.",
              "type": "string"
            }
          },
          "required": [
            "time",
            "@odata.type"
          ],
          "type": "object"
        },
        {
          "description": "Specifies the clip time as a Utc time position in the media file.  The Utc time can point to a different position depending on whether the media file starts from a timestamp of zero or not.",
          "properties": {
            "@odata.type": {
              "enum": [
                "#Microsoft.Media.UtcClipTime"
              ],
              "type": "string"
            },
            "time": {
              "description": "The time position on the timeline of the input media based on Utc time.",
              "format": "date-time",
              "type": "string"
            }
          },
          "required": [
            "time",
            "@odata.type"
          ],
          "type": "object"
        }
      ],
      "properties": {},
      "type": "object"
    },
    "Codec": {
      "description": "Describes the basic properties of all codecs.",
      "oneOf": [
        {
          "description": "Describes Advanced Audio Codec (AAC) audio encoding settings.",
          "properties": {
            "@odata.type": {
              "enum": [
                "#Microsoft.Media.AacAudio"
              ],
              "type": "string"
            },
            "bitrate": {
              "description": "The bitrate, in bits per second, of the output encoded audio.",
              "oneOf": [
                {
                  "type": "integer"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "channels": {
              "description": "The number of channels in the audio.",
              "oneOf": [
                {
                  "type": "integer"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "profile": {
              "description": "The encoding profile to be used when encoding audio with AAC.",
              "oneOf": [
                {
                  "enum": [
                    "AacLc",
                    "HeAacV1",
                    "HeAacV2"
                  ],
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "samplingRate": {
              "description": "The sampling rate to use for encoding in hertz.",
              "oneOf": [
                {
                  "type": "integer"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "@odata.type"
          ],
          "type": "object"
        },
        {
          "description": "A codec flag, which tells the encoder to copy the input audio bitstream.",
          "properties": {
            "@odata.type": {
              "enum": [
                "#Microsoft.Media.CopyAudio"
              ],
              "type": "string"
            }
          },
          "required": [
            "@odata.type"
          ],
          "type": "object"
        },
        {
          "description": "A codec flag, which tells the encoder to copy the input video bitstream without re-encoding.",
          "properties": {
            "@odata.type": {
              "enum": [
                "#Microsoft.Media.CopyVideo"
              ],
              "type": "string"
            }
          },
          "required": [
            "@odata.type"
          ],
          "type": "object"
        },
        {
          "description": "Describes all the properties for encoding a video with the H.264 codec.",
          "properties": {
            "@odata.type": {
              "enum": [
                "#Microsoft.Media.H264Video"
              ],
              "type": "string"
            },
            "complexity": {
              "description": "Tells the encoder how to choose its encoding settings. The default value is Balanced.",
              "oneOf": [
                {
                  "enum": [
                    "Speed",
                    "Balanced",
                    "Quality"
                  ],
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "keyFrameInterval": {
              "description": "The distance between two key frames. The value should be non-zero in the range [0.5, 20] seconds, specified in ISO 8601 format. The default is 2 seconds(PT2S). Note that this setting is ignored if VideoSyncMode.Passthrough is set, where the KeyFrameInterval value will follow the input source setting.",
              "type": "string"
            },
            "layers": {
              "description": "The collection of output H.264 layers to be produced by the encoder.",
              "oneOf": [
                {
                  "items": {
                    "$ref": "#/definitions/H264Layer"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "sceneChangeDetection": {
              "description": "Whether or not the encoder should insert key frames at scene changes. If not specified, the default is false. This flag should be set to true only when the encoder is being configured to produce a single output video.",
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "stretchMode": {
              "description": "The resizing mode - how the input video will be resized to fit the desired output resolution(s). Default is AutoSize",
              "oneOf": [
                {
                  "enum": [
                    "None",
                    "AutoSize",
                    "AutoFit"
                  ],
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "syncMode": {
              "description": "The Video Sync Mode",
              "oneOf": [
                {
                  "enum": [
                    "Auto",
                    "Passthrough",
                    "Cfr",
                    "Vfr"
                  ],
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "@odata.type"
          ],
          "type": "object"
        },
        {
          "description": "Describes all the properties for encoding a video with the H.265 codec.",
          "properties": {
            "@odata.type": {
              "enum": [
                "#Microsoft.Media.H265Video"
              ],
              "type": "string"
            },
            "complexity": {
              "description": "Tells the encoder how to choose its encoding settings.  Quality will provide for a higher compression ratio but at a higher cost and longer compute time.  Speed will produce a relatively larger file but is faster and more economical. The default value is Balanced.",
              "oneOf": [
                {
                  "enum": [
                    "Speed",
                    "Balanced",
                    "Quality"
                  ],
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "keyFrameInterval": {
              "description": "The distance between two key frames. The value should be non-zero in the range [0.5, 20] seconds, specified in ISO 8601 format. The default is 2 seconds(PT2S). Note that this setting is ignored if VideoSyncMode.Passthrough is set, where the KeyFrameInterval value will follow the input source setting.",
              "type": "string"
            },
            "layers": {
              "description": "The collection of output H.265 layers to be produced by the encoder.",
              "oneOf": [
                {
                  "items": {
                    "$ref": "#/definitions/H265Layer"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "sceneChangeDetection": {
              "description": "Specifies whether or not the encoder should insert key frames at scene changes. If not specified, the default is false. This flag should be set to true only when the encoder is being configured to produce a single output video.",
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "stretchMode": {
              "description": "The resizing mode - how the input video will be resized to fit the desired output resolution(s). Default is AutoSize",
              "oneOf": [
                {
                  "enum": [
                    "None",
                    "AutoSize",
                    "AutoFit"
                  ],
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "syncMode": {
              "description": "The Video Sync Mode",
              "oneOf": [
                {
                  "enum": [
                    "Auto",
                    "Passthrough",
                    "Cfr",
                    "Vfr"
                  ],
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "@odata.type"
          ],
          "type": "object"
        },
        {
          "description": "Describes the properties for producing a series of JPEG images from the input video.",
          "properties": {
            "@odata.type": {
              "enum": [
                "#Microsoft.Media.JpgImage"
              ],
              "type": "string"
            },
            "keyFrameInterval": {
              "description": "The distance between two key frames. The value should be non-zero in the range [0.5, 20] seconds, specified in ISO 8601 format. The default is 2 seconds(PT2S). Note that this setting is ignored if VideoSyncMode.Passthrough is set, where the KeyFrameInterval value will follow the input source setting.",
              "type": "string"
            },
            "layers": {
              "description": "A collection of output JPEG image layers to be produced by the encoder.",
              "oneOf": [
                {
                  "items": {
                    "$ref": "#/definitions/JpgLayer"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "range": {
              "description": "The position relative to transform preset start time in the input video at which to stop generating thumbnails. The value can be in ISO 8601 format (For example, PT5M30S to stop at 5 minutes and 30 seconds from start time), or a frame count (For example, 300 to stop at the 300th frame from the frame at start time. If this value is 1, it means only producing one thumbnail at start time), or a relative value to the stream duration (For example, 50% to stop at half of stream duration from start time). The default value is 100%, which means to stop at the end of the stream.",
              "type": "string"
            },
            "spriteColumn": {
              "description": "Sets the number of columns used in thumbnail sprite image.  The number of rows are automatically calculated and a VTT file is generated with the coordinate mappings for each thumbnail in the sprite. Note: this value should be a positive integer and a proper value is recommended so that the output image resolution will not go beyond JPEG maximum pixel resolution limit 65535x65535.",
              "oneOf": [
                {
                  "type": "integer"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "start": {
              "description": "The position in the input video from where to start generating thumbnails. The value can be in ISO 8601 format (For example, PT05S to start at 5 seconds), or a frame count (For example, 10 to start at the 10th frame), or a relative value to stream duration (For example, 10% to start at 10% of stream duration). Also supports a macro {Best}, which tells the encoder to select the best thumbnail from the first few seconds of the video and will only produce one thumbnail, no matter what other settings are for Step and Range. The default value is macro {Best}.",
              "type": "string"
            },
            "step": {
              "description": "The intervals at which thumbnails are generated. The value can be in ISO 8601 format (For example, PT05S for one image every 5 seconds), or a frame count (For example, 30 for one image every 30 frames), or a relative value to stream duration (For example, 10% for one image every 10% of stream duration). Note: Step value will affect the first generated thumbnail, which may not be exactly the one specified at transform preset start time. This is due to the encoder, which tries to select the best thumbnail between start time and Step position from start time as the first output. As the default value is 10%, it means if stream has long duration, the first generated thumbnail might be far away from the one specified at start time. Try to select reasonable value for Step if the first thumbnail is expected close to start time, or set Range value at 1 if only one thumbnail is needed at start time.",
              "type": "string"
            },
            "stretchMode": {
              "description": "The resizing mode - how the input video will be resized to fit the desired output resolution(s). Default is AutoSize",
              "oneOf": [
                {
                  "enum": [
                    "None",
                    "AutoSize",
                    "AutoFit"
                  ],
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "syncMode": {
              "description": "The Video Sync Mode",
              "oneOf": [
                {
                  "enum": [
                    "Auto",
                    "Passthrough",
                    "Cfr",
                    "Vfr"
                  ],
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "start",
            "@odata.type"
          ],
          "type": "object"
        },
        {
          "description": "Describes the properties for producing a series of PNG images from the input video.",
          "properties": {
            "@odata.type": {
              "enum": [
                "#Microsoft.Media.PngImage"
              ],
              "type": "string"
            },
            "keyFrameInterval": {
              "description": "The distance between two key frames. The value should be non-zero in the range [0.5, 20] seconds, specified in ISO 8601 format. The default is 2 seconds(PT2S). Note that this setting is ignored if VideoSyncMode.Passthrough is set, where the KeyFrameInterval value will follow the input source setting.",
              "type": "string"
            },
            "layers": {
              "description": "A collection of output PNG image layers to be produced by the encoder.",
              "oneOf": [
                {
                  "items": {
                    "$ref": "#/definitions/PngLayer"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "range": {
              "description": "The position relative to transform preset start time in the input video at which to stop generating thumbnails. The value can be in ISO 8601 format (For example, PT5M30S to stop at 5 minutes and 30 seconds from start time), or a frame count (For example, 300 to stop at the 300th frame from the frame at start time. If this value is 1, it means only producing one thumbnail at start time), or a relative value to the stream duration (For example, 50% to stop at half of stream duration from start time). The default value is 100%, which means to stop at the end of the stream.",
              "type": "string"
            },
            "start": {
              "description": "The position in the input video from where to start generating thumbnails. The value can be in ISO 8601 format (For example, PT05S to start at 5 seconds), or a frame count (For example, 10 to start at the 10th frame), or a relative value to stream duration (For example, 10% to start at 10% of stream duration). Also supports a macro {Best}, which tells the encoder to select the best thumbnail from the first few seconds of the video and will only produce one thumbnail, no matter what other settings are for Step and Range. The default value is macro {Best}.",
              "type": "string"
            },
            "step": {
              "description": "The intervals at which thumbnails are generated. The value can be in ISO 8601 format (For example, PT05S for one image every 5 seconds), or a frame count (For example, 30 for one image every 30 frames), or a relative value to stream duration (For example, 10% for one image every 10% of stream duration). Note: Step value will affect the first generated thumbnail, which may not be exactly the one specified at transform preset start time. This is due to the encoder, which tries to select the best thumbnail between start time and Step position from start time as the first output. As the default value is 10%, it means if stream has long duration, the first generated thumbnail might be far away from the one specified at start time. Try to select reasonable value for Step if the first thumbnail is expected close to start time, or set Range value at 1 if only one thumbnail is needed at start time.",
              "type": "string"
            },
            "stretchMode": {
              "description": "The resizing mode - how the input video will be resized to fit the desired output resolution(s). Default is AutoSize",
              "oneOf": [
                {
                  "enum": [
                    "None",
                    "AutoSize",
                    "AutoFit"
                  ],
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "syncMode": {
              "description": "The Video Sync Mode",
              "oneOf": [
                {
                  "enum": [
                    "Auto",
                    "Passthrough",
                    "Cfr",
                    "Vfr"
                  ],
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "start",
            "@odata.type"
          ],
          "type": "object"
        }
      ],
      "properties": {
        "label": {
          "description": "An optional label for the codec. The label can be used to control muxing behavior.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CommonEncryptionCbcs": {
      "description": "Class for CommonEncryptionCbcs encryption scheme",
      "properties": {
        "clearTracks": {
          "description": "Representing which tracks should not be encrypted",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/TrackSelection"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "contentKeys": {
          "description": "Representing default content key for each encryption scheme and separate content keys for specific tracks",
          "oneOf": [
            {
              "$ref": "#/definitions/StreamingPolicyContentKeys"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "drm": {
          "description": "Configuration of DRMs for current encryption scheme",
          "oneOf": [
            {
              "$ref": "#/definitions/CbcsDrmConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "enabledProtocols": {
          "description": "Representing supported protocols",
          "oneOf": [
            {
              "$ref": "#/definitions/EnabledProtocols"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "CommonEncryptionCenc": {
      "description": "Class for envelope encryption scheme",
      "properties": {
        "clearTracks": {
          "description": "Representing which tracks should not be encrypted",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/TrackSelection"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "contentKeys": {
          "description": "Representing default content key for each encryption scheme and separate content keys for specific tracks",
          "oneOf": [
            {
              "$ref": "#/definitions/StreamingPolicyContentKeys"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "drm": {
          "description": "Configuration of DRMs for CommonEncryptionCenc encryption scheme",
          "oneOf": [
            {
              "$ref": "#/definitions/CencDrmConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "enabledProtocols": {
          "description": "Representing supported protocols",
          "oneOf": [
            {
              "$ref": "#/definitions/EnabledProtocols"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ContentKeyPolicyConfiguration": {
      "description": "Base class for Content Key Policy configuration. A derived class must be used to create a configuration.",
      "oneOf": [
        {
          "description": "Represents a configuration for non-DRM keys.",
          "properties": {
            "@odata.type": {
              "enum": [
                "#Microsoft.Media.ContentKeyPolicyClearKeyConfiguration"
              ],
              "type": "string"
            }
          },
          "required": [
            "@odata.type"
          ],
          "type": "object"
        },
        {
          "description": "Specifies a configuration for FairPlay licenses.",
          "properties": {
            "@odata.type": {
              "enum": [
                "#Microsoft.Media.ContentKeyPolicyFairPlayConfiguration"
              ],
              "type": "string"
            },
            "ask": {
              "description": "The key that must be used as FairPlay Application Secret key."
            },
            "fairPlayPfx": {
              "description": "The Base64 representation of FairPlay certificate in PKCS 12 (pfx) format (including private key).",
              "type": "string"
            },
            "fairPlayPfxPassword": {
              "description": "The password encrypting FairPlay certificate in PKCS 12 (pfx) format.",
              "type": "string"
            },
            "offlineRentalConfiguration": {
              "description": "Offline rental policy",
              "oneOf": [
                {
                  "$ref": "#/definitions/ContentKeyPolicyFairPlayOfflineRentalConfiguration"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "rentalAndLeaseKeyType": {
              "description": "The rental and lease key type.",
              "oneOf": [
                {
                  "enum": [
                    "Unknown",
                    "Undefined",
                    "DualExpiry",
                    "PersistentUnlimited",
                    "PersistentLimited"
                  ],
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "rentalDuration": {
              "description": "The rental duration. Must be greater than or equal to 0.",
              "oneOf": [
                {
                  "type": "integer"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "ask",
            "fairPlayPfxPassword",
            "fairPlayPfx",
            "rentalAndLeaseKeyType",
            "rentalDuration",
            "@odata.type"
          ],
          "type": "object"
        },
        {
          "description": "Specifies a configuration for PlayReady licenses.",
          "properties": {
            "@odata.type": {
              "enum": [
                "#Microsoft.Media.ContentKeyPolicyPlayReadyConfiguration"
              ],
              "type": "string"
            },
            "licenses": {
              "description": "The PlayReady licenses.",
              "oneOf": [
                {
                  "items": {
                    "$ref": "#/definitions/ContentKeyPolicyPlayReadyLicense"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "responseCustomData": {
              "description": "The custom response data.",
              "type": "string"
            }
          },
          "required": [
            "licenses",
            "@odata.type"
          ],
          "type": "object"
        },
        {
          "description": "Represents a ContentKeyPolicyConfiguration that is unavailable in the current API version.",
          "properties": {
            "@odata.type": {
              "enum": [
                "#Microsoft.Media.ContentKeyPolicyUnknownConfiguration"
              ],
              "type": "string"
            }
          },
          "required": [
            "@odata.type"
          ],
          "type": "object"
        },
        {
          "description": "Specifies a configuration for Widevine licenses.",
          "properties": {
            "@odata.type": {
              "enum": [
                "#Microsoft.Media.ContentKeyPolicyWidevineConfiguration"
              ],
              "type": "string"
            },
            "widevineTemplate": {
              "description": "The Widevine template.",
              "type": "string"
            }
          },
          "required": [
            "widevineTemplate",
            "@odata.type"
          ],
          "type": "object"
        }
      ],
      "properties": {},
      "type": "object"
    },
    "ContentKeyPolicyFairPlayOfflineRentalConfiguration": {
      "properties": {
        "playbackDurationSeconds": {
          "description": "Playback duration",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "storageDurationSeconds": {
          "description": "Storage duration",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "playbackDurationSeconds",
        "storageDurationSeconds"
      ],
      "type": "object"
    },
    "ContentKeyPolicyOption": {
      "description": "Represents a policy option.",
      "properties": {
        "configuration": {
          "description": "The key delivery configuration.",
          "oneOf": [
            {
              "$ref": "#/definitions/ContentKeyPolicyConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "name": {
          "description": "The Policy Option description.",
          "type": "string"
        },
        "restriction": {
          "description": "The requirements that must be met to deliver keys with this configuration",
          "oneOf": [
            {
              "$ref": "#/definitions/ContentKeyPolicyRestriction"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "configuration",
        "restriction"
      ],
      "type": "object"
    },
    "ContentKeyPolicyPlayReadyContentKeyLocation": {
      "description": "Base class for content key ID location. A derived class must be used to represent the location.",
      "oneOf": [
        {
          "description": "Specifies that the content key ID is in the PlayReady header.",
          "properties": {
            "@odata.type": {
              "enum": [
                "#Microsoft.Media.ContentKeyPolicyPlayReadyContentEncryptionKeyFromHeader"
              ],
              "type": "string"
            }
          },
          "required": [
            "@odata.type"
          ],
          "type": "object"
        },
        {
          "description": "Specifies that the content key ID is specified in the PlayReady configuration.",
          "properties": {
            "@odata.type": {
              "enum": [
                "#Microsoft.Media.ContentKeyPolicyPlayReadyContentEncryptionKeyFromKeyIdentifier"
              ],
              "type": "string"
            },
            "keyId": {
              "description": "The content key ID.",
              "oneOf": [
                {
                  "pattern": "^[0-9a-fA-F]{8}(-[0-9a-fA-F]{4}){3}-[0-9a-fA-F]{12}$",
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "keyId",
            "@odata.type"
          ],
          "type": "object"
        }
      ],
      "properties": {},
      "type": "object"
    },
    "ContentKeyPolicyPlayReadyExplicitAnalogTelevisionRestriction": {
      "description": "Configures the Explicit Analog Television Output Restriction control bits. For further details see the PlayReady Compliance Rules.",
      "properties": {
        "bestEffort": {
          "description": "Indicates whether this restriction is enforced on a Best Effort basis.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "configurationData": {
          "description": "Configures the restriction control bits. Must be between 0 and 3 inclusive.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "bestEffort",
        "configurationData"
      ],
      "type": "object"
    },
    "ContentKeyPolicyPlayReadyLicense": {
      "description": "The PlayReady license",
      "properties": {
        "allowTestDevices": {
          "description": "A flag indicating whether test devices can use the license.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "beginDate": {
          "description": "The begin date of license",
          "format": "date-time",
          "type": "string"
        },
        "contentKeyLocation": {
          "description": "The content key location.",
          "oneOf": [
            {
              "$ref": "#/definitions/ContentKeyPolicyPlayReadyContentKeyLocation"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "contentType": {
          "description": "The PlayReady content type.",
          "oneOf": [
            {
              "enum": [
                "Unknown",
                "Unspecified",
                "UltraVioletDownload",
                "UltraVioletStreaming"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "expirationDate": {
          "description": "The expiration date of license.",
          "format": "date-time",
          "type": "string"
        },
        "gracePeriod": {
          "description": "The grace period of license.",
          "type": "string"
        },
        "licenseType": {
          "description": "The license type.",
          "oneOf": [
            {
              "enum": [
                "Unknown",
                "NonPersistent",
                "Persistent"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "playRight": {
          "description": "The license PlayRight",
          "oneOf": [
            {
              "$ref": "#/definitions/ContentKeyPolicyPlayReadyPlayRight"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "relativeBeginDate": {
          "description": "The relative begin date of license.",
          "type": "string"
        },
        "relativeExpirationDate": {
          "description": "The relative expiration date of license.",
          "type": "string"
        }
      },
      "required": [
        "allowTestDevices",
        "licenseType",
        "contentKeyLocation",
        "contentType"
      ],
      "type": "object"
    },
    "ContentKeyPolicyPlayReadyPlayRight": {
      "description": "Configures the Play Right in the PlayReady license.",
      "properties": {
        "agcAndColorStripeRestriction": {
          "description": "Configures Automatic Gain Control (AGC) and Color Stripe in the license. Must be between 0 and 3 inclusive.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "allowPassingVideoContentToUnknownOutput": {
          "description": "Configures Unknown output handling settings of the license.",
          "oneOf": [
            {
              "enum": [
                "Unknown",
                "NotAllowed",
                "Allowed",
                "AllowedWithVideoConstriction"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "analogVideoOpl": {
          "description": "Specifies the output protection level for compressed digital audio.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "compressedDigitalAudioOpl": {
          "description": "Specifies the output protection level for compressed digital audio.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "compressedDigitalVideoOpl": {
          "description": "Specifies the output protection level for compressed digital video.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "digitalVideoOnlyContentRestriction": {
          "description": "Enables the Image Constraint For Analog Component Video Restriction in the license.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "explicitAnalogTelevisionOutputRestriction": {
          "description": "Configures the Explicit Analog Television Output Restriction in the license. Configuration data must be between 0 and 3 inclusive.",
          "oneOf": [
            {
              "$ref": "#/definitions/ContentKeyPolicyPlayReadyExplicitAnalogTelevisionRestriction"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "firstPlayExpiration": {
          "description": "The amount of time that the license is valid after the license is first used to play content.",
          "type": "string"
        },
        "imageConstraintForAnalogComponentVideoRestriction": {
          "description": "Enables the Image Constraint For Analog Component Video Restriction in the license.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "imageConstraintForAnalogComputerMonitorRestriction": {
          "description": "Enables the Image Constraint For Analog Component Video Restriction in the license.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "scmsRestriction": {
          "description": "Configures the Serial Copy Management System (SCMS) in the license. Must be between 0 and 3 inclusive.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "uncompressedDigitalAudioOpl": {
          "description": "Specifies the output protection level for uncompressed digital audio.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "uncompressedDigitalVideoOpl": {
          "description": "Specifies the output protection level for uncompressed digital video.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "digitalVideoOnlyContentRestriction",
        "imageConstraintForAnalogComponentVideoRestriction",
        "imageConstraintForAnalogComputerMonitorRestriction",
        "allowPassingVideoContentToUnknownOutput"
      ],
      "type": "object"
    },
    "ContentKeyPolicyProperties": {
      "description": "The properties of the Content Key Policy.",
      "properties": {
        "description": {
          "description": "A description for the Policy.",
          "type": "string"
        },
        "options": {
          "description": "The Key Policy options.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/ContentKeyPolicyOption"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "options"
      ],
      "type": "object"
    },
    "ContentKeyPolicyRestriction": {
      "description": "Base class for Content Key Policy restrictions. A derived class must be used to create a restriction.",
      "oneOf": [
        {
          "description": "Represents an open restriction. License or key will be delivered on every request.",
          "properties": {
            "@odata.type": {
              "enum": [
                "#Microsoft.Media.ContentKeyPolicyOpenRestriction"
              ],
              "type": "string"
            }
          },
          "required": [
            "@odata.type"
          ],
          "type": "object"
        },
        {
          "description": "Represents a token restriction. Provided token must match these requirements for successful license or key delivery.",
          "properties": {
            "@odata.type": {
              "enum": [
                "#Microsoft.Media.ContentKeyPolicyTokenRestriction"
              ],
              "type": "string"
            },
            "alternateVerificationKeys": {
              "description": "A list of alternative verification keys.",
              "oneOf": [
                {
                  "items": {
                    "$ref": "#/definitions/ContentKeyPolicyRestrictionTokenKey"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "audience": {
              "description": "The audience for the token.",
              "type": "string"
            },
            "issuer": {
              "description": "The token issuer.",
              "type": "string"
            },
            "openIdConnectDiscoveryDocument": {
              "description": "The OpenID connect discovery document.",
              "type": "string"
            },
            "primaryVerificationKey": {
              "description": "The primary verification key.",
              "oneOf": [
                {
                  "$ref": "#/definitions/ContentKeyPolicyRestrictionTokenKey"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "requiredClaims": {
              "description": "A list of required token claims.",
              "oneOf": [
                {
                  "items": {
                    "$ref": "#/definitions/ContentKeyPolicyTokenClaim"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "restrictionTokenType": {
              "description": "The type of token.",
              "oneOf": [
                {
                  "enum": [
                    "Unknown",
                    "Swt",
                    "Jwt"
                  ],
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "issuer",
            "audience",
            "primaryVerificationKey",
            "restrictionTokenType",
            "@odata.type"
          ],
          "type": "object"
        },
        {
          "description": "Represents a ContentKeyPolicyRestriction that is unavailable in the current API version.",
          "properties": {
            "@odata.type": {
              "enum": [
                "#Microsoft.Media.ContentKeyPolicyUnknownRestriction"
              ],
              "type": "string"
            }
          },
          "required": [
            "@odata.type"
          ],
          "type": "object"
        }
      ],
      "properties": {},
      "type": "object"
    },
    "ContentKeyPolicyRestrictionTokenKey": {
      "description": "Base class for Content Key Policy key for token validation. A derived class must be used to create a token key.",
      "oneOf": [
        {
          "description": "Specifies a RSA key for token validation",
          "properties": {
            "@odata.type": {
              "enum": [
                "#Microsoft.Media.ContentKeyPolicyRsaTokenKey"
              ],
              "type": "string"
            },
            "exponent": {
              "description": "The RSA Parameter exponent"
            },
            "modulus": {
              "description": "The RSA Parameter modulus"
            }
          },
          "required": [
            "exponent",
            "modulus",
            "@odata.type"
          ],
          "type": "object"
        },
        {
          "description": "Specifies a symmetric key for token validation.",
          "properties": {
            "@odata.type": {
              "enum": [
                "#Microsoft.Media.ContentKeyPolicySymmetricTokenKey"
              ],
              "type": "string"
            },
            "keyValue": {
              "description": "The key value of the key"
            }
          },
          "required": [
            "keyValue",
            "@odata.type"
          ],
          "type": "object"
        },
        {
          "description": "Specifies a certificate for token validation.",
          "properties": {
            "@odata.type": {
              "enum": [
                "#Microsoft.Media.ContentKeyPolicyX509CertificateTokenKey"
              ],
              "type": "string"
            },
            "rawBody": {
              "description": "The raw data field of a certificate in PKCS 12 format (X509Certificate2 in .NET)"
            }
          },
          "required": [
            "rawBody",
            "@odata.type"
          ],
          "type": "object"
        }
      ],
      "properties": {},
      "type": "object"
    },
    "ContentKeyPolicyTokenClaim": {
      "description": "Represents a token claim.",
      "properties": {
        "claimType": {
          "description": "Token claim type.",
          "type": "string"
        },
        "claimValue": {
          "description": "Token claim value.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CrossSiteAccessPolicies": {
      "description": "The client access policy.",
      "properties": {
        "clientAccessPolicy": {
          "description": "The content of clientaccesspolicy.xml used by Silverlight.",
          "type": "string"
        },
        "crossDomainPolicy": {
          "description": "The content of crossdomain.xml used by Silverlight.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DefaultKey": {
      "description": "Class to specify properties of default content key for each encryption scheme",
      "properties": {
        "label": {
          "description": "Label can be used to specify Content Key when creating a Streaming Locator",
          "type": "string"
        },
        "policyName": {
          "description": "Policy used by Default Key",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Deinterlace": {
      "description": "Describes the de-interlacing settings.",
      "properties": {
        "mode": {
          "description": "The deinterlacing mode. Defaults to AutoPixelAdaptive.",
          "oneOf": [
            {
              "enum": [
                "Off",
                "AutoPixelAdaptive"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "parity": {
          "description": "The field parity for de-interlacing, defaults to Auto.",
          "oneOf": [
            {
              "enum": [
                "Auto",
                "TopFieldFirst",
                "BottomFieldFirst"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "EnabledProtocols": {
      "description": "Class to specify which protocols are enabled",
      "properties": {
        "dash": {
          "description": "Enable DASH protocol or not",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "download": {
          "description": "Enable Download protocol or not",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "hls": {
          "description": "Enable HLS protocol or not",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "smoothStreaming": {
          "description": "Enable SmoothStreaming protocol or not",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "download",
        "dash",
        "hls",
        "smoothStreaming"
      ],
      "type": "object"
    },
    "EnvelopeEncryption": {
      "description": "Class for EnvelopeEncryption encryption scheme",
      "properties": {
        "clearTracks": {
          "description": "Representing which tracks should not be encrypted",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/TrackSelection"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "contentKeys": {
          "description": "Representing default content key for each encryption scheme and separate content keys for specific tracks",
          "oneOf": [
            {
              "$ref": "#/definitions/StreamingPolicyContentKeys"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "customKeyAcquisitionUrlTemplate": {
          "description": "Template for the URL of the custom service delivering keys to end user players.  Not required when using Azure Media Services for issuing keys.  The template supports replaceable tokens that the service will update at runtime with the value specific to the request.  The currently supported token values are {AlternativeMediaId}, which is replaced with the value of StreamingLocatorId.AlternativeMediaId, and {ContentKeyId}, which is replaced with the value of identifier of the key being requested.",
          "type": "string"
        },
        "enabledProtocols": {
          "description": "Representing supported protocols",
          "oneOf": [
            {
              "$ref": "#/definitions/EnabledProtocols"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "FilterTrackPropertyCondition": {
      "description": "The class to specify one track property condition.",
      "properties": {
        "operation": {
          "description": "The track property condition operation.",
          "oneOf": [
            {
              "enum": [
                "Equal",
                "NotEqual"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "property": {
          "description": "The track property type.",
          "oneOf": [
            {
              "enum": [
                "Unknown",
                "Type",
                "Name",
                "Language",
                "FourCC",
                "Bitrate"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "value": {
          "description": "The track property value.",
          "type": "string"
        }
      },
      "required": [
        "property",
        "value",
        "operation"
      ],
      "type": "object"
    },
    "FilterTrackSelection": {
      "description": "Representing a list of FilterTrackPropertyConditions to select a track.  The filters are combined using a logical AND operation.",
      "properties": {
        "trackSelections": {
          "description": "The track selections.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/FilterTrackPropertyCondition"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "trackSelections"
      ],
      "type": "object"
    },
    "Filters": {
      "description": "Describes all the filtering operations, such as de-interlacing, rotation etc. that are to be applied to the input media before encoding.",
      "properties": {
        "crop": {
          "description": "The parameters for the rectangular window with which to crop the input video.",
          "oneOf": [
            {
              "$ref": "#/definitions/Rectangle"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "deinterlace": {
          "description": "The de-interlacing settings.",
          "oneOf": [
            {
              "$ref": "#/definitions/Deinterlace"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "overlays": {
          "description": "The properties of overlays to be applied to the input video. These could be audio, image or video overlays.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/Overlay"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "rotation": {
          "description": "The rotation, if any, to be applied to the input video, before it is encoded. Default is Auto",
          "oneOf": [
            {
              "enum": [
                "Auto",
                "None",
                "Rotate0",
                "Rotate90",
                "Rotate180",
                "Rotate270"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "FirstQuality": {
      "description": "Filter First Quality",
      "properties": {
        "bitrate": {
          "description": "The first quality bitrate.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "bitrate"
      ],
      "type": "object"
    },
    "Format": {
      "description": "Base class for output.",
      "oneOf": [
        {
          "description": "Describes the settings for producing JPEG thumbnails.",
          "properties": {
            "@odata.type": {
              "enum": [
                "#Microsoft.Media.JpgFormat"
              ],
              "type": "string"
            }
          },
          "required": [
            "@odata.type"
          ],
          "type": "object"
        },
        {
          "description": "Describes the settings for producing PNG thumbnails.",
          "properties": {
            "@odata.type": {
              "enum": [
                "#Microsoft.Media.PngFormat"
              ],
              "type": "string"
            }
          },
          "required": [
            "@odata.type"
          ],
          "type": "object"
        },
        {
          "description": "Describes the properties for an output ISO MP4 file.",
          "properties": {
            "@odata.type": {
              "enum": [
                "#Microsoft.Media.Mp4Format"
              ],
              "type": "string"
            },
            "outputFiles": {
              "description": "The list of output files to produce.  Each entry in the list is a set of audio and video layer labels to be muxed together .",
              "oneOf": [
                {
                  "items": {
                    "$ref": "#/definitions/OutputFile"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "@odata.type"
          ],
          "type": "object"
        },
        {
          "description": "Describes the properties for generating an MPEG-2 Transport Stream (ISO/IEC 13818-1) output video file(s).",
          "properties": {
            "@odata.type": {
              "enum": [
                "#Microsoft.Media.TransportStreamFormat"
              ],
              "type": "string"
            },
            "outputFiles": {
              "description": "The list of output files to produce.  Each entry in the list is a set of audio and video layer labels to be muxed together .",
              "oneOf": [
                {
                  "items": {
                    "$ref": "#/definitions/OutputFile"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "@odata.type"
          ],
          "type": "object"
        }
      ],
      "properties": {
        "filenamePattern": {
          "description": "The pattern of the file names for the generated output files. The following macros are supported in the file name: {Basename} - An expansion macro that will use the name of the input video file. If the base name(the file suffix is not included) of the input video file is less than 32 characters long, the base name of input video files will be used. If the length of base name of the input video file exceeds 32 characters, the base name is truncated to the first 32 characters in total length. {Extension} - The appropriate extension for this format. {Label} - The label assigned to the codec/layer. {Index} - A unique index for thumbnails. Only applicable to thumbnails. {Bitrate} - The audio/video bitrate. Not applicable to thumbnails. {Codec} - The type of the audio/video codec. {Resolution} - The video resolution. Any unsubstituted macros will be collapsed and removed from the filename.",
          "type": "string"
        }
      },
      "required": [
        "filenamePattern"
      ],
      "type": "object"
    },
    "H264Layer": {
      "description": "Describes the settings to be used when encoding the input video into a desired output bitrate layer with the H.264 video codec.",
      "properties": {
        "@odata.type": {
          "description": "The discriminator for derived types.",
          "type": "string"
        },
        "adaptiveBFrame": {
          "description": "Whether or not adaptive B-frames are to be used when encoding this layer. If not specified, the encoder will turn it on whenever the video profile permits its use.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "bFrames": {
          "description": "The number of B-frames to be used when encoding this layer.  If not specified, the encoder chooses an appropriate number based on the video profile and level.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "bitrate": {
          "description": "The average bitrate in bits per second at which to encode the input video when generating this layer. This is a required field.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "bufferWindow": {
          "description": "The VBV buffer window length. The value should be in ISO 8601 format. The value should be in the range [0.1-100] seconds. The default is 5 seconds (for example, PT5S).",
          "type": "string"
        },
        "entropyMode": {
          "description": "The entropy mode to be used for this layer. If not specified, the encoder chooses the mode that is appropriate for the profile and level.",
          "oneOf": [
            {
              "enum": [
                "Cabac",
                "Cavlc"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "frameRate": {
          "description": "The frame rate (in frames per second) at which to encode this layer. The value can be in the form of M/N where M and N are integers (For example, 30000/1001), or in the form of a number (For example, 30, or 29.97). The encoder enforces constraints on allowed frame rates based on the profile and level. If it is not specified, the encoder will use the same frame rate as the input video.",
          "type": "string"
        },
        "height": {
          "description": "The height of the output video for this layer. The value can be absolute (in pixels) or relative (in percentage). For example 50% means the output video has half as many pixels in height as the input.",
          "type": "string"
        },
        "label": {
          "description": "The alphanumeric label for this layer, which can be used in multiplexing different video and audio layers, or in naming the output file.",
          "type": "string"
        },
        "level": {
          "description": "We currently support Level up to 6.2. The value can be Auto, or a number that matches the H.264 profile. If not specified, the default is Auto, which lets the encoder choose the Level that is appropriate for this layer.",
          "type": "string"
        },
        "maxBitrate": {
          "description": "The maximum bitrate (in bits per second), at which the VBV buffer should be assumed to refill. If not specified, defaults to the same value as bitrate.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "profile": {
          "description": "We currently support Baseline, Main, High, High422, High444. Default is Auto.",
          "oneOf": [
            {
              "enum": [
                "Auto",
                "Baseline",
                "Main",
                "High",
                "High422",
                "High444"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "referenceFrames": {
          "description": "The number of reference frames to be used when encoding this layer. If not specified, the encoder determines an appropriate number based on the encoder complexity setting.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "slices": {
          "description": "The number of slices to be used when encoding this layer. If not specified, default is zero, which means that encoder will use a single slice for each frame.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "width": {
          "description": "The width of the output video for this layer. The value can be absolute (in pixels) or relative (in percentage). For example 50% means the output video has half as many pixels in width as the input.",
          "type": "string"
        }
      },
      "required": [
        "bitrate",
        "@odata.type"
      ],
      "type": "object"
    },
    "H265Layer": {
      "description": "Describes the settings to be used when encoding the input video into a desired output bitrate layer with the H.265 video codec.",
      "properties": {
        "@odata.type": {
          "description": "The discriminator for derived types.",
          "type": "string"
        },
        "adaptiveBFrame": {
          "description": "Specifies whether or not adaptive B-frames are to be used when encoding this layer. If not specified, the encoder will turn it on whenever the video profile permits its use.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "bFrames": {
          "description": "The number of B-frames to be used when encoding this layer.  If not specified, the encoder chooses an appropriate number based on the video profile and level.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "bitrate": {
          "description": "The average bitrate in bits per second at which to encode the input video when generating this layer. For example: a target bitrate of 3000Kbps or 3Mbps means this value should be 3000000 This is a required field.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "bufferWindow": {
          "description": "The VBV buffer window length. The value should be in ISO 8601 format. The value should be in the range [0.1-100] seconds. The default is 5 seconds (for example, PT5S).",
          "type": "string"
        },
        "frameRate": {
          "description": "The frame rate (in frames per second) at which to encode this layer. The value can be in the form of M/N where M and N are integers (For example, 30000/1001), or in the form of a number (For example, 30, or 29.97). The encoder enforces constraints on allowed frame rates based on the profile and level. If it is not specified, the encoder will use the same frame rate as the input video.",
          "type": "string"
        },
        "height": {
          "description": "The height of the output video for this layer. The value can be absolute (in pixels) or relative (in percentage). For example 50% means the output video has half as many pixels in height as the input.",
          "type": "string"
        },
        "label": {
          "description": "The alphanumeric label for this layer, which can be used in multiplexing different video and audio layers, or in naming the output file.",
          "type": "string"
        },
        "level": {
          "description": "We currently support Level up to 6.2. The value can be Auto, or a number that matches the H.265 profile. If not specified, the default is Auto, which lets the encoder choose the Level that is appropriate for this layer.",
          "type": "string"
        },
        "maxBitrate": {
          "description": "The maximum bitrate (in bits per second), at which the VBV buffer should be assumed to refill. If not specified, defaults to the same value as bitrate.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "profile": {
          "description": "We currently support Main. Default is Auto.",
          "oneOf": [
            {
              "enum": [
                "Auto",
                "Main"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "referenceFrames": {
          "description": "The number of reference frames to be used when encoding this layer. If not specified, the encoder determines an appropriate number based on the encoder complexity setting.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "slices": {
          "description": "The number of slices to be used when encoding this layer. If not specified, default is zero, which means that encoder will use a single slice for each frame.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "width": {
          "description": "The width of the output video for this layer. The value can be absolute (in pixels) or relative (in percentage). For example 50% means the output video has half as many pixels in width as the input.",
          "type": "string"
        }
      },
      "required": [
        "bitrate",
        "@odata.type"
      ],
      "type": "object"
    },
    "Hls": {
      "description": "HTTP Live Streaming (HLS) packing setting for the live output.",
      "properties": {
        "fragmentsPerTsSegment": {
          "description": "The number of fragments in an HTTP Live Streaming (HLS) TS segment in the output of the live event. This value does not affect the packing ratio for HLS CMAF output.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "IPAccessControl": {
      "description": "The IP access control.",
      "properties": {
        "allow": {
          "description": "The IP allow list.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/IPRange"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "IPRange": {
      "description": "The IP address range in the CIDR scheme.",
      "properties": {
        "address": {
          "description": "The IP address.",
          "type": "string"
        },
        "name": {
          "description": "The friendly name for the IP address range.",
          "type": "string"
        },
        "subnetPrefixLength": {
          "description": "The subnet mask prefix length (see CIDR notation).",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "InputDefinition": {
      "description": "Base class for defining an input. Use sub classes of this class to specify tracks selections and related metadata.",
      "oneOf": [
        {
          "description": "An InputDefinition that looks across all of the files provided to select tracks specified by the IncludedTracks property. Generally used with the AudioTrackByAttribute and VideoTrackByAttribute to allow selection of a single track across a set of input files.",
          "properties": {
            "@odata.type": {
              "enum": [
                "#Microsoft.Media.FromAllInputFile"
              ],
              "type": "string"
            }
          },
          "required": [
            "@odata.type"
          ],
          "type": "object"
        },
        {
          "description": "An InputDefinition that looks at each input file provided to select tracks specified by the IncludedTracks property. Generally used with the AudioTrackByAttribute and VideoTrackByAttribute to select tracks from each file given.",
          "properties": {
            "@odata.type": {
              "enum": [
                "#Microsoft.Media.FromEachInputFile"
              ],
              "type": "string"
            }
          },
          "required": [
            "@odata.type"
          ],
          "type": "object"
        },
        {
          "description": "An InputDefinition for a single file.  TrackSelections are scoped to the file specified.",
          "properties": {
            "@odata.type": {
              "enum": [
                "#Microsoft.Media.InputFile"
              ],
              "type": "string"
            },
            "filename": {
              "description": "Name of the file that this input definition applies to.",
              "type": "string"
            }
          },
          "required": [
            "@odata.type"
          ],
          "type": "object"
        }
      ],
      "properties": {
        "includedTracks": {
          "description": "The list of TrackDescriptors which define the metadata and selection of tracks in the input.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/TrackDescriptor"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "JobInput": {
      "description": "Base class for inputs to a Job.",
      "oneOf": [
        {
          "description": "Represents an Asset for input into a Job.",
          "properties": {
            "@odata.type": {
              "enum": [
                "#Microsoft.Media.JobInputAsset"
              ],
              "type": "string"
            },
            "assetName": {
              "description": "The name of the input Asset.",
              "type": "string"
            },
            "end": {
              "description": "Defines a point on the timeline of the input media at which processing will end. Defaults to the end of the input media.",
              "oneOf": [
                {
                  "$ref": "#/definitions/ClipTime"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "files": {
              "description": "List of files. Required for JobInputHttp. Maximum of 4000 characters each. Query strings will not be returned in service responses to prevent sensitive data exposure.",
              "oneOf": [
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "inputDefinitions": {
              "description": "Defines a list of InputDefinitions. For each InputDefinition, it defines a list of track selections and related metadata.",
              "oneOf": [
                {
                  "items": {
                    "$ref": "#/definitions/InputDefinition"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "label": {
              "description": "A label that is assigned to a JobInputClip, that is used to satisfy a reference used in the Transform. For example, a Transform can be authored so as to take an image file with the label 'xyz' and apply it as an overlay onto the input video before it is encoded. When submitting a Job, exactly one of the JobInputs should be the image file, and it should have the label 'xyz'.",
              "type": "string"
            },
            "start": {
              "description": "Defines a point on the timeline of the input media at which processing will start. Defaults to the beginning of the input media.",
              "oneOf": [
                {
                  "$ref": "#/definitions/ClipTime"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "assetName",
            "@odata.type"
          ],
          "type": "object"
        },
        {
          "description": "Represents HTTPS job input.",
          "properties": {
            "@odata.type": {
              "enum": [
                "#Microsoft.Media.JobInputHttp"
              ],
              "type": "string"
            },
            "baseUri": {
              "description": "Base URI for HTTPS job input. It will be concatenated with provided file names. If no base uri is given, then the provided file list is assumed to be fully qualified uris. Maximum length of 4000 characters. The query strings will not be returned in service responses to prevent sensitive data exposure.",
              "type": "string"
            },
            "end": {
              "description": "Defines a point on the timeline of the input media at which processing will end. Defaults to the end of the input media.",
              "oneOf": [
                {
                  "$ref": "#/definitions/ClipTime"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "files": {
              "description": "List of files. Required for JobInputHttp. Maximum of 4000 characters each. Query strings will not be returned in service responses to prevent sensitive data exposure.",
              "oneOf": [
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "inputDefinitions": {
              "description": "Defines a list of InputDefinitions. For each InputDefinition, it defines a list of track selections and related metadata.",
              "oneOf": [
                {
                  "items": {
                    "$ref": "#/definitions/InputDefinition"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "label": {
              "description": "A label that is assigned to a JobInputClip, that is used to satisfy a reference used in the Transform. For example, a Transform can be authored so as to take an image file with the label 'xyz' and apply it as an overlay onto the input video before it is encoded. When submitting a Job, exactly one of the JobInputs should be the image file, and it should have the label 'xyz'.",
              "type": "string"
            },
            "start": {
              "description": "Defines a point on the timeline of the input media at which processing will start. Defaults to the beginning of the input media.",
              "oneOf": [
                {
                  "$ref": "#/definitions/ClipTime"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "@odata.type"
          ],
          "type": "object"
        },
        {
          "description": "A Sequence contains an ordered list of Clips where each clip is a JobInput.  The Sequence will be treated as a single input.",
          "properties": {
            "@odata.type": {
              "enum": [
                "#Microsoft.Media.JobInputSequence"
              ],
              "type": "string"
            },
            "inputs": {
              "description": "JobInputs that make up the timeline.",
              "oneOf": [
                {
                  "items": {
                    "$ref": "#/definitions/JobInputClip"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "@odata.type"
          ],
          "type": "object"
        },
        {
          "description": "Describes a list of inputs to a Job.",
          "properties": {
            "@odata.type": {
              "enum": [
                "#Microsoft.Media.JobInputs"
              ],
              "type": "string"
            },
            "inputs": {
              "description": "List of inputs to a Job.",
              "oneOf": [
                {
                  "items": {
                    "type": "object"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "@odata.type"
          ],
          "type": "object"
        }
      ],
      "properties": {},
      "type": "object"
    },
    "JobInputClip": {
      "description": "Represents input files for a Job.",
      "oneOf": [
        {
          "description": "Represents an Asset for input into a Job.",
          "properties": {
            "@odata.type": {
              "enum": [
                "#Microsoft.Media.JobInputAsset"
              ],
              "type": "string"
            },
            "assetName": {
              "description": "The name of the input Asset.",
              "type": "string"
            }
          },
          "required": [
            "assetName",
            "@odata.type"
          ],
          "type": "object"
        },
        {
          "description": "Represents HTTPS job input.",
          "properties": {
            "@odata.type": {
              "enum": [
                "#Microsoft.Media.JobInputHttp"
              ],
              "type": "string"
            },
            "baseUri": {
              "description": "Base URI for HTTPS job input. It will be concatenated with provided file names. If no base uri is given, then the provided file list is assumed to be fully qualified uris. Maximum length of 4000 characters. The query strings will not be returned in service responses to prevent sensitive data exposure.",
              "type": "string"
            }
          },
          "required": [
            "@odata.type"
          ],
          "type": "object"
        }
      ],
      "properties": {
        "end": {
          "description": "Defines a point on the timeline of the input media at which processing will end. Defaults to the end of the input media.",
          "oneOf": [
            {
              "$ref": "#/definitions/ClipTime"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "files": {
          "description": "List of files. Required for JobInputHttp. Maximum of 4000 characters each. Query strings will not be returned in service responses to prevent sensitive data exposure.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "inputDefinitions": {
          "description": "Defines a list of InputDefinitions. For each InputDefinition, it defines a list of track selections and related metadata.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/InputDefinition"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "label": {
          "description": "A label that is assigned to a JobInputClip, that is used to satisfy a reference used in the Transform. For example, a Transform can be authored so as to take an image file with the label 'xyz' and apply it as an overlay onto the input video before it is encoded. When submitting a Job, exactly one of the JobInputs should be the image file, and it should have the label 'xyz'.",
          "type": "string"
        },
        "start": {
          "description": "Defines a point on the timeline of the input media at which processing will start. Defaults to the beginning of the input media.",
          "oneOf": [
            {
              "$ref": "#/definitions/ClipTime"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "JobOutput": {
      "description": "Describes all the properties of a JobOutput.",
      "oneOf": [
        {
          "description": "Represents an Asset used as a JobOutput.",
          "properties": {
            "@odata.type": {
              "enum": [
                "#Microsoft.Media.JobOutputAsset"
              ],
              "type": "string"
            },
            "assetName": {
              "description": "The name of the output Asset.",
              "type": "string"
            }
          },
          "required": [
            "assetName",
            "@odata.type"
          ],
          "type": "object"
        }
      ],
      "properties": {
        "label": {
          "description": "A label that is assigned to a JobOutput in order to help uniquely identify it. This is useful when your Transform has more than one TransformOutput, whereby your Job has more than one JobOutput. In such cases, when you submit the Job, you will add two or more JobOutputs, in the same order as TransformOutputs in the Transform. Subsequently, when you retrieve the Job, either through events or on a GET request, you can use the label to easily identify the JobOutput. If a label is not provided, a default value of '{presetName}_{outputIndex}' will be used, where the preset name is the name of the preset in the corresponding TransformOutput and the output index is the relative index of the this JobOutput within the Job. Note that this index is the same as the relative index of the corresponding TransformOutput within its Transform.",
          "type": "string"
        },
        "presetOverride": {
          "description": "A preset used to override the preset in the corresponding transform output.",
          "oneOf": [
            {
              "$ref": "#/definitions/Preset"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "JobProperties": {
      "description": "Properties of the Job.",
      "properties": {
        "correlationData": {
          "description": "Customer provided key, value pairs that will be returned in Job and JobOutput state events.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "description": {
          "description": "Optional customer supplied description of the Job.",
          "type": "string"
        },
        "input": {
          "description": "The inputs for the Job.",
          "oneOf": [
            {
              "$ref": "#/definitions/JobInput"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "outputs": {
          "description": "The outputs for the Job.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/JobOutput"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "priority": {
          "description": "Priority with which the job should be processed. Higher priority jobs are processed before lower priority jobs. If not set, the default is normal.",
          "oneOf": [
            {
              "enum": [
                "Low",
                "Normal",
                "High"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "input",
        "outputs"
      ],
      "type": "object"
    },
    "JpgLayer": {
      "description": "Describes the settings to produce a JPEG image from the input video.",
      "properties": {
        "@odata.type": {
          "description": "The discriminator for derived types.",
          "type": "string"
        },
        "height": {
          "description": "The height of the output video for this layer. The value can be absolute (in pixels) or relative (in percentage). For example 50% means the output video has half as many pixels in height as the input.",
          "type": "string"
        },
        "label": {
          "description": "The alphanumeric label for this layer, which can be used in multiplexing different video and audio layers, or in naming the output file.",
          "type": "string"
        },
        "quality": {
          "description": "The compression quality of the JPEG output. Range is from 0-100 and the default is 70.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "width": {
          "description": "The width of the output video for this layer. The value can be absolute (in pixels) or relative (in percentage). For example 50% means the output video has half as many pixels in width as the input.",
          "type": "string"
        }
      },
      "required": [
        "@odata.type"
      ],
      "type": "object"
    },
    "KeyDelivery": {
      "properties": {
        "accessControl": {
          "description": "The access control properties for Key Delivery.",
          "oneOf": [
            {
              "$ref": "#/definitions/AccessControl"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "KeyVaultProperties": {
      "properties": {
        "keyIdentifier": {
          "description": "The URL of the Key Vault key used to encrypt the account. The key may either be versioned (for example https://vault/keys/mykey/version1) or reference a key without a version (for example https://vault/keys/mykey).",
          "type": "string"
        }
      },
      "type": "object"
    },
    "LiveEventEncoding": {
      "description": "Specifies the live event type and optional encoding settings for encoding live events.",
      "properties": {
        "encodingType": {
          "description": "Live event type. When encodingType is set to PassthroughBasic or PassthroughStandard, the service simply passes through the incoming video and audio layer(s) to the output. When encodingType is set to Standard or Premium1080p, a live encoder transcodes the incoming stream into multiple bitrates or layers. See https://go.microsoft.com/fwlink/?linkid=2095101 for more information. This property cannot be modified after the live event is created.",
          "oneOf": [
            {
              "enum": [
                "None",
                "Standard",
                "Premium1080p",
                "PassthroughBasic",
                "PassthroughStandard"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "keyFrameInterval": {
          "description": "Use an ISO 8601 time value between 0.5 to 20 seconds to specify the output fragment length for the video and audio tracks of an encoding live event. For example, use PT2S to indicate 2 seconds. For the video track it also defines the key frame interval, or the length of a GoP (group of pictures).   If this value is not set for an encoding live event, the fragment duration defaults to 2 seconds. The value cannot be set for pass-through live events.",
          "type": "string"
        },
        "presetName": {
          "description": "The optional encoding preset name, used when encodingType is not None. This value is specified at creation time and cannot be updated. If the encodingType is set to Standard, then the default preset name is ‘Default720p’. Else if the encodingType is set to Premium1080p, the default preset is ‘Default1080p’.",
          "type": "string"
        },
        "stretchMode": {
          "description": "Specifies how the input video will be resized to fit the desired output resolution(s). Default is None",
          "oneOf": [
            {
              "enum": [
                "None",
                "AutoSize",
                "AutoFit"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "LiveEventEndpoint": {
      "description": "The live event endpoint.",
      "properties": {
        "protocol": {
          "description": "The endpoint protocol.",
          "type": "string"
        },
        "url": {
          "description": "The endpoint URL.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "LiveEventInput": {
      "description": "The live event input.",
      "properties": {
        "accessControl": {
          "description": "Access control for live event input.",
          "oneOf": [
            {
              "$ref": "#/definitions/LiveEventInputAccessControl"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "accessToken": {
          "description": "A UUID in string form to uniquely identify the stream. This can be specified at creation time but cannot be updated. If omitted, the service will generate a unique value.",
          "type": "string"
        },
        "endpoints": {
          "description": "The input endpoints for the live event.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/LiveEventEndpoint"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "keyFrameIntervalDuration": {
          "description": "ISO 8601 time duration of the key frame interval duration of the input. This value sets the EXT-X-TARGETDURATION property in the HLS output. For example, use PT2S to indicate 2 seconds. Leave the value empty for encoding live events.",
          "type": "string"
        },
        "streamingProtocol": {
          "description": "The input protocol for the live event. This is specified at creation time and cannot be updated.",
          "oneOf": [
            {
              "enum": [
                "FragmentedMP4",
                "RTMP"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "streamingProtocol"
      ],
      "type": "object"
    },
    "LiveEventInputAccessControl": {
      "description": "The IP access control for live event input.",
      "properties": {
        "ip": {
          "description": "The IP access control properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/IPAccessControl"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "LiveEventInputTrackSelection": {
      "description": "A track selection condition. This property is reserved for future use, any value set on this property will be ignored.",
      "properties": {
        "operation": {
          "description": "Comparing operation. This property is reserved for future use, any value set on this property will be ignored.",
          "type": "string"
        },
        "property": {
          "description": "Property name to select. This property is reserved for future use, any value set on this property will be ignored.",
          "type": "string"
        },
        "value": {
          "description": "Property value to select. This property is reserved for future use, any value set on this property will be ignored.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "LiveEventOutputTranscriptionTrack": {
      "description": "Describes a transcription track in the output of a live event, generated using speech-to-text transcription. This property is reserved for future use, any value set on this property will be ignored.",
      "properties": {
        "trackName": {
          "description": "The output track name. This property is reserved for future use, any value set on this property will be ignored.",
          "type": "string"
        }
      },
      "required": [
        "trackName"
      ],
      "type": "object"
    },
    "LiveEventPreview": {
      "description": "Live event preview settings.",
      "properties": {
        "accessControl": {
          "description": "The access control for live event preview.",
          "oneOf": [
            {
              "$ref": "#/definitions/LiveEventPreviewAccessControl"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "alternativeMediaId": {
          "description": "An alternative media identifier associated with the streaming locator created for the preview. This value is specified at creation time and cannot be updated. The identifier can be used in the CustomLicenseAcquisitionUrlTemplate or the CustomKeyAcquisitionUrlTemplate of the StreamingPolicy specified in the StreamingPolicyName field.",
          "type": "string"
        },
        "endpoints": {
          "description": "The endpoints for preview. Do not share the preview URL with the live event audience.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/LiveEventEndpoint"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "previewLocator": {
          "description": "The identifier of the preview locator in Guid format. Specifying this at creation time allows the caller to know the preview locator url before the event is created. If omitted, the service will generate a random identifier. This value cannot be updated once the live event is created.",
          "type": "string"
        },
        "streamingPolicyName": {
          "description": "The name of streaming policy used for the live event preview. This value is specified at creation time and cannot be updated.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "LiveEventPreviewAccessControl": {
      "description": "The IP access control for the live event preview endpoint.",
      "properties": {
        "ip": {
          "description": "The IP access control properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/IPAccessControl"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "LiveEventProperties": {
      "description": "The live event properties.",
      "properties": {
        "crossSiteAccessPolicies": {
          "description": "Live event cross site access policies.",
          "oneOf": [
            {
              "$ref": "#/definitions/CrossSiteAccessPolicies"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "description": {
          "description": "A description for the live event.",
          "type": "string"
        },
        "encoding": {
          "description": "Encoding settings for the live event. It configures whether a live encoder is used for the live event and settings for the live encoder if it is used.",
          "oneOf": [
            {
              "$ref": "#/definitions/LiveEventEncoding"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "hostnamePrefix": {
          "description": "When useStaticHostname is set to true, the hostnamePrefix specifies the first part of the hostname assigned to the live event preview and ingest endpoints. The final hostname would be a combination of this prefix, the media service account name and a short code for the Azure Media Services data center.",
          "type": "string"
        },
        "input": {
          "description": "Live event input settings. It defines how the live event receives input from a contribution encoder.",
          "oneOf": [
            {
              "$ref": "#/definitions/LiveEventInput"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "preview": {
          "description": "Live event preview settings. Preview allows live event producers to preview the live streaming content without creating any live output.",
          "oneOf": [
            {
              "$ref": "#/definitions/LiveEventPreview"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "streamOptions": {
          "description": "The options to use for the LiveEvent. This value is specified at creation time and cannot be updated. The valid values for the array entry values are 'Default' and 'LowLatency'.",
          "oneOf": [
            {
              "items": {
                "enum": [
                  "Default",
                  "LowLatency"
                ],
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "transcriptions": {
          "description": "Live transcription settings for the live event. See https://go.microsoft.com/fwlink/?linkid=2133742 for more information about the live transcription feature.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/LiveEventTranscription"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "useStaticHostname": {
          "description": "Specifies whether a static hostname would be assigned to the live event preview and ingest endpoints. This value can only be updated if the live event is in Standby state",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "input"
      ],
      "type": "object"
    },
    "LiveEventTranscription": {
      "description": "Describes the transcription tracks in the output of a live event, generated using speech-to-text transcription. This property is reserved for future use, any value set on this property will be ignored.",
      "properties": {
        "inputTrackSelection": {
          "description": "Provides a mechanism to select the audio track in the input live feed, to which speech-to-text transcription is applied. This property is reserved for future use, any value set on this property will be ignored.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/LiveEventInputTrackSelection"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "language": {
          "description": "Specifies the language (locale) to be used for speech-to-text transcription – it should match the spoken language in the audio track. The value should be in BCP-47 format (e.g: 'en-US'). See https://go.microsoft.com/fwlink/?linkid=2133742 for more information about the live transcription feature and the list of supported languages.",
          "type": "string"
        },
        "outputTranscriptionTrack": {
          "description": "Describes a transcription track in the output of a live event, generated using speech-to-text transcription. This property is reserved for future use, any value set on this property will be ignored.",
          "oneOf": [
            {
              "$ref": "#/definitions/LiveEventOutputTranscriptionTrack"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "LiveOutputProperties": {
      "description": "The JSON object that contains the properties required to create a live output.",
      "properties": {
        "archiveWindowLength": {
          "description": "ISO 8601 time between 1 minute to 25 hours to indicate the maximum content length that can be archived in the asset for this live output. This also sets the maximum content length for the rewind window. For example, use PT1H30M to indicate 1 hour and 30 minutes of archive window.",
          "type": "string"
        },
        "assetName": {
          "description": "The asset that the live output will write to.",
          "type": "string"
        },
        "description": {
          "description": "The description of the live output.",
          "type": "string"
        },
        "hls": {
          "description": "HTTP Live Streaming (HLS) packing setting for the live output.",
          "oneOf": [
            {
              "$ref": "#/definitions/Hls"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "manifestName": {
          "description": "The manifest file name. If not provided, the service will generate one automatically.",
          "type": "string"
        },
        "outputSnapTime": {
          "description": "The initial timestamp that the live output will start at, any content before this value will not be archived.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "assetName",
        "archiveWindowLength"
      ],
      "type": "object"
    },
    "MediaFilterProperties": {
      "description": "The Media Filter properties.",
      "properties": {
        "firstQuality": {
          "description": "The first quality.",
          "oneOf": [
            {
              "$ref": "#/definitions/FirstQuality"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "presentationTimeRange": {
          "description": "The presentation time range.",
          "oneOf": [
            {
              "$ref": "#/definitions/PresentationTimeRange"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tracks": {
          "description": "The tracks selection conditions.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/FilterTrackSelection"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "MediaServiceIdentity": {
      "properties": {
        "type": {
          "description": "The identity type.",
          "type": "string"
        },
        "userAssignedIdentities": {
          "description": "The user assigned managed identities.",
          "oneOf": [
            {
              "additionalProperties": {
                "$ref": "#/definitions/UserAssignedManagedIdentity"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "type"
      ],
      "type": "object"
    },
    "MediaServiceProperties": {
      "description": "Properties of the Media Services account.",
      "properties": {
        "encryption": {
          "description": "The account encryption properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/AccountEncryption"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "keyDelivery": {
          "description": "The Key Delivery properties for Media Services account.",
          "oneOf": [
            {
              "$ref": "#/definitions/KeyDelivery"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "publicNetworkAccess": {
          "description": "Whether or not public network access is allowed for resources under the Media Services account.",
          "oneOf": [
            {
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "storageAccounts": {
          "description": "The storage accounts for this resource.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/StorageAccount"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "storageAuthentication": {
          "oneOf": [
            {
              "enum": [
                "System",
                "ManagedIdentity"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "NoEncryption": {
      "description": "Class for NoEncryption scheme",
      "properties": {
        "enabledProtocols": {
          "description": "Representing supported protocols",
          "oneOf": [
            {
              "$ref": "#/definitions/EnabledProtocols"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "OutputFile": {
      "description": "Represents an output file produced.",
      "properties": {
        "labels": {
          "description": "The list of labels that describe how the encoder should multiplex video and audio into an output file. For example, if the encoder is producing two video layers with labels v1 and v2, and one audio layer with label a1, then an array like '[v1, a1]' tells the encoder to produce an output file with the video track represented by v1 and the audio track represented by a1.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "labels"
      ],
      "type": "object"
    },
    "Overlay": {
      "description": "Base type for all overlays - image, audio or video.",
      "oneOf": [
        {
          "description": "Describes the properties of an audio overlay.",
          "properties": {
            "@odata.type": {
              "enum": [
                "#Microsoft.Media.AudioOverlay"
              ],
              "type": "string"
            }
          },
          "required": [
            "@odata.type"
          ],
          "type": "object"
        },
        {
          "description": "Describes the properties of a video overlay.",
          "properties": {
            "@odata.type": {
              "enum": [
                "#Microsoft.Media.VideoOverlay"
              ],
              "type": "string"
            },
            "cropRectangle": {
              "description": "An optional rectangular window used to crop the overlay image or video.",
              "oneOf": [
                {
                  "$ref": "#/definitions/Rectangle"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "opacity": {
              "description": "The opacity of the overlay. This is a value in the range [0 - 1.0]. Default is 1.0 which mean the overlay is opaque.",
              "oneOf": [
                {
                  "type": "number"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "position": {
              "description": "The location in the input video where the overlay is applied.",
              "oneOf": [
                {
                  "$ref": "#/definitions/Rectangle"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "@odata.type"
          ],
          "type": "object"
        }
      ],
      "properties": {
        "audioGainLevel": {
          "description": "The gain level of audio in the overlay. The value should be in the range [0, 1.0]. The default is 1.0.",
          "oneOf": [
            {
              "type": "number"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "end": {
          "description": "The end position, with reference to the input video, at which the overlay ends. The value should be in ISO 8601 format. For example, PT30S to end the overlay at 30 seconds into the input video. If not specified or the value is greater than the input video duration, the overlay will be applied until the end of the input video if the overlay media duration is greater than the input video duration, else the overlay will last as long as the overlay media duration.",
          "type": "string"
        },
        "fadeInDuration": {
          "description": "The duration over which the overlay fades in onto the input video. The value should be in ISO 8601 duration format. If not specified the default behavior is to have no fade in (same as PT0S).",
          "type": "string"
        },
        "fadeOutDuration": {
          "description": "The duration over which the overlay fades out of the input video. The value should be in ISO 8601 duration format. If not specified the default behavior is to have no fade out (same as PT0S).",
          "type": "string"
        },
        "inputLabel": {
          "description": "The label of the job input which is to be used as an overlay. The Input must specify exactly one file. You can specify an image file in JPG, PNG, GIF or BMP format, or an audio file (such as a WAV, MP3, WMA or M4A file), or a video file. See https://aka.ms/mesformats for the complete list of supported audio and video file formats.",
          "type": "string"
        },
        "start": {
          "description": "The start position, with reference to the input video, at which the overlay starts. The value should be in ISO 8601 format. For example, PT05S to start the overlay at 5 seconds into the input video. If not specified the overlay starts from the beginning of the input video.",
          "type": "string"
        }
      },
      "required": [
        "inputLabel"
      ],
      "type": "object"
    },
    "PngLayer": {
      "description": "Describes the settings to produce a PNG image from the input video.",
      "properties": {
        "@odata.type": {
          "description": "The discriminator for derived types.",
          "type": "string"
        },
        "height": {
          "description": "The height of the output video for this layer. The value can be absolute (in pixels) or relative (in percentage). For example 50% means the output video has half as many pixels in height as the input.",
          "type": "string"
        },
        "label": {
          "description": "The alphanumeric label for this layer, which can be used in multiplexing different video and audio layers, or in naming the output file.",
          "type": "string"
        },
        "width": {
          "description": "The width of the output video for this layer. The value can be absolute (in pixels) or relative (in percentage). For example 50% means the output video has half as many pixels in width as the input.",
          "type": "string"
        }
      },
      "required": [
        "@odata.type"
      ],
      "type": "object"
    },
    "PresentationTimeRange": {
      "description": "The presentation time range, this is asset related and not recommended for Account Filter.",
      "properties": {
        "endTimestamp": {
          "description": "The absolute end time boundary.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "forceEndTimestamp": {
          "description": "The indicator of forcing existing of end time stamp.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "liveBackoffDuration": {
          "description": "The relative to end right edge.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "presentationWindowDuration": {
          "description": "The relative to end sliding window.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "startTimestamp": {
          "description": "The absolute start time boundary.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "timescale": {
          "description": "The time scale of time stamps.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "Preset": {
      "description": "Base type for all Presets, which define the recipe or instructions on how the input media files should be processed.",
      "oneOf": [
        {
          "description": "A video analyzer preset that extracts insights (rich metadata) from both audio and video, and outputs a JSON format file.",
          "properties": {
            "@odata.type": {
              "enum": [
                "#Microsoft.Media.VideoAnalyzerPreset"
              ],
              "type": "string"
            },
            "audioLanguage": {
              "description": "The language for the audio payload in the input using the BCP-47 format of 'language tag-region' (e.g: 'en-US').  If you know the language of your content, it is recommended that you specify it. The language must be specified explicitly for AudioAnalysisMode::Basic, since automatic language detection is not included in basic mode. If the language isn't specified or set to null, automatic language detection will choose the first language detected and process with the selected language for the duration of the file. It does not currently support dynamically switching between languages after the first language is detected. The automatic detection works best with audio recordings with clearly discernable speech. If automatic detection fails to find the language, transcription would fallback to 'en-US'.\" The list of supported languages is available here: https://go.microsoft.com/fwlink/?linkid=2109463",
              "type": "string"
            },
            "experimentalOptions": {
              "description": "Dictionary containing key value pairs for parameters not exposed in the preset itself",
              "oneOf": [
                {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "properties": {},
                  "type": "object"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "insightsToExtract": {
              "description": "Defines the type of insights that you want the service to generate. The allowed values are 'AudioInsightsOnly', 'VideoInsightsOnly', and 'AllInsights'. The default is AllInsights. If you set this to AllInsights and the input is audio only, then only audio insights are generated. Similarly if the input is video only, then only video insights are generated. It is recommended that you not use AudioInsightsOnly if you expect some of your inputs to be video only; or use VideoInsightsOnly if you expect some of your inputs to be audio only. Your Jobs in such conditions would error out.",
              "oneOf": [
                {
                  "enum": [
                    "AudioInsightsOnly",
                    "VideoInsightsOnly",
                    "AllInsights"
                  ],
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "mode": {
              "description": "Determines the set of audio analysis operations to be performed. If unspecified, the Standard AudioAnalysisMode would be chosen.",
              "oneOf": [
                {
                  "enum": [
                    "Standard",
                    "Basic"
                  ],
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "@odata.type"
          ],
          "type": "object"
        },
        {
          "description": "Describes a built-in preset for encoding the input video with the Standard Encoder.",
          "properties": {
            "@odata.type": {
              "enum": [
                "#Microsoft.Media.BuiltInStandardEncoderPreset"
              ],
              "type": "string"
            },
            "configurations": {
              "description": "PresetConfigurations are only supported for the ContentAwareEncoding and H265ContentAwareEncoding built-in presets. These settings will not affect other built-in or custom defined presets.",
              "oneOf": [
                {
                  "$ref": "#/definitions/PresetConfigurations"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "presetName": {
              "description": "The built-in preset to be used for encoding videos.",
              "oneOf": [
                {
                  "enum": [
                    "H264SingleBitrateSD",
                    "H264SingleBitrate720p",
                    "H264SingleBitrate1080p",
                    "AdaptiveStreaming",
                    "AACGoodQualityAudio",
                    "ContentAwareEncodingExperimental",
                    "ContentAwareEncoding",
                    "CopyAllBitrateNonInterleaved",
                    "H264MultipleBitrate1080p",
                    "H264MultipleBitrate720p",
                    "H264MultipleBitrateSD",
                    "H265ContentAwareEncoding",
                    "H265AdaptiveStreaming",
                    "H265SingleBitrate720p",
                    "H265SingleBitrate1080p",
                    "H265SingleBitrate4K"
                  ],
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "presetName",
            "@odata.type"
          ],
          "type": "object"
        },
        {
          "description": "Describes all the settings to be used when analyzing a video in order to detect (and optionally redact) all the faces present.",
          "properties": {
            "@odata.type": {
              "enum": [
                "#Microsoft.Media.FaceDetectorPreset"
              ],
              "type": "string"
            },
            "blurType": {
              "description": "Blur type",
              "oneOf": [
                {
                  "enum": [
                    "Box",
                    "Low",
                    "Med",
                    "High",
                    "Black"
                  ],
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "experimentalOptions": {
              "description": "Dictionary containing key value pairs for parameters not exposed in the preset itself",
              "oneOf": [
                {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "properties": {},
                  "type": "object"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "mode": {
              "description": "This mode provides the ability to choose between the following settings: 1) Analyze - For detection only.This mode generates a metadata JSON file marking appearances of faces throughout the video.Where possible, appearances of the same person are assigned the same ID. 2) Combined - Additionally redacts(blurs) detected faces. 3) Redact - This enables a 2-pass process, allowing for selective redaction of a subset of detected faces.It takes in the metadata file from a prior analyze pass, along with the source video, and a user-selected subset of IDs that require redaction.",
              "oneOf": [
                {
                  "enum": [
                    "Analyze",
                    "Redact",
                    "Combined"
                  ],
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "resolution": {
              "description": "Specifies the maximum resolution at which your video is analyzed. The default behavior is \"SourceResolution,\" which will keep the input video at its original resolution when analyzed. Using \"StandardDefinition\" will resize input videos to standard definition while preserving the appropriate aspect ratio. It will only resize if the video is of higher resolution. For example, a 1920x1080 input would be scaled to 640x360 before processing. Switching to \"StandardDefinition\" will reduce the time it takes to process high resolution video. It may also reduce the cost of using this component (see https://azure.microsoft.com/en-us/pricing/details/media-services/#analytics for details). However, faces that end up being too small in the resized video may not be detected.",
              "oneOf": [
                {
                  "enum": [
                    "SourceResolution",
                    "StandardDefinition"
                  ],
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "@odata.type"
          ],
          "type": "object"
        },
        {
          "description": "Describes all the settings to be used when encoding the input video with the Standard Encoder.",
          "properties": {
            "@odata.type": {
              "enum": [
                "#Microsoft.Media.StandardEncoderPreset"
              ],
              "type": "string"
            },
            "codecs": {
              "description": "The list of codecs to be used when encoding the input video.",
              "oneOf": [
                {
                  "items": {
                    "$ref": "#/definitions/Codec"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "filters": {
              "description": "One or more filtering operations that are applied to the input media before encoding.",
              "oneOf": [
                {
                  "$ref": "#/definitions/Filters"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "formats": {
              "description": "The list of outputs to be produced by the encoder.",
              "oneOf": [
                {
                  "items": {
                    "$ref": "#/definitions/Format"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "codecs",
            "formats",
            "@odata.type"
          ],
          "type": "object"
        }
      ],
      "properties": {},
      "type": "object"
    },
    "PresetConfigurations": {
      "description": "An object of optional configuration settings for encoder.",
      "properties": {
        "complexity": {
          "description": "Allows you to configure the encoder settings to control the balance between speed and quality. Example: set Complexity as Speed for faster encoding but less compression efficiency.",
          "oneOf": [
            {
              "enum": [
                "Speed",
                "Balanced",
                "Quality"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "interleaveOutput": {
          "description": "Sets the interleave mode of the output to control how audio and video are stored in the container format. Example: set InterleavedOutput as NonInterleavedOutput to produce audio-only and video-only outputs in separate MP4 files.",
          "oneOf": [
            {
              "enum": [
                "NonInterleavedOutput",
                "InterleavedOutput"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "keyFrameIntervalInSeconds": {
          "description": "The key frame interval in seconds. Example: set KeyFrameIntervalInSeconds as 2 to reduce the playback buffering for some players.",
          "oneOf": [
            {
              "type": "number"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "maxBitrateBps": {
          "description": "The maximum bitrate in bits per second (threshold for the top video layer). Example: set MaxBitrateBps as 6000000 to avoid producing very high bitrate outputs for contents with high complexity.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "maxHeight": {
          "description": "The maximum height of output video layers. Example: set MaxHeight as 720 to produce output layers up to 720P even if the input is 4K.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "maxLayers": {
          "description": "The maximum number of output video layers. Example: set MaxLayers as 4 to make sure at most 4 output layers are produced to control the overall cost of the encoding job.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "minBitrateBps": {
          "description": "The minimum bitrate in bits per second (threshold for the bottom video layer). Example: set MinBitrateBps as 200000 to have a bottom layer that covers users with low network bandwidth.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "minHeight": {
          "description": "The minimum height of output video layers. Example: set MinHeight as 360 to avoid output layers of smaller resolutions like 180P.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "PrivateEndpoint": {
      "description": "The Private Endpoint resource.",
      "properties": {},
      "type": "object"
    },
    "PrivateEndpointConnectionProperties": {
      "description": "Properties of the PrivateEndpointConnectProperties.",
      "properties": {
        "privateEndpoint": {
          "description": "The resource of private end point.",
          "oneOf": [
            {
              "$ref": "#/definitions/PrivateEndpoint"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "privateLinkServiceConnectionState": {
          "description": "A collection of information about the state of the connection between service consumer and provider.",
          "oneOf": [
            {
              "$ref": "#/definitions/PrivateLinkServiceConnectionState"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "privateLinkServiceConnectionState"
      ],
      "type": "object"
    },
    "PrivateLinkServiceConnectionState": {
      "description": "A collection of information about the state of the connection between service consumer and provider.",
      "properties": {
        "actionsRequired": {
          "description": "A message indicating if changes on the service provider require any updates on the consumer.",
          "type": "string"
        },
        "description": {
          "description": "The reason for approval/rejection of the connection.",
          "type": "string"
        },
        "status": {
          "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
          "oneOf": [
            {
              "enum": [
                "Pending",
                "Approved",
                "Rejected"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "Rectangle": {
      "description": "Describes the properties of a rectangular window applied to the input media before processing it.",
      "properties": {
        "height": {
          "description": "The height of the rectangular region in pixels. This can be absolute pixel value (e.g 100), or relative to the size of the video (For example, 50%).",
          "type": "string"
        },
        "left": {
          "description": "The number of pixels from the left-margin. This can be absolute pixel value (e.g 100), or relative to the size of the video (For example, 50%).",
          "type": "string"
        },
        "top": {
          "description": "The number of pixels from the top-margin. This can be absolute pixel value (e.g 100), or relative to the size of the video (For example, 50%).",
          "type": "string"
        },
        "width": {
          "description": "The width of the rectangular region in pixels. This can be absolute pixel value (e.g 100), or relative to the size of the video (For example, 50%).",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ResourceIdentity": {
      "properties": {
        "useSystemAssignedIdentity": {
          "description": "Indicates whether to use System Assigned Managed Identity. Mutual exclusive with User Assigned Managed Identity.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "userAssignedIdentity": {
          "description": "The user assigned managed identity's ARM ID to use when accessing a resource.",
          "type": "string"
        }
      },
      "required": [
        "useSystemAssignedIdentity"
      ],
      "type": "object"
    },
    "StorageAccount": {
      "description": "The storage account details.",
      "properties": {
        "id": {
          "description": "The ID of the storage account resource. Media Services relies on tables and queues as well as blobs, so the primary storage account must be a Standard Storage account (either Microsoft.ClassicStorage or Microsoft.Storage). Blob only storage accounts can be added as secondary storage accounts.",
          "type": "string"
        },
        "identity": {
          "description": "The storage account identity.",
          "oneOf": [
            {
              "$ref": "#/definitions/ResourceIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "description": "The type of the storage account.",
          "oneOf": [
            {
              "enum": [
                "Primary",
                "Secondary"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "type"
      ],
      "type": "object"
    },
    "StreamingEndpointAccessControl": {
      "description": "Streaming endpoint access control definition.",
      "properties": {
        "akamai": {
          "description": "The access control of Akamai",
          "oneOf": [
            {
              "$ref": "#/definitions/AkamaiAccessControl"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "ip": {
          "description": "The IP access control of the streaming endpoint.",
          "oneOf": [
            {
              "$ref": "#/definitions/IPAccessControl"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "StreamingEndpointProperties": {
      "description": "The streaming endpoint properties.",
      "properties": {
        "accessControl": {
          "description": "The access control definition of the streaming endpoint.",
          "oneOf": [
            {
              "$ref": "#/definitions/StreamingEndpointAccessControl"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "availabilitySetName": {
          "description": "This feature is deprecated, do not set a value for this property.",
          "type": "string"
        },
        "cdnEnabled": {
          "description": "The CDN enabled flag.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "cdnProfile": {
          "description": "The CDN profile name.",
          "type": "string"
        },
        "cdnProvider": {
          "description": "The CDN provider name.",
          "type": "string"
        },
        "crossSiteAccessPolicies": {
          "description": "The streaming endpoint access policies.",
          "oneOf": [
            {
              "$ref": "#/definitions/CrossSiteAccessPolicies"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "customHostNames": {
          "description": "The custom host names of the streaming endpoint",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "description": {
          "description": "The streaming endpoint description.",
          "type": "string"
        },
        "maxCacheAge": {
          "description": "Max cache age",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "scaleUnits": {
          "description": "The number of scale units. Use the Scale operation to adjust this value.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "scaleUnits"
      ],
      "type": "object"
    },
    "StreamingLocatorContentKey": {
      "description": "Class for content key in Streaming Locator",
      "properties": {
        "id": {
          "description": "ID of Content Key",
          "oneOf": [
            {
              "pattern": "^[0-9a-fA-F]{8}(-[0-9a-fA-F]{4}){3}-[0-9a-fA-F]{12}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "labelReferenceInStreamingPolicy": {
          "description": "Label of Content Key as specified in the Streaming Policy",
          "type": "string"
        },
        "value": {
          "description": "Value of Content Key",
          "type": "string"
        }
      },
      "required": [
        "id"
      ],
      "type": "object"
    },
    "StreamingLocatorProperties": {
      "description": "Properties of the Streaming Locator.",
      "properties": {
        "alternativeMediaId": {
          "description": "Alternative Media ID of this Streaming Locator",
          "type": "string"
        },
        "assetName": {
          "description": "Asset Name",
          "type": "string"
        },
        "contentKeys": {
          "description": "The ContentKeys used by this Streaming Locator.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/StreamingLocatorContentKey"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "defaultContentKeyPolicyName": {
          "description": "Name of the default ContentKeyPolicy used by this Streaming Locator.",
          "type": "string"
        },
        "endTime": {
          "description": "The end time of the Streaming Locator.",
          "format": "date-time",
          "type": "string"
        },
        "filters": {
          "description": "A list of asset or account filters which apply to this streaming locator",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "startTime": {
          "description": "The start time of the Streaming Locator.",
          "format": "date-time",
          "type": "string"
        },
        "streamingLocatorId": {
          "description": "The StreamingLocatorId of the Streaming Locator.",
          "oneOf": [
            {
              "pattern": "^[0-9a-fA-F]{8}(-[0-9a-fA-F]{4}){3}-[0-9a-fA-F]{12}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "streamingPolicyName": {
          "description": "Name of the Streaming Policy used by this Streaming Locator. Either specify the name of Streaming Policy you created or use one of the predefined Streaming Policies. The predefined Streaming Policies available are: 'Predefined_DownloadOnly', 'Predefined_ClearStreamingOnly', 'Predefined_DownloadAndClearStreaming', 'Predefined_ClearKey', 'Predefined_MultiDrmCencStreaming' and 'Predefined_MultiDrmStreaming'",
          "type": "string"
        }
      },
      "required": [
        "assetName",
        "streamingPolicyName"
      ],
      "type": "object"
    },
    "StreamingPolicyContentKey": {
      "description": "Class to specify properties of content key",
      "properties": {
        "label": {
          "description": "Label can be used to specify Content Key when creating a Streaming Locator",
          "type": "string"
        },
        "policyName": {
          "description": "Policy used by Content Key",
          "type": "string"
        },
        "tracks": {
          "description": "Tracks which use this content key",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/TrackSelection"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "StreamingPolicyContentKeys": {
      "description": "Class to specify properties of all content keys in Streaming Policy",
      "properties": {
        "defaultKey": {
          "description": "Default content key for an encryption scheme",
          "oneOf": [
            {
              "$ref": "#/definitions/DefaultKey"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "keyToTrackMappings": {
          "description": "Representing tracks needs separate content key",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/StreamingPolicyContentKey"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "StreamingPolicyFairPlayConfiguration": {
      "description": "Class to specify configurations of FairPlay in Streaming Policy",
      "properties": {
        "allowPersistentLicense": {
          "description": "All license to be persistent or not",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "customLicenseAcquisitionUrlTemplate": {
          "description": "Template for the URL of the custom service delivering licenses to end user players.  Not required when using Azure Media Services for issuing licenses.  The template supports replaceable tokens that the service will update at runtime with the value specific to the request.  The currently supported token values are {AlternativeMediaId}, which is replaced with the value of StreamingLocatorId.AlternativeMediaId, and {ContentKeyId}, which is replaced with the value of identifier of the key being requested.",
          "type": "string"
        }
      },
      "required": [
        "allowPersistentLicense"
      ],
      "type": "object"
    },
    "StreamingPolicyPlayReadyConfiguration": {
      "description": "Class to specify configurations of PlayReady in Streaming Policy",
      "properties": {
        "customLicenseAcquisitionUrlTemplate": {
          "description": "Template for the URL of the custom service delivering licenses to end user players.  Not required when using Azure Media Services for issuing licenses.  The template supports replaceable tokens that the service will update at runtime with the value specific to the request.  The currently supported token values are {AlternativeMediaId}, which is replaced with the value of StreamingLocatorId.AlternativeMediaId, and {ContentKeyId}, which is replaced with the value of identifier of the key being requested.",
          "type": "string"
        },
        "playReadyCustomAttributes": {
          "description": "Custom attributes for PlayReady",
          "type": "string"
        }
      },
      "type": "object"
    },
    "StreamingPolicyProperties": {
      "description": "Class to specify properties of Streaming Policy",
      "properties": {
        "commonEncryptionCbcs": {
          "description": "Configuration of CommonEncryptionCbcs",
          "oneOf": [
            {
              "$ref": "#/definitions/CommonEncryptionCbcs"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "commonEncryptionCenc": {
          "description": "Configuration of CommonEncryptionCenc",
          "oneOf": [
            {
              "$ref": "#/definitions/CommonEncryptionCenc"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "defaultContentKeyPolicyName": {
          "description": "Default ContentKey used by current Streaming Policy",
          "type": "string"
        },
        "envelopeEncryption": {
          "description": "Configuration of EnvelopeEncryption",
          "oneOf": [
            {
              "$ref": "#/definitions/EnvelopeEncryption"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "noEncryption": {
          "description": "Configurations of NoEncryption",
          "oneOf": [
            {
              "$ref": "#/definitions/NoEncryption"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "StreamingPolicyWidevineConfiguration": {
      "description": "Class to specify configurations of Widevine in Streaming Policy",
      "properties": {
        "customLicenseAcquisitionUrlTemplate": {
          "description": "Template for the URL of the custom service delivering licenses to end user players.  Not required when using Azure Media Services for issuing licenses.  The template supports replaceable tokens that the service will update at runtime with the value specific to the request.  The currently supported token values are {AlternativeMediaId}, which is replaced with the value of StreamingLocatorId.AlternativeMediaId, and {ContentKeyId}, which is replaced with the value of identifier of the key being requested.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "TrackDescriptor": {
      "description": "Base type for all TrackDescriptor types, which define the metadata and selection for tracks that should be processed by a Job",
      "oneOf": [
        {
          "description": "Select audio tracks from the input by specifying an attribute and an attribute filter.",
          "properties": {
            "@odata.type": {
              "enum": [
                "#Microsoft.Media.SelectAudioTrackByAttribute"
              ],
              "type": "string"
            },
            "attribute": {
              "description": "The TrackAttribute to filter the tracks by.",
              "oneOf": [
                {
                  "enum": [
                    "Bitrate",
                    "Language"
                  ],
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "channelMapping": {
              "description": "Optional designation for single channel audio tracks.  Can be used to combine the tracks into stereo or multi-channel audio tracks.",
              "oneOf": [
                {
                  "enum": [
                    "FrontLeft",
                    "FrontRight",
                    "Center",
                    "LowFrequencyEffects",
                    "BackLeft",
                    "BackRight",
                    "StereoLeft",
                    "StereoRight"
                  ],
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "filter": {
              "description": "The type of AttributeFilter to apply to the TrackAttribute in order to select the tracks.",
              "oneOf": [
                {
                  "enum": [
                    "All",
                    "Top",
                    "Bottom",
                    "ValueEquals"
                  ],
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "filterValue": {
              "description": "The value to filter the tracks by.  Only used when AttributeFilter.ValueEquals is specified for the Filter property.",
              "type": "string"
            }
          },
          "required": [
            "attribute",
            "filter",
            "@odata.type"
          ],
          "type": "object"
        },
        {
          "description": "Select audio tracks from the input by specifying a track identifier.",
          "properties": {
            "@odata.type": {
              "enum": [
                "#Microsoft.Media.SelectAudioTrackById"
              ],
              "type": "string"
            },
            "channelMapping": {
              "description": "Optional designation for single channel audio tracks.  Can be used to combine the tracks into stereo or multi-channel audio tracks.",
              "oneOf": [
                {
                  "enum": [
                    "FrontLeft",
                    "FrontRight",
                    "Center",
                    "LowFrequencyEffects",
                    "BackLeft",
                    "BackRight",
                    "StereoLeft",
                    "StereoRight"
                  ],
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "trackId": {
              "description": "Track identifier to select",
              "oneOf": [
                {
                  "type": "integer"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "trackId",
            "@odata.type"
          ],
          "type": "object"
        },
        {
          "description": "Select video tracks from the input by specifying an attribute and an attribute filter.",
          "properties": {
            "@odata.type": {
              "enum": [
                "#Microsoft.Media.SelectVideoTrackByAttribute"
              ],
              "type": "string"
            },
            "attribute": {
              "description": "The TrackAttribute to filter the tracks by.",
              "oneOf": [
                {
                  "enum": [
                    "Bitrate",
                    "Language"
                  ],
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "filter": {
              "description": "The type of AttributeFilter to apply to the TrackAttribute in order to select the tracks.",
              "oneOf": [
                {
                  "enum": [
                    "All",
                    "Top",
                    "Bottom",
                    "ValueEquals"
                  ],
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "filterValue": {
              "description": "The value to filter the tracks by.  Only used when AttributeFilter.ValueEquals is specified for the Filter property. For TrackAttribute.Bitrate, this should be an integer value in bits per second (e.g: '1500000').  The TrackAttribute.Language is not supported for video tracks.",
              "type": "string"
            }
          },
          "required": [
            "attribute",
            "filter",
            "@odata.type"
          ],
          "type": "object"
        },
        {
          "description": "Select video tracks from the input by specifying a track identifier.",
          "properties": {
            "@odata.type": {
              "enum": [
                "#Microsoft.Media.SelectVideoTrackById"
              ],
              "type": "string"
            },
            "trackId": {
              "description": "Track identifier to select",
              "oneOf": [
                {
                  "type": "integer"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "trackId",
            "@odata.type"
          ],
          "type": "object"
        }
      ],
      "properties": {},
      "type": "object"
    },
    "TrackPropertyCondition": {
      "description": "Class to specify one track property condition",
      "properties": {
        "operation": {
          "description": "Track property condition operation",
          "oneOf": [
            {
              "enum": [
                "Unknown",
                "Equal"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "property": {
          "description": "Track property type",
          "oneOf": [
            {
              "enum": [
                "Unknown",
                "FourCC"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "value": {
          "description": "Track property value",
          "type": "string"
        }
      },
      "required": [
        "property",
        "operation"
      ],
      "type": "object"
    },
    "TrackSelection": {
      "description": "Class to select a track",
      "properties": {
        "trackSelections": {
          "description": "TrackSelections is a track property condition list which can specify track(s)",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/TrackPropertyCondition"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "TransformOutput": {
      "description": "Describes the properties of a TransformOutput, which are the rules to be applied while generating the desired output.",
      "properties": {
        "onError": {
          "description": "A Transform can define more than one outputs. This property defines what the service should do when one output fails - either continue to produce other outputs, or, stop the other outputs. The overall Job state will not reflect failures of outputs that are specified with 'ContinueJob'. The default is 'StopProcessingJob'.",
          "oneOf": [
            {
              "enum": [
                "StopProcessingJob",
                "ContinueJob"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "preset": {
          "description": "Preset that describes the operations that will be used to modify, transcode, or extract insights from the source file to generate the output.",
          "oneOf": [
            {
              "$ref": "#/definitions/Preset"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "relativePriority": {
          "description": "Sets the relative priority of the TransformOutputs within a Transform. This sets the priority that the service uses for processing TransformOutputs. The default priority is Normal.",
          "oneOf": [
            {
              "enum": [
                "Low",
                "Normal",
                "High"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "preset"
      ],
      "type": "object"
    },
    "TransformProperties": {
      "description": "A Transform.",
      "properties": {
        "description": {
          "description": "An optional verbose description of the Transform.",
          "type": "string"
        },
        "outputs": {
          "description": "An array of one or more TransformOutputs that the Transform should generate.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/TransformOutput"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "outputs"
      ],
      "type": "object"
    },
    "UserAssignedManagedIdentity": {
      "properties": {},
      "type": "object"
    },
    "mediaServices_accountFilters_childResource": {
      "description": "Microsoft.Media/mediaServices/accountFilters",
      "properties": {
        "apiVersion": {
          "enum": [
            "2021-06-01"
          ],
          "type": "string"
        },
        "name": {
          "description": "The Account Filter name",
          "type": "string"
        },
        "properties": {
          "description": "The Media Filter properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/MediaFilterProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "accountFilters"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "mediaServices_assets_assetFilters_childResource": {
      "description": "Microsoft.Media/mediaServices/assets/assetFilters",
      "properties": {
        "apiVersion": {
          "enum": [
            "2021-06-01"
          ],
          "type": "string"
        },
        "name": {
          "description": "The Asset Filter name",
          "type": "string"
        },
        "properties": {
          "description": "The Media Filter properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/MediaFilterProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "assetFilters"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "mediaServices_assets_childResource": {
      "description": "Microsoft.Media/mediaServices/assets",
      "properties": {
        "apiVersion": {
          "enum": [
            "2021-06-01"
          ],
          "type": "string"
        },
        "name": {
          "description": "The Asset name.",
          "type": "string"
        },
        "properties": {
          "description": "The resource properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/AssetProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "assets"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "mediaServices_contentKeyPolicies_childResource": {
      "description": "Microsoft.Media/mediaServices/contentKeyPolicies",
      "properties": {
        "apiVersion": {
          "enum": [
            "2021-06-01"
          ],
          "type": "string"
        },
        "name": {
          "description": "The Content Key Policy name.",
          "type": "string"
        },
        "properties": {
          "description": "The properties of the Content Key Policy.",
          "oneOf": [
            {
              "$ref": "#/definitions/ContentKeyPolicyProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "contentKeyPolicies"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "mediaServices_streamingLocators_childResource": {
      "description": "Microsoft.Media/mediaServices/streamingLocators",
      "properties": {
        "apiVersion": {
          "enum": [
            "2021-06-01"
          ],
          "type": "string"
        },
        "name": {
          "description": "The Streaming Locator name.",
          "type": "string"
        },
        "properties": {
          "description": "Properties of the Streaming Locator.",
          "oneOf": [
            {
              "$ref": "#/definitions/StreamingLocatorProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "streamingLocators"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "mediaServices_streamingPolicies_childResource": {
      "description": "Microsoft.Media/mediaServices/streamingPolicies",
      "properties": {
        "apiVersion": {
          "enum": [
            "2021-06-01"
          ],
          "type": "string"
        },
        "name": {
          "description": "The Streaming Policy name.",
          "type": "string"
        },
        "properties": {
          "description": "Class to specify properties of Streaming Policy",
          "oneOf": [
            {
              "$ref": "#/definitions/StreamingPolicyProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "streamingPolicies"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "mediaServices_transforms_childResource": {
      "description": "Microsoft.Media/mediaServices/transforms",
      "properties": {
        "apiVersion": {
          "enum": [
            "2021-06-01"
          ],
          "type": "string"
        },
        "name": {
          "description": "The Transform name.",
          "type": "string"
        },
        "properties": {
          "description": "The resource properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/TransformProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "transforms"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "mediaServices_transforms_jobs_childResource": {
      "description": "Microsoft.Media/mediaServices/transforms/jobs",
      "properties": {
        "apiVersion": {
          "enum": [
            "2021-06-01"
          ],
          "type": "string"
        },
        "name": {
          "description": "The Job name.",
          "type": "string"
        },
        "properties": {
          "description": "The resource properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/JobProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "jobs"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "mediaservices_liveEvents_childResource": {
      "description": "Microsoft.Media/mediaservices/liveEvents",
      "properties": {
        "apiVersion": {
          "enum": [
            "2021-06-01"
          ],
          "type": "string"
        },
        "location": {
          "description": "The geo-location where the resource lives",
          "type": "string"
        },
        "name": {
          "description": "The name of the live event, maximum length is 32.",
          "oneOf": [
            {
              "maxLength": 32,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9]+(-*[a-zA-Z0-9])*$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The live event properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/LiveEventProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Resource tags.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "liveEvents"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "mediaservices_liveEvents_liveOutputs_childResource": {
      "description": "Microsoft.Media/mediaservices/liveEvents/liveOutputs",
      "properties": {
        "apiVersion": {
          "enum": [
            "2021-06-01"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the live output.",
          "oneOf": [
            {
              "maxLength": 256,
              "minLength": 1,
              "pattern": "^([a-zA-Z0-9])+(-*[a-zA-Z0-9])*$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Live output properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/LiveOutputProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "liveOutputs"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "mediaservices_privateEndpointConnections_childResource": {
      "description": "Microsoft.Media/mediaservices/privateEndpointConnections",
      "properties": {
        "apiVersion": {
          "enum": [
            "2021-06-01"
          ],
          "type": "string"
        },
        "name": {
          "description": "",
          "type": "string"
        },
        "properties": {
          "description": "Resource properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/PrivateEndpointConnectionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "privateEndpointConnections"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "mediaservices_streamingEndpoints_childResource": {
      "description": "Microsoft.Media/mediaservices/streamingEndpoints",
      "properties": {
        "apiVersion": {
          "enum": [
            "2021-06-01"
          ],
          "type": "string"
        },
        "location": {
          "description": "The geo-location where the resource lives",
          "type": "string"
        },
        "name": {
          "description": "The name of the streaming endpoint, maximum length is 24.",
          "oneOf": [
            {
              "maxLength": 24,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9]+(-*[a-zA-Z0-9])*$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The streaming endpoint properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/StreamingEndpointProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Resource tags.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "streamingEndpoints"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    }
  }
}