{
  "id": "https://schema.management.azure.com/schemas/2021-10-15-preview/Microsoft.EventGrid.json#",
  "title": "Microsoft.EventGrid",
  "description": "Microsoft EventGrid Resource Types",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "resourceDefinitions": {
    "domains": {
      "description": "Microsoft.EventGrid/domains",
      "properties": {
        "apiVersion": {
          "enum": [
            "2021-10-15-preview"
          ],
          "type": "string"
        },
        "identity": {
          "description": "Identity information for the Event Grid Domain resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/IdentityInfo"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "location": {
          "description": "Location of the resource.",
          "type": "string"
        },
        "name": {
          "description": "Name of the domain.",
          "type": "string"
        },
        "properties": {
          "description": "Properties of the Event Grid Domain resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/DomainProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/domains_topics_childResource"
              },
              {
                "$ref": "#/definitions/domains_eventSubscriptions_childResource"
              },
              {
                "$ref": "#/definitions/domains_privateEndpointConnections_childResource"
              }
            ]
          },
          "type": "array"
        },
        "sku": {
          "description": "The Sku pricing tier for the Event Grid Domain resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/ResourceSku"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Tags of the resource.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.EventGrid/domains"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "domains_eventSubscriptions": {
      "description": "Microsoft.EventGrid/domains/eventSubscriptions",
      "properties": {
        "apiVersion": {
          "enum": [
            "2021-10-15-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Name of the event subscription to be created. Event subscription names must be between 3 and 100 characters in length and use alphanumeric letters only.",
          "type": "string"
        },
        "properties": {
          "description": "Properties of the event subscription.",
          "oneOf": [
            {
              "$ref": "#/definitions/EventSubscriptionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.EventGrid/domains/eventSubscriptions"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "domains_privateEndpointConnections": {
      "description": "Microsoft.EventGrid/domains/privateEndpointConnections",
      "properties": {
        "apiVersion": {
          "enum": [
            "2021-10-15-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the private endpoint connection connection.",
          "type": "string"
        },
        "properties": {
          "description": "Properties of the PrivateEndpointConnection.",
          "oneOf": [
            {
              "$ref": "#/definitions/PrivateEndpointConnectionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.EventGrid/domains/privateEndpointConnections"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "domains_topics": {
      "description": "Microsoft.EventGrid/domains/topics",
      "properties": {
        "apiVersion": {
          "enum": [
            "2021-10-15-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Name of the domain topic.",
          "type": "string"
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/domains_topics_eventSubscriptions_childResource"
              }
            ]
          },
          "type": "array"
        },
        "type": {
          "enum": [
            "Microsoft.EventGrid/domains/topics"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "domains_topics_eventSubscriptions": {
      "description": "Microsoft.EventGrid/domains/topics/eventSubscriptions",
      "properties": {
        "apiVersion": {
          "enum": [
            "2021-10-15-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Name of the event subscription to be created. Event subscription names must be between 3 and 100 characters in length and use alphanumeric letters only.",
          "type": "string"
        },
        "properties": {
          "description": "Properties of the event subscription.",
          "oneOf": [
            {
              "$ref": "#/definitions/EventSubscriptionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.EventGrid/domains/topics/eventSubscriptions"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "partnerConfigurations": {
      "description": "Microsoft.EventGrid/partnerConfigurations",
      "properties": {
        "apiVersion": {
          "enum": [
            "2021-10-15-preview"
          ],
          "type": "string"
        },
        "location": {
          "description": "Location of the resource.",
          "type": "string"
        },
        "name": {
          "oneOf": [
            {
              "enum": [
                "default"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Properties of the partner configuration.",
          "oneOf": [
            {
              "$ref": "#/definitions/PartnerConfigurationProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Tags of the resource.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.EventGrid/partnerConfigurations"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "partnerDestinations": {
      "description": "Microsoft.EventGrid/partnerDestinations",
      "properties": {
        "apiVersion": {
          "enum": [
            "2021-10-15-preview"
          ],
          "type": "string"
        },
        "location": {
          "description": "Location of the resource.",
          "type": "string"
        },
        "name": {
          "description": "Name of the partner destination.",
          "type": "string"
        },
        "properties": {
          "description": "Properties of the Partner Destination.",
          "oneOf": [
            {
              "$ref": "#/definitions/PartnerDestinationProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Tags of the resource.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.EventGrid/partnerDestinations"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "partnerNamespaces": {
      "description": "Microsoft.EventGrid/partnerNamespaces",
      "properties": {
        "apiVersion": {
          "enum": [
            "2021-10-15-preview"
          ],
          "type": "string"
        },
        "location": {
          "description": "Location of the resource.",
          "type": "string"
        },
        "name": {
          "description": "Name of the partner namespace.",
          "type": "string"
        },
        "properties": {
          "description": "Properties of the Partner Namespace.",
          "oneOf": [
            {
              "$ref": "#/definitions/PartnerNamespaceProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/partnerNamespaces_channels_childResource"
              },
              {
                "$ref": "#/definitions/partnerNamespaces_eventChannels_childResource"
              },
              {
                "$ref": "#/definitions/partnerNamespaces_privateEndpointConnections_childResource"
              }
            ]
          },
          "type": "array"
        },
        "tags": {
          "description": "Tags of the resource.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.EventGrid/partnerNamespaces"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "partnerNamespaces_channels": {
      "description": "Microsoft.EventGrid/partnerNamespaces/channels",
      "properties": {
        "apiVersion": {
          "enum": [
            "2021-10-15-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Name of the channel.",
          "type": "string"
        },
        "properties": {
          "description": "Properties of the Channel.",
          "oneOf": [
            {
              "$ref": "#/definitions/ChannelProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.EventGrid/partnerNamespaces/channels"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "partnerNamespaces_eventChannels": {
      "description": "Microsoft.EventGrid/partnerNamespaces/eventChannels",
      "properties": {
        "apiVersion": {
          "enum": [
            "2021-10-15-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Name of the event channel.",
          "type": "string"
        },
        "properties": {
          "description": "Properties of the EventChannel.",
          "oneOf": [
            {
              "$ref": "#/definitions/EventChannelProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.EventGrid/partnerNamespaces/eventChannels"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "partnerNamespaces_privateEndpointConnections": {
      "description": "Microsoft.EventGrid/partnerNamespaces/privateEndpointConnections",
      "properties": {
        "apiVersion": {
          "enum": [
            "2021-10-15-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the private endpoint connection connection.",
          "type": "string"
        },
        "properties": {
          "description": "Properties of the PrivateEndpointConnection.",
          "oneOf": [
            {
              "$ref": "#/definitions/PrivateEndpointConnectionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.EventGrid/partnerNamespaces/privateEndpointConnections"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "partnerRegistrations": {
      "description": "Microsoft.EventGrid/partnerRegistrations",
      "properties": {
        "apiVersion": {
          "enum": [
            "2021-10-15-preview"
          ],
          "type": "string"
        },
        "location": {
          "description": "Location of the resource.",
          "type": "string"
        },
        "name": {
          "description": "Name of the partner registration.",
          "type": "string"
        },
        "properties": {
          "description": "Properties of the partner registration.",
          "oneOf": [
            {
              "$ref": "#/definitions/PartnerRegistrationProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Tags of the resource.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.EventGrid/partnerRegistrations"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "partnerTopics": {
      "description": "Microsoft.EventGrid/partnerTopics",
      "properties": {
        "apiVersion": {
          "enum": [
            "2021-10-15-preview"
          ],
          "type": "string"
        },
        "identity": {
          "description": "Identity information for the Partner Topic resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/IdentityInfo"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "location": {
          "description": "Location of the resource.",
          "type": "string"
        },
        "name": {
          "description": "Name of the partner topic.",
          "type": "string"
        },
        "properties": {
          "description": "Properties of the Partner Topic.",
          "oneOf": [
            {
              "$ref": "#/definitions/PartnerTopicProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/partnerTopics_eventSubscriptions_childResource"
              }
            ]
          },
          "type": "array"
        },
        "tags": {
          "description": "Tags of the resource.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.EventGrid/partnerTopics"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "partnerTopics_eventSubscriptions": {
      "description": "Microsoft.EventGrid/partnerTopics/eventSubscriptions",
      "properties": {
        "apiVersion": {
          "enum": [
            "2021-10-15-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Name of the event subscription to be created. Event subscription names must be between 3 and 100 characters in length and use alphanumeric letters only.",
          "type": "string"
        },
        "properties": {
          "description": "Properties of the event subscription.",
          "oneOf": [
            {
              "$ref": "#/definitions/EventSubscriptionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.EventGrid/partnerTopics/eventSubscriptions"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "systemTopics": {
      "description": "Microsoft.EventGrid/systemTopics",
      "properties": {
        "apiVersion": {
          "enum": [
            "2021-10-15-preview"
          ],
          "type": "string"
        },
        "identity": {
          "description": "Identity information for the resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/IdentityInfo"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "location": {
          "description": "Location of the resource.",
          "type": "string"
        },
        "name": {
          "description": "Name of the system topic.",
          "type": "string"
        },
        "properties": {
          "description": "Properties of the system topic.",
          "oneOf": [
            {
              "$ref": "#/definitions/SystemTopicProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/systemTopics_eventSubscriptions_childResource"
              }
            ]
          },
          "type": "array"
        },
        "tags": {
          "description": "Tags of the resource.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.EventGrid/systemTopics"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "systemTopics_eventSubscriptions": {
      "description": "Microsoft.EventGrid/systemTopics/eventSubscriptions",
      "properties": {
        "apiVersion": {
          "enum": [
            "2021-10-15-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Name of the event subscription to be created. Event subscription names must be between 3 and 100 characters in length and use alphanumeric letters only.",
          "type": "string"
        },
        "properties": {
          "description": "Properties of the event subscription.",
          "oneOf": [
            {
              "$ref": "#/definitions/EventSubscriptionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.EventGrid/systemTopics/eventSubscriptions"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "topics": {
      "description": "Microsoft.EventGrid/topics",
      "properties": {
        "apiVersion": {
          "enum": [
            "2021-10-15-preview"
          ],
          "type": "string"
        },
        "extendedLocation": {
          "description": "Extended location of the resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/ExtendedLocation"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "identity": {
          "description": "Identity information for the resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/IdentityInfo"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "kind": {
          "description": "Kind of the resource.",
          "oneOf": [
            {
              "enum": [
                "Azure",
                "AzureArc"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "location": {
          "description": "Location of the resource.",
          "type": "string"
        },
        "name": {
          "description": "Name of the topic.",
          "type": "string"
        },
        "properties": {
          "description": "Properties of the topic.",
          "oneOf": [
            {
              "$ref": "#/definitions/TopicProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/topics_eventSubscriptions_childResource"
              },
              {
                "$ref": "#/definitions/topics_privateEndpointConnections_childResource"
              }
            ]
          },
          "type": "array"
        },
        "sku": {
          "description": "The Sku pricing tier for the topic.",
          "oneOf": [
            {
              "$ref": "#/definitions/ResourceSku"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Tags of the resource.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.EventGrid/topics"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "topics_eventSubscriptions": {
      "description": "Microsoft.EventGrid/topics/eventSubscriptions",
      "properties": {
        "apiVersion": {
          "enum": [
            "2021-10-15-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Name of the event subscription to be created. Event subscription names must be between 3 and 100 characters in length and use alphanumeric letters only.",
          "type": "string"
        },
        "properties": {
          "description": "Properties of the event subscription.",
          "oneOf": [
            {
              "$ref": "#/definitions/EventSubscriptionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.EventGrid/topics/eventSubscriptions"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "topics_privateEndpointConnections": {
      "description": "Microsoft.EventGrid/topics/privateEndpointConnections",
      "properties": {
        "apiVersion": {
          "enum": [
            "2021-10-15-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the private endpoint connection connection.",
          "type": "string"
        },
        "properties": {
          "description": "Properties of the PrivateEndpointConnection.",
          "oneOf": [
            {
              "$ref": "#/definitions/PrivateEndpointConnectionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.EventGrid/topics/privateEndpointConnections"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    }
  },
  "unknown_resourceDefinitions": {
    "eventSubscriptions": {
      "description": "Microsoft.EventGrid/eventSubscriptions",
      "properties": {
        "apiVersion": {
          "enum": [
            "2021-10-15-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Name of the event subscription. Event subscription names must be between 3 and 64 characters in length and should use alphanumeric letters only.",
          "type": "string"
        },
        "properties": {
          "description": "Properties of the event subscription.",
          "oneOf": [
            {
              "$ref": "#/definitions/EventSubscriptionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.EventGrid/eventSubscriptions"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    }
  },
  "definitions": {
    "AdvancedFilter": {
      "description": "This is the base type that represents an advanced filter. To configure an advanced filter, do not directly instantiate an object of this class. Instead, instantiate an object of a derived class such as BoolEqualsAdvancedFilter, NumberInAdvancedFilter, StringEqualsAdvancedFilter etc. depending on the type of the key based on which you want to filter.",
      "oneOf": [
        {
          "description": "BoolEquals Advanced Filter.",
          "properties": {
            "operatorType": {
              "enum": [
                "BoolEquals"
              ],
              "type": "string"
            },
            "value": {
              "description": "The boolean filter value.",
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "operatorType"
          ],
          "type": "object"
        },
        {
          "description": "IsNotNull Advanced Filter.",
          "properties": {
            "operatorType": {
              "enum": [
                "IsNotNull"
              ],
              "type": "string"
            }
          },
          "required": [
            "operatorType"
          ],
          "type": "object"
        },
        {
          "description": "IsNullOrUndefined Advanced Filter.",
          "properties": {
            "operatorType": {
              "enum": [
                "IsNullOrUndefined"
              ],
              "type": "string"
            }
          },
          "required": [
            "operatorType"
          ],
          "type": "object"
        },
        {
          "description": "NumberGreaterThan Advanced Filter.",
          "properties": {
            "operatorType": {
              "enum": [
                "NumberGreaterThan"
              ],
              "type": "string"
            },
            "value": {
              "description": "The filter value.",
              "oneOf": [
                {
                  "type": "number"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "operatorType"
          ],
          "type": "object"
        },
        {
          "description": "NumberGreaterThanOrEquals Advanced Filter.",
          "properties": {
            "operatorType": {
              "enum": [
                "NumberGreaterThanOrEquals"
              ],
              "type": "string"
            },
            "value": {
              "description": "The filter value.",
              "oneOf": [
                {
                  "type": "number"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "operatorType"
          ],
          "type": "object"
        },
        {
          "description": "NumberIn Advanced Filter.",
          "properties": {
            "operatorType": {
              "enum": [
                "NumberIn"
              ],
              "type": "string"
            },
            "values": {
              "description": "The set of filter values.",
              "oneOf": [
                {
                  "items": {
                    "type": "number"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "operatorType"
          ],
          "type": "object"
        },
        {
          "description": "NumberInRange Advanced Filter.",
          "properties": {
            "operatorType": {
              "enum": [
                "NumberInRange"
              ],
              "type": "string"
            },
            "values": {
              "description": "The set of filter values.",
              "oneOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "operatorType"
          ],
          "type": "object"
        },
        {
          "description": "NumberLessThan Advanced Filter.",
          "properties": {
            "operatorType": {
              "enum": [
                "NumberLessThan"
              ],
              "type": "string"
            },
            "value": {
              "description": "The filter value.",
              "oneOf": [
                {
                  "type": "number"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "operatorType"
          ],
          "type": "object"
        },
        {
          "description": "NumberLessThanOrEquals Advanced Filter.",
          "properties": {
            "operatorType": {
              "enum": [
                "NumberLessThanOrEquals"
              ],
              "type": "string"
            },
            "value": {
              "description": "The filter value.",
              "oneOf": [
                {
                  "type": "number"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "operatorType"
          ],
          "type": "object"
        },
        {
          "description": "NumberNotIn Advanced Filter.",
          "properties": {
            "operatorType": {
              "enum": [
                "NumberNotIn"
              ],
              "type": "string"
            },
            "values": {
              "description": "The set of filter values.",
              "oneOf": [
                {
                  "items": {
                    "type": "number"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "operatorType"
          ],
          "type": "object"
        },
        {
          "description": "NumberNotInRange Advanced Filter.",
          "properties": {
            "operatorType": {
              "enum": [
                "NumberNotInRange"
              ],
              "type": "string"
            },
            "values": {
              "description": "The set of filter values.",
              "oneOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "operatorType"
          ],
          "type": "object"
        },
        {
          "description": "StringBeginsWith Advanced Filter.",
          "properties": {
            "operatorType": {
              "enum": [
                "StringBeginsWith"
              ],
              "type": "string"
            },
            "values": {
              "description": "The set of filter values.",
              "oneOf": [
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "operatorType"
          ],
          "type": "object"
        },
        {
          "description": "StringContains Advanced Filter.",
          "properties": {
            "operatorType": {
              "enum": [
                "StringContains"
              ],
              "type": "string"
            },
            "values": {
              "description": "The set of filter values.",
              "oneOf": [
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "operatorType"
          ],
          "type": "object"
        },
        {
          "description": "StringEndsWith Advanced Filter.",
          "properties": {
            "operatorType": {
              "enum": [
                "StringEndsWith"
              ],
              "type": "string"
            },
            "values": {
              "description": "The set of filter values.",
              "oneOf": [
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "operatorType"
          ],
          "type": "object"
        },
        {
          "description": "StringIn Advanced Filter.",
          "properties": {
            "operatorType": {
              "enum": [
                "StringIn"
              ],
              "type": "string"
            },
            "values": {
              "description": "The set of filter values.",
              "oneOf": [
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "operatorType"
          ],
          "type": "object"
        },
        {
          "description": "StringNotBeginsWith Advanced Filter.",
          "properties": {
            "operatorType": {
              "enum": [
                "StringNotBeginsWith"
              ],
              "type": "string"
            },
            "values": {
              "description": "The set of filter values.",
              "oneOf": [
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "operatorType"
          ],
          "type": "object"
        },
        {
          "description": "StringNotContains Advanced Filter.",
          "properties": {
            "operatorType": {
              "enum": [
                "StringNotContains"
              ],
              "type": "string"
            },
            "values": {
              "description": "The set of filter values.",
              "oneOf": [
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "operatorType"
          ],
          "type": "object"
        },
        {
          "description": "StringNotEndsWith Advanced Filter.",
          "properties": {
            "operatorType": {
              "enum": [
                "StringNotEndsWith"
              ],
              "type": "string"
            },
            "values": {
              "description": "The set of filter values.",
              "oneOf": [
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "operatorType"
          ],
          "type": "object"
        },
        {
          "description": "StringNotIn Advanced Filter.",
          "properties": {
            "operatorType": {
              "enum": [
                "StringNotIn"
              ],
              "type": "string"
            },
            "values": {
              "description": "The set of filter values.",
              "oneOf": [
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "operatorType"
          ],
          "type": "object"
        }
      ],
      "properties": {
        "key": {
          "description": "The field/property in the event based on which you want to filter.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "AzureADPartnerClientAuthenticationProperties": {
      "description": "Properties of an Azure Active Directory Partner Client Authentication.",
      "properties": {
        "azureActiveDirectoryApplicationIdOrUri": {
          "description": "The Azure Active Directory Application ID or URI to get the access token that will be included as the bearer token in delivery requests.",
          "type": "string"
        },
        "azureActiveDirectoryTenantId": {
          "description": "The Azure Active Directory Tenant ID to get the access token that will be included as the bearer token in delivery requests.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "AzureFunctionEventSubscriptionDestinationProperties": {
      "description": "The properties that represent the Azure Function destination of an event subscription.",
      "properties": {
        "deliveryAttributeMappings": {
          "description": "Delivery attribute details.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/DeliveryAttributeMapping"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "maxEventsPerBatch": {
          "description": "Maximum number of events per batch.",
          "oneOf": [
            {
              "default": 1,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "preferredBatchSizeInKilobytes": {
          "description": "Preferred batch size in Kilobytes.",
          "oneOf": [
            {
              "default": 64,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resourceId": {
          "description": "The Azure Resource Id that represents the endpoint of the Azure Function destination of an event subscription.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ChannelProperties": {
      "description": "Properties of the Channel.",
      "properties": {
        "channelType": {
          "description": "The type of the event channel which represents the  direction flow of events.",
          "oneOf": [
            {
              "enum": [
                "PartnerTopic",
                "PartnerDestination"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "expirationTimeIfNotActivatedUtc": {
          "description": "Expiration time of the channel. If this timer expires while the corresponding partner topic is never activated,\r\nthe channel and corresponding partner topic are deleted.",
          "format": "date-time",
          "type": "string"
        },
        "messageForActivation": {
          "description": "Context or helpful message that can be used during the approval process by the subscriber.",
          "type": "string"
        },
        "partnerDestinationInfo": {
          "description": "This property should be populated when channelType is PartnerDestination and represents information about the partner destination resource corresponding to the channel.",
          "oneOf": [
            {
              "$ref": "#/definitions/PartnerDestinationInfo"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "partnerTopicInfo": {
          "description": "This property should be populated when channelType is PartnerTopic and represents information about the partner topic resource corresponding to the channel.",
          "oneOf": [
            {
              "$ref": "#/definitions/PartnerTopicInfo"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "provisioningState": {
          "description": "Provisioning state of the channel.",
          "oneOf": [
            {
              "enum": [
                "Creating",
                "Updating",
                "Deleting",
                "Succeeded",
                "Canceled",
                "Failed"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "readinessState": {
          "description": "The readiness state of the corresponding partner topic.",
          "oneOf": [
            {
              "enum": [
                "NeverActivated",
                "Activated"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ConnectionState": {
      "description": "ConnectionState information.",
      "properties": {
        "actionsRequired": {
          "description": "Actions required (if any).",
          "type": "string"
        },
        "description": {
          "description": "Description of the connection state.",
          "type": "string"
        },
        "status": {
          "description": "Status of the connection.",
          "oneOf": [
            {
              "enum": [
                "Pending",
                "Approved",
                "Rejected",
                "Disconnected"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "DeadLetterDestination": {
      "description": "Information about the dead letter destination for an event subscription. To configure a deadletter destination, do not directly instantiate an object of this class. Instead, instantiate an object of a derived class. Currently, StorageBlobDeadLetterDestination is the only class that derives from this class.",
      "oneOf": [
        {
          "description": "Information about the storage blob based dead letter destination.",
          "properties": {
            "endpointType": {
              "enum": [
                "StorageBlob"
              ],
              "type": "string"
            },
            "properties": {
              "description": "The properties of the Storage Blob based deadletter destination",
              "oneOf": [
                {
                  "$ref": "#/definitions/StorageBlobDeadLetterDestinationProperties"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "endpointType"
          ],
          "type": "object"
        }
      ],
      "properties": {},
      "type": "object"
    },
    "DeadLetterWithResourceIdentity": {
      "description": "Information about the deadletter destination with resource identity.",
      "properties": {
        "deadLetterDestination": {
          "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery / dead-lettering.",
          "oneOf": [
            {
              "$ref": "#/definitions/DeadLetterDestination"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "identity": {
          "description": "The identity to use when dead-lettering events.",
          "oneOf": [
            {
              "$ref": "#/definitions/EventSubscriptionIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "DeliveryAttributeMapping": {
      "description": "Delivery attribute mapping details.",
      "oneOf": [
        {
          "description": "Dynamic delivery attribute mapping details.",
          "properties": {
            "properties": {
              "description": "Properties of dynamic delivery attribute mapping.",
              "oneOf": [
                {
                  "$ref": "#/definitions/DynamicDeliveryAttributeMappingProperties"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "type": {
              "enum": [
                "Dynamic"
              ],
              "type": "string"
            }
          },
          "required": [
            "type"
          ],
          "type": "object"
        },
        {
          "description": "Static delivery attribute mapping details.",
          "properties": {
            "properties": {
              "description": "Properties of static delivery attribute mapping.",
              "oneOf": [
                {
                  "$ref": "#/definitions/StaticDeliveryAttributeMappingProperties"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "type": {
              "enum": [
                "Static"
              ],
              "type": "string"
            }
          },
          "required": [
            "type"
          ],
          "type": "object"
        }
      ],
      "properties": {
        "name": {
          "description": "Name of the delivery attribute or header.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DeliveryWithResourceIdentity": {
      "description": "Information about the delivery for an event subscription with resource identity.",
      "properties": {
        "destination": {
          "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.",
          "oneOf": [
            {
              "$ref": "#/definitions/EventSubscriptionDestination"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "identity": {
          "description": "The identity to use when delivering events.",
          "oneOf": [
            {
              "$ref": "#/definitions/EventSubscriptionIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "DomainProperties": {
      "description": "Properties of the Event Grid Domain Resource.",
      "properties": {
        "autoCreateTopicWithFirstSubscription": {
          "description": "This Boolean is used to specify the creation mechanism for 'all' the Event Grid Domain Topics associated with this Event Grid Domain resource.\r\nIn this context, creation of domain topic can be auto-managed (when true) or self-managed (when false). The default value for this property is true.\r\nWhen this property is null or set to true, Event Grid is responsible of automatically creating the domain topic when the first event subscription is\r\ncreated at the scope of the domain topic. If this property is set to false, then creating the first event subscription will require creating a domain topic\r\nby the user. The self-management mode can be used if the user wants full control of when the domain topic is created, while auto-managed mode provides the\r\nflexibility to perform less operations and manage fewer resources by the user. Also, note that in auto-managed creation mode, user is allowed to create the\r\ndomain topic on demand if needed.",
          "oneOf": [
            {
              "default": true,
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "autoDeleteTopicWithLastSubscription": {
          "description": "This Boolean is used to specify the deletion mechanism for 'all' the Event Grid Domain Topics associated with this Event Grid Domain resource.\r\nIn this context, deletion of domain topic can be auto-managed (when true) or self-managed (when false). The default value for this property is true.\r\nWhen this property is set to true, Event Grid is responsible of automatically deleting the domain topic when the last event subscription at the scope\r\nof the domain topic is deleted. If this property is set to false, then the user needs to manually delete the domain topic when it is no longer needed\r\n(e.g., when last event subscription is deleted and the resource needs to be cleaned up). The self-management mode can be used if the user wants full\r\ncontrol of when the domain topic needs to be deleted, while auto-managed mode provides the flexibility to perform less operations and manage fewer\r\nresources by the user.",
          "oneOf": [
            {
              "default": true,
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "dataResidencyBoundary": {
          "description": "Data Residency Boundary of the resource.",
          "oneOf": [
            {
              "enum": [
                "WithinGeopair",
                "WithinRegion"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "disableLocalAuth": {
          "description": "This boolean is used to enable or disable local auth. Default value is false. When the property is set to true, only AAD token will be used to authenticate if user is allowed to publish to the domain.",
          "oneOf": [
            {
              "default": false,
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "inboundIpRules": {
          "description": "This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/InboundIpRule"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "inputSchema": {
          "description": "This determines the format that Event Grid should expect for incoming events published to the Event Grid Domain Resource.",
          "oneOf": [
            {
              "enum": [
                "EventGridSchema",
                "CustomEventSchema",
                "CloudEventSchemaV1_0"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "inputSchemaMapping": {
          "description": "Information about the InputSchemaMapping which specified the info about mapping event payload.",
          "oneOf": [
            {
              "$ref": "#/definitions/InputSchemaMapping"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "publicNetworkAccess": {
          "description": "This determines if traffic is allowed over public network. By default it is enabled.\r\nYou can further restrict to specific IPs by configuring <seealso cref=\"P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.DomainProperties.InboundIpRules\" />",
          "oneOf": [
            {
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "DynamicDeliveryAttributeMappingProperties": {
      "description": "Properties of dynamic delivery attribute mapping.",
      "properties": {
        "sourceField": {
          "description": "JSON path in the event which contains attribute value.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "EventChannelDestination": {
      "description": "Properties of the destination of an event channel.",
      "properties": {
        "azureSubscriptionId": {
          "description": "Azure subscription ID of the customer creating the event channel. The partner topic\r\nassociated with the event channel will be created under this Azure subscription.",
          "type": "string"
        },
        "partnerTopicName": {
          "description": "Name of the partner topic associated with the event channel.",
          "type": "string"
        },
        "resourceGroup": {
          "description": "Azure Resource Group of the customer creating the event channel. The partner topic\r\nassociated with the event channel will be created under this resource group.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "EventChannelFilter": {
      "description": "Filter for the Event Channel.",
      "properties": {
        "advancedFilters": {
          "description": "An array of advanced filters that are used for filtering event channels.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/AdvancedFilter"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "enableAdvancedFilteringOnArrays": {
          "description": "Allows advanced filters to be evaluated against an array of values instead of expecting a singular value. The default value is either false or null.",
          "oneOf": [
            {
              "default": false,
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "EventChannelProperties": {
      "description": "Properties of the Event Channel.",
      "properties": {
        "destination": {
          "description": "Represents the destination of an event channel.",
          "oneOf": [
            {
              "$ref": "#/definitions/EventChannelDestination"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "expirationTimeIfNotActivatedUtc": {
          "description": "Expiration time of the event channel. If this timer expires while the corresponding partner topic is never activated,\r\nthe event channel and corresponding partner topic are deleted.",
          "format": "date-time",
          "type": "string"
        },
        "filter": {
          "description": "Information about the filter for the event channel.",
          "oneOf": [
            {
              "$ref": "#/definitions/EventChannelFilter"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "partnerTopicFriendlyDescription": {
          "description": "Friendly description about the topic. This can be set by the publisher/partner to show custom description for the customer partner topic.\r\nThis will be helpful to remove any ambiguity of the origin of creation of the partner topic for the customer.",
          "type": "string"
        },
        "source": {
          "description": "Source of the event channel. This represents a unique resource in the partner's resource model.",
          "oneOf": [
            {
              "$ref": "#/definitions/EventChannelSource"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "EventChannelSource": {
      "description": "Properties of the source of an event channel.",
      "properties": {
        "source": {
          "description": "The identifier of the resource that's the source of the events.\r\nThis represents a unique resource in the partner's resource model.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "EventHubEventSubscriptionDestinationProperties": {
      "description": "The properties for a event hub destination.",
      "properties": {
        "deliveryAttributeMappings": {
          "description": "Delivery attribute details.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/DeliveryAttributeMapping"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resourceId": {
          "description": "The Azure Resource Id that represents the endpoint of an Event Hub destination of an event subscription.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "EventSubscriptionDestination": {
      "description": "Information about the destination for an event subscription.",
      "oneOf": [
        {
          "description": "Information about the azure function destination for an event subscription.",
          "properties": {
            "endpointType": {
              "enum": [
                "AzureFunction"
              ],
              "type": "string"
            },
            "properties": {
              "description": "Azure Function Properties of the event subscription destination.",
              "oneOf": [
                {
                  "$ref": "#/definitions/AzureFunctionEventSubscriptionDestinationProperties"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "endpointType"
          ],
          "type": "object"
        },
        {
          "description": "Information about the event hub destination for an event subscription.",
          "properties": {
            "endpointType": {
              "enum": [
                "EventHub"
              ],
              "type": "string"
            },
            "properties": {
              "description": "Event Hub Properties of the event subscription destination.",
              "oneOf": [
                {
                  "$ref": "#/definitions/EventHubEventSubscriptionDestinationProperties"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "endpointType"
          ],
          "type": "object"
        },
        {
          "description": "Information about the HybridConnection destination for an event subscription.",
          "properties": {
            "endpointType": {
              "enum": [
                "HybridConnection"
              ],
              "type": "string"
            },
            "properties": {
              "description": "Hybrid connection Properties of the event subscription destination.",
              "oneOf": [
                {
                  "$ref": "#/definitions/HybridConnectionEventSubscriptionDestinationProperties"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "endpointType"
          ],
          "type": "object"
        },
        {
          "properties": {
            "endpointType": {
              "enum": [
                "PartnerDestination"
              ],
              "type": "string"
            },
            "properties": {
              "description": "Partner Destination Properties of the event subscription destination.",
              "oneOf": [
                {
                  "$ref": "#/definitions/PartnerEventSubscriptionDestinationProperties"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "endpointType"
          ],
          "type": "object"
        },
        {
          "description": "Information about the service bus destination for an event subscription.",
          "properties": {
            "endpointType": {
              "enum": [
                "ServiceBusQueue"
              ],
              "type": "string"
            },
            "properties": {
              "description": "Service Bus Properties of the event subscription destination.",
              "oneOf": [
                {
                  "$ref": "#/definitions/ServiceBusQueueEventSubscriptionDestinationProperties"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "endpointType"
          ],
          "type": "object"
        },
        {
          "description": "Information about the service bus topic destination for an event subscription.",
          "properties": {
            "endpointType": {
              "enum": [
                "ServiceBusTopic"
              ],
              "type": "string"
            },
            "properties": {
              "description": "Service Bus Topic Properties of the event subscription destination.",
              "oneOf": [
                {
                  "$ref": "#/definitions/ServiceBusTopicEventSubscriptionDestinationProperties"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "endpointType"
          ],
          "type": "object"
        },
        {
          "description": "Information about the storage queue destination for an event subscription.",
          "properties": {
            "endpointType": {
              "enum": [
                "StorageQueue"
              ],
              "type": "string"
            },
            "properties": {
              "description": "Storage Queue Properties of the event subscription destination.",
              "oneOf": [
                {
                  "$ref": "#/definitions/StorageQueueEventSubscriptionDestinationProperties"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "endpointType"
          ],
          "type": "object"
        },
        {
          "description": "Information about the webhook destination for an event subscription.",
          "properties": {
            "endpointType": {
              "enum": [
                "WebHook"
              ],
              "type": "string"
            },
            "properties": {
              "description": "WebHook Properties of the event subscription destination.",
              "oneOf": [
                {
                  "$ref": "#/definitions/WebHookEventSubscriptionDestinationProperties"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "endpointType"
          ],
          "type": "object"
        }
      ],
      "properties": {},
      "type": "object"
    },
    "EventSubscriptionFilter": {
      "description": "Filter for the Event Subscription.",
      "properties": {
        "advancedFilters": {
          "description": "An array of advanced filters that are used for filtering event subscriptions.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/AdvancedFilter"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "enableAdvancedFilteringOnArrays": {
          "description": "Allows advanced filters to be evaluated against an array of values instead of expecting a singular value.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "includedEventTypes": {
          "description": "A list of applicable event types that need to be part of the event subscription. If it is desired to subscribe to all default event types, set the IncludedEventTypes to null.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "isSubjectCaseSensitive": {
          "description": "Specifies if the SubjectBeginsWith and SubjectEndsWith properties of the filter\r\nshould be compared in a case sensitive manner.",
          "oneOf": [
            {
              "default": false,
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "subjectBeginsWith": {
          "description": "An optional string to filter events for an event subscription based on a resource path prefix.\r\nThe format of this depends on the publisher of the events.\r\nWildcard characters are not supported in this path.",
          "type": "string"
        },
        "subjectEndsWith": {
          "description": "An optional string to filter events for an event subscription based on a resource path suffix.\r\nWildcard characters are not supported in this path.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "EventSubscriptionIdentity": {
      "description": "The identity information with the event subscription.",
      "properties": {
        "type": {
          "description": "The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identity.",
          "oneOf": [
            {
              "enum": [
                "SystemAssigned",
                "UserAssigned"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "userAssignedIdentity": {
          "description": "The user identity associated with the resource.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "EventSubscriptionProperties": {
      "description": "Properties of the Event Subscription.",
      "properties": {
        "deadLetterDestination": {
          "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.",
          "oneOf": [
            {
              "$ref": "#/definitions/DeadLetterDestination"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "deadLetterWithResourceIdentity": {
          "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery / dead-lettering.",
          "oneOf": [
            {
              "$ref": "#/definitions/DeadLetterWithResourceIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "deliveryWithResourceIdentity": {
          "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery / dead-lettering.",
          "oneOf": [
            {
              "$ref": "#/definitions/DeliveryWithResourceIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "destination": {
          "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.",
          "oneOf": [
            {
              "$ref": "#/definitions/EventSubscriptionDestination"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "eventDeliverySchema": {
          "description": "The event delivery schema for the event subscription.",
          "oneOf": [
            {
              "enum": [
                "EventGridSchema",
                "CustomInputSchema",
                "CloudEventSchemaV1_0"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "expirationTimeUtc": {
          "description": "Expiration time of the event subscription.",
          "format": "date-time",
          "type": "string"
        },
        "filter": {
          "description": "Information about the filter for the event subscription.",
          "oneOf": [
            {
              "$ref": "#/definitions/EventSubscriptionFilter"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "labels": {
          "description": "List of user defined labels.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "retryPolicy": {
          "description": "The retry policy for events. This can be used to configure maximum number of delivery attempts and time to live for events.",
          "oneOf": [
            {
              "$ref": "#/definitions/RetryPolicy"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "EventTypeInfo": {
      "description": "The event type information for Channels.",
      "properties": {
        "inlineEventTypes": {
          "description": "A collection of inline event types for the resource. The inline event type keys are of type string which represents the name of the event.\r\nAn example of a valid inline event name is \"Contoso.OrderCreated\".\r\nThe inline event type values are of type InlineEventProperties and will contain additional information for every inline event type.",
          "oneOf": [
            {
              "additionalProperties": {
                "$ref": "#/definitions/InlineEventProperties"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "kind": {
          "description": "The kind of event type used.",
          "oneOf": [
            {
              "enum": [
                "Inline"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ExtendedLocation": {
      "description": "Definition of an Extended Location",
      "properties": {
        "name": {
          "description": "Fully qualified name of the extended location.",
          "type": "string"
        },
        "type": {
          "description": "Type of the extended location.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "HybridConnectionEventSubscriptionDestinationProperties": {
      "description": "The properties for a hybrid connection destination.",
      "properties": {
        "deliveryAttributeMappings": {
          "description": "Delivery attribute details.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/DeliveryAttributeMapping"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resourceId": {
          "description": "The Azure Resource ID of an hybrid connection that is the destination of an event subscription.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "IdentityInfo": {
      "description": "The identity information for the resource.",
      "properties": {
        "principalId": {
          "description": "The principal ID of resource identity.",
          "type": "string"
        },
        "tenantId": {
          "description": "The tenant ID of resource.",
          "type": "string"
        },
        "type": {
          "description": "The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identity.",
          "oneOf": [
            {
              "enum": [
                "None",
                "SystemAssigned",
                "UserAssigned",
                "SystemAssigned, UserAssigned"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "userAssignedIdentities": {
          "description": "The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form:\r\n'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.\r\nThis property is currently not used and reserved for future usage.",
          "oneOf": [
            {
              "additionalProperties": {
                "$ref": "#/definitions/UserIdentityProperties"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "InboundIpRule": {
      "properties": {
        "action": {
          "description": "Action to perform based on the match or no match of the IpMask.",
          "oneOf": [
            {
              "enum": [
                "Allow"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "ipMask": {
          "description": "IP Address in CIDR notation e.g., 10.0.0.0/8.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "InlineEventProperties": {
      "description": "Additional information about every inline event.",
      "properties": {
        "dataSchemaUrl": {
          "description": "The dataSchemaUrl for the inline event.",
          "type": "string"
        },
        "description": {
          "description": "The description for the inline event.",
          "type": "string"
        },
        "documentationUrl": {
          "description": "The documentationUrl for the inline event.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "InputSchemaMapping": {
      "description": "By default, Event Grid expects events to be in the Event Grid event schema. Specifying an input schema mapping enables publishing to Event Grid using a custom input schema. Currently, the only supported type of InputSchemaMapping is 'JsonInputSchemaMapping'.",
      "oneOf": [
        {
          "description": "This enables publishing to Event Grid using a custom input schema. This can be used to map properties from a custom input JSON schema to the Event Grid event schema.",
          "properties": {
            "inputSchemaMappingType": {
              "enum": [
                "Json"
              ],
              "type": "string"
            },
            "properties": {
              "description": "JSON Properties of the input schema mapping",
              "oneOf": [
                {
                  "$ref": "#/definitions/JsonInputSchemaMappingProperties"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "inputSchemaMappingType"
          ],
          "type": "object"
        }
      ],
      "properties": {},
      "type": "object"
    },
    "JsonField": {
      "description": "This is used to express the source of an input schema mapping for a single target field in the Event Grid Event schema. This is currently used in the mappings for the 'id', 'topic' and 'eventtime' properties. This represents a field in the input event schema.",
      "properties": {
        "sourceField": {
          "description": "Name of a field in the input event schema that's to be used as the source of a mapping.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "JsonFieldWithDefault": {
      "description": "This is used to express the source of an input schema mapping for a single target field\r\nin the Event Grid Event schema. This is currently used in the mappings for the 'subject',\r\n'eventtype' and 'dataversion' properties. This represents a field in the input event schema\r\nalong with a default value to be used, and at least one of these two properties should be provided.",
      "properties": {
        "defaultValue": {
          "description": "The default value to be used for mapping when a SourceField is not provided or if there's no property with the specified name in the published JSON event payload.",
          "type": "string"
        },
        "sourceField": {
          "description": "Name of a field in the input event schema that's to be used as the source of a mapping.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "JsonInputSchemaMappingProperties": {
      "description": "This can be used to map properties of a source schema (or default values, for certain supported properties) to properties of the EventGridEvent schema.",
      "properties": {
        "dataVersion": {
          "description": "The mapping information for the DataVersion property of the Event Grid Event.",
          "oneOf": [
            {
              "$ref": "#/definitions/JsonFieldWithDefault"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "eventTime": {
          "description": "The mapping information for the EventTime property of the Event Grid Event.",
          "oneOf": [
            {
              "$ref": "#/definitions/JsonField"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "eventType": {
          "description": "The mapping information for the EventType property of the Event Grid Event.",
          "oneOf": [
            {
              "$ref": "#/definitions/JsonFieldWithDefault"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "id": {
          "description": "The mapping information for the Id property of the Event Grid Event.",
          "oneOf": [
            {
              "$ref": "#/definitions/JsonField"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "subject": {
          "description": "The mapping information for the Subject property of the Event Grid Event.",
          "oneOf": [
            {
              "$ref": "#/definitions/JsonFieldWithDefault"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "topic": {
          "description": "The mapping information for the Topic property of the Event Grid Event.",
          "oneOf": [
            {
              "$ref": "#/definitions/JsonField"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "Partner": {
      "description": "Information about the partner.",
      "properties": {
        "authorizationExpirationTimeInUtc": {
          "description": "Expiration time of the partner authorization. If this timer expires, any request from this partner to create, update or delete resources in subscriber's\r\ncontext will fail. If specified, the allowed values are between 1 to the value of defaultMaximumExpirationTimeInDays specified in PartnerConfiguration.\r\nIf not specified, the default value will be the value of defaultMaximumExpirationTimeInDays specified in PartnerConfiguration or 7 if this value is not specified.",
          "format": "date-time",
          "type": "string"
        },
        "partnerName": {
          "description": "The partner name.",
          "type": "string"
        },
        "partnerRegistrationImmutableId": {
          "description": "The immutableId of the corresponding partner registration.",
          "oneOf": [
            {
              "pattern": "^[0-9a-fA-F]{8}(-[0-9a-fA-F]{4}){3}-[0-9a-fA-F]{12}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "PartnerAuthorization": {
      "description": "The partner authorization details.",
      "properties": {
        "authorizedPartnersList": {
          "description": "The list of authorized partners.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/Partner"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "defaultMaximumExpirationTimeInDays": {
          "description": "Time used to validate the authorization expiration time for each authorized partner. If DefaultMaximumExpirationTimeInDays is\r\nnot specified, the default is 7 days. Otherwise, allowed values are between 1 and 365 days.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "PartnerClientAuthentication": {
      "description": "Partner client authentication",
      "oneOf": [
        {
          "description": "Azure Active Directory Partner Client Authentication",
          "properties": {
            "clientAuthenticationType": {
              "enum": [
                "AzureAD"
              ],
              "type": "string"
            },
            "properties": {
              "description": "AzureAD ClientAuthentication Properties",
              "oneOf": [
                {
                  "$ref": "#/definitions/AzureADPartnerClientAuthenticationProperties"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "clientAuthenticationType"
          ],
          "type": "object"
        }
      ],
      "properties": {},
      "type": "object"
    },
    "PartnerConfigurationProperties": {
      "description": "Properties of the partner configuration.",
      "properties": {
        "partnerAuthorization": {
          "description": "The details of authorized partners.",
          "oneOf": [
            {
              "$ref": "#/definitions/PartnerAuthorization"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "provisioningState": {
          "description": "Provisioning state of the partner configuration.",
          "oneOf": [
            {
              "enum": [
                "Creating",
                "Updating",
                "Deleting",
                "Succeeded",
                "Canceled",
                "Failed"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "PartnerDestinationInfo": {
      "description": "Properties of the corresponding partner destination of a Channel.",
      "oneOf": [
        {
          "description": "Information about the WebHook of the partner destination.",
          "properties": {
            "endpointType": {
              "enum": [
                "WebHook"
              ],
              "type": "string"
            },
            "properties": {
              "description": "WebHook Properties of the partner destination.",
              "oneOf": [
                {
                  "$ref": "#/definitions/WebhookPartnerDestinationProperties"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "endpointType"
          ],
          "type": "object"
        }
      ],
      "properties": {
        "azureSubscriptionId": {
          "description": "Azure subscription ID of the subscriber. The partner destination associated with the channel will be\r\ncreated under this Azure subscription.",
          "type": "string"
        },
        "endpointServiceContext": {
          "description": "Additional context of the partner destination endpoint.",
          "type": "string"
        },
        "name": {
          "description": "Name of the partner destination associated with the channel.",
          "type": "string"
        },
        "resourceGroupName": {
          "description": "Azure Resource Group of the subscriber. The partner destination associated with the channel will be\r\ncreated under this resource group.",
          "type": "string"
        },
        "resourceMoveChangeHistory": {
          "description": "Change history of the resource move.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/ResourceMoveChangeHistory"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "PartnerDestinationProperties": {
      "description": "Properties of the Partner Destination.",
      "properties": {
        "activationState": {
          "description": "Activation state of the partner destination.",
          "oneOf": [
            {
              "enum": [
                "NeverActivated",
                "Activated"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "endpointBaseUrl": {
          "description": "Endpoint Base URL of the partner destination",
          "type": "string"
        },
        "endpointServiceContext": {
          "description": "Endpoint context associated with this partner destination.",
          "type": "string"
        },
        "expirationTimeIfNotActivatedUtc": {
          "description": "Expiration time of the partner destination. If this timer expires and the partner destination was never activated,\r\nthe partner destination and corresponding channel are deleted.",
          "format": "date-time",
          "type": "string"
        },
        "messageForActivation": {
          "description": "Context or helpful message that can be used during the approval process.",
          "type": "string"
        },
        "partnerRegistrationImmutableId": {
          "description": "The immutable Id of the corresponding partner registration.",
          "oneOf": [
            {
              "pattern": "^[0-9a-fA-F]{8}(-[0-9a-fA-F]{4}){3}-[0-9a-fA-F]{12}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "provisioningState": {
          "description": "Provisioning state of the partner destination.",
          "oneOf": [
            {
              "enum": [
                "Creating",
                "Updating",
                "Deleting",
                "Succeeded",
                "Canceled",
                "Failed"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "PartnerEventSubscriptionDestinationProperties": {
      "properties": {
        "resourceId": {
          "description": "The Azure Resource Id that represents the endpoint of a Partner Destination of an event subscription.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PartnerNamespaceProperties": {
      "description": "Properties of the partner namespace.",
      "properties": {
        "disableLocalAuth": {
          "description": "This boolean is used to enable or disable local auth. Default value is false. When the property is set to true, only AAD token will be used to authenticate if user is allowed to publish to the partner namespace.",
          "oneOf": [
            {
              "default": false,
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "inboundIpRules": {
          "description": "This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/InboundIpRule"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "partnerRegistrationFullyQualifiedId": {
          "description": "The fully qualified ARM Id of the partner registration that should be associated with this partner namespace. This takes the following format:\r\n/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerRegistrations/{partnerRegistrationName}.",
          "type": "string"
        },
        "partnerTopicRoutingMode": {
          "description": "This determines if events published to this partner namespace should use the source attribute in the event payload\r\nor use the channel name in the header when matching to the partner topic. If none is specified, source attribute routing will be used to match the partner topic.",
          "oneOf": [
            {
              "enum": [
                "SourceEventAttribute",
                "ChannelNameHeader"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "publicNetworkAccess": {
          "description": "This determines if traffic is allowed over public network. By default it is enabled.\r\nYou can further restrict to specific IPs by configuring <seealso cref=\"P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.PartnerNamespaceProperties.InboundIpRules\" />",
          "oneOf": [
            {
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "PartnerRegistrationProperties": {
      "description": "Properties of the partner registration.",
      "properties": {
        "authorizedAzureSubscriptionIds": {
          "description": "List of Azure subscription Ids that are authorized to create a partner namespace\r\nassociated with this partner registration. This is an optional property. Creating\r\npartner namespaces is always permitted under the same Azure subscription as the one used\r\nfor creating the partner registration.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "customerServiceUri": {
          "description": "The extension of the customer service URI of the publisher.",
          "type": "string"
        },
        "logoUri": {
          "description": "URI of the logo.",
          "type": "string"
        },
        "longDescription": {
          "description": "Long description for the custom scenarios and integration to be displayed in the portal if needed.\r\nLength of this description should not exceed 2048 characters.",
          "type": "string"
        },
        "partnerCustomerServiceExtension": {
          "description": "The extension of the customer service number of the publisher. Only digits are allowed and number of digits should not exceed 10.",
          "type": "string"
        },
        "partnerCustomerServiceNumber": {
          "description": "The customer service number of the publisher. The expected phone format should start with a '+' sign \r\nfollowed by the country code. The remaining digits are then followed. Only digits and spaces are allowed and its\r\nlength cannot exceed 16 digits including country code. Examples of valid phone numbers are: +1 515 123 4567 and\r\n+966 7 5115 2471. Examples of invalid phone numbers are: +1 (515) 123-4567, 1 515 123 4567 and +966 121 5115 24 7 551 1234 43",
          "type": "string"
        },
        "partnerName": {
          "description": "Official name of the partner name. For example: \"Contoso\".",
          "type": "string"
        },
        "partnerRegistrationImmutableId": {
          "description": "The immutableId of the corresponding partner registration.",
          "oneOf": [
            {
              "pattern": "^[0-9a-fA-F]{8}(-[0-9a-fA-F]{4}){3}-[0-9a-fA-F]{12}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "partnerResourceTypeDescription": {
          "description": "Short description of the partner resource type. The length of this description should not exceed 256 characters.",
          "type": "string"
        },
        "partnerResourceTypeDisplayName": {
          "description": "Display name of the partner resource type.",
          "type": "string"
        },
        "partnerResourceTypeName": {
          "description": "Name of the partner resource type.",
          "type": "string"
        },
        "setupUri": {
          "description": "URI of the partner website that can be used by Azure customers to setup Event Grid\r\nintegration on an event source.",
          "type": "string"
        },
        "visibilityState": {
          "description": "Visibility state of the partner registration.",
          "oneOf": [
            {
              "enum": [
                "Hidden",
                "PublicPreview",
                "GenerallyAvailable"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "PartnerTopicInfo": {
      "description": "Properties of the corresponding partner topic of a Channel.",
      "properties": {
        "azureSubscriptionId": {
          "description": "Azure subscription ID of the subscriber. The partner topic associated with the channel will be\r\ncreated under this Azure subscription.",
          "type": "string"
        },
        "eventTypeInfo": {
          "description": "Event Type Information for the partner topic. This information is provided by the publisher and can be used by the \r\nsubscriber to view different types of events that are published.",
          "oneOf": [
            {
              "$ref": "#/definitions/EventTypeInfo"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "name": {
          "description": "Name of the partner topic associated with the channel.",
          "type": "string"
        },
        "resourceGroupName": {
          "description": "Azure Resource Group of the subscriber. The partner topic associated with the channel will be\r\ncreated under this resource group.",
          "type": "string"
        },
        "source": {
          "description": "The source information is provided by the publisher to determine the scope or context from which the events\r\nare originating. This information can be used by the subscriber during the approval process of the\r\ncreated partner topic.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PartnerTopicProperties": {
      "description": "Properties of the Partner Topic.",
      "properties": {
        "activationState": {
          "description": "Activation state of the partner topic.",
          "oneOf": [
            {
              "enum": [
                "NeverActivated",
                "Activated",
                "Deactivated"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "eventTypeInfo": {
          "description": "Event Type information from the corresponding event channel.",
          "oneOf": [
            {
              "$ref": "#/definitions/EventTypeInfo"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "expirationTimeIfNotActivatedUtc": {
          "description": "Expiration time of the partner topic. If this timer expires while the partner topic is still never activated,\r\nthe partner topic and corresponding event channel are deleted.",
          "format": "date-time",
          "type": "string"
        },
        "messageForActivation": {
          "description": "Context or helpful message that can be used during the approval process by the subscriber.",
          "type": "string"
        },
        "partnerRegistrationImmutableId": {
          "description": "The immutableId of the corresponding partner registration.",
          "oneOf": [
            {
              "pattern": "^[0-9a-fA-F]{8}(-[0-9a-fA-F]{4}){3}-[0-9a-fA-F]{12}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "partnerTopicFriendlyDescription": {
          "description": "Friendly description about the topic. This can be set by the publisher/partner to show custom description for the customer partner topic.\r\nThis will be helpful to remove any ambiguity of the origin of creation of the partner topic for the customer.",
          "type": "string"
        },
        "source": {
          "description": "Source associated with this partner topic. This represents a unique partner resource.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PrivateEndpoint": {
      "description": "PrivateEndpoint information.",
      "properties": {
        "id": {
          "description": "The ARM identifier for Private Endpoint.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PrivateEndpointConnectionProperties": {
      "description": "Properties of the private endpoint connection resource.",
      "properties": {
        "groupIds": {
          "description": "GroupIds from the private link service resource.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "privateEndpoint": {
          "description": "The Private Endpoint resource for this Connection.",
          "oneOf": [
            {
              "$ref": "#/definitions/PrivateEndpoint"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "privateLinkServiceConnectionState": {
          "description": "Details about the state of the connection.",
          "oneOf": [
            {
              "$ref": "#/definitions/ConnectionState"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "provisioningState": {
          "description": "Provisioning state of the Private Endpoint Connection.",
          "oneOf": [
            {
              "enum": [
                "Creating",
                "Updating",
                "Deleting",
                "Succeeded",
                "Canceled",
                "Failed"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ResourceMoveChangeHistory": {
      "description": "The change history of the resource move.",
      "properties": {
        "azureSubscriptionId": {
          "description": "Azure subscription ID of the resource.",
          "type": "string"
        },
        "changedTimeUtc": {
          "description": "UTC timestamp of when the resource was changed.",
          "format": "date-time",
          "type": "string"
        },
        "resourceGroupName": {
          "description": "Azure Resource Group of the resource.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ResourceSku": {
      "description": "Describes an EventGrid Resource Sku.",
      "properties": {
        "name": {
          "description": "The Sku name of the resource. The possible values are: Basic or Premium.",
          "oneOf": [
            {
              "enum": [
                "Basic",
                "Premium"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "RetryPolicy": {
      "description": "Information about the retry policy for an event subscription.",
      "properties": {
        "eventTimeToLiveInMinutes": {
          "description": "Time To Live (in minutes) for events.",
          "oneOf": [
            {
              "default": 1440,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "maxDeliveryAttempts": {
          "description": "Maximum number of delivery retry attempts for events.",
          "oneOf": [
            {
              "default": 30,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ServiceBusQueueEventSubscriptionDestinationProperties": {
      "description": "The properties that represent the Service Bus destination of an event subscription.",
      "properties": {
        "deliveryAttributeMappings": {
          "description": "Delivery attribute details.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/DeliveryAttributeMapping"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resourceId": {
          "description": "The Azure Resource Id that represents the endpoint of the Service Bus destination of an event subscription.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ServiceBusTopicEventSubscriptionDestinationProperties": {
      "description": "The properties that represent the Service Bus Topic destination of an event subscription.",
      "properties": {
        "deliveryAttributeMappings": {
          "description": "Delivery attribute details.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/DeliveryAttributeMapping"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resourceId": {
          "description": "The Azure Resource Id that represents the endpoint of the Service Bus Topic destination of an event subscription.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "StaticDeliveryAttributeMappingProperties": {
      "description": "Properties of static delivery attribute mapping.",
      "properties": {
        "isSecret": {
          "description": "Boolean flag to tell if the attribute contains sensitive information .",
          "oneOf": [
            {
              "default": false,
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "value": {
          "description": "Value of the delivery attribute.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "StorageBlobDeadLetterDestinationProperties": {
      "description": "Properties of the storage blob based dead letter destination.",
      "properties": {
        "blobContainerName": {
          "description": "The name of the Storage blob container that is the destination of the deadletter events",
          "type": "string"
        },
        "resourceId": {
          "description": "The Azure Resource ID of the storage account that is the destination of the deadletter events",
          "type": "string"
        }
      },
      "type": "object"
    },
    "StorageQueueEventSubscriptionDestinationProperties": {
      "description": "The properties for a storage queue destination.",
      "properties": {
        "queueMessageTimeToLiveInSeconds": {
          "description": "Storage queue message time to live in seconds.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "queueName": {
          "description": "The name of the Storage queue under a storage account that is the destination of an event subscription.",
          "type": "string"
        },
        "resourceId": {
          "description": "The Azure Resource ID of the storage account that contains the queue that is the destination of an event subscription.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "SystemTopicProperties": {
      "description": "Properties of the System Topic.",
      "properties": {
        "source": {
          "description": "Source for the system topic.",
          "type": "string"
        },
        "topicType": {
          "description": "TopicType for the system topic.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "TopicProperties": {
      "description": "Properties of the Topic.",
      "properties": {
        "dataResidencyBoundary": {
          "description": "Data Residency Boundary of the resource.",
          "oneOf": [
            {
              "enum": [
                "WithinGeopair",
                "WithinRegion"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "disableLocalAuth": {
          "description": "This boolean is used to enable or disable local auth. Default value is false. When the property is set to true, only AAD token will be used to authenticate if user is allowed to publish to the topic.",
          "oneOf": [
            {
              "default": false,
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "inboundIpRules": {
          "description": "This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/InboundIpRule"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "inputSchema": {
          "description": "This determines the format that Event Grid should expect for incoming events published to the topic.",
          "oneOf": [
            {
              "enum": [
                "EventGridSchema",
                "CustomEventSchema",
                "CloudEventSchemaV1_0"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "inputSchemaMapping": {
          "description": "This enables publishing using custom event schemas. An InputSchemaMapping can be specified to map various properties of a source schema to various required properties of the EventGridEvent schema.",
          "oneOf": [
            {
              "$ref": "#/definitions/InputSchemaMapping"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "publicNetworkAccess": {
          "description": "This determines if traffic is allowed over public network. By default it is enabled. \r\nYou can further restrict to specific IPs by configuring <seealso cref=\"P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.TopicProperties.InboundIpRules\" />",
          "oneOf": [
            {
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "UserIdentityProperties": {
      "description": "The information about the user identity.",
      "properties": {
        "clientId": {
          "description": "The client id of user assigned identity.",
          "type": "string"
        },
        "principalId": {
          "description": "The principal id of user assigned identity.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "WebHookEventSubscriptionDestinationProperties": {
      "description": "Information about the webhook destination properties for an event subscription.",
      "properties": {
        "azureActiveDirectoryApplicationIdOrUri": {
          "description": "The Azure Active Directory Application ID or URI to get the access token that will be included as the bearer token in delivery requests.",
          "type": "string"
        },
        "azureActiveDirectoryTenantId": {
          "description": "The Azure Active Directory Tenant ID to get the access token that will be included as the bearer token in delivery requests.",
          "type": "string"
        },
        "deliveryAttributeMappings": {
          "description": "Delivery attribute details.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/DeliveryAttributeMapping"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "endpointUrl": {
          "description": "The URL that represents the endpoint of the destination of an event subscription.",
          "type": "string"
        },
        "maxEventsPerBatch": {
          "description": "Maximum number of events per batch.",
          "oneOf": [
            {
              "default": 1,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "preferredBatchSizeInKilobytes": {
          "description": "Preferred batch size in Kilobytes.",
          "oneOf": [
            {
              "default": 64,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "WebhookPartnerDestinationProperties": {
      "description": "Properties of a partner destination webhook.",
      "properties": {
        "clientAuthentication": {
          "description": "Partner client authentication",
          "oneOf": [
            {
              "$ref": "#/definitions/PartnerClientAuthentication"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "endpointBaseUrl": {
          "description": "The base URL that represents the endpoint of the partner destination.",
          "type": "string"
        },
        "endpointUrl": {
          "description": "The URL that represents the endpoint of the partner destination.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "domains_eventSubscriptions_childResource": {
      "description": "Microsoft.EventGrid/domains/eventSubscriptions",
      "properties": {
        "apiVersion": {
          "enum": [
            "2021-10-15-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Name of the event subscription to be created. Event subscription names must be between 3 and 100 characters in length and use alphanumeric letters only.",
          "type": "string"
        },
        "properties": {
          "description": "Properties of the event subscription.",
          "oneOf": [
            {
              "$ref": "#/definitions/EventSubscriptionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "eventSubscriptions"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "domains_privateEndpointConnections_childResource": {
      "description": "Microsoft.EventGrid/domains/privateEndpointConnections",
      "properties": {
        "apiVersion": {
          "enum": [
            "2021-10-15-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the private endpoint connection connection.",
          "type": "string"
        },
        "properties": {
          "description": "Properties of the PrivateEndpointConnection.",
          "oneOf": [
            {
              "$ref": "#/definitions/PrivateEndpointConnectionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "privateEndpointConnections"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "domains_topics_childResource": {
      "description": "Microsoft.EventGrid/domains/topics",
      "properties": {
        "apiVersion": {
          "enum": [
            "2021-10-15-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Name of the domain topic.",
          "type": "string"
        },
        "type": {
          "enum": [
            "topics"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "domains_topics_eventSubscriptions_childResource": {
      "description": "Microsoft.EventGrid/domains/topics/eventSubscriptions",
      "properties": {
        "apiVersion": {
          "enum": [
            "2021-10-15-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Name of the event subscription to be created. Event subscription names must be between 3 and 100 characters in length and use alphanumeric letters only.",
          "type": "string"
        },
        "properties": {
          "description": "Properties of the event subscription.",
          "oneOf": [
            {
              "$ref": "#/definitions/EventSubscriptionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "eventSubscriptions"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "partnerNamespaces_channels_childResource": {
      "description": "Microsoft.EventGrid/partnerNamespaces/channels",
      "properties": {
        "apiVersion": {
          "enum": [
            "2021-10-15-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Name of the channel.",
          "type": "string"
        },
        "properties": {
          "description": "Properties of the Channel.",
          "oneOf": [
            {
              "$ref": "#/definitions/ChannelProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "channels"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "partnerNamespaces_eventChannels_childResource": {
      "description": "Microsoft.EventGrid/partnerNamespaces/eventChannels",
      "properties": {
        "apiVersion": {
          "enum": [
            "2021-10-15-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Name of the event channel.",
          "type": "string"
        },
        "properties": {
          "description": "Properties of the EventChannel.",
          "oneOf": [
            {
              "$ref": "#/definitions/EventChannelProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "eventChannels"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "partnerNamespaces_privateEndpointConnections_childResource": {
      "description": "Microsoft.EventGrid/partnerNamespaces/privateEndpointConnections",
      "properties": {
        "apiVersion": {
          "enum": [
            "2021-10-15-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the private endpoint connection connection.",
          "type": "string"
        },
        "properties": {
          "description": "Properties of the PrivateEndpointConnection.",
          "oneOf": [
            {
              "$ref": "#/definitions/PrivateEndpointConnectionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "privateEndpointConnections"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "partnerTopics_eventSubscriptions_childResource": {
      "description": "Microsoft.EventGrid/partnerTopics/eventSubscriptions",
      "properties": {
        "apiVersion": {
          "enum": [
            "2021-10-15-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Name of the event subscription to be created. Event subscription names must be between 3 and 100 characters in length and use alphanumeric letters only.",
          "type": "string"
        },
        "properties": {
          "description": "Properties of the event subscription.",
          "oneOf": [
            {
              "$ref": "#/definitions/EventSubscriptionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "eventSubscriptions"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "systemTopics_eventSubscriptions_childResource": {
      "description": "Microsoft.EventGrid/systemTopics/eventSubscriptions",
      "properties": {
        "apiVersion": {
          "enum": [
            "2021-10-15-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Name of the event subscription to be created. Event subscription names must be between 3 and 100 characters in length and use alphanumeric letters only.",
          "type": "string"
        },
        "properties": {
          "description": "Properties of the event subscription.",
          "oneOf": [
            {
              "$ref": "#/definitions/EventSubscriptionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "eventSubscriptions"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "topics_eventSubscriptions_childResource": {
      "description": "Microsoft.EventGrid/topics/eventSubscriptions",
      "properties": {
        "apiVersion": {
          "enum": [
            "2021-10-15-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Name of the event subscription to be created. Event subscription names must be between 3 and 100 characters in length and use alphanumeric letters only.",
          "type": "string"
        },
        "properties": {
          "description": "Properties of the event subscription.",
          "oneOf": [
            {
              "$ref": "#/definitions/EventSubscriptionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "eventSubscriptions"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "topics_privateEndpointConnections_childResource": {
      "description": "Microsoft.EventGrid/topics/privateEndpointConnections",
      "properties": {
        "apiVersion": {
          "enum": [
            "2021-10-15-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the private endpoint connection connection.",
          "type": "string"
        },
        "properties": {
          "description": "Properties of the PrivateEndpointConnection.",
          "oneOf": [
            {
              "$ref": "#/definitions/PrivateEndpointConnectionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "privateEndpointConnections"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    }
  }
}