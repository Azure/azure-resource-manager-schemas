{
  "id": "https://schema.management.azure.com/schemas/2022-02-15-preview/Microsoft.DocumentDB.json#",
  "title": "Microsoft.DocumentDB",
  "description": "Microsoft DocumentDB Resource Types",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "resourceDefinitions": {
    "cassandraClusters": {
      "description": "Microsoft.DocumentDB/cassandraClusters",
      "properties": {
        "apiVersion": {
          "enum": [
            "2022-02-15-preview"
          ],
          "type": "string"
        },
        "identity": {
          "description": "Identity for the resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedCassandraManagedServiceIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "location": {
          "description": "The location of the resource group to which the resource belongs.",
          "type": "string"
        },
        "name": {
          "description": "Managed Cassandra cluster name.",
          "oneOf": [
            {
              "maxLength": 100,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Properties of a managed Cassandra cluster.",
          "oneOf": [
            {
              "$ref": "#/definitions/ClusterResourceProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/cassandraClusters_dataCenters_childResource"
              }
            ]
          },
          "type": "array"
        },
        "tags": {
          "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\".",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.DocumentDB/cassandraClusters"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "cassandraClusters_dataCenters": {
      "description": "Microsoft.DocumentDB/cassandraClusters/dataCenters",
      "properties": {
        "apiVersion": {
          "enum": [
            "2022-02-15-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Data center name in a managed Cassandra cluster.",
          "oneOf": [
            {
              "maxLength": 100,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Properties of a managed Cassandra data center.",
          "oneOf": [
            {
              "$ref": "#/definitions/DataCenterResourceProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.DocumentDB/cassandraClusters/dataCenters"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "databaseAccounts": {
      "description": "Microsoft.DocumentDB/databaseAccounts",
      "properties": {
        "apiVersion": {
          "enum": [
            "2022-02-15-preview"
          ],
          "type": "string"
        },
        "identity": {
          "description": "Identity for the resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedServiceIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "kind": {
          "description": "Indicates the type of database account. This can only be set at database account creation.",
          "oneOf": [
            {
              "enum": [
                "GlobalDocumentDB",
                "MongoDB",
                "Parse"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "location": {
          "description": "The location of the resource group to which the resource belongs.",
          "type": "string"
        },
        "name": {
          "description": "Cosmos DB database account name.",
          "oneOf": [
            {
              "maxLength": 50,
              "minLength": 3,
              "pattern": "^[a-z0-9]+(-[a-z0-9]+)*",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Properties to create and update Azure Cosmos DB database accounts.",
          "oneOf": [
            {
              "$ref": "#/definitions/DatabaseAccountCreateUpdateProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/databaseAccounts_graphs_childResource"
              },
              {
                "$ref": "#/definitions/databaseAccounts_tables_childResource"
              },
              {
                "$ref": "#/definitions/databaseAccounts_services_childResource"
              },
              {
                "$ref": "#/definitions/databaseAccounts_sqlDatabases_childResource"
              },
              {
                "$ref": "#/definitions/databaseAccounts_mongodbDatabases_childResource"
              },
              {
                "$ref": "#/definitions/databaseAccounts_gremlinDatabases_childResource"
              },
              {
                "$ref": "#/definitions/databaseAccounts_dataTransferJobs_childResource"
              },
              {
                "$ref": "#/definitions/databaseAccounts_sqlRoleDefinitions_childResource"
              },
              {
                "$ref": "#/definitions/databaseAccounts_sqlRoleAssignments_childResource"
              },
              {
                "$ref": "#/definitions/databaseAccounts_cassandraKeyspaces_childResource"
              },
              {
                "$ref": "#/definitions/databaseAccounts_notebookWorkspaces_childResource"
              },
              {
                "$ref": "#/definitions/databaseAccounts_mongodbRoleDefinitions_childResource"
              },
              {
                "$ref": "#/definitions/databaseAccounts_mongodbUserDefinitions_childResource"
              },
              {
                "$ref": "#/definitions/databaseAccounts_privateEndpointConnections_childResource"
              }
            ]
          },
          "type": "array"
        },
        "tags": {
          "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\".",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.DocumentDB/databaseAccounts"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "databaseAccounts_cassandraKeyspaces": {
      "description": "Microsoft.DocumentDB/databaseAccounts/cassandraKeyspaces",
      "properties": {
        "apiVersion": {
          "enum": [
            "2022-02-15-preview"
          ],
          "type": "string"
        },
        "identity": {
          "description": "Identity for the resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedServiceIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "location": {
          "description": "The location of the resource group to which the resource belongs.",
          "type": "string"
        },
        "name": {
          "description": "Cosmos DB keyspace name.",
          "type": "string"
        },
        "properties": {
          "description": "Properties to create and update Azure Cosmos DB Cassandra keyspace.",
          "oneOf": [
            {
              "$ref": "#/definitions/CassandraKeyspaceCreateUpdateProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/databaseAccounts_cassandraKeyspaces_views_childResource"
              },
              {
                "$ref": "#/definitions/databaseAccounts_cassandraKeyspaces_tables_childResource"
              },
              {
                "$ref": "#/definitions/databaseAccounts_cassandraKeyspaces_throughputSettings_childResource"
              }
            ]
          },
          "type": "array"
        },
        "tags": {
          "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\".",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.DocumentDB/databaseAccounts/cassandraKeyspaces"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "databaseAccounts_cassandraKeyspaces_tables": {
      "description": "Microsoft.DocumentDB/databaseAccounts/cassandraKeyspaces/tables",
      "properties": {
        "apiVersion": {
          "enum": [
            "2022-02-15-preview"
          ],
          "type": "string"
        },
        "identity": {
          "description": "Identity for the resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedServiceIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "location": {
          "description": "The location of the resource group to which the resource belongs.",
          "type": "string"
        },
        "name": {
          "description": "Cosmos DB table name.",
          "type": "string"
        },
        "properties": {
          "description": "Properties to create and update Azure Cosmos DB Cassandra table.",
          "oneOf": [
            {
              "$ref": "#/definitions/CassandraTableCreateUpdateProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/databaseAccounts_cassandraKeyspaces_tables_throughputSettings_childResource"
              }
            ]
          },
          "type": "array"
        },
        "tags": {
          "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\".",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.DocumentDB/databaseAccounts/cassandraKeyspaces/tables"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "databaseAccounts_cassandraKeyspaces_tables_throughputSettings": {
      "description": "Microsoft.DocumentDB/databaseAccounts/cassandraKeyspaces/tables/throughputSettings",
      "properties": {
        "apiVersion": {
          "enum": [
            "2022-02-15-preview"
          ],
          "type": "string"
        },
        "identity": {
          "description": "Identity for the resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedServiceIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "location": {
          "description": "The location of the resource group to which the resource belongs.",
          "type": "string"
        },
        "name": {
          "oneOf": [
            {
              "pattern": "^.*/default$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Properties to update Azure Cosmos DB resource throughput.",
          "oneOf": [
            {
              "$ref": "#/definitions/ThroughputSettingsUpdateProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\".",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.DocumentDB/databaseAccounts/cassandraKeyspaces/tables/throughputSettings"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "databaseAccounts_cassandraKeyspaces_throughputSettings": {
      "description": "Microsoft.DocumentDB/databaseAccounts/cassandraKeyspaces/throughputSettings",
      "properties": {
        "apiVersion": {
          "enum": [
            "2022-02-15-preview"
          ],
          "type": "string"
        },
        "identity": {
          "description": "Identity for the resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedServiceIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "location": {
          "description": "The location of the resource group to which the resource belongs.",
          "type": "string"
        },
        "name": {
          "oneOf": [
            {
              "pattern": "^.*/default$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Properties to update Azure Cosmos DB resource throughput.",
          "oneOf": [
            {
              "$ref": "#/definitions/ThroughputSettingsUpdateProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\".",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.DocumentDB/databaseAccounts/cassandraKeyspaces/throughputSettings"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "databaseAccounts_cassandraKeyspaces_views": {
      "description": "Microsoft.DocumentDB/databaseAccounts/cassandraKeyspaces/views",
      "properties": {
        "apiVersion": {
          "enum": [
            "2022-02-15-preview"
          ],
          "type": "string"
        },
        "identity": {
          "description": "Identity for the resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedServiceIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "location": {
          "description": "The location of the resource group to which the resource belongs.",
          "type": "string"
        },
        "name": {
          "description": "Cosmos DB view name.",
          "type": "string"
        },
        "properties": {
          "description": "Properties to create and update Azure Cosmos DB Cassandra view.",
          "oneOf": [
            {
              "$ref": "#/definitions/CassandraViewCreateUpdateProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/databaseAccounts_cassandraKeyspaces_views_throughputSettings_childResource"
              }
            ]
          },
          "type": "array"
        },
        "tags": {
          "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\".",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.DocumentDB/databaseAccounts/cassandraKeyspaces/views"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "databaseAccounts_cassandraKeyspaces_views_throughputSettings": {
      "description": "Microsoft.DocumentDB/databaseAccounts/cassandraKeyspaces/views/throughputSettings",
      "properties": {
        "apiVersion": {
          "enum": [
            "2022-02-15-preview"
          ],
          "type": "string"
        },
        "identity": {
          "description": "Identity for the resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedServiceIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "location": {
          "description": "The location of the resource group to which the resource belongs.",
          "type": "string"
        },
        "name": {
          "oneOf": [
            {
              "pattern": "^.*/default$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Properties to update Azure Cosmos DB resource throughput.",
          "oneOf": [
            {
              "$ref": "#/definitions/ThroughputSettingsUpdateProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\".",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.DocumentDB/databaseAccounts/cassandraKeyspaces/views/throughputSettings"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "databaseAccounts_dataTransferJobs": {
      "description": "Microsoft.DocumentDB/databaseAccounts/dataTransferJobs",
      "properties": {
        "apiVersion": {
          "enum": [
            "2022-02-15-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Name of the Data Transfer Job",
          "type": "string"
        },
        "properties": {
          "description": "Data Transfer Create Job Properties",
          "oneOf": [
            {
              "$ref": "#/definitions/DataTransferJobProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.DocumentDB/databaseAccounts/dataTransferJobs"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "databaseAccounts_graphs": {
      "description": "Microsoft.DocumentDB/databaseAccounts/graphs",
      "properties": {
        "apiVersion": {
          "enum": [
            "2022-02-15-preview"
          ],
          "type": "string"
        },
        "identity": {
          "description": "Identity for the resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedServiceIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "location": {
          "description": "The location of the resource group to which the resource belongs.",
          "type": "string"
        },
        "name": {
          "description": "Cosmos DB graph resource name.",
          "type": "string"
        },
        "properties": {
          "description": "Properties to create and update Azure Cosmos DB Graph resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/GraphResourceCreateUpdateProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\".",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.DocumentDB/databaseAccounts/graphs"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "databaseAccounts_gremlinDatabases": {
      "description": "Microsoft.DocumentDB/databaseAccounts/gremlinDatabases",
      "properties": {
        "apiVersion": {
          "enum": [
            "2022-02-15-preview"
          ],
          "type": "string"
        },
        "identity": {
          "description": "Identity for the resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedServiceIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "location": {
          "description": "The location of the resource group to which the resource belongs.",
          "type": "string"
        },
        "name": {
          "description": "Cosmos DB database name.",
          "type": "string"
        },
        "properties": {
          "description": "Properties to create and update Azure Cosmos DB Gremlin database.",
          "oneOf": [
            {
              "$ref": "#/definitions/GremlinDatabaseCreateUpdateProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/databaseAccounts_gremlinDatabases_graphs_childResource"
              },
              {
                "$ref": "#/definitions/databaseAccounts_gremlinDatabases_throughputSettings_childResource"
              }
            ]
          },
          "type": "array"
        },
        "tags": {
          "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\".",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.DocumentDB/databaseAccounts/gremlinDatabases"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "databaseAccounts_gremlinDatabases_graphs": {
      "description": "Microsoft.DocumentDB/databaseAccounts/gremlinDatabases/graphs",
      "properties": {
        "apiVersion": {
          "enum": [
            "2022-02-15-preview"
          ],
          "type": "string"
        },
        "identity": {
          "description": "Identity for the resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedServiceIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "location": {
          "description": "The location of the resource group to which the resource belongs.",
          "type": "string"
        },
        "name": {
          "description": "Cosmos DB graph name.",
          "type": "string"
        },
        "properties": {
          "description": "Properties to create and update Azure Cosmos DB Gremlin graph.",
          "oneOf": [
            {
              "$ref": "#/definitions/GremlinGraphCreateUpdateProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/databaseAccounts_gremlinDatabases_graphs_throughputSettings_childResource"
              }
            ]
          },
          "type": "array"
        },
        "tags": {
          "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\".",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.DocumentDB/databaseAccounts/gremlinDatabases/graphs"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "databaseAccounts_gremlinDatabases_graphs_throughputSettings": {
      "description": "Microsoft.DocumentDB/databaseAccounts/gremlinDatabases/graphs/throughputSettings",
      "properties": {
        "apiVersion": {
          "enum": [
            "2022-02-15-preview"
          ],
          "type": "string"
        },
        "identity": {
          "description": "Identity for the resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedServiceIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "location": {
          "description": "The location of the resource group to which the resource belongs.",
          "type": "string"
        },
        "name": {
          "oneOf": [
            {
              "pattern": "^.*/default$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Properties to update Azure Cosmos DB resource throughput.",
          "oneOf": [
            {
              "$ref": "#/definitions/ThroughputSettingsUpdateProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\".",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.DocumentDB/databaseAccounts/gremlinDatabases/graphs/throughputSettings"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "databaseAccounts_gremlinDatabases_throughputSettings": {
      "description": "Microsoft.DocumentDB/databaseAccounts/gremlinDatabases/throughputSettings",
      "properties": {
        "apiVersion": {
          "enum": [
            "2022-02-15-preview"
          ],
          "type": "string"
        },
        "identity": {
          "description": "Identity for the resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedServiceIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "location": {
          "description": "The location of the resource group to which the resource belongs.",
          "type": "string"
        },
        "name": {
          "oneOf": [
            {
              "pattern": "^.*/default$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Properties to update Azure Cosmos DB resource throughput.",
          "oneOf": [
            {
              "$ref": "#/definitions/ThroughputSettingsUpdateProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\".",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.DocumentDB/databaseAccounts/gremlinDatabases/throughputSettings"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "databaseAccounts_mongodbDatabases": {
      "description": "Microsoft.DocumentDB/databaseAccounts/mongodbDatabases",
      "properties": {
        "apiVersion": {
          "enum": [
            "2022-02-15-preview"
          ],
          "type": "string"
        },
        "identity": {
          "description": "Identity for the resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedServiceIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "location": {
          "description": "The location of the resource group to which the resource belongs.",
          "type": "string"
        },
        "name": {
          "description": "Cosmos DB database name.",
          "type": "string"
        },
        "properties": {
          "description": "Properties to create and update Azure Cosmos DB MongoDB database.",
          "oneOf": [
            {
              "$ref": "#/definitions/MongoDBDatabaseCreateUpdateProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/databaseAccounts_mongodbDatabases_collections_childResource"
              },
              {
                "$ref": "#/definitions/databaseAccounts_mongodbDatabases_throughputSettings_childResource"
              }
            ]
          },
          "type": "array"
        },
        "tags": {
          "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\".",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.DocumentDB/databaseAccounts/mongodbDatabases"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "databaseAccounts_mongodbDatabases_collections": {
      "description": "Microsoft.DocumentDB/databaseAccounts/mongodbDatabases/collections",
      "properties": {
        "apiVersion": {
          "enum": [
            "2022-02-15-preview"
          ],
          "type": "string"
        },
        "identity": {
          "description": "Identity for the resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedServiceIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "location": {
          "description": "The location of the resource group to which the resource belongs.",
          "type": "string"
        },
        "name": {
          "description": "Cosmos DB collection name.",
          "type": "string"
        },
        "properties": {
          "description": "Properties to create and update Azure Cosmos DB MongoDB collection.",
          "oneOf": [
            {
              "$ref": "#/definitions/MongoDBCollectionCreateUpdateProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/databaseAccounts_mongodbDatabases_collections_throughputSettings_childResource"
              }
            ]
          },
          "type": "array"
        },
        "tags": {
          "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\".",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.DocumentDB/databaseAccounts/mongodbDatabases/collections"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "databaseAccounts_mongodbDatabases_collections_throughputSettings": {
      "description": "Microsoft.DocumentDB/databaseAccounts/mongodbDatabases/collections/throughputSettings",
      "properties": {
        "apiVersion": {
          "enum": [
            "2022-02-15-preview"
          ],
          "type": "string"
        },
        "identity": {
          "description": "Identity for the resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedServiceIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "location": {
          "description": "The location of the resource group to which the resource belongs.",
          "type": "string"
        },
        "name": {
          "oneOf": [
            {
              "pattern": "^.*/default$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Properties to update Azure Cosmos DB resource throughput.",
          "oneOf": [
            {
              "$ref": "#/definitions/ThroughputSettingsUpdateProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\".",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.DocumentDB/databaseAccounts/mongodbDatabases/collections/throughputSettings"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "databaseAccounts_mongodbDatabases_throughputSettings": {
      "description": "Microsoft.DocumentDB/databaseAccounts/mongodbDatabases/throughputSettings",
      "properties": {
        "apiVersion": {
          "enum": [
            "2022-02-15-preview"
          ],
          "type": "string"
        },
        "identity": {
          "description": "Identity for the resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedServiceIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "location": {
          "description": "The location of the resource group to which the resource belongs.",
          "type": "string"
        },
        "name": {
          "oneOf": [
            {
              "pattern": "^.*/default$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Properties to update Azure Cosmos DB resource throughput.",
          "oneOf": [
            {
              "$ref": "#/definitions/ThroughputSettingsUpdateProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\".",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.DocumentDB/databaseAccounts/mongodbDatabases/throughputSettings"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "databaseAccounts_mongodbRoleDefinitions": {
      "description": "Microsoft.DocumentDB/databaseAccounts/mongodbRoleDefinitions",
      "properties": {
        "apiVersion": {
          "enum": [
            "2022-02-15-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The ID for the Role Definition {dbName.roleName}.",
          "type": "string"
        },
        "properties": {
          "description": "Properties to create and update an Azure Cosmos DB Mongo Role Definition.",
          "oneOf": [
            {
              "$ref": "#/definitions/MongoRoleDefinitionResource"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.DocumentDB/databaseAccounts/mongodbRoleDefinitions"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "databaseAccounts_mongodbUserDefinitions": {
      "description": "Microsoft.DocumentDB/databaseAccounts/mongodbUserDefinitions",
      "properties": {
        "apiVersion": {
          "enum": [
            "2022-02-15-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The ID for the User Definition {dbName.userName}.",
          "type": "string"
        },
        "properties": {
          "description": "Properties to create and update an Azure Cosmos DB Mongo User Definition.",
          "oneOf": [
            {
              "$ref": "#/definitions/MongoUserDefinitionResource"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.DocumentDB/databaseAccounts/mongodbUserDefinitions"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "databaseAccounts_notebookWorkspaces": {
      "description": "Microsoft.DocumentDB/databaseAccounts/notebookWorkspaces",
      "properties": {
        "apiVersion": {
          "enum": [
            "2022-02-15-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the notebook workspace resource.",
          "oneOf": [
            {
              "pattern": "^.*/default$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.DocumentDB/databaseAccounts/notebookWorkspaces"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "databaseAccounts_privateEndpointConnections": {
      "description": "Microsoft.DocumentDB/databaseAccounts/privateEndpointConnections",
      "properties": {
        "apiVersion": {
          "enum": [
            "2022-02-15-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the private endpoint connection.",
          "type": "string"
        },
        "properties": {
          "description": "Resource properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/PrivateEndpointConnectionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.DocumentDB/databaseAccounts/privateEndpointConnections"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "databaseAccounts_services": {
      "description": "Microsoft.DocumentDB/databaseAccounts/services",
      "properties": {
        "apiVersion": {
          "enum": [
            "2022-02-15-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Cosmos DB service name.",
          "maxLength": 50,
          "minLength": 3,
          "type": "string"
        },
        "properties": {
          "description": "Properties in ServiceResourceCreateUpdateParameters.",
          "oneOf": [
            {
              "$ref": "#/definitions/ServiceResourceCreateUpdateProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.DocumentDB/databaseAccounts/services"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "databaseAccounts_sqlDatabases": {
      "description": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
      "properties": {
        "apiVersion": {
          "enum": [
            "2022-02-15-preview"
          ],
          "type": "string"
        },
        "identity": {
          "description": "Identity for the resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedServiceIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "location": {
          "description": "The location of the resource group to which the resource belongs.",
          "type": "string"
        },
        "name": {
          "description": "Cosmos DB database name.",
          "type": "string"
        },
        "properties": {
          "description": "Properties to create and update Azure Cosmos DB SQL database.",
          "oneOf": [
            {
              "$ref": "#/definitions/SqlDatabaseCreateUpdateProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/databaseAccounts_sqlDatabases_containers_childResource"
              },
              {
                "$ref": "#/definitions/databaseAccounts_sqlDatabases_throughputSettings_childResource"
              },
              {
                "$ref": "#/definitions/databaseAccounts_sqlDatabases_clientEncryptionKeys_childResource"
              }
            ]
          },
          "type": "array"
        },
        "tags": {
          "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\".",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.DocumentDB/databaseAccounts/sqlDatabases"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "databaseAccounts_sqlDatabases_clientEncryptionKeys": {
      "description": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/clientEncryptionKeys",
      "properties": {
        "apiVersion": {
          "enum": [
            "2022-02-15-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Cosmos DB ClientEncryptionKey name.",
          "type": "string"
        },
        "properties": {
          "description": "Properties to create and update ClientEncryptionKey.",
          "oneOf": [
            {
              "$ref": "#/definitions/ClientEncryptionKeyCreateUpdateProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/clientEncryptionKeys"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "databaseAccounts_sqlDatabases_containers": {
      "description": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
      "properties": {
        "apiVersion": {
          "enum": [
            "2022-02-15-preview"
          ],
          "type": "string"
        },
        "identity": {
          "description": "Identity for the resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedServiceIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "location": {
          "description": "The location of the resource group to which the resource belongs.",
          "type": "string"
        },
        "name": {
          "description": "Cosmos DB container name.",
          "type": "string"
        },
        "properties": {
          "description": "Properties to create and update Azure Cosmos DB container.",
          "oneOf": [
            {
              "$ref": "#/definitions/SqlContainerCreateUpdateProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/databaseAccounts_sqlDatabases_containers_triggers_childResource"
              },
              {
                "$ref": "#/definitions/databaseAccounts_sqlDatabases_containers_storedProcedures_childResource"
              },
              {
                "$ref": "#/definitions/databaseAccounts_sqlDatabases_containers_throughputSettings_childResource"
              },
              {
                "$ref": "#/definitions/databaseAccounts_sqlDatabases_containers_userDefinedFunctions_childResource"
              }
            ]
          },
          "type": "array"
        },
        "tags": {
          "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\".",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "databaseAccounts_sqlDatabases_containers_storedProcedures": {
      "description": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/storedProcedures",
      "properties": {
        "apiVersion": {
          "enum": [
            "2022-02-15-preview"
          ],
          "type": "string"
        },
        "identity": {
          "description": "Identity for the resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedServiceIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "location": {
          "description": "The location of the resource group to which the resource belongs.",
          "type": "string"
        },
        "name": {
          "description": "Cosmos DB storedProcedure name.",
          "type": "string"
        },
        "properties": {
          "description": "Properties to create and update Azure Cosmos DB storedProcedure.",
          "oneOf": [
            {
              "$ref": "#/definitions/SqlStoredProcedureCreateUpdateProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\".",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/storedProcedures"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "databaseAccounts_sqlDatabases_containers_throughputSettings": {
      "description": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/throughputSettings",
      "properties": {
        "apiVersion": {
          "enum": [
            "2022-02-15-preview"
          ],
          "type": "string"
        },
        "identity": {
          "description": "Identity for the resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedServiceIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "location": {
          "description": "The location of the resource group to which the resource belongs.",
          "type": "string"
        },
        "name": {
          "oneOf": [
            {
              "pattern": "^.*/default$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Properties to update Azure Cosmos DB resource throughput.",
          "oneOf": [
            {
              "$ref": "#/definitions/ThroughputSettingsUpdateProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\".",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/throughputSettings"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "databaseAccounts_sqlDatabases_containers_triggers": {
      "description": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/triggers",
      "properties": {
        "apiVersion": {
          "enum": [
            "2022-02-15-preview"
          ],
          "type": "string"
        },
        "identity": {
          "description": "Identity for the resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedServiceIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "location": {
          "description": "The location of the resource group to which the resource belongs.",
          "type": "string"
        },
        "name": {
          "description": "Cosmos DB trigger name.",
          "type": "string"
        },
        "properties": {
          "description": "Properties to create and update Azure Cosmos DB trigger.",
          "oneOf": [
            {
              "$ref": "#/definitions/SqlTriggerCreateUpdateProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\".",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/triggers"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "databaseAccounts_sqlDatabases_containers_userDefinedFunctions": {
      "description": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/userDefinedFunctions",
      "properties": {
        "apiVersion": {
          "enum": [
            "2022-02-15-preview"
          ],
          "type": "string"
        },
        "identity": {
          "description": "Identity for the resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedServiceIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "location": {
          "description": "The location of the resource group to which the resource belongs.",
          "type": "string"
        },
        "name": {
          "description": "Cosmos DB userDefinedFunction name.",
          "type": "string"
        },
        "properties": {
          "description": "Properties to create and update Azure Cosmos DB userDefinedFunction.",
          "oneOf": [
            {
              "$ref": "#/definitions/SqlUserDefinedFunctionCreateUpdateProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\".",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/userDefinedFunctions"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "databaseAccounts_sqlDatabases_throughputSettings": {
      "description": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/throughputSettings",
      "properties": {
        "apiVersion": {
          "enum": [
            "2022-02-15-preview"
          ],
          "type": "string"
        },
        "identity": {
          "description": "Identity for the resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedServiceIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "location": {
          "description": "The location of the resource group to which the resource belongs.",
          "type": "string"
        },
        "name": {
          "oneOf": [
            {
              "pattern": "^.*/default$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Properties to update Azure Cosmos DB resource throughput.",
          "oneOf": [
            {
              "$ref": "#/definitions/ThroughputSettingsUpdateProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\".",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/throughputSettings"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "databaseAccounts_sqlRoleAssignments": {
      "description": "Microsoft.DocumentDB/databaseAccounts/sqlRoleAssignments",
      "properties": {
        "apiVersion": {
          "enum": [
            "2022-02-15-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The GUID for the Role Assignment.",
          "type": "string"
        },
        "properties": {
          "description": "Properties to create and update an Azure Cosmos DB SQL Role Assignment.",
          "oneOf": [
            {
              "$ref": "#/definitions/SqlRoleAssignmentResource"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.DocumentDB/databaseAccounts/sqlRoleAssignments"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "databaseAccounts_sqlRoleDefinitions": {
      "description": "Microsoft.DocumentDB/databaseAccounts/sqlRoleDefinitions",
      "properties": {
        "apiVersion": {
          "enum": [
            "2022-02-15-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The GUID for the Role Definition.",
          "type": "string"
        },
        "properties": {
          "description": "Properties to create and update an Azure Cosmos DB SQL Role Definition.",
          "oneOf": [
            {
              "$ref": "#/definitions/SqlRoleDefinitionResource"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.DocumentDB/databaseAccounts/sqlRoleDefinitions"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "databaseAccounts_tables": {
      "description": "Microsoft.DocumentDB/databaseAccounts/tables",
      "properties": {
        "apiVersion": {
          "enum": [
            "2022-02-15-preview"
          ],
          "type": "string"
        },
        "identity": {
          "description": "Identity for the resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedServiceIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "location": {
          "description": "The location of the resource group to which the resource belongs.",
          "type": "string"
        },
        "name": {
          "description": "Cosmos DB table name.",
          "type": "string"
        },
        "properties": {
          "description": "Properties to create and update Azure Cosmos DB Table.",
          "oneOf": [
            {
              "$ref": "#/definitions/TableCreateUpdateProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/databaseAccounts_tables_throughputSettings_childResource"
              }
            ]
          },
          "type": "array"
        },
        "tags": {
          "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\".",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.DocumentDB/databaseAccounts/tables"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "databaseAccounts_tables_throughputSettings": {
      "description": "Microsoft.DocumentDB/databaseAccounts/tables/throughputSettings",
      "properties": {
        "apiVersion": {
          "enum": [
            "2022-02-15-preview"
          ],
          "type": "string"
        },
        "identity": {
          "description": "Identity for the resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedServiceIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "location": {
          "description": "The location of the resource group to which the resource belongs.",
          "type": "string"
        },
        "name": {
          "oneOf": [
            {
              "pattern": "^.*/default$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Properties to update Azure Cosmos DB resource throughput.",
          "oneOf": [
            {
              "$ref": "#/definitions/ThroughputSettingsUpdateProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\".",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.DocumentDB/databaseAccounts/tables/throughputSettings"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    }
  },
  "definitions": {
    "AnalyticalStorageConfiguration": {
      "description": "Analytical storage specific properties.",
      "properties": {
        "schemaType": {
          "description": "Describes the types of schema for analytical storage.",
          "oneOf": [
            {
              "enum": [
                "WellDefined",
                "FullFidelity"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ApiProperties": {
      "properties": {
        "serverVersion": {
          "description": "Describes the ServerVersion of an a MongoDB account.",
          "oneOf": [
            {
              "enum": [
                "3.2",
                "3.6",
                "4.0",
                "4.2"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "AuthenticationMethodLdapProperties": {
      "description": "Ldap authentication method properties. This feature is in preview.",
      "properties": {
        "searchBaseDistinguishedName": {
          "description": "Distinguished name of the object to start the recursive search of users from.",
          "type": "string"
        },
        "searchFilterTemplate": {
          "description": "Template to use for searching. Defaults to (cn=%s) where %s will be replaced by the username used to login.",
          "type": "string"
        },
        "serverCertificates": {
          "description": "Array of Certificate",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/Certificate"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "serverHostname": {
          "description": "Hostname of the LDAP server.",
          "type": "string"
        },
        "serverPort": {
          "description": "Port of the LDAP server.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "serviceUserDistinguishedName": {
          "description": "Distinguished name of the look up user account, who can look up user details on authentication.",
          "type": "string"
        },
        "serviceUserPassword": {
          "description": "Password of the look up user.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "AutoUpgradePolicyResource": {
      "description": "Cosmos DB resource auto-upgrade policy",
      "properties": {
        "throughputPolicy": {
          "description": "Represents throughput policy which service must adhere to for auto-upgrade",
          "oneOf": [
            {
              "$ref": "#/definitions/ThroughputPolicyResource"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "AutoscaleSettings": {
      "properties": {
        "maxThroughput": {
          "description": "Represents maximum throughput, the resource can scale up to.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "AutoscaleSettingsResource": {
      "description": "Cosmos DB provisioned throughput settings object",
      "properties": {
        "autoUpgradePolicy": {
          "description": "Cosmos DB resource auto-upgrade policy",
          "oneOf": [
            {
              "$ref": "#/definitions/AutoUpgradePolicyResource"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "maxThroughput": {
          "description": "Represents maximum throughput container can scale up to.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "maxThroughput"
      ],
      "type": "object"
    },
    "BackupPolicy": {
      "description": "The object representing the policy for taking backups on an account.",
      "oneOf": [
        {
          "description": "The object representing continuous mode backup policy.",
          "properties": {
            "continuousModeProperties": {
              "description": "Configuration values for continuous mode backup",
              "oneOf": [
                {
                  "$ref": "#/definitions/ContinuousModeProperties"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "type": {
              "enum": [
                "Continuous"
              ],
              "type": "string"
            }
          },
          "required": [
            "type"
          ],
          "type": "object"
        },
        {
          "description": "The object representing periodic mode backup policy.",
          "properties": {
            "periodicModeProperties": {
              "description": "Configuration values for periodic mode backup",
              "oneOf": [
                {
                  "$ref": "#/definitions/PeriodicModeProperties"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "type": {
              "enum": [
                "Periodic"
              ],
              "type": "string"
            }
          },
          "required": [
            "type"
          ],
          "type": "object"
        }
      ],
      "properties": {
        "migrationState": {
          "description": "The object representing the state of the migration between the backup policies.",
          "oneOf": [
            {
              "$ref": "#/definitions/BackupPolicyMigrationState"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "BackupPolicyMigrationState": {
      "description": "The object representing the state of the migration between the backup policies.",
      "properties": {
        "startTime": {
          "description": "Time at which the backup policy migration started (ISO-8601 format).",
          "format": "date-time",
          "type": "string"
        },
        "status": {
          "description": "Describes the status of migration between backup policy types.",
          "oneOf": [
            {
              "enum": [
                "Invalid",
                "InProgress",
                "Completed",
                "Failed"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "targetType": {
          "description": "Describes the target backup policy type of the backup policy migration.",
          "oneOf": [
            {
              "enum": [
                "Periodic",
                "Continuous"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "Capability": {
      "description": "Cosmos DB capability object",
      "properties": {
        "name": {
          "description": "Name of the Cosmos DB capability. For example, \"name\": \"EnableCassandra\". Current values also include \"EnableTable\" and \"EnableGremlin\".",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Capacity": {
      "description": "The object that represents all properties related to capacity enforcement on an account.",
      "properties": {
        "totalThroughputLimit": {
          "description": "The total throughput limit imposed on the account. A totalThroughputLimit of 2000 imposes a strict limit of max throughput that can be provisioned on that account to be 2000. A totalThroughputLimit of -1 indicates no limits on provisioning of throughput.",
          "oneOf": [
            {
              "minimum": -1,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "CassandraKeyspaceCreateUpdateProperties": {
      "description": "Properties to create and update Azure Cosmos DB Cassandra keyspace.",
      "properties": {
        "options": {
          "description": "A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request.",
          "oneOf": [
            {
              "$ref": "#/definitions/CreateUpdateOptions"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resource": {
          "description": "The standard JSON format of a Cassandra keyspace",
          "oneOf": [
            {
              "$ref": "#/definitions/CassandraKeyspaceResource"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "resource"
      ],
      "type": "object"
    },
    "CassandraKeyspaceResource": {
      "description": "Cosmos DB Cassandra keyspace resource object",
      "properties": {
        "id": {
          "description": "Name of the Cosmos DB Cassandra keyspace",
          "type": "string"
        }
      },
      "required": [
        "id"
      ],
      "type": "object"
    },
    "CassandraPartitionKey": {
      "description": "Cosmos DB Cassandra table partition key",
      "properties": {
        "name": {
          "description": "Name of the Cosmos DB Cassandra table partition key",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CassandraSchema": {
      "description": "Cosmos DB Cassandra table schema",
      "properties": {
        "clusterKeys": {
          "description": "List of cluster key.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/ClusterKey"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "columns": {
          "description": "List of Cassandra table columns.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/Column"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "partitionKeys": {
          "description": "List of partition key.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/CassandraPartitionKey"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "CassandraTableCreateUpdateProperties": {
      "description": "Properties to create and update Azure Cosmos DB Cassandra table.",
      "properties": {
        "options": {
          "description": "A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request.",
          "oneOf": [
            {
              "$ref": "#/definitions/CreateUpdateOptions"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resource": {
          "description": "The standard JSON format of a Cassandra table",
          "oneOf": [
            {
              "$ref": "#/definitions/CassandraTableResource"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "resource"
      ],
      "type": "object"
    },
    "CassandraTableResource": {
      "description": "Cosmos DB Cassandra table resource object",
      "properties": {
        "analyticalStorageTtl": {
          "description": "Analytical TTL.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "defaultTtl": {
          "description": "Time to live of the Cosmos DB Cassandra table",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "id": {
          "description": "Name of the Cosmos DB Cassandra table",
          "type": "string"
        },
        "schema": {
          "description": "Schema of the Cosmos DB Cassandra table",
          "oneOf": [
            {
              "$ref": "#/definitions/CassandraSchema"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "id"
      ],
      "type": "object"
    },
    "CassandraViewCreateUpdateProperties": {
      "description": "Properties to create and update Azure Cosmos DB Cassandra view.",
      "properties": {
        "options": {
          "description": "A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request.",
          "oneOf": [
            {
              "$ref": "#/definitions/CreateUpdateOptions"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resource": {
          "description": "The standard JSON format of a Cassandra view",
          "oneOf": [
            {
              "$ref": "#/definitions/CassandraViewResource"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "resource"
      ],
      "type": "object"
    },
    "CassandraViewResource": {
      "description": "Cosmos DB Cassandra view resource object",
      "properties": {
        "id": {
          "description": "Name of the Cosmos DB Cassandra view",
          "type": "string"
        },
        "viewDefinition": {
          "description": "View Definition of the Cosmos DB Cassandra view",
          "type": "string"
        }
      },
      "required": [
        "id",
        "viewDefinition"
      ],
      "type": "object"
    },
    "Certificate": {
      "properties": {
        "pem": {
          "description": "PEM formatted public key.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ClientEncryptionIncludedPath": {
      "description": ".",
      "properties": {
        "clientEncryptionKeyId": {
          "description": "The identifier of the Client Encryption Key to be used to encrypt the path.",
          "type": "string"
        },
        "encryptionAlgorithm": {
          "description": "The encryption algorithm which will be used. Eg - AEAD_AES_256_CBC_HMAC_SHA256.",
          "type": "string"
        },
        "encryptionType": {
          "description": "The type of encryption to be performed. Eg - Deterministic, Randomized.",
          "type": "string"
        },
        "path": {
          "description": "Path that needs to be encrypted.",
          "type": "string"
        }
      },
      "required": [
        "path",
        "clientEncryptionKeyId",
        "encryptionType",
        "encryptionAlgorithm"
      ],
      "type": "object"
    },
    "ClientEncryptionKeyCreateUpdateProperties": {
      "description": "Properties to create and update ClientEncryptionKey.",
      "properties": {
        "resource": {
          "description": "The standard JSON format of a ClientEncryptionKey",
          "oneOf": [
            {
              "$ref": "#/definitions/ClientEncryptionKeyResource"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "resource"
      ],
      "type": "object"
    },
    "ClientEncryptionKeyResource": {
      "description": "Cosmos DB client encryption key resource object.",
      "properties": {
        "encryptionAlgorithm": {
          "description": "Encryption algorithm that will be used along with this client encryption key to encrypt/decrypt data.",
          "type": "string"
        },
        "id": {
          "description": "Name of the ClientEncryptionKey",
          "type": "string"
        },
        "keyWrapMetadata": {
          "description": "Metadata for the wrapping provider that can be used to unwrap the wrapped client encryption key.",
          "oneOf": [
            {
              "$ref": "#/definitions/KeyWrapMetadata"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "wrappedDataEncryptionKey": {
          "description": "Wrapped (encrypted) form of the key represented as a byte array."
        }
      },
      "type": "object"
    },
    "ClientEncryptionPolicy": {
      "description": "Cosmos DB client encryption policy.",
      "properties": {
        "includedPaths": {
          "description": "Paths of the item that need encryption along with path-specific settings.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/ClientEncryptionIncludedPath"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "policyFormatVersion": {
          "description": "Version of the client encryption policy definition. Please note, user passed value is ignored. Default policy version is 1.",
          "oneOf": [
            {
              "default": 1,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "includedPaths"
      ],
      "type": "object"
    },
    "ClusterKey": {
      "description": "Cosmos DB Cassandra table cluster key",
      "properties": {
        "name": {
          "description": "Name of the Cosmos DB Cassandra table cluster key",
          "type": "string"
        },
        "orderBy": {
          "description": "Order of the Cosmos DB Cassandra table cluster key, only support \"Asc\" and \"Desc\"",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ClusterResourceProperties": {
      "description": "Properties of a managed Cassandra cluster.",
      "properties": {
        "authenticationMethod": {
          "description": "Which authentication method Cassandra should use to authenticate clients. 'None' turns off authentication, so should not be used except in emergencies. 'Cassandra' is the default password based authentication. The default is 'Cassandra'. 'Ldap' is in preview.",
          "oneOf": [
            {
              "enum": [
                "None",
                "Cassandra",
                "Ldap"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "cassandraAuditLoggingEnabled": {
          "description": "Whether Cassandra audit logging is enabled",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "cassandraVersion": {
          "description": "Which version of Cassandra should this cluster converge to running (e.g., 3.11). When updated, the cluster may take some time to migrate to the new version.",
          "type": "string"
        },
        "clientCertificates": {
          "description": "List of TLS certificates used to authorize clients connecting to the cluster. All connections are TLS encrypted whether clientCertificates is set or not, but if clientCertificates is set, the managed Cassandra cluster will reject all connections not bearing a TLS client certificate that can be validated from one or more of the public certificates in this property.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/Certificate"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "clusterNameOverride": {
          "description": "If you need to set the clusterName property in cassandra.yaml to something besides the resource name of the cluster, set the value to use on this property.",
          "type": "string"
        },
        "deallocated": {
          "description": "Whether the cluster and associated data centers has been deallocated.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "delegatedManagementSubnetId": {
          "description": "Resource id of a subnet that this cluster's management service should have its network interface attached to. The subnet must be routable to all subnets that will be delegated to data centers. The resource id must be of the form '/subscriptions/<subscription id>/resourceGroups/<resource group>/providers/Microsoft.Network/virtualNetworks/<virtual network>/subnets/<subnet>'",
          "type": "string"
        },
        "externalGossipCertificates": {
          "description": "List of TLS certificates used to authorize gossip from unmanaged data centers. The TLS certificates of all nodes in unmanaged data centers must be verifiable using one of the certificates provided in this property.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/Certificate"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "externalSeedNodes": {
          "description": "List of IP addresses of seed nodes in unmanaged data centers. These will be added to the seed node lists of all managed nodes.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/SeedNode"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "hoursBetweenBackups": {
          "description": "Number of hours to wait between taking a backup of the cluster.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "initialCassandraAdminPassword": {
          "description": "Initial password for clients connecting as admin to the cluster. Should be changed after cluster creation. Returns null on GET. This field only applies when the authenticationMethod field is 'Cassandra'.",
          "type": "string"
        },
        "prometheusEndpoint": {
          "description": "Hostname or IP address where the Prometheus endpoint containing data about the managed Cassandra nodes can be reached.",
          "oneOf": [
            {
              "$ref": "#/definitions/SeedNode"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "provisioningState": {
          "description": "The status of the resource at the time the operation was called.",
          "oneOf": [
            {
              "enum": [
                "Creating",
                "Updating",
                "Deleting",
                "Succeeded",
                "Failed",
                "Canceled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "repairEnabled": {
          "description": "Should automatic repairs run on this cluster? If omitted, this is true, and should stay true unless you are running a hybrid cluster where you are already doing your own repairs.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "restoreFromBackupId": {
          "description": "To create an empty cluster, omit this field or set it to null. To restore a backup into a new cluster, set this field to the resource id of the backup.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Column": {
      "description": "Cosmos DB Cassandra table column",
      "properties": {
        "name": {
          "description": "Name of the Cosmos DB Cassandra table column",
          "type": "string"
        },
        "type": {
          "description": "Type of the Cosmos DB Cassandra table column",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Components1Jq1T4ISchemasManagedserviceidentityPropertiesUserassignedidentitiesAdditionalproperties": {
      "properties": {},
      "type": "object"
    },
    "CompositePath": {
      "properties": {
        "order": {
          "description": "Sort order for composite paths.",
          "oneOf": [
            {
              "enum": [
                "ascending",
                "descending"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "path": {
          "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ConflictResolutionPolicy": {
      "description": "The conflict resolution policy for the container.",
      "properties": {
        "conflictResolutionPath": {
          "description": "The conflict resolution path in the case of LastWriterWins mode.",
          "type": "string"
        },
        "conflictResolutionProcedure": {
          "description": "The procedure to resolve conflicts in the case of custom mode.",
          "type": "string"
        },
        "mode": {
          "description": "Indicates the conflict resolution mode.",
          "oneOf": [
            {
              "enum": [
                "LastWriterWins",
                "Custom"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ConsistencyPolicy": {
      "description": "The consistency policy for the Cosmos DB database account.",
      "properties": {
        "defaultConsistencyLevel": {
          "description": "The default consistency level and configuration settings of the Cosmos DB account.",
          "oneOf": [
            {
              "enum": [
                "Eventual",
                "Session",
                "BoundedStaleness",
                "Strong",
                "ConsistentPrefix"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "maxIntervalInSeconds": {
          "description": "When used with the Bounded Staleness consistency level, this value represents the time amount of staleness (in seconds) tolerated. Accepted range for this value is 5 - 86400. Required when defaultConsistencyPolicy is set to 'BoundedStaleness'.",
          "oneOf": [
            {
              "maximum": 86400,
              "minimum": 5,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "maxStalenessPrefix": {
          "description": "When used with the Bounded Staleness consistency level, this value represents the number of stale requests tolerated. Accepted range for this value is 1 – 2,147,483,647. Required when defaultConsistencyPolicy is set to 'BoundedStaleness'.",
          "oneOf": [
            {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "defaultConsistencyLevel"
      ],
      "type": "object"
    },
    "ContainerPartitionKey": {
      "description": "The configuration of the partition key to be used for partitioning data into multiple partitions",
      "properties": {
        "kind": {
          "description": "Indicates the kind of algorithm used for partitioning. For MultiHash, multiple partition keys (upto three maximum) are supported for container create",
          "oneOf": [
            {
              "enum": [
                "Hash",
                "Range",
                "MultiHash"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "paths": {
          "description": "List of paths using which data within the container can be partitioned",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "version": {
          "description": "Indicates the version of the partition key definition",
          "oneOf": [
            {
              "maximum": 2,
              "minimum": 1,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ContinuousModeProperties": {
      "description": "Configuration values for periodic mode backup",
      "properties": {
        "tier": {
          "description": "Enum to indicate type of Continuos backup mode",
          "oneOf": [
            {
              "enum": [
                "Continuous7Days",
                "Continuous30Days"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "CorsPolicy": {
      "description": "The CORS policy for the Cosmos DB database account.",
      "properties": {
        "allowedHeaders": {
          "description": "The request headers that the origin domain may specify on the CORS request.",
          "type": "string"
        },
        "allowedMethods": {
          "description": "The methods (HTTP request verbs) that the origin domain may use for a CORS request.",
          "type": "string"
        },
        "allowedOrigins": {
          "description": "The origin domains that are permitted to make a request against the service via CORS.",
          "type": "string"
        },
        "exposedHeaders": {
          "description": "The response headers that may be sent in the response to the CORS request and exposed by the browser to the request issuer.",
          "type": "string"
        },
        "maxAgeInSeconds": {
          "description": "The maximum amount time that a browser should cache the preflight OPTIONS request.",
          "oneOf": [
            {
              "maximum": 2147483647,
              "minimum": 1,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "allowedOrigins"
      ],
      "type": "object"
    },
    "CreateUpdateOptions": {
      "description": "CreateUpdateOptions are a list of key-value pairs that describe the resource. Supported keys are \"If-Match\", \"If-None-Match\", \"Session-Token\" and \"Throughput\"",
      "properties": {
        "autoscaleSettings": {
          "description": "Specifies the Autoscale settings.",
          "oneOf": [
            {
              "$ref": "#/definitions/AutoscaleSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "throughput": {
          "description": "Request Units per second. For example, \"throughput\": 10000.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "DataCenterResourceProperties": {
      "description": "Properties of a managed Cassandra data center.",
      "properties": {
        "authenticationMethodLdapProperties": {
          "description": "Ldap authentication method properties. This feature is in preview.",
          "oneOf": [
            {
              "$ref": "#/definitions/AuthenticationMethodLdapProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "availabilityZone": {
          "description": "If the data center has Availability Zone feature, apply it to the Virtual Machine ScaleSet that host the cassandra data center virtual machines.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "backupStorageCustomerKeyUri": {
          "description": "Indicates the Key Uri of the customer key to use for encryption of the backup storage account.",
          "type": "string"
        },
        "base64EncodedCassandraYamlFragment": {
          "description": "A fragment of a cassandra.yaml configuration file to be included in the cassandra.yaml for all nodes in this data center. The fragment should be Base64 encoded, and only a subset of keys are allowed.",
          "type": "string"
        },
        "dataCenterLocation": {
          "description": "The region this data center should be created in.",
          "type": "string"
        },
        "delegatedSubnetId": {
          "description": "Resource id of a subnet the nodes in this data center should have their network interfaces connected to. The subnet must be in the same region specified in 'dataCenterLocation' and must be able to route to the subnet specified in the cluster's 'delegatedManagementSubnetId' property. This resource id will be of the form '/subscriptions/<subscription id>/resourceGroups/<resource group>/providers/Microsoft.Network/virtualNetworks/<virtual network>/subnets/<subnet>'.",
          "type": "string"
        },
        "diskCapacity": {
          "description": "Number of disk used for data centers. Default value is 4.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "diskSku": {
          "description": "Disk SKU used for data centers. Default value is P30.",
          "type": "string"
        },
        "managedDiskCustomerKeyUri": {
          "description": "Key uri to use for encryption of managed disks. Ensure the system assigned identity of the cluster has been assigned appropriate permissions(key get/wrap/unwrap permissions) on the key.",
          "type": "string"
        },
        "nodeCount": {
          "description": "The number of nodes the data center should have. This is the desired number. After it is set, it may take some time for the data center to be scaled to match. To monitor the number of nodes and their status, use the fetchNodeStatus method on the cluster.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "provisioningState": {
          "description": "The status of the resource at the time the operation was called.",
          "oneOf": [
            {
              "enum": [
                "Creating",
                "Updating",
                "Deleting",
                "Succeeded",
                "Failed",
                "Canceled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "sku": {
          "description": "Virtual Machine SKU used for data centers. Default value is Standard_DS14_v2",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DataTransferDataSourceSink": {
      "description": "Base class for all DataTransfer source/sink",
      "oneOf": [
        {
          "description": "An Azure Blob Storage data source/sink",
          "properties": {
            "component": {
              "enum": [
                "AzureBlobStorage"
              ],
              "type": "string"
            },
            "containerName": {
              "type": "string"
            },
            "endpointUrl": {
              "type": "string"
            }
          },
          "required": [
            "containerName",
            "component"
          ],
          "type": "object"
        },
        {
          "description": "A CosmosDB Cassandra API data source/sink",
          "properties": {
            "component": {
              "enum": [
                "CosmosDBCassandra"
              ],
              "type": "string"
            },
            "keyspaceName": {
              "type": "string"
            },
            "tableName": {
              "type": "string"
            }
          },
          "required": [
            "keyspaceName",
            "tableName",
            "component"
          ],
          "type": "object"
        },
        {
          "description": "A CosmosDB Cassandra API data source/sink",
          "properties": {
            "component": {
              "enum": [
                "CosmosDBSql"
              ],
              "type": "string"
            },
            "containerName": {
              "type": "string"
            },
            "databaseName": {
              "type": "string"
            }
          },
          "required": [
            "databaseName",
            "containerName",
            "component"
          ],
          "type": "object"
        }
      ],
      "properties": {},
      "type": "object"
    },
    "DataTransferJobProperties": {
      "description": "The properties of a DataTransfer Job",
      "properties": {
        "destination": {
          "description": "Destination DataStore details",
          "oneOf": [
            {
              "$ref": "#/definitions/DataTransferDataSourceSink"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "source": {
          "description": "Source DataStore details",
          "oneOf": [
            {
              "$ref": "#/definitions/DataTransferDataSourceSink"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "workerCount": {
          "description": "Worker count",
          "oneOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "source",
        "destination"
      ],
      "type": "object"
    },
    "DatabaseAccountCreateUpdateProperties": {
      "description": "Properties to create and update Azure Cosmos DB database accounts.",
      "properties": {
        "analyticalStorageConfiguration": {
          "description": "Analytical storage specific properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/AnalyticalStorageConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "apiProperties": {
          "description": "API specific properties. Currently, supported only for MongoDB API.",
          "oneOf": [
            {
              "$ref": "#/definitions/ApiProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "backupPolicy": {
          "description": "The object representing the policy for taking backups on an account.",
          "oneOf": [
            {
              "$ref": "#/definitions/BackupPolicy"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "capabilities": {
          "description": "List of Cosmos DB capabilities for the account",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/Capability"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "capacity": {
          "description": "The object that represents all properties related to capacity enforcement on an account.",
          "oneOf": [
            {
              "$ref": "#/definitions/Capacity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "connectorOffer": {
          "description": "The cassandra connector offer type for the Cosmos DB database C* account.",
          "oneOf": [
            {
              "enum": [
                "Small"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "consistencyPolicy": {
          "description": "The consistency policy for the Cosmos DB account.",
          "oneOf": [
            {
              "$ref": "#/definitions/ConsistencyPolicy"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "cors": {
          "description": "The CORS policy for the Cosmos DB database account.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/CorsPolicy"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "createMode": {
          "description": "Enum to indicate the mode of account creation.",
          "oneOf": [
            {
              "enum": [
                "Default",
                "Restore"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "databaseAccountOfferType": {
          "description": "The offer type for the database",
          "oneOf": [
            {
              "enum": [
                "Standard"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "defaultIdentity": {
          "description": "The default identity for accessing key vault used in features like customer managed keys. The default identity needs to be explicitly set by the users. It can be \"FirstPartyIdentity\", \"SystemAssignedIdentity\" and more.",
          "type": "string"
        },
        "diagnosticLogSettings": {
          "description": "The Object representing the different Diagnostic log settings for the Cosmos DB Account.",
          "oneOf": [
            {
              "$ref": "#/definitions/DiagnosticLogSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "disableKeyBasedMetadataWriteAccess": {
          "description": "Disable write operations on metadata resources (databases, containers, throughput) via account keys",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "disableLocalAuth": {
          "description": "Opt-out of local authentication and ensure only MSI and AAD can be used exclusively for authentication.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "enableAnalyticalStorage": {
          "description": "Flag to indicate whether to enable storage analytics.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "enableAutomaticFailover": {
          "description": "Enables automatic failover of the write region in the rare event that the region is unavailable due to an outage. Automatic failover will result in a new write region for the account and is chosen based on the failover priorities configured for the account.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "enableCassandraConnector": {
          "description": "Enables the cassandra connector on the Cosmos DB C* account",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "enableFreeTier": {
          "description": "Flag to indicate whether Free Tier is enabled.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "enableMaterializedViews": {
          "description": "Flag to indicate whether to enable MaterializedViews on the Cosmos DB account",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "enableMultipleWriteLocations": {
          "description": "Enables the account to write in multiple locations",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "ipRules": {
          "description": "List of IpRules.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/IpAddressOrRange"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "isVirtualNetworkFilterEnabled": {
          "description": "Flag to indicate whether to enable/disable Virtual Network ACL rules.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "keyVaultKeyUri": {
          "description": "The URI of the key vault",
          "type": "string"
        },
        "locations": {
          "description": "An array that contains the georeplication locations enabled for the Cosmos DB account.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/Location"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "networkAclBypass": {
          "description": "Indicates what services are allowed to bypass firewall checks.",
          "oneOf": [
            {
              "enum": [
                "None",
                "AzureServices"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "networkAclBypassResourceIds": {
          "description": "An array that contains the Resource Ids for Network Acl Bypass for the Cosmos DB account.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "publicNetworkAccess": {
          "description": "Whether requests from Public Network are allowed",
          "oneOf": [
            {
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "restoreParameters": {
          "description": "Parameters to indicate the information about the restore.",
          "oneOf": [
            {
              "$ref": "#/definitions/RestoreParameters"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "virtualNetworkRules": {
          "description": "List of Virtual Network ACL rules configured for the Cosmos DB account.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/VirtualNetworkRule"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "locations",
        "databaseAccountOfferType"
      ],
      "type": "object"
    },
    "DatabaseRestoreResource": {
      "description": "Specific Databases to restore.",
      "properties": {
        "collectionNames": {
          "description": "The names of the collections available for restore.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "databaseName": {
          "description": "The name of the database available for restore.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DiagnosticLogSettings": {
      "description": "Indicates what diagnostic log settings are to be enabled.",
      "properties": {
        "enableFullTextQuery": {
          "description": "Describe the level of detail with which queries are to be logged.",
          "oneOf": [
            {
              "enum": [
                "None",
                "True",
                "False"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ExcludedPath": {
      "properties": {
        "path": {
          "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GraphResource": {
      "description": "Cosmos DB Graph resource object",
      "properties": {
        "id": {
          "description": "Name of the Cosmos DB Graph",
          "type": "string"
        }
      },
      "required": [
        "id"
      ],
      "type": "object"
    },
    "GraphResourceCreateUpdateProperties": {
      "description": "Properties to create and update Azure Cosmos DB Graph resource.",
      "properties": {
        "options": {
          "description": "A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request.",
          "oneOf": [
            {
              "$ref": "#/definitions/CreateUpdateOptions"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resource": {
          "description": "The standard JSON format of a Graph resource",
          "oneOf": [
            {
              "$ref": "#/definitions/GraphResource"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "resource"
      ],
      "type": "object"
    },
    "GremlinDatabaseCreateUpdateProperties": {
      "description": "Properties to create and update Azure Cosmos DB Gremlin database.",
      "properties": {
        "options": {
          "description": "A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request.",
          "oneOf": [
            {
              "$ref": "#/definitions/CreateUpdateOptions"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resource": {
          "description": "The standard JSON format of a Gremlin database",
          "oneOf": [
            {
              "$ref": "#/definitions/GremlinDatabaseResource"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "resource"
      ],
      "type": "object"
    },
    "GremlinDatabaseResource": {
      "description": "Cosmos DB Gremlin database resource object",
      "properties": {
        "id": {
          "description": "Name of the Cosmos DB Gremlin database",
          "type": "string"
        }
      },
      "required": [
        "id"
      ],
      "type": "object"
    },
    "GremlinDatabaseRestoreResource": {
      "description": "Specific Gremlin Databases to restore.",
      "properties": {
        "databaseName": {
          "description": "The name of the gremlin database available for restore.",
          "type": "string"
        },
        "graphNames": {
          "description": "The names of the graphs available for restore.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "GremlinGraphCreateUpdateProperties": {
      "description": "Properties to create and update Azure Cosmos DB Gremlin graph.",
      "properties": {
        "options": {
          "description": "A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request.",
          "oneOf": [
            {
              "$ref": "#/definitions/CreateUpdateOptions"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resource": {
          "description": "The standard JSON format of a Gremlin graph",
          "oneOf": [
            {
              "$ref": "#/definitions/GremlinGraphResource"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "resource"
      ],
      "type": "object"
    },
    "GremlinGraphResource": {
      "description": "Cosmos DB Gremlin graph resource object",
      "properties": {
        "conflictResolutionPolicy": {
          "description": "The conflict resolution policy for the graph.",
          "oneOf": [
            {
              "$ref": "#/definitions/ConflictResolutionPolicy"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "defaultTtl": {
          "description": "Default time to live",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "id": {
          "description": "Name of the Cosmos DB Gremlin graph",
          "type": "string"
        },
        "indexingPolicy": {
          "description": "The configuration of the indexing policy. By default, the indexing is automatic for all document paths within the graph",
          "oneOf": [
            {
              "$ref": "#/definitions/IndexingPolicy"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "partitionKey": {
          "description": "The configuration of the partition key to be used for partitioning data into multiple partitions",
          "oneOf": [
            {
              "$ref": "#/definitions/ContainerPartitionKey"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "uniqueKeyPolicy": {
          "description": "The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.",
          "oneOf": [
            {
              "$ref": "#/definitions/UniqueKeyPolicy"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "id"
      ],
      "type": "object"
    },
    "IncludedPath": {
      "description": "The paths that are included in indexing",
      "properties": {
        "indexes": {
          "description": "List of indexes for this path",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/Indexes"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "path": {
          "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Indexes": {
      "description": "The indexes for the path.",
      "properties": {
        "dataType": {
          "description": "The datatype for which the indexing behavior is applied to.",
          "oneOf": [
            {
              "enum": [
                "String",
                "Number",
                "Point",
                "Polygon",
                "LineString",
                "MultiPolygon"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "kind": {
          "description": "Indicates the type of index.",
          "oneOf": [
            {
              "enum": [
                "Hash",
                "Range",
                "Spatial"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "precision": {
          "description": "The precision of the index. -1 is maximum precision.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "IndexingPolicy": {
      "description": "Cosmos DB indexing policy",
      "properties": {
        "automatic": {
          "description": "Indicates if the indexing policy is automatic",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "compositeIndexes": {
          "description": "List of composite path list",
          "oneOf": [
            {
              "items": {
                "items": {
                  "$ref": "#/definitions/CompositePath"
                },
                "type": "array"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "excludedPaths": {
          "description": "List of paths to exclude from indexing",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/ExcludedPath"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "includedPaths": {
          "description": "List of paths to include in the indexing",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/IncludedPath"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "indexingMode": {
          "description": "Indicates the indexing mode.",
          "oneOf": [
            {
              "enum": [
                "consistent",
                "lazy",
                "none"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "spatialIndexes": {
          "description": "List of spatial specifics",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/SpatialSpec"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "IpAddressOrRange": {
      "description": "IpAddressOrRange object",
      "properties": {
        "ipAddressOrRange": {
          "description": "A single IPv4 address or a single IPv4 address range in CIDR format. Provided IPs must be well-formatted and cannot be contained in one of the following ranges: 10.0.0.0/8, 100.64.0.0/10, 172.16.0.0/12, 192.168.0.0/16, since these are not enforceable by the IP address filter. Example of valid inputs: “23.40.210.245” or “23.40.210.0/8”.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "KeyWrapMetadata": {
      "description": "Represents key wrap metadata that a key wrapping provider can use to wrap/unwrap a client encryption key.",
      "properties": {
        "algorithm": {
          "description": "Algorithm used in wrapping and unwrapping of the data encryption key.",
          "type": "string"
        },
        "name": {
          "description": "The name of associated KeyEncryptionKey (aka CustomerManagedKey).",
          "type": "string"
        },
        "type": {
          "description": "ProviderName of KeyStoreProvider.",
          "type": "string"
        },
        "value": {
          "description": "Reference / link to the KeyEncryptionKey.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Location": {
      "description": "A region in which the Azure Cosmos DB database account is deployed.",
      "properties": {
        "failoverPriority": {
          "description": "The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists.",
          "oneOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "isZoneRedundant": {
          "description": "Flag to indicate whether or not this region is an AvailabilityZone region",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "locationName": {
          "description": "The name of the region.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ManagedCassandraManagedServiceIdentity": {
      "description": "Identity for the resource.",
      "properties": {
        "type": {
          "description": "The type of the resource.",
          "oneOf": [
            {
              "enum": [
                "SystemAssigned",
                "None"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ManagedServiceIdentity": {
      "description": "Identity for the resource.",
      "properties": {
        "type": {
          "description": "The type of identity used for the resource. The type 'SystemAssigned,UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the service.",
          "oneOf": [
            {
              "enum": [
                "SystemAssigned",
                "UserAssigned",
                "SystemAssigned,UserAssigned",
                "None"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "userAssignedIdentities": {
          "description": "The list of user identities associated with resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.",
          "oneOf": [
            {
              "additionalProperties": {
                "$ref": "#/definitions/Components1Jq1T4ISchemasManagedserviceidentityPropertiesUserassignedidentitiesAdditionalproperties"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "MongoDBCollectionCreateUpdateProperties": {
      "description": "Properties to create and update Azure Cosmos DB MongoDB collection.",
      "properties": {
        "options": {
          "description": "A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request.",
          "oneOf": [
            {
              "$ref": "#/definitions/CreateUpdateOptions"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resource": {
          "description": "The standard JSON format of a MongoDB collection",
          "oneOf": [
            {
              "$ref": "#/definitions/MongoDBCollectionResource"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "resource"
      ],
      "type": "object"
    },
    "MongoDBCollectionResource": {
      "description": "Cosmos DB MongoDB collection resource object",
      "properties": {
        "analyticalStorageTtl": {
          "description": "Analytical TTL.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "id": {
          "description": "Name of the Cosmos DB MongoDB collection",
          "type": "string"
        },
        "indexes": {
          "description": "List of index keys",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/MongoIndex"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "shardKey": {
          "description": "A key-value pair of shard keys to be applied for the request.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "id"
      ],
      "type": "object"
    },
    "MongoDBDatabaseCreateUpdateProperties": {
      "description": "Properties to create and update Azure Cosmos DB MongoDB database.",
      "properties": {
        "options": {
          "description": "A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request.",
          "oneOf": [
            {
              "$ref": "#/definitions/CreateUpdateOptions"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resource": {
          "description": "The standard JSON format of a MongoDB database",
          "oneOf": [
            {
              "$ref": "#/definitions/MongoDBDatabaseResource"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "resource"
      ],
      "type": "object"
    },
    "MongoDBDatabaseResource": {
      "description": "Cosmos DB MongoDB database resource object",
      "properties": {
        "id": {
          "description": "Name of the Cosmos DB MongoDB database",
          "type": "string"
        }
      },
      "required": [
        "id"
      ],
      "type": "object"
    },
    "MongoIndex": {
      "description": "Cosmos DB MongoDB collection index key",
      "properties": {
        "key": {
          "description": "Cosmos DB MongoDB collection index keys",
          "oneOf": [
            {
              "$ref": "#/definitions/MongoIndexKeys"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "options": {
          "description": "Cosmos DB MongoDB collection index key options",
          "oneOf": [
            {
              "$ref": "#/definitions/MongoIndexOptions"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "MongoIndexKeys": {
      "description": "Cosmos DB MongoDB collection resource object",
      "properties": {
        "keys": {
          "description": "List of keys for each MongoDB collection in the Azure Cosmos DB service",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "MongoIndexOptions": {
      "description": "Cosmos DB MongoDB collection index options",
      "properties": {
        "expireAfterSeconds": {
          "description": "Expire after seconds",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "unique": {
          "description": "Is unique or not",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "MongoRoleDefinitionResource": {
      "description": "Azure Cosmos DB Mongo Role Definition resource object.",
      "properties": {
        "databaseName": {
          "description": "The database name for which access is being granted for this Role Definition.",
          "type": "string"
        },
        "privileges": {
          "description": "A set of privileges contained by the Role Definition. This will allow application of this Role Definition on the entire database account or any underlying Database / Collection. Scopes higher than Database are not enforceable as privilege.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/Privilege"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "roleName": {
          "description": "A user-friendly name for the Role Definition. Must be unique for the database account.",
          "type": "string"
        },
        "roles": {
          "description": "The set of roles inherited by this Role Definition.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/Role"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "description": "Indicates whether the Role Definition was built-in or user created.",
          "oneOf": [
            {
              "enum": [
                "BuiltInRole",
                "CustomRole"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "MongoUserDefinitionResource": {
      "description": "Azure Cosmos DB Mongo User Definition resource object.",
      "properties": {
        "customData": {
          "description": "A custom definition for the USer Definition.",
          "type": "string"
        },
        "databaseName": {
          "description": "The database name for which access is being granted for this User Definition.",
          "type": "string"
        },
        "mechanisms": {
          "description": "The Mongo Auth mechanism. For now, we only support auth mechanism SCRAM-SHA-256.",
          "type": "string"
        },
        "password": {
          "description": "The password for User Definition. Response does not contain user password.",
          "type": "string"
        },
        "roles": {
          "description": "The set of roles inherited by the User Definition.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/Role"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "userName": {
          "description": "The user name for User Definition.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PeriodicModeProperties": {
      "description": "Configuration values for periodic mode backup",
      "properties": {
        "backupIntervalInMinutes": {
          "description": "An integer representing the interval in minutes between two backups",
          "oneOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "backupRetentionIntervalInHours": {
          "description": "An integer representing the time (in hours) that each backup is retained",
          "oneOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "backupStorageRedundancy": {
          "description": "Enum to indicate type of backup residency",
          "oneOf": [
            {
              "enum": [
                "Geo",
                "Local",
                "Zone"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "Permission": {
      "description": "The set of data plane operations permitted through this Role Definition.",
      "properties": {
        "dataActions": {
          "description": "An array of data actions that are allowed.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "notDataActions": {
          "description": "An array of data actions that are denied.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "PrivateEndpointConnectionProperties": {
      "description": "Properties of a private endpoint connection.",
      "properties": {
        "groupId": {
          "description": "Group id of the private endpoint.",
          "type": "string"
        },
        "privateEndpoint": {
          "description": "Private endpoint which the connection belongs to.",
          "oneOf": [
            {
              "$ref": "#/definitions/PrivateEndpointProperty"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "privateLinkServiceConnectionState": {
          "description": "Connection State of the Private Endpoint Connection.",
          "oneOf": [
            {
              "$ref": "#/definitions/PrivateLinkServiceConnectionStateProperty"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "provisioningState": {
          "description": "Provisioning state of the private endpoint.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PrivateEndpointProperty": {
      "description": "Private endpoint which the connection belongs to.",
      "properties": {
        "id": {
          "description": "Resource id of the private endpoint.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PrivateLinkServiceConnectionStateProperty": {
      "description": "Connection State of the Private Endpoint Connection.",
      "properties": {
        "description": {
          "description": "The private link service connection description.",
          "type": "string"
        },
        "status": {
          "description": "The private link service connection status.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Privilege": {
      "description": "The set of data plane operations permitted through this Role Definition.",
      "properties": {
        "actions": {
          "description": "An array of actions that are allowed.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resource": {
          "description": "An Azure Cosmos DB Mongo DB Resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/PrivilegeResource"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "PrivilegeResource": {
      "description": "An Azure Cosmos DB Mongo DB Resource.",
      "properties": {
        "collection": {
          "description": "The collection name the role is applied.",
          "type": "string"
        },
        "db": {
          "description": "The database name the role is applied.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RestoreParameters": {
      "description": "Parameters to indicate the information about the restore.",
      "properties": {
        "databasesToRestore": {
          "description": "List of specific databases available for restore.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/DatabaseRestoreResource"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "gremlinDatabasesToRestore": {
          "description": "List of specific gremlin databases available for restore.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/GremlinDatabaseRestoreResource"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "restoreMode": {
          "description": "Describes the mode of the restore.",
          "oneOf": [
            {
              "enum": [
                "PointInTime"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "restoreSource": {
          "description": "The id of the restorable database account from which the restore has to be initiated. For example: /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}",
          "type": "string"
        },
        "restoreTimestampInUtc": {
          "description": "Time to which the account has to be restored (ISO-8601 format).",
          "format": "date-time",
          "type": "string"
        },
        "tablesToRestore": {
          "description": "List of specific tables available for restore.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "Role": {
      "description": "The set of roles permitted through this Role Definition.",
      "properties": {
        "db": {
          "description": "The database name the role is applied.",
          "type": "string"
        },
        "role": {
          "description": "The role name.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "SeedNode": {
      "properties": {
        "ipAddress": {
          "description": "IP address of this seed node.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ServiceResourceCreateUpdateProperties": {
      "description": "Properties in ServiceResourceCreateUpdateParameters.",
      "properties": {
        "instanceCount": {
          "description": "Instance count for the service.",
          "oneOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "instanceSize": {
          "description": "Instance type for the service.",
          "oneOf": [
            {
              "enum": [
                "Cosmos.D4s",
                "Cosmos.D8s",
                "Cosmos.D16s"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "serviceType": {
          "description": "ServiceType for the service.",
          "oneOf": [
            {
              "enum": [
                "SqlDedicatedGateway",
                "DataTransfer",
                "GraphAPICompute",
                "MaterializedViewsBuilder"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "SpatialSpec": {
      "properties": {
        "path": {
          "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)",
          "type": "string"
        },
        "types": {
          "description": "List of path's spatial type",
          "oneOf": [
            {
              "items": {
                "enum": [
                  "Point",
                  "LineString",
                  "Polygon",
                  "MultiPolygon"
                ],
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "SqlContainerCreateUpdateProperties": {
      "description": "Properties to create and update Azure Cosmos DB container.",
      "properties": {
        "options": {
          "description": "A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request.",
          "oneOf": [
            {
              "$ref": "#/definitions/CreateUpdateOptions"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resource": {
          "description": "The standard JSON format of a container",
          "oneOf": [
            {
              "$ref": "#/definitions/SqlContainerResource"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "resource"
      ],
      "type": "object"
    },
    "SqlContainerResource": {
      "description": "Cosmos DB SQL container resource object",
      "properties": {
        "analyticalStorageTtl": {
          "description": "Analytical TTL.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "clientEncryptionPolicy": {
          "description": "The client encryption policy for the container.",
          "oneOf": [
            {
              "$ref": "#/definitions/ClientEncryptionPolicy"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "conflictResolutionPolicy": {
          "description": "The conflict resolution policy for the container.",
          "oneOf": [
            {
              "$ref": "#/definitions/ConflictResolutionPolicy"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "defaultTtl": {
          "description": "Default time to live",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "id": {
          "description": "Name of the Cosmos DB SQL container",
          "type": "string"
        },
        "indexingPolicy": {
          "description": "The configuration of the indexing policy. By default, the indexing is automatic for all document paths within the container",
          "oneOf": [
            {
              "$ref": "#/definitions/IndexingPolicy"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "partitionKey": {
          "description": "The configuration of the partition key to be used for partitioning data into multiple partitions",
          "oneOf": [
            {
              "$ref": "#/definitions/ContainerPartitionKey"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "uniqueKeyPolicy": {
          "description": "The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.",
          "oneOf": [
            {
              "$ref": "#/definitions/UniqueKeyPolicy"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "id"
      ],
      "type": "object"
    },
    "SqlDatabaseCreateUpdateProperties": {
      "description": "Properties to create and update Azure Cosmos DB SQL database.",
      "properties": {
        "options": {
          "description": "A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request.",
          "oneOf": [
            {
              "$ref": "#/definitions/CreateUpdateOptions"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resource": {
          "description": "The standard JSON format of a SQL database",
          "oneOf": [
            {
              "$ref": "#/definitions/SqlDatabaseResource"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "resource"
      ],
      "type": "object"
    },
    "SqlDatabaseResource": {
      "description": "Cosmos DB SQL database resource object",
      "properties": {
        "id": {
          "description": "Name of the Cosmos DB SQL database",
          "type": "string"
        }
      },
      "required": [
        "id"
      ],
      "type": "object"
    },
    "SqlRoleAssignmentResource": {
      "description": "Azure Cosmos DB SQL Role Assignment resource object.",
      "properties": {
        "principalId": {
          "description": "The unique identifier for the associated AAD principal in the AAD graph to which access is being granted through this Role Assignment. Tenant ID for the principal is inferred using the tenant associated with the subscription.",
          "type": "string"
        },
        "roleDefinitionId": {
          "description": "The unique identifier for the associated Role Definition.",
          "type": "string"
        },
        "scope": {
          "description": "The data plane resource path for which access is being granted through this Role Assignment.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "SqlRoleDefinitionResource": {
      "description": "Azure Cosmos DB SQL Role Definition resource object.",
      "properties": {
        "assignableScopes": {
          "description": "A set of fully qualified Scopes at or below which Role Assignments may be created using this Role Definition. This will allow application of this Role Definition on the entire database account or any underlying Database / Collection. Must have at least one element. Scopes higher than Database account are not enforceable as assignable Scopes. Note that resources referenced in assignable Scopes need not exist.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "permissions": {
          "description": "The set of operations allowed through this Role Definition.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/Permission"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "roleName": {
          "description": "A user-friendly name for the Role Definition. Must be unique for the database account.",
          "type": "string"
        },
        "type": {
          "description": "Indicates whether the Role Definition was built-in or user created.",
          "oneOf": [
            {
              "enum": [
                "BuiltInRole",
                "CustomRole"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "SqlStoredProcedureCreateUpdateProperties": {
      "description": "Properties to create and update Azure Cosmos DB storedProcedure.",
      "properties": {
        "options": {
          "description": "A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request.",
          "oneOf": [
            {
              "$ref": "#/definitions/CreateUpdateOptions"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resource": {
          "description": "The standard JSON format of a storedProcedure",
          "oneOf": [
            {
              "$ref": "#/definitions/SqlStoredProcedureResource"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "resource"
      ],
      "type": "object"
    },
    "SqlStoredProcedureResource": {
      "description": "Cosmos DB SQL storedProcedure resource object",
      "properties": {
        "body": {
          "description": "Body of the Stored Procedure",
          "type": "string"
        },
        "id": {
          "description": "Name of the Cosmos DB SQL storedProcedure",
          "type": "string"
        }
      },
      "required": [
        "id"
      ],
      "type": "object"
    },
    "SqlTriggerCreateUpdateProperties": {
      "description": "Properties to create and update Azure Cosmos DB trigger.",
      "properties": {
        "options": {
          "description": "A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request.",
          "oneOf": [
            {
              "$ref": "#/definitions/CreateUpdateOptions"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resource": {
          "description": "The standard JSON format of a trigger",
          "oneOf": [
            {
              "$ref": "#/definitions/SqlTriggerResource"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "resource"
      ],
      "type": "object"
    },
    "SqlTriggerResource": {
      "description": "Cosmos DB SQL trigger resource object",
      "properties": {
        "body": {
          "description": "Body of the Trigger",
          "type": "string"
        },
        "id": {
          "description": "Name of the Cosmos DB SQL trigger",
          "type": "string"
        },
        "triggerOperation": {
          "description": "The operation the trigger is associated with",
          "oneOf": [
            {
              "enum": [
                "All",
                "Create",
                "Update",
                "Delete",
                "Replace"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "triggerType": {
          "description": "Type of the Trigger",
          "oneOf": [
            {
              "enum": [
                "Pre",
                "Post"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "id"
      ],
      "type": "object"
    },
    "SqlUserDefinedFunctionCreateUpdateProperties": {
      "description": "Properties to create and update Azure Cosmos DB userDefinedFunction.",
      "properties": {
        "options": {
          "description": "A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request.",
          "oneOf": [
            {
              "$ref": "#/definitions/CreateUpdateOptions"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resource": {
          "description": "The standard JSON format of a userDefinedFunction",
          "oneOf": [
            {
              "$ref": "#/definitions/SqlUserDefinedFunctionResource"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "resource"
      ],
      "type": "object"
    },
    "SqlUserDefinedFunctionResource": {
      "description": "Cosmos DB SQL userDefinedFunction resource object",
      "properties": {
        "body": {
          "description": "Body of the User Defined Function",
          "type": "string"
        },
        "id": {
          "description": "Name of the Cosmos DB SQL userDefinedFunction",
          "type": "string"
        }
      },
      "required": [
        "id"
      ],
      "type": "object"
    },
    "TableCreateUpdateProperties": {
      "description": "Properties to create and update Azure Cosmos DB Table.",
      "properties": {
        "options": {
          "description": "A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request.",
          "oneOf": [
            {
              "$ref": "#/definitions/CreateUpdateOptions"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resource": {
          "description": "The standard JSON format of a Table",
          "oneOf": [
            {
              "$ref": "#/definitions/TableResource"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "resource"
      ],
      "type": "object"
    },
    "TableResource": {
      "description": "Cosmos DB table resource object",
      "properties": {
        "id": {
          "description": "Name of the Cosmos DB table",
          "type": "string"
        }
      },
      "required": [
        "id"
      ],
      "type": "object"
    },
    "ThroughputPolicyResource": {
      "description": "Cosmos DB resource throughput policy",
      "properties": {
        "incrementPercent": {
          "description": "Represents the percentage by which throughput can increase every time throughput policy kicks in.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "isEnabled": {
          "description": "Determines whether the ThroughputPolicy is active or not",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ThroughputSettingsResource": {
      "description": "Cosmos DB resource throughput object. Either throughput is required or autoscaleSettings is required, but not both.",
      "properties": {
        "autoscaleSettings": {
          "description": "Cosmos DB resource for autoscale settings. Either throughput is required or autoscaleSettings is required, but not both.",
          "oneOf": [
            {
              "$ref": "#/definitions/AutoscaleSettingsResource"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "throughput": {
          "description": "Value of the Cosmos DB resource throughput. Either throughput is required or autoscaleSettings is required, but not both.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ThroughputSettingsUpdateProperties": {
      "description": "Properties to update Azure Cosmos DB resource throughput.",
      "properties": {
        "resource": {
          "description": "The standard JSON format of a resource throughput",
          "oneOf": [
            {
              "$ref": "#/definitions/ThroughputSettingsResource"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "resource"
      ],
      "type": "object"
    },
    "UniqueKey": {
      "description": "The unique key on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.",
      "properties": {
        "paths": {
          "description": "List of paths must be unique for each document in the Azure Cosmos DB service",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "UniqueKeyPolicy": {
      "description": "The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.",
      "properties": {
        "uniqueKeys": {
          "description": "List of unique keys on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/UniqueKey"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "VirtualNetworkRule": {
      "description": "Virtual Network ACL Rule object",
      "properties": {
        "id": {
          "description": "Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}.",
          "type": "string"
        },
        "ignoreMissingVNetServiceEndpoint": {
          "description": "Create firewall rule before the virtual network has vnet service endpoint enabled.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "cassandraClusters_dataCenters_childResource": {
      "description": "Microsoft.DocumentDB/cassandraClusters/dataCenters",
      "properties": {
        "apiVersion": {
          "enum": [
            "2022-02-15-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Data center name in a managed Cassandra cluster.",
          "oneOf": [
            {
              "maxLength": 100,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Properties of a managed Cassandra data center.",
          "oneOf": [
            {
              "$ref": "#/definitions/DataCenterResourceProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "dataCenters"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "databaseAccounts_cassandraKeyspaces_childResource": {
      "description": "Microsoft.DocumentDB/databaseAccounts/cassandraKeyspaces",
      "properties": {
        "apiVersion": {
          "enum": [
            "2022-02-15-preview"
          ],
          "type": "string"
        },
        "identity": {
          "description": "Identity for the resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedServiceIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "location": {
          "description": "The location of the resource group to which the resource belongs.",
          "type": "string"
        },
        "name": {
          "description": "Cosmos DB keyspace name.",
          "type": "string"
        },
        "properties": {
          "description": "Properties to create and update Azure Cosmos DB Cassandra keyspace.",
          "oneOf": [
            {
              "$ref": "#/definitions/CassandraKeyspaceCreateUpdateProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\".",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "cassandraKeyspaces"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "databaseAccounts_cassandraKeyspaces_tables_childResource": {
      "description": "Microsoft.DocumentDB/databaseAccounts/cassandraKeyspaces/tables",
      "properties": {
        "apiVersion": {
          "enum": [
            "2022-02-15-preview"
          ],
          "type": "string"
        },
        "identity": {
          "description": "Identity for the resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedServiceIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "location": {
          "description": "The location of the resource group to which the resource belongs.",
          "type": "string"
        },
        "name": {
          "description": "Cosmos DB table name.",
          "type": "string"
        },
        "properties": {
          "description": "Properties to create and update Azure Cosmos DB Cassandra table.",
          "oneOf": [
            {
              "$ref": "#/definitions/CassandraTableCreateUpdateProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\".",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "tables"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "databaseAccounts_cassandraKeyspaces_tables_throughputSettings_childResource": {
      "description": "Microsoft.DocumentDB/databaseAccounts/cassandraKeyspaces/tables/throughputSettings",
      "properties": {
        "apiVersion": {
          "enum": [
            "2022-02-15-preview"
          ],
          "type": "string"
        },
        "identity": {
          "description": "Identity for the resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedServiceIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "location": {
          "description": "The location of the resource group to which the resource belongs.",
          "type": "string"
        },
        "name": {
          "oneOf": [
            {
              "enum": [
                "default"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Properties to update Azure Cosmos DB resource throughput.",
          "oneOf": [
            {
              "$ref": "#/definitions/ThroughputSettingsUpdateProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\".",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "throughputSettings"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "databaseAccounts_cassandraKeyspaces_throughputSettings_childResource": {
      "description": "Microsoft.DocumentDB/databaseAccounts/cassandraKeyspaces/throughputSettings",
      "properties": {
        "apiVersion": {
          "enum": [
            "2022-02-15-preview"
          ],
          "type": "string"
        },
        "identity": {
          "description": "Identity for the resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedServiceIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "location": {
          "description": "The location of the resource group to which the resource belongs.",
          "type": "string"
        },
        "name": {
          "oneOf": [
            {
              "enum": [
                "default"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Properties to update Azure Cosmos DB resource throughput.",
          "oneOf": [
            {
              "$ref": "#/definitions/ThroughputSettingsUpdateProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\".",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "throughputSettings"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "databaseAccounts_cassandraKeyspaces_views_childResource": {
      "description": "Microsoft.DocumentDB/databaseAccounts/cassandraKeyspaces/views",
      "properties": {
        "apiVersion": {
          "enum": [
            "2022-02-15-preview"
          ],
          "type": "string"
        },
        "identity": {
          "description": "Identity for the resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedServiceIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "location": {
          "description": "The location of the resource group to which the resource belongs.",
          "type": "string"
        },
        "name": {
          "description": "Cosmos DB view name.",
          "type": "string"
        },
        "properties": {
          "description": "Properties to create and update Azure Cosmos DB Cassandra view.",
          "oneOf": [
            {
              "$ref": "#/definitions/CassandraViewCreateUpdateProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\".",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "views"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "databaseAccounts_cassandraKeyspaces_views_throughputSettings_childResource": {
      "description": "Microsoft.DocumentDB/databaseAccounts/cassandraKeyspaces/views/throughputSettings",
      "properties": {
        "apiVersion": {
          "enum": [
            "2022-02-15-preview"
          ],
          "type": "string"
        },
        "identity": {
          "description": "Identity for the resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedServiceIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "location": {
          "description": "The location of the resource group to which the resource belongs.",
          "type": "string"
        },
        "name": {
          "oneOf": [
            {
              "enum": [
                "default"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Properties to update Azure Cosmos DB resource throughput.",
          "oneOf": [
            {
              "$ref": "#/definitions/ThroughputSettingsUpdateProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\".",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "throughputSettings"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "databaseAccounts_dataTransferJobs_childResource": {
      "description": "Microsoft.DocumentDB/databaseAccounts/dataTransferJobs",
      "properties": {
        "apiVersion": {
          "enum": [
            "2022-02-15-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Name of the Data Transfer Job",
          "type": "string"
        },
        "properties": {
          "description": "Data Transfer Create Job Properties",
          "oneOf": [
            {
              "$ref": "#/definitions/DataTransferJobProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "dataTransferJobs"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "databaseAccounts_graphs_childResource": {
      "description": "Microsoft.DocumentDB/databaseAccounts/graphs",
      "properties": {
        "apiVersion": {
          "enum": [
            "2022-02-15-preview"
          ],
          "type": "string"
        },
        "identity": {
          "description": "Identity for the resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedServiceIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "location": {
          "description": "The location of the resource group to which the resource belongs.",
          "type": "string"
        },
        "name": {
          "description": "Cosmos DB graph resource name.",
          "type": "string"
        },
        "properties": {
          "description": "Properties to create and update Azure Cosmos DB Graph resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/GraphResourceCreateUpdateProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\".",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "graphs"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "databaseAccounts_gremlinDatabases_childResource": {
      "description": "Microsoft.DocumentDB/databaseAccounts/gremlinDatabases",
      "properties": {
        "apiVersion": {
          "enum": [
            "2022-02-15-preview"
          ],
          "type": "string"
        },
        "identity": {
          "description": "Identity for the resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedServiceIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "location": {
          "description": "The location of the resource group to which the resource belongs.",
          "type": "string"
        },
        "name": {
          "description": "Cosmos DB database name.",
          "type": "string"
        },
        "properties": {
          "description": "Properties to create and update Azure Cosmos DB Gremlin database.",
          "oneOf": [
            {
              "$ref": "#/definitions/GremlinDatabaseCreateUpdateProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\".",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "gremlinDatabases"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "databaseAccounts_gremlinDatabases_graphs_childResource": {
      "description": "Microsoft.DocumentDB/databaseAccounts/gremlinDatabases/graphs",
      "properties": {
        "apiVersion": {
          "enum": [
            "2022-02-15-preview"
          ],
          "type": "string"
        },
        "identity": {
          "description": "Identity for the resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedServiceIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "location": {
          "description": "The location of the resource group to which the resource belongs.",
          "type": "string"
        },
        "name": {
          "description": "Cosmos DB graph name.",
          "type": "string"
        },
        "properties": {
          "description": "Properties to create and update Azure Cosmos DB Gremlin graph.",
          "oneOf": [
            {
              "$ref": "#/definitions/GremlinGraphCreateUpdateProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\".",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "graphs"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "databaseAccounts_gremlinDatabases_graphs_throughputSettings_childResource": {
      "description": "Microsoft.DocumentDB/databaseAccounts/gremlinDatabases/graphs/throughputSettings",
      "properties": {
        "apiVersion": {
          "enum": [
            "2022-02-15-preview"
          ],
          "type": "string"
        },
        "identity": {
          "description": "Identity for the resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedServiceIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "location": {
          "description": "The location of the resource group to which the resource belongs.",
          "type": "string"
        },
        "name": {
          "oneOf": [
            {
              "enum": [
                "default"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Properties to update Azure Cosmos DB resource throughput.",
          "oneOf": [
            {
              "$ref": "#/definitions/ThroughputSettingsUpdateProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\".",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "throughputSettings"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "databaseAccounts_gremlinDatabases_throughputSettings_childResource": {
      "description": "Microsoft.DocumentDB/databaseAccounts/gremlinDatabases/throughputSettings",
      "properties": {
        "apiVersion": {
          "enum": [
            "2022-02-15-preview"
          ],
          "type": "string"
        },
        "identity": {
          "description": "Identity for the resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedServiceIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "location": {
          "description": "The location of the resource group to which the resource belongs.",
          "type": "string"
        },
        "name": {
          "oneOf": [
            {
              "enum": [
                "default"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Properties to update Azure Cosmos DB resource throughput.",
          "oneOf": [
            {
              "$ref": "#/definitions/ThroughputSettingsUpdateProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\".",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "throughputSettings"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "databaseAccounts_mongodbDatabases_childResource": {
      "description": "Microsoft.DocumentDB/databaseAccounts/mongodbDatabases",
      "properties": {
        "apiVersion": {
          "enum": [
            "2022-02-15-preview"
          ],
          "type": "string"
        },
        "identity": {
          "description": "Identity for the resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedServiceIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "location": {
          "description": "The location of the resource group to which the resource belongs.",
          "type": "string"
        },
        "name": {
          "description": "Cosmos DB database name.",
          "type": "string"
        },
        "properties": {
          "description": "Properties to create and update Azure Cosmos DB MongoDB database.",
          "oneOf": [
            {
              "$ref": "#/definitions/MongoDBDatabaseCreateUpdateProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\".",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "mongodbDatabases"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "databaseAccounts_mongodbDatabases_collections_childResource": {
      "description": "Microsoft.DocumentDB/databaseAccounts/mongodbDatabases/collections",
      "properties": {
        "apiVersion": {
          "enum": [
            "2022-02-15-preview"
          ],
          "type": "string"
        },
        "identity": {
          "description": "Identity for the resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedServiceIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "location": {
          "description": "The location of the resource group to which the resource belongs.",
          "type": "string"
        },
        "name": {
          "description": "Cosmos DB collection name.",
          "type": "string"
        },
        "properties": {
          "description": "Properties to create and update Azure Cosmos DB MongoDB collection.",
          "oneOf": [
            {
              "$ref": "#/definitions/MongoDBCollectionCreateUpdateProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\".",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "collections"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "databaseAccounts_mongodbDatabases_collections_throughputSettings_childResource": {
      "description": "Microsoft.DocumentDB/databaseAccounts/mongodbDatabases/collections/throughputSettings",
      "properties": {
        "apiVersion": {
          "enum": [
            "2022-02-15-preview"
          ],
          "type": "string"
        },
        "identity": {
          "description": "Identity for the resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedServiceIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "location": {
          "description": "The location of the resource group to which the resource belongs.",
          "type": "string"
        },
        "name": {
          "oneOf": [
            {
              "enum": [
                "default"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Properties to update Azure Cosmos DB resource throughput.",
          "oneOf": [
            {
              "$ref": "#/definitions/ThroughputSettingsUpdateProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\".",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "throughputSettings"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "databaseAccounts_mongodbDatabases_throughputSettings_childResource": {
      "description": "Microsoft.DocumentDB/databaseAccounts/mongodbDatabases/throughputSettings",
      "properties": {
        "apiVersion": {
          "enum": [
            "2022-02-15-preview"
          ],
          "type": "string"
        },
        "identity": {
          "description": "Identity for the resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedServiceIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "location": {
          "description": "The location of the resource group to which the resource belongs.",
          "type": "string"
        },
        "name": {
          "oneOf": [
            {
              "enum": [
                "default"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Properties to update Azure Cosmos DB resource throughput.",
          "oneOf": [
            {
              "$ref": "#/definitions/ThroughputSettingsUpdateProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\".",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "throughputSettings"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "databaseAccounts_mongodbRoleDefinitions_childResource": {
      "description": "Microsoft.DocumentDB/databaseAccounts/mongodbRoleDefinitions",
      "properties": {
        "apiVersion": {
          "enum": [
            "2022-02-15-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The ID for the Role Definition {dbName.roleName}.",
          "type": "string"
        },
        "properties": {
          "description": "Properties to create and update an Azure Cosmos DB Mongo Role Definition.",
          "oneOf": [
            {
              "$ref": "#/definitions/MongoRoleDefinitionResource"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "mongodbRoleDefinitions"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "databaseAccounts_mongodbUserDefinitions_childResource": {
      "description": "Microsoft.DocumentDB/databaseAccounts/mongodbUserDefinitions",
      "properties": {
        "apiVersion": {
          "enum": [
            "2022-02-15-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The ID for the User Definition {dbName.userName}.",
          "type": "string"
        },
        "properties": {
          "description": "Properties to create and update an Azure Cosmos DB Mongo User Definition.",
          "oneOf": [
            {
              "$ref": "#/definitions/MongoUserDefinitionResource"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "mongodbUserDefinitions"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "databaseAccounts_notebookWorkspaces_childResource": {
      "description": "Microsoft.DocumentDB/databaseAccounts/notebookWorkspaces",
      "properties": {
        "apiVersion": {
          "enum": [
            "2022-02-15-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the notebook workspace resource.",
          "oneOf": [
            {
              "enum": [
                "default"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "notebookWorkspaces"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "databaseAccounts_privateEndpointConnections_childResource": {
      "description": "Microsoft.DocumentDB/databaseAccounts/privateEndpointConnections",
      "properties": {
        "apiVersion": {
          "enum": [
            "2022-02-15-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the private endpoint connection.",
          "type": "string"
        },
        "properties": {
          "description": "Resource properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/PrivateEndpointConnectionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "privateEndpointConnections"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "databaseAccounts_services_childResource": {
      "description": "Microsoft.DocumentDB/databaseAccounts/services",
      "properties": {
        "apiVersion": {
          "enum": [
            "2022-02-15-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Cosmos DB service name.",
          "maxLength": 50,
          "minLength": 3,
          "type": "string"
        },
        "properties": {
          "description": "Properties in ServiceResourceCreateUpdateParameters.",
          "oneOf": [
            {
              "$ref": "#/definitions/ServiceResourceCreateUpdateProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "services"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "databaseAccounts_sqlDatabases_childResource": {
      "description": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
      "properties": {
        "apiVersion": {
          "enum": [
            "2022-02-15-preview"
          ],
          "type": "string"
        },
        "identity": {
          "description": "Identity for the resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedServiceIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "location": {
          "description": "The location of the resource group to which the resource belongs.",
          "type": "string"
        },
        "name": {
          "description": "Cosmos DB database name.",
          "type": "string"
        },
        "properties": {
          "description": "Properties to create and update Azure Cosmos DB SQL database.",
          "oneOf": [
            {
              "$ref": "#/definitions/SqlDatabaseCreateUpdateProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\".",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "sqlDatabases"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "databaseAccounts_sqlDatabases_clientEncryptionKeys_childResource": {
      "description": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/clientEncryptionKeys",
      "properties": {
        "apiVersion": {
          "enum": [
            "2022-02-15-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Cosmos DB ClientEncryptionKey name.",
          "type": "string"
        },
        "properties": {
          "description": "Properties to create and update ClientEncryptionKey.",
          "oneOf": [
            {
              "$ref": "#/definitions/ClientEncryptionKeyCreateUpdateProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "clientEncryptionKeys"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "databaseAccounts_sqlDatabases_containers_childResource": {
      "description": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
      "properties": {
        "apiVersion": {
          "enum": [
            "2022-02-15-preview"
          ],
          "type": "string"
        },
        "identity": {
          "description": "Identity for the resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedServiceIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "location": {
          "description": "The location of the resource group to which the resource belongs.",
          "type": "string"
        },
        "name": {
          "description": "Cosmos DB container name.",
          "type": "string"
        },
        "properties": {
          "description": "Properties to create and update Azure Cosmos DB container.",
          "oneOf": [
            {
              "$ref": "#/definitions/SqlContainerCreateUpdateProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\".",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "containers"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "databaseAccounts_sqlDatabases_containers_storedProcedures_childResource": {
      "description": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/storedProcedures",
      "properties": {
        "apiVersion": {
          "enum": [
            "2022-02-15-preview"
          ],
          "type": "string"
        },
        "identity": {
          "description": "Identity for the resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedServiceIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "location": {
          "description": "The location of the resource group to which the resource belongs.",
          "type": "string"
        },
        "name": {
          "description": "Cosmos DB storedProcedure name.",
          "type": "string"
        },
        "properties": {
          "description": "Properties to create and update Azure Cosmos DB storedProcedure.",
          "oneOf": [
            {
              "$ref": "#/definitions/SqlStoredProcedureCreateUpdateProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\".",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "storedProcedures"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "databaseAccounts_sqlDatabases_containers_throughputSettings_childResource": {
      "description": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/throughputSettings",
      "properties": {
        "apiVersion": {
          "enum": [
            "2022-02-15-preview"
          ],
          "type": "string"
        },
        "identity": {
          "description": "Identity for the resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedServiceIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "location": {
          "description": "The location of the resource group to which the resource belongs.",
          "type": "string"
        },
        "name": {
          "oneOf": [
            {
              "enum": [
                "default"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Properties to update Azure Cosmos DB resource throughput.",
          "oneOf": [
            {
              "$ref": "#/definitions/ThroughputSettingsUpdateProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\".",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "throughputSettings"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "databaseAccounts_sqlDatabases_containers_triggers_childResource": {
      "description": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/triggers",
      "properties": {
        "apiVersion": {
          "enum": [
            "2022-02-15-preview"
          ],
          "type": "string"
        },
        "identity": {
          "description": "Identity for the resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedServiceIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "location": {
          "description": "The location of the resource group to which the resource belongs.",
          "type": "string"
        },
        "name": {
          "description": "Cosmos DB trigger name.",
          "type": "string"
        },
        "properties": {
          "description": "Properties to create and update Azure Cosmos DB trigger.",
          "oneOf": [
            {
              "$ref": "#/definitions/SqlTriggerCreateUpdateProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\".",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "triggers"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "databaseAccounts_sqlDatabases_containers_userDefinedFunctions_childResource": {
      "description": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/userDefinedFunctions",
      "properties": {
        "apiVersion": {
          "enum": [
            "2022-02-15-preview"
          ],
          "type": "string"
        },
        "identity": {
          "description": "Identity for the resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedServiceIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "location": {
          "description": "The location of the resource group to which the resource belongs.",
          "type": "string"
        },
        "name": {
          "description": "Cosmos DB userDefinedFunction name.",
          "type": "string"
        },
        "properties": {
          "description": "Properties to create and update Azure Cosmos DB userDefinedFunction.",
          "oneOf": [
            {
              "$ref": "#/definitions/SqlUserDefinedFunctionCreateUpdateProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\".",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "userDefinedFunctions"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "databaseAccounts_sqlDatabases_throughputSettings_childResource": {
      "description": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/throughputSettings",
      "properties": {
        "apiVersion": {
          "enum": [
            "2022-02-15-preview"
          ],
          "type": "string"
        },
        "identity": {
          "description": "Identity for the resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedServiceIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "location": {
          "description": "The location of the resource group to which the resource belongs.",
          "type": "string"
        },
        "name": {
          "oneOf": [
            {
              "enum": [
                "default"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Properties to update Azure Cosmos DB resource throughput.",
          "oneOf": [
            {
              "$ref": "#/definitions/ThroughputSettingsUpdateProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\".",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "throughputSettings"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "databaseAccounts_sqlRoleAssignments_childResource": {
      "description": "Microsoft.DocumentDB/databaseAccounts/sqlRoleAssignments",
      "properties": {
        "apiVersion": {
          "enum": [
            "2022-02-15-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The GUID for the Role Assignment.",
          "type": "string"
        },
        "properties": {
          "description": "Properties to create and update an Azure Cosmos DB SQL Role Assignment.",
          "oneOf": [
            {
              "$ref": "#/definitions/SqlRoleAssignmentResource"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "sqlRoleAssignments"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "databaseAccounts_sqlRoleDefinitions_childResource": {
      "description": "Microsoft.DocumentDB/databaseAccounts/sqlRoleDefinitions",
      "properties": {
        "apiVersion": {
          "enum": [
            "2022-02-15-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The GUID for the Role Definition.",
          "type": "string"
        },
        "properties": {
          "description": "Properties to create and update an Azure Cosmos DB SQL Role Definition.",
          "oneOf": [
            {
              "$ref": "#/definitions/SqlRoleDefinitionResource"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "sqlRoleDefinitions"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "databaseAccounts_tables_childResource": {
      "description": "Microsoft.DocumentDB/databaseAccounts/tables",
      "properties": {
        "apiVersion": {
          "enum": [
            "2022-02-15-preview"
          ],
          "type": "string"
        },
        "identity": {
          "description": "Identity for the resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedServiceIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "location": {
          "description": "The location of the resource group to which the resource belongs.",
          "type": "string"
        },
        "name": {
          "description": "Cosmos DB table name.",
          "type": "string"
        },
        "properties": {
          "description": "Properties to create and update Azure Cosmos DB Table.",
          "oneOf": [
            {
              "$ref": "#/definitions/TableCreateUpdateProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\".",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "tables"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "databaseAccounts_tables_throughputSettings_childResource": {
      "description": "Microsoft.DocumentDB/databaseAccounts/tables/throughputSettings",
      "properties": {
        "apiVersion": {
          "enum": [
            "2022-02-15-preview"
          ],
          "type": "string"
        },
        "identity": {
          "description": "Identity for the resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedServiceIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "location": {
          "description": "The location of the resource group to which the resource belongs.",
          "type": "string"
        },
        "name": {
          "oneOf": [
            {
              "enum": [
                "default"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Properties to update Azure Cosmos DB resource throughput.",
          "oneOf": [
            {
              "$ref": "#/definitions/ThroughputSettingsUpdateProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\".",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "throughputSettings"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    }
  }
}