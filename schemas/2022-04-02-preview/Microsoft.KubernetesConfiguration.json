{
  "id": "https://schema.management.azure.com/schemas/2022-04-02-preview/Microsoft.KubernetesConfiguration.json#",
  "title": "Microsoft.KubernetesConfiguration",
  "description": "Microsoft KubernetesConfiguration Resource Types",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "resourceDefinitions": {
    "privateLinkScopes": {
      "description": "Microsoft.KubernetesConfiguration/privateLinkScopes",
      "properties": {
        "apiVersion": {
          "enum": [
            "2022-04-02-preview"
          ],
          "type": "string"
        },
        "location": {
          "description": "The geo-location where the resource lives",
          "type": "string"
        },
        "name": {
          "description": "The name of the Azure Arc PrivateLinkScope resource.",
          "type": "string"
        },
        "properties": {
          "description": "Properties that define a Azure Arc PrivateLinkScope resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/KubernetesConfigurationPrivateLinkScopeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/privateLinkScopes_privateEndpointConnections_childResource"
              }
            ]
          },
          "type": "array"
        },
        "tags": {
          "description": "Resource tags.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.KubernetesConfiguration/privateLinkScopes"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "privateLinkScopes_privateEndpointConnections": {
      "description": "Microsoft.KubernetesConfiguration/privateLinkScopes/privateEndpointConnections",
      "properties": {
        "apiVersion": {
          "enum": [
            "2022-04-02-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the private endpoint connection associated with the Azure resource",
          "type": "string"
        },
        "properties": {
          "description": "Resource properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/PrivateEndpointConnectionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.KubernetesConfiguration/privateLinkScopes/privateEndpointConnections"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    }
  },
  "extension_resourceDefinitions": {
    "extensions": {
      "description": "Microsoft.KubernetesConfiguration/extensions",
      "properties": {
        "apiVersion": {
          "enum": [
            "2022-04-02-preview"
          ],
          "type": "string"
        },
        "identity": {
          "description": "Identity of the Extension resource",
          "oneOf": [
            {
              "$ref": "#/definitions/Identity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "name": {
          "description": "Name of the Extension.",
          "type": "string"
        },
        "plan": {
          "description": "The plan information.",
          "oneOf": [
            {
              "$ref": "#/definitions/Plan"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Properties of an Extension resource",
          "oneOf": [
            {
              "$ref": "#/definitions/ExtensionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.KubernetesConfiguration/extensions"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    }
  },
  "definitions": {
    "ExtensionProperties": {
      "description": "Properties of an Extension resource",
      "properties": {
        "aksAssignedIdentity": {
          "description": "Identity of the Extension resource in an AKS cluster",
          "oneOf": [
            {
              "$ref": "#/definitions/ExtensionPropertiesAksAssignedIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "autoUpgradeMinorVersion": {
          "description": "Flag to note if this extension participates in auto upgrade of minor version, or not.",
          "oneOf": [
            {
              "default": true,
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "configurationProtectedSettings": {
          "description": "Configuration settings that are sensitive, as name-value pairs for configuring this extension.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "configurationSettings": {
          "description": "Configuration settings, as name-value pairs for configuring this extension.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "extensionType": {
          "description": "Type of the Extension, of which this resource is an instance of.  It must be one of the Extension Types registered with Microsoft.KubernetesConfiguration by the Extension publisher.",
          "type": "string"
        },
        "releaseTrain": {
          "default": "Stable",
          "description": "ReleaseTrain this extension participates in for auto-upgrade (e.g. Stable, Preview, etc.) - only if autoUpgradeMinorVersion is 'true'.",
          "type": "string"
        },
        "scope": {
          "description": "Scope at which the extension is installed.",
          "oneOf": [
            {
              "$ref": "#/definitions/Scope"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "statuses": {
          "description": "Status from this extension.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/ExtensionStatus"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "version": {
          "description": "User-specified version of the extension for this extension to 'pin'. To use 'version', autoUpgradeMinorVersion must be 'false'.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ExtensionPropertiesAksAssignedIdentity": {
      "description": "Identity of the Extension resource in an AKS cluster",
      "properties": {
        "type": {
          "description": "The identity type.",
          "oneOf": [
            {
              "enum": [
                "SystemAssigned",
                "UserAssigned"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ExtensionStatus": {
      "description": "Status from the extension.",
      "properties": {
        "code": {
          "description": "Status code provided by the Extension",
          "type": "string"
        },
        "displayStatus": {
          "description": "Short description of status of the extension.",
          "type": "string"
        },
        "level": {
          "description": "Level of the status.",
          "oneOf": [
            {
              "enum": [
                "Error",
                "Warning",
                "Information"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "message": {
          "description": "Detailed message of the status from the Extension.",
          "type": "string"
        },
        "time": {
          "description": "DateLiteral (per ISO8601) noting the time of installation status.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Identity": {
      "description": "Identity for the resource.",
      "properties": {
        "type": {
          "description": "The identity type.",
          "oneOf": [
            {
              "enum": [
                "SystemAssigned"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "KubernetesConfigurationPrivateLinkScopeProperties": {
      "description": "Properties that define a Azure Arc PrivateLinkScope resource.",
      "properties": {
        "clusterResourceId": {
          "description": "Managed Cluster ARM ID for the private link scope  (Required)",
          "type": "string"
        },
        "publicNetworkAccess": {
          "description": "Indicates whether machines associated with the private link scope can also use public Azure Arc service endpoints.",
          "oneOf": [
            {
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "clusterResourceId"
      ],
      "type": "object"
    },
    "Plan": {
      "description": "Plan for the resource.",
      "properties": {
        "name": {
          "description": "A user defined name of the 3rd Party Artifact that is being procured.",
          "type": "string"
        },
        "product": {
          "description": "The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. ",
          "type": "string"
        },
        "promotionCode": {
          "description": "A publisher provided promotion code as provisioned in Data Market for the said product/artifact.",
          "type": "string"
        },
        "publisher": {
          "description": "The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic",
          "type": "string"
        },
        "version": {
          "description": "The version of the desired product/artifact.",
          "type": "string"
        }
      },
      "required": [
        "name",
        "publisher",
        "product"
      ],
      "type": "object"
    },
    "PrivateEndpoint": {
      "description": "The Private Endpoint resource.",
      "properties": {},
      "type": "object"
    },
    "PrivateEndpointConnectionProperties": {
      "description": "Properties of the PrivateEndpointConnectProperties.",
      "properties": {
        "privateEndpoint": {
          "description": "The resource of private end point.",
          "oneOf": [
            {
              "$ref": "#/definitions/PrivateEndpoint"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "privateLinkServiceConnectionState": {
          "description": "A collection of information about the state of the connection between service consumer and provider.",
          "oneOf": [
            {
              "$ref": "#/definitions/PrivateLinkServiceConnectionState"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "privateLinkServiceConnectionState"
      ],
      "type": "object"
    },
    "PrivateLinkServiceConnectionState": {
      "description": "A collection of information about the state of the connection between service consumer and provider.",
      "properties": {
        "actionsRequired": {
          "description": "A message indicating if changes on the service provider require any updates on the consumer.",
          "type": "string"
        },
        "description": {
          "description": "The reason for approval/rejection of the connection.",
          "type": "string"
        },
        "status": {
          "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
          "oneOf": [
            {
              "enum": [
                "Pending",
                "Approved",
                "Rejected"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "Scope": {
      "description": "Scope of the extension. It can be either Cluster or Namespace; but not both.",
      "properties": {
        "cluster": {
          "description": "Specifies that the scope of the extension is Cluster",
          "oneOf": [
            {
              "$ref": "#/definitions/ScopeCluster"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "namespace": {
          "description": "Specifies that the scope of the extension is Namespace",
          "oneOf": [
            {
              "$ref": "#/definitions/ScopeNamespace"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ScopeCluster": {
      "description": "Specifies that the scope of the extension is Cluster",
      "properties": {
        "releaseNamespace": {
          "description": "Namespace where the extension Release must be placed, for a Cluster scoped extension.  If this namespace does not exist, it will be created",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ScopeNamespace": {
      "description": "Specifies that the scope of the extension is Namespace",
      "properties": {
        "targetNamespace": {
          "description": "Namespace where the extension will be created for an Namespace scoped extension.  If this namespace does not exist, it will be created",
          "type": "string"
        }
      },
      "type": "object"
    },
    "privateLinkScopes_privateEndpointConnections_childResource": {
      "description": "Microsoft.KubernetesConfiguration/privateLinkScopes/privateEndpointConnections",
      "properties": {
        "apiVersion": {
          "enum": [
            "2022-04-02-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the private endpoint connection associated with the Azure resource",
          "type": "string"
        },
        "properties": {
          "description": "Resource properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/PrivateEndpointConnectionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "privateEndpointConnections"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    }
  }
}