{
  "id": "https://schema.management.azure.com/schemas/2022-05-01-preview/Microsoft.HybridContainerService.json#",
  "title": "Microsoft.HybridContainerService",
  "description": "Microsoft HybridContainerService Resource Types",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "resourceDefinitions": {
    "provisionedClusters": {
      "description": "Microsoft.HybridContainerService/provisionedClusters",
      "properties": {
        "apiVersion": {
          "enum": [
            "2022-05-01-preview"
          ],
          "type": "string"
        },
        "extendedLocation": {
          "oneOf": [
            {
              "$ref": "#/definitions/ProvisionedClustersExtendedLocation"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "identity": {
          "description": "Identity for the Provisioned cluster.",
          "oneOf": [
            {
              "$ref": "#/definitions/ProvisionedClusterIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "location": {
          "description": "The geo-location where the resource lives",
          "type": "string"
        },
        "name": {
          "description": "Parameter for the name of the provisioned cluster",
          "maxLength": 64,
          "minLength": 3,
          "type": "string"
        },
        "properties": {
          "description": "All properties of the provisioned cluster",
          "oneOf": [
            {
              "$ref": "#/definitions/ProvisionedClustersAllProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/provisionedClusters_agentPools_childResource"
              },
              {
                "$ref": "#/definitions/provisionedClusters_hybridIdentityMetadata_childResource"
              }
            ]
          },
          "type": "array"
        },
        "tags": {
          "description": "Resource tags.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.HybridContainerService/provisionedClusters"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "provisionedClusters_agentPools": {
      "description": "Microsoft.HybridContainerService/provisionedClusters/agentPools",
      "properties": {
        "apiVersion": {
          "enum": [
            "2022-05-01-preview"
          ],
          "type": "string"
        },
        "extendedLocation": {
          "oneOf": [
            {
              "$ref": "#/definitions/AgentPoolExtendedLocation"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "location": {
          "description": "The resource location",
          "type": "string"
        },
        "name": {
          "description": "Parameter for the name of the agent pool in the provisioned cluster",
          "maxLength": 64,
          "minLength": 3,
          "type": "string"
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/AgentPoolProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Resource tags",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.HybridContainerService/provisionedClusters/agentPools"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "provisionedClusters_hybridIdentityMetadata": {
      "description": "Microsoft.HybridContainerService/provisionedClusters/hybridIdentityMetadata",
      "properties": {
        "apiVersion": {
          "enum": [
            "2022-05-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Parameter for the name of the hybrid identity metadata resource.",
          "maxLength": 64,
          "minLength": 3,
          "type": "string"
        },
        "properties": {
          "description": "Resource properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/HybridIdentityMetadataProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.HybridContainerService/provisionedClusters/hybridIdentityMetadata"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "storageSpaces": {
      "description": "Microsoft.HybridContainerService/storageSpaces",
      "properties": {
        "apiVersion": {
          "enum": [
            "2022-05-01-preview"
          ],
          "type": "string"
        },
        "extendedLocation": {
          "oneOf": [
            {
              "$ref": "#/definitions/StorageSpacesExtendedLocation"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "location": {
          "description": "The geo-location where the resource lives",
          "type": "string"
        },
        "name": {
          "description": "Parameter for the name of the storage object",
          "maxLength": 64,
          "minLength": 3,
          "type": "string"
        },
        "properties": {
          "description": "HybridAKSStorageSpec defines the desired state of HybridAKSStorage",
          "oneOf": [
            {
              "$ref": "#/definitions/StorageSpacesProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Resource tags.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.HybridContainerService/storageSpaces"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "virtualNetworks": {
      "description": "Microsoft.HybridContainerService/virtualNetworks",
      "properties": {
        "apiVersion": {
          "enum": [
            "2022-05-01-preview"
          ],
          "type": "string"
        },
        "extendedLocation": {
          "oneOf": [
            {
              "$ref": "#/definitions/VirtualNetworksExtendedLocation"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "location": {
          "description": "The geo-location where the resource lives",
          "type": "string"
        },
        "name": {
          "description": "Parameter for the name of the virtual network",
          "maxLength": 64,
          "minLength": 3,
          "type": "string"
        },
        "properties": {
          "description": "HybridAKSNetworkSpec defines the desired state of HybridAKSNetwork",
          "oneOf": [
            {
              "$ref": "#/definitions/VirtualNetworksProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Resource tags.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.HybridContainerService/virtualNetworks"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    }
  },
  "definitions": {
    "AADProfile": {
      "description": "AAD Profile specifies attributes for Azure Active Directory integration.",
      "properties": {
        "adminGroupObjectIDs": {
          "description": "The list of AAD group object IDs that will have admin role of the cluster.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "clientAppID": {
          "description": "The client AAD application ID.",
          "type": "string"
        },
        "enableAzureRbac": {
          "description": "Whether to enable Azure RBAC for Kubernetes authorization.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "managed": {
          "description": "Whether to enable managed AAD.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "serverAppID": {
          "description": "The server AAD application ID.",
          "type": "string"
        },
        "serverAppSecret": {
          "description": "The server AAD application secret.",
          "type": "string"
        },
        "tenantID": {
          "description": "The AAD tenant ID to use for authentication. If not specified, will use the tenant of the deployment subscription.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "AddonProfiles": {
      "description": "Addon configurations",
      "properties": {
        "config": {
          "description": "Config - Key-value pairs for configuring an add-on.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "enabled": {
          "description": "Enabled - Whether the add-on is enabled or not.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "AgentPoolExtendedLocation": {
      "properties": {
        "name": {
          "description": "The extended location name.",
          "type": "string"
        },
        "type": {
          "description": "The extended location type.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "AgentPoolProperties": {
      "properties": {
        "availabilityZones": {
          "description": "AvailabilityZones - The list of Availability zones to use for nodes. Datacenter racks modelled as zones",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "cloudProviderProfile": {
          "description": "The underlying cloud infra provider properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/CloudProviderProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "count": {
          "description": "Count - Number of agents to host docker containers. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1.",
          "oneOf": [
            {
              "default": 1,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "maxCount": {
          "description": "The maximum number of nodes for auto-scaling",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "maxPods": {
          "description": "The maximum number of pods that can run on a node.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "minCount": {
          "description": "The minimum number of nodes for auto-scaling",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "mode": {
          "description": "Mode - AgentPoolMode represents mode of an agent pool. Possible values include: 'System', 'LB', 'User'. Default is 'User'",
          "oneOf": [
            {
              "enum": [
                "System",
                "LB",
                "User"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "nodeImageVersion": {
          "description": "The version of node image",
          "type": "string"
        },
        "nodeLabels": {
          "description": "NodeLabels - Agent pool node labels to be persisted across all nodes in agent pool.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "nodeTaints": {
          "description": "NodeTaints - Taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "osType": {
          "description": "OsType - OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux. Possible values include: 'Linux', 'Windows'",
          "oneOf": [
            {
              "enum": [
                "Linux",
                "Windows"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "status": {
          "description": "HybridAKSNodePoolStatus defines the observed state of HybridAKSNodePool",
          "oneOf": [
            {
              "$ref": "#/definitions/AgentPoolProvisioningStatusStatus"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "vmSize": {
          "description": "VmSize - The size of the agent pool VMs.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "AgentPoolProvisioningStatusError": {
      "properties": {
        "code": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "AgentPoolProvisioningStatusStatus": {
      "description": "HybridAKSNodePoolStatus defines the observed state of HybridAKSNodePool",
      "properties": {
        "errorMessage": {
          "description": "ErrorMessage - Error messages during creation of cluster",
          "type": "string"
        },
        "provisioningStatus": {
          "description": "Contains Provisioning errors",
          "oneOf": [
            {
              "$ref": "#/definitions/AgentPoolProvisioningStatusStatusProvisioningStatus"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "readyReplicas": {
          "description": "Total number of ready machines targeted by this deployment.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "replicas": {
          "description": "Total number of non-terminated machines targeted by this deployment",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "AgentPoolProvisioningStatusStatusProvisioningStatus": {
      "description": "Contains Provisioning errors",
      "properties": {
        "error": {
          "oneOf": [
            {
              "$ref": "#/definitions/AgentPoolProvisioningStatusError"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "operationId": {
          "type": "string"
        },
        "phase": {
          "description": "Phase represents the current phase of cluster actuation. E.g. Pending, Running, Terminating, Failed etc.",
          "type": "string"
        },
        "status": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ArcAgentProfile": {
      "description": "Defines the Arc Agent properties for the Provisioned clusters.",
      "properties": {
        "agentAutoUpgrade": {
          "description": "Indicates whether the Arc agents on the provisioned clusters be upgraded automatically to the latest version. Defaults to Enabled.",
          "oneOf": [
            {
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "agentVersion": {
          "description": "Version of the Arc agents to be installed on the provisioned Provisioned cluster resource",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CloudProviderProfile": {
      "description": "CloudProviderProfile - The underlying cloud infra provider properties.",
      "properties": {
        "infraNetworkProfile": {
          "description": "InfraNetworkProfile - List of infra network profiles for the provisioned cluster",
          "oneOf": [
            {
              "$ref": "#/definitions/CloudProviderProfileInfraNetworkProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "infraStorageProfile": {
          "description": "InfraStorageProfile - List of infra storage profiles for the provisioned cluster",
          "oneOf": [
            {
              "$ref": "#/definitions/CloudProviderProfileInfraStorageProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "CloudProviderProfileInfraNetworkProfile": {
      "description": "InfraNetworkProfile - List of infra network profiles for the provisioned cluster",
      "properties": {
        "vnetSubnetIds": {
          "description": "Array of references to azure resource corresponding to the new HybridAKSNetwork object e.g. /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridContainerService/virtualNetworks/{virtualNetworkName}",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "CloudProviderProfileInfraStorageProfile": {
      "description": "InfraStorageProfile - List of infra storage profiles for the provisioned cluster",
      "properties": {
        "storageSpaceIds": {
          "description": "Reference to azure resource corresponding to the new HybridAKSStorage object e.g. /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.HybridContainerService/storageSpaces/{storageSpaceName}",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ControlPlaneEndpointProfileControlPlaneEndpoint": {
      "description": "API server endpoint for the control plane",
      "properties": {
        "hostIP": {
          "description": "Host IP address for API server",
          "type": "string"
        },
        "port": {
          "description": "Port for the API server",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ControlPlaneProfile": {
      "description": "ControlPlaneProfile - The control plane properties for the provisioned cluster.",
      "properties": {
        "availabilityZones": {
          "description": "AvailabilityZones - The list of Availability zones to use for nodes. Datacenter racks modelled as zones",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "cloudProviderProfile": {
          "description": "The underlying cloud infra provider properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/CloudProviderProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "controlPlaneEndpoint": {
          "description": "API server endpoint for the control plane",
          "oneOf": [
            {
              "$ref": "#/definitions/ControlPlaneEndpointProfileControlPlaneEndpoint"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "count": {
          "description": "Count - Number of agents to host docker containers. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1.",
          "oneOf": [
            {
              "default": 1,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "linuxProfile": {
          "description": "Profile for Linux VMs in the container service cluster.",
          "oneOf": [
            {
              "$ref": "#/definitions/LinuxProfileProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "maxCount": {
          "description": "The maximum number of nodes for auto-scaling",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "maxPods": {
          "description": "The maximum number of pods that can run on a node.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "minCount": {
          "description": "The minimum number of nodes for auto-scaling",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "mode": {
          "description": "Mode - AgentPoolMode represents mode of an agent pool. Possible values include: 'System', 'LB', 'User'. Default is 'User'",
          "oneOf": [
            {
              "enum": [
                "System",
                "LB",
                "User"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "name": {
          "description": "Unique name of the agent pool profile in the context of the subscription and resource group.",
          "type": "string"
        },
        "nodeImageVersion": {
          "description": "The version of node image",
          "type": "string"
        },
        "nodeLabels": {
          "description": "NodeLabels - Agent pool node labels to be persisted across all nodes in agent pool.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "nodeTaints": {
          "description": "NodeTaints - Taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "osType": {
          "description": "OsType - OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux. Possible values include: 'Linux', 'Windows'",
          "oneOf": [
            {
              "enum": [
                "Linux",
                "Windows"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "vmSize": {
          "description": "VmSize - The size of the agent pool VMs.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "HttpProxyConfig": {
      "description": "Configurations for provisioning the cluster with HTTP proxy servers.",
      "properties": {
        "httpProxy": {
          "description": "The HTTP proxy server endpoint to use.",
          "type": "string"
        },
        "httpsProxy": {
          "description": "The HTTPS proxy server endpoint to use.",
          "type": "string"
        },
        "noProxy": {
          "description": "The endpoints that should not go through proxy.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "password": {
          "description": "Password to use for connecting to proxy server",
          "type": "string"
        },
        "trustedCa": {
          "description": "Alternative CA cert to use for connecting to proxy servers.",
          "type": "string"
        },
        "username": {
          "description": "Username to use for connecting to proxy server",
          "type": "string"
        }
      },
      "type": "object"
    },
    "HybridIdentityMetadataProperties": {
      "description": "Defines the resource properties.",
      "properties": {
        "identity": {
          "description": "The identity of the provisioned cluster.",
          "oneOf": [
            {
              "$ref": "#/definitions/ProvisionedClusterIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "publicKey": {
          "description": "Onboarding public key for provisioning the Managed identity for the HybridAKS cluster.",
          "type": "string"
        },
        "resourceUid": {
          "description": "Unique id of the parent provisioned cluster resource.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "LinuxProfileProperties": {
      "description": "LinuxProfile - Profile for Linux VMs in the container service cluster.",
      "properties": {
        "adminUsername": {
          "description": "AdminUsername - The administrator username to use for Linux VMs.",
          "type": "string"
        },
        "ssh": {
          "description": "SSH - SSH configuration for Linux-based VMs running on Azure.",
          "oneOf": [
            {
              "$ref": "#/definitions/LinuxProfilePropertiesSsh"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "LinuxProfilePropertiesSsh": {
      "description": "SSH - SSH configuration for Linux-based VMs running on Azure.",
      "properties": {
        "publicKeys": {
          "description": "PublicKeys - The list of SSH public keys used to authenticate with Linux-based VMs. Only expect one key specified.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/LinuxProfilePropertiesSshPublicKeysItem"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "LinuxProfilePropertiesSshPublicKeysItem": {
      "properties": {
        "keyData": {
          "description": "KeyData - Certificate public key used to authenticate with VMs through SSH. The certificate must be in PEM format with or without headers.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "LoadBalancerProfile": {
      "description": "LoadBalancerProfile - Profile of the cluster load balancer.",
      "properties": {
        "availabilityZones": {
          "description": "AvailabilityZones - The list of Availability zones to use for nodes. Datacenter racks modelled as zones",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "cloudProviderProfile": {
          "description": "The underlying cloud infra provider properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/CloudProviderProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "count": {
          "description": "Count - Number of agents to host docker containers. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1.",
          "oneOf": [
            {
              "default": 1,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "linuxProfile": {
          "description": "Profile for Linux VMs in the container service cluster.",
          "oneOf": [
            {
              "$ref": "#/definitions/LinuxProfileProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "maxCount": {
          "description": "The maximum number of nodes for auto-scaling",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "maxPods": {
          "description": "The maximum number of pods that can run on a node.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "minCount": {
          "description": "The minimum number of nodes for auto-scaling",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "mode": {
          "description": "Mode - AgentPoolMode represents mode of an agent pool. Possible values include: 'System', 'LB', 'User'. Default is 'User'",
          "oneOf": [
            {
              "enum": [
                "System",
                "LB",
                "User"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "name": {
          "description": "Unique name of the agent pool profile in the context of the subscription and resource group.",
          "type": "string"
        },
        "nodeImageVersion": {
          "description": "The version of node image",
          "type": "string"
        },
        "nodeLabels": {
          "description": "NodeLabels - Agent pool node labels to be persisted across all nodes in agent pool.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "nodeTaints": {
          "description": "NodeTaints - Taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "osType": {
          "description": "OsType - OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux. Possible values include: 'Linux', 'Windows'",
          "oneOf": [
            {
              "enum": [
                "Linux",
                "Windows"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "vmSize": {
          "description": "VmSize - The size of the agent pool VMs.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "NamedAgentPoolProfile": {
      "description": "Agent pool profile along with a name parameter",
      "properties": {
        "availabilityZones": {
          "description": "AvailabilityZones - The list of Availability zones to use for nodes. Datacenter racks modelled as zones",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "cloudProviderProfile": {
          "description": "The underlying cloud infra provider properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/CloudProviderProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "count": {
          "description": "Count - Number of agents to host docker containers. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1.",
          "oneOf": [
            {
              "default": 1,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "maxCount": {
          "description": "The maximum number of nodes for auto-scaling",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "maxPods": {
          "description": "The maximum number of pods that can run on a node.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "minCount": {
          "description": "The minimum number of nodes for auto-scaling",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "mode": {
          "description": "Mode - AgentPoolMode represents mode of an agent pool. Possible values include: 'System', 'LB', 'User'. Default is 'User'",
          "oneOf": [
            {
              "enum": [
                "System",
                "LB",
                "User"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "name": {
          "description": "Unique name of the agent pool profile in the context of the subscription and resource group.",
          "type": "string"
        },
        "nodeImageVersion": {
          "description": "The version of node image",
          "type": "string"
        },
        "nodeLabels": {
          "description": "NodeLabels - Agent pool node labels to be persisted across all nodes in agent pool.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "nodeTaints": {
          "description": "NodeTaints - Taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "osType": {
          "description": "OsType - OsType to be used to specify os type. Choose from Linux and Windows. Default to Linux. Possible values include: 'Linux', 'Windows'",
          "oneOf": [
            {
              "enum": [
                "Linux",
                "Windows"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "vmSize": {
          "description": "VmSize - The size of the agent pool VMs.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "NetworkProfile": {
      "description": "NetworkProfile - Profile of network configuration.",
      "properties": {
        "dnsServiceIP": {
          "description": "DNSServiceIP - An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified in serviceCidr.",
          "type": "string"
        },
        "loadBalancerProfile": {
          "description": "LoadBalancerProfile - Profile of the cluster load balancer.",
          "oneOf": [
            {
              "$ref": "#/definitions/LoadBalancerProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "loadBalancerSku": {
          "description": "LoadBalancerSku - The load balancer sku for the provisioned cluster. Possible values: 'unstacked-haproxy', 'stacked-kube-vip', 'stacked-metallb', 'unmanaged'. The default is 'unmanaged'.",
          "oneOf": [
            {
              "enum": [
                "unstacked-haproxy",
                "stacked-kube-vip",
                "stacked-metallb",
                "unmanaged"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "networkPolicy": {
          "description": "NetworkPolicy - Network policy used for building Kubernetes network. Possible values include: 'calico', 'flannel'. Default is 'calico'",
          "oneOf": [
            {
              "enum": [
                "calico",
                "flannel"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "podCidr": {
          "description": "PodCidr - A CIDR notation IP range from which to assign pod IPs when kubenet is used.",
          "type": "string"
        },
        "podCidrs": {
          "description": "The CIDR notation IP ranges from which to assign pod IPs. One IPv4 CIDR is expected for single-stack networking. Two CIDRs, one for each IP family (IPv4/IPv6), is expected for dual-stack networking.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "serviceCidr": {
          "description": "ServiceCidr - A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges.",
          "type": "string"
        },
        "serviceCidrs": {
          "description": "The CIDR notation IP ranges from which to assign service cluster IPs. One IPv4 CIDR is expected for single-stack networking. Two CIDRs, one for each IP family (IPv4/IPv6), is expected for dual-stack networking. They must not overlap with any Subnet IP ranges.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ProvisionedClusterIdentity": {
      "description": "Identity for the Provisioned cluster.",
      "properties": {
        "type": {
          "description": "The type of identity used for the provisioned cluster. The type SystemAssigned, includes a system created identity. The type None means no identity is assigned to the provisioned cluster.",
          "oneOf": [
            {
              "enum": [
                "None",
                "SystemAssigned"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "type"
      ],
      "type": "object"
    },
    "ProvisionedClustersAllProperties": {
      "description": "All properties of the provisioned cluster",
      "properties": {
        "aadProfile": {
          "description": "AAD profile for the provisioned cluster.",
          "oneOf": [
            {
              "$ref": "#/definitions/AADProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "addonProfiles": {
          "description": "AddonProfiles - Profile of managed cluster add-on.",
          "oneOf": [
            {
              "additionalProperties": {
                "$ref": "#/definitions/AddonProfiles"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "agentPoolProfiles": {
          "description": "The agent pools of the cluster.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/NamedAgentPoolProfile"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "cloudProviderProfile": {
          "description": "The underlying cloud infra provider properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/CloudProviderProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "controlPlane": {
          "description": "ControlPlane - ControlPlane Configuration",
          "oneOf": [
            {
              "$ref": "#/definitions/ControlPlaneProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "enableRbac": {
          "description": "EnableRBAC - Whether to enable Kubernetes Role-Based Access Control.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "features": {
          "description": "Additional features specs like Arc Agent Onboarding.",
          "oneOf": [
            {
              "$ref": "#/definitions/ProvisionedClustersCommonPropertiesFeatures"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "httpProxyConfig": {
          "description": "HttpProxyConfig - Configurations for provisioning the cluster with HTTP proxy servers.",
          "oneOf": [
            {
              "$ref": "#/definitions/HttpProxyConfig"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "kubernetesVersion": {
          "description": "KubernetesVersion - Version of Kubernetes specified when creating the managed cluster.",
          "type": "string"
        },
        "linuxProfile": {
          "description": "LinuxProfile - The profile for Linux VMs in the Provisioned Cluster.",
          "oneOf": [
            {
              "$ref": "#/definitions/LinuxProfileProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "networkProfile": {
          "description": "NetworkProfile - Profile of network configuration.",
          "oneOf": [
            {
              "$ref": "#/definitions/NetworkProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "nodeResourceGroup": {
          "description": "NodeResourceGroup - Name of the resource group containing agent pool nodes.",
          "type": "string"
        },
        "windowsProfile": {
          "description": "WindowsProfile - Profile for Windows VMs in the Provisioned Cluster.",
          "oneOf": [
            {
              "$ref": "#/definitions/WindowsProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ProvisionedClustersCommonPropertiesFeatures": {
      "description": "Additional features specs like Arc Agent Onboarding.",
      "properties": {
        "arcAgentProfile": {
          "description": "Arc agentry configuration for the provisioned cluster.",
          "oneOf": [
            {
              "$ref": "#/definitions/ArcAgentProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ProvisionedClustersExtendedLocation": {
      "properties": {
        "name": {
          "description": "The extended location name.",
          "type": "string"
        },
        "type": {
          "description": "The extended location type.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "StorageSpacesExtendedLocation": {
      "properties": {
        "name": {
          "description": "The extended location name.",
          "type": "string"
        },
        "type": {
          "description": "The extended location type.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "StorageSpacesProperties": {
      "description": "HybridAKSStorageSpec defines the desired state of HybridAKSStorage",
      "properties": {
        "hciStorageProfile": {
          "oneOf": [
            {
              "$ref": "#/definitions/StorageSpacesPropertiesHciStorageProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "status": {
          "description": "HybridAKSStorageStatus defines the observed state of HybridAKSStorage",
          "oneOf": [
            {
              "$ref": "#/definitions/StorageSpacesPropertiesStatus"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "vmwareStorageProfile": {
          "oneOf": [
            {
              "$ref": "#/definitions/StorageSpacesPropertiesVmwareStorageProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "StorageSpacesPropertiesHciStorageProfile": {
      "properties": {
        "mocGroup": {
          "description": "Resource group in MOC(Microsoft On-premises Cloud)",
          "type": "string"
        },
        "mocLocation": {
          "description": "Location in MOC(Microsoft On-premises Cloud)",
          "type": "string"
        },
        "mocStorageContainer": {
          "description": "Name of the storage container in MOC(Microsoft On-premises Cloud)",
          "type": "string"
        }
      },
      "type": "object"
    },
    "StorageSpacesPropertiesStatus": {
      "description": "HybridAKSStorageStatus defines the observed state of HybridAKSStorage",
      "properties": {
        "provisioningStatus": {
          "description": "Contains Provisioning errors",
          "oneOf": [
            {
              "$ref": "#/definitions/StorageSpacesPropertiesStatusProvisioningStatus"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "StorageSpacesPropertiesStatusProvisioningStatus": {
      "description": "Contains Provisioning errors",
      "properties": {
        "error": {
          "oneOf": [
            {
              "$ref": "#/definitions/StorageSpacesPropertiesStatusProvisioningStatusError"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "operationId": {
          "type": "string"
        },
        "phase": {
          "description": "Phase represents the current phase of cluster actuation. E.g. Pending, Running, Terminating, Failed etc.",
          "type": "string"
        },
        "status": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "StorageSpacesPropertiesStatusProvisioningStatusError": {
      "properties": {
        "code": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "StorageSpacesPropertiesVmwareStorageProfile": {
      "properties": {
        "datacenter": {
          "description": "Name of the datacenter in VSphere",
          "type": "string"
        },
        "datastore": {
          "description": "Name of the datastore in VSphere",
          "type": "string"
        },
        "folder": {
          "description": "Name of the folder in VSphere",
          "type": "string"
        },
        "resourcePool": {
          "description": "Name of the resource pool in VSphere",
          "type": "string"
        }
      },
      "type": "object"
    },
    "VirtualNetworksExtendedLocation": {
      "properties": {
        "name": {
          "description": "The extended location name.",
          "type": "string"
        },
        "type": {
          "description": "The extended location type.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "VirtualNetworksProperties": {
      "description": "HybridAKSNetworkSpec defines the desired state of HybridAKSNetwork",
      "properties": {
        "infraVnetProfile": {
          "oneOf": [
            {
              "$ref": "#/definitions/VirtualNetworksPropertiesInfraVnetProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "vipPool": {
          "description": "Virtual IP Pool for Kubernetes",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/VirtualNetworksPropertiesVipPoolItem"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "vmipPool": {
          "description": "IP Pool for Virtual Machines",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/VirtualNetworksPropertiesVmipPoolItem"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "VirtualNetworksPropertiesInfraVnetProfile": {
      "properties": {
        "hci": {
          "description": "Infra network profile for HCI platform",
          "oneOf": [
            {
              "$ref": "#/definitions/VirtualNetworksPropertiesInfraVnetProfileHci"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "kubevirt": {
          "description": "Infra network profile for KubeVirt platform",
          "oneOf": [
            {
              "$ref": "#/definitions/VirtualNetworksPropertiesInfraVnetProfileKubevirt"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "vmware": {
          "description": "Infra network profile for VMware platform",
          "oneOf": [
            {
              "$ref": "#/definitions/VirtualNetworksPropertiesInfraVnetProfileVmware"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "VirtualNetworksPropertiesInfraVnetProfileHci": {
      "description": "Infra network profile for HCI platform",
      "properties": {
        "mocGroup": {
          "description": "Resource group in MOC(Microsoft On-premises Cloud)",
          "type": "string"
        },
        "mocLocation": {
          "description": "Location in MOC(Microsoft On-premises Cloud)",
          "type": "string"
        },
        "mocVnetName": {
          "description": "Virtual Network name in MOC(Microsoft On-premises Cloud)",
          "type": "string"
        }
      },
      "type": "object"
    },
    "VirtualNetworksPropertiesInfraVnetProfileKubevirt": {
      "description": "Infra network profile for KubeVirt platform",
      "properties": {
        "vnetName": {
          "description": "Name of the network in KubeVirt",
          "type": "string"
        }
      },
      "type": "object"
    },
    "VirtualNetworksPropertiesInfraVnetProfileVmware": {
      "description": "Infra network profile for VMware platform",
      "properties": {
        "segmentName": {
          "description": "Name of the network segment in VSphere",
          "type": "string"
        }
      },
      "type": "object"
    },
    "VirtualNetworksPropertiesVipPoolItem": {
      "properties": {
        "endIP": {
          "description": "Ending IP address for the IP Pool",
          "type": "string"
        },
        "startIP": {
          "description": "Starting IP address for the IP Pool",
          "type": "string"
        }
      },
      "type": "object"
    },
    "VirtualNetworksPropertiesVmipPoolItem": {
      "properties": {
        "endIP": {
          "description": "Ending IP address for the IP Pool",
          "type": "string"
        },
        "startIP": {
          "description": "Starting IP address for the IP Pool",
          "type": "string"
        }
      },
      "type": "object"
    },
    "WindowsProfile": {
      "description": "WindowsProfile - Profile for Windows VMs in the container service cluster.",
      "properties": {
        "adminPassword": {
          "description": "AdminPassword - Specifies the password of the administrator account. <br><br> **Minimum-length:** 8 characters <br><br> **Max-length:** 123 characters <br><br> **Complexity requirements:** 3 out of 4 conditions below need to be fulfilled <br> Has lower characters <br>Has upper characters <br> Has a digit <br> Has a special character (Regex match [\\W_]) <br><br> **Disallowed values:** \"abc@123\", \"P@$$w0rd\", \"P@ssw0rd\", \"P@ssword123\", \"Pa$$word\", \"pass@word1\", \"Password!\", \"Password1\", \"Password22\", \"iloveyou!\"",
          "type": "string"
        },
        "adminUsername": {
          "description": "AdminUsername - Specifies the name of the administrator account. <br><br> **restriction:** Cannot end in \".\" <br><br> **Disallowed values:** \"administrator\", \"admin\", \"user\", \"user1\", \"test\", \"user2\", \"test1\", \"user3\", \"admin1\", \"1\", \"123\", \"a\", \"actuser\", \"adm\", \"admin2\", \"aspnet\", \"backup\", \"console\", \"david\", \"guest\", \"john\", \"owner\", \"root\", \"server\", \"sql\", \"support\", \"support_388945a0\", \"sys\", \"test2\", \"test3\", \"user4\", \"user5\". <br><br> **Minimum-length:** 1 character <br><br> **Max-length:** 20 characters",
          "type": "string"
        },
        "enableCsiProxy": {
          "description": "EnableCSIProxy - Whether to enable CSI proxy.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "licenseType": {
          "description": "LicenseType - The licenseType to use for Windows VMs. Windows_Server is used to enable Azure Hybrid User Benefits for Windows VMs. Possible values include: 'None', 'Windows_Server'",
          "oneOf": [
            {
              "enum": [
                "Windows_Server",
                "None"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "provisionedClusters_agentPools_childResource": {
      "description": "Microsoft.HybridContainerService/provisionedClusters/agentPools",
      "properties": {
        "apiVersion": {
          "enum": [
            "2022-05-01-preview"
          ],
          "type": "string"
        },
        "extendedLocation": {
          "oneOf": [
            {
              "$ref": "#/definitions/AgentPoolExtendedLocation"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "location": {
          "description": "The resource location",
          "type": "string"
        },
        "name": {
          "description": "Parameter for the name of the agent pool in the provisioned cluster",
          "maxLength": 64,
          "minLength": 3,
          "type": "string"
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/AgentPoolProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Resource tags",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "agentPools"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "provisionedClusters_hybridIdentityMetadata_childResource": {
      "description": "Microsoft.HybridContainerService/provisionedClusters/hybridIdentityMetadata",
      "properties": {
        "apiVersion": {
          "enum": [
            "2022-05-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Parameter for the name of the hybrid identity metadata resource.",
          "maxLength": 64,
          "minLength": 3,
          "type": "string"
        },
        "properties": {
          "description": "Resource properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/HybridIdentityMetadataProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "hybridIdentityMetadata"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    }
  }
}