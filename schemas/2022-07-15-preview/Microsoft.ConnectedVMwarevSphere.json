{
  "id": "https://schema.management.azure.com/schemas/2022-07-15-preview/Microsoft.ConnectedVMwarevSphere.json#",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "title": "Microsoft.ConnectedVMwarevSphere",
  "description": "Microsoft ConnectedVMwarevSphere Resource Types",
  "resourceDefinitions": {
    "clusters": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2022-07-15-preview"
          ]
        },
        "extendedLocation": {
          "oneOf": [
            {
              "$ref": "#/definitions/ExtendedLocation"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The extended location."
        },
        "kind": {
          "type": "string",
          "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value."
        },
        "location": {
          "type": "string",
          "description": "Gets or sets the location."
        },
        "name": {
          "type": "string",
          "description": "Name of the cluster."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/ClusterProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Describes the properties of a Cluster."
        },
        "systemData": {
          "oneOf": [
            {
              "$ref": "#/definitions/SystemData"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Metadata pertaining to creation and last modification of the resource."
        },
        "tags": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Gets or sets the Resource tags."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.ConnectedVMwarevSphere/clusters"
          ]
        }
      },
      "required": [
        "apiVersion",
        "location",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.ConnectedVMwarevSphere/clusters"
    },
    "datastores": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2022-07-15-preview"
          ]
        },
        "extendedLocation": {
          "oneOf": [
            {
              "$ref": "#/definitions/ExtendedLocation"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The extended location."
        },
        "kind": {
          "type": "string",
          "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value."
        },
        "location": {
          "type": "string",
          "description": "Gets or sets the location."
        },
        "name": {
          "type": "string",
          "description": "Name of the datastore."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/DatastoreProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Describes the properties of a Datastore."
        },
        "systemData": {
          "oneOf": [
            {
              "$ref": "#/definitions/SystemData"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Metadata pertaining to creation and last modification of the resource."
        },
        "tags": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Gets or sets the Resource tags."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.ConnectedVMwarevSphere/datastores"
          ]
        }
      },
      "required": [
        "apiVersion",
        "location",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.ConnectedVMwarevSphere/datastores"
    },
    "hosts": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2022-07-15-preview"
          ]
        },
        "extendedLocation": {
          "oneOf": [
            {
              "$ref": "#/definitions/ExtendedLocation"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The extended location."
        },
        "kind": {
          "type": "string",
          "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value."
        },
        "location": {
          "type": "string",
          "description": "Gets or sets the location."
        },
        "name": {
          "type": "string",
          "description": "Name of the host."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/HostProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Describes the properties of a Host."
        },
        "systemData": {
          "oneOf": [
            {
              "$ref": "#/definitions/SystemData"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Metadata pertaining to creation and last modification of the resource."
        },
        "tags": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Gets or sets the Resource tags."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.ConnectedVMwarevSphere/hosts"
          ]
        }
      },
      "required": [
        "apiVersion",
        "location",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.ConnectedVMwarevSphere/hosts"
    },
    "resourcePools": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2022-07-15-preview"
          ]
        },
        "extendedLocation": {
          "oneOf": [
            {
              "$ref": "#/definitions/ExtendedLocation"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The extended location."
        },
        "kind": {
          "type": "string",
          "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value."
        },
        "location": {
          "type": "string",
          "description": "Gets or sets the location."
        },
        "name": {
          "type": "string",
          "description": "Name of the resourcePool."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/ResourcePoolProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Describes the properties of a Resource Pool."
        },
        "systemData": {
          "oneOf": [
            {
              "$ref": "#/definitions/SystemData"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Metadata pertaining to creation and last modification of the resource."
        },
        "tags": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Gets or sets the Resource tags."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.ConnectedVMwarevSphere/resourcePools"
          ]
        }
      },
      "required": [
        "apiVersion",
        "location",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.ConnectedVMwarevSphere/resourcePools"
    },
    "vcenters": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2022-07-15-preview"
          ]
        },
        "extendedLocation": {
          "oneOf": [
            {
              "$ref": "#/definitions/ExtendedLocation"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The extended location."
        },
        "kind": {
          "type": "string",
          "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value."
        },
        "location": {
          "type": "string",
          "description": "Gets or sets the location."
        },
        "name": {
          "type": "string",
          "description": "Name of the vCenter."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/VCenterProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Describes the properties of a VCenter."
        },
        "resources": {
          "type": "array",
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/vcenters_inventoryItems_childResource"
              }
            ]
          }
        },
        "systemData": {
          "oneOf": [
            {
              "$ref": "#/definitions/SystemData"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Metadata pertaining to creation and last modification of the resource."
        },
        "tags": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Gets or sets the Resource tags."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.ConnectedVMwarevSphere/vcenters"
          ]
        }
      },
      "required": [
        "apiVersion",
        "location",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.ConnectedVMwarevSphere/vcenters"
    },
    "vcenters_inventoryItems": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2022-07-15-preview"
          ]
        },
        "kind": {
          "type": "string",
          "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value."
        },
        "name": {
          "type": "string",
          "description": "Name of the inventoryItem."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/InventoryItemProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Describes the properties of an Inventory Item."
        },
        "systemData": {
          "oneOf": [
            {
              "$ref": "#/definitions/SystemData"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Metadata pertaining to creation and last modification of the resource."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.ConnectedVMwarevSphere/vcenters/inventoryItems"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.ConnectedVMwarevSphere/vcenters/inventoryItems"
    },
    "virtualMachines": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2022-07-15-preview"
          ]
        },
        "extendedLocation": {
          "oneOf": [
            {
              "$ref": "#/definitions/ExtendedLocation"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The extended location."
        },
        "identity": {
          "oneOf": [
            {
              "$ref": "#/definitions/Identity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Managed service identity."
        },
        "kind": {
          "type": "string",
          "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value."
        },
        "location": {
          "type": "string",
          "description": "Gets or sets the location."
        },
        "name": {
          "type": "string",
          "description": "Name of the virtual machine resource."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/VirtualMachineProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Describes the properties of a Virtual Machine."
        },
        "resources": {
          "type": "array",
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/virtualMachines_hybridIdentityMetadata_childResource"
              },
              {
                "$ref": "#/definitions/virtualMachines_extensions_childResource"
              },
              {
                "$ref": "#/definitions/virtualMachines_guestAgents_childResource"
              }
            ]
          }
        },
        "systemData": {
          "oneOf": [
            {
              "$ref": "#/definitions/SystemData"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Metadata pertaining to creation and last modification of the resource."
        },
        "tags": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Gets or sets the Resource tags."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.ConnectedVMwarevSphere/virtualMachines"
          ]
        }
      },
      "required": [
        "apiVersion",
        "location",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.ConnectedVMwarevSphere/virtualMachines"
    },
    "virtualMachines_extensions": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2022-07-15-preview"
          ]
        },
        "location": {
          "type": "string",
          "description": "Gets or sets the location."
        },
        "name": {
          "type": "string",
          "description": "The name of the machine extension."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/MachineExtensionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Describes the properties of a Machine Extension."
        },
        "systemData": {
          "oneOf": [
            {
              "$ref": "#/definitions/SystemData"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Metadata pertaining to creation and last modification of the resource."
        },
        "tags": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Gets or sets the Resource tags."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.ConnectedVMwarevSphere/virtualMachines/extensions"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.ConnectedVMwarevSphere/virtualMachines/extensions"
    },
    "virtualMachines_guestAgents": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2022-07-15-preview"
          ]
        },
        "name": {
          "type": "string",
          "description": "Name of the guestAgents."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/GuestAgentProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Describes the properties of a Virtual Machine Guest Agent."
        },
        "systemData": {
          "oneOf": [
            {
              "$ref": "#/definitions/SystemData"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Metadata pertaining to creation and last modification of the resource."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.ConnectedVMwarevSphere/virtualMachines/guestAgents"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.ConnectedVMwarevSphere/virtualMachines/guestAgents"
    },
    "virtualMachines_hybridIdentityMetadata": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2022-07-15-preview"
          ]
        },
        "name": {
          "type": "string",
          "description": "Name of the hybridIdentityMetadata."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/HybridIdentityMetadataProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Describes the properties of Hybrid Identity Metadata for a Virtual Machine."
        },
        "systemData": {
          "oneOf": [
            {
              "$ref": "#/definitions/SystemData"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Metadata pertaining to creation and last modification of the resource."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.ConnectedVMwarevSphere/virtualMachines/hybridIdentityMetadata"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.ConnectedVMwarevSphere/virtualMachines/hybridIdentityMetadata"
    },
    "virtualMachineTemplates": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2022-07-15-preview"
          ]
        },
        "extendedLocation": {
          "oneOf": [
            {
              "$ref": "#/definitions/ExtendedLocation"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The extended location."
        },
        "kind": {
          "type": "string",
          "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value."
        },
        "location": {
          "type": "string",
          "description": "Gets or sets the location."
        },
        "name": {
          "type": "string",
          "description": "Name of the virtual machine template resource."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/VirtualMachineTemplateProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Describes the properties of a Virtual Machine Template."
        },
        "systemData": {
          "oneOf": [
            {
              "$ref": "#/definitions/SystemData"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Metadata pertaining to creation and last modification of the resource."
        },
        "tags": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Gets or sets the Resource tags."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.ConnectedVMwarevSphere/virtualMachineTemplates"
          ]
        }
      },
      "required": [
        "apiVersion",
        "location",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.ConnectedVMwarevSphere/virtualMachineTemplates"
    },
    "virtualNetworks": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2022-07-15-preview"
          ]
        },
        "extendedLocation": {
          "oneOf": [
            {
              "$ref": "#/definitions/ExtendedLocation"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The extended location."
        },
        "kind": {
          "type": "string",
          "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value."
        },
        "location": {
          "type": "string",
          "description": "Gets or sets the location."
        },
        "name": {
          "type": "string",
          "description": "Name of the virtual network resource."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/VirtualNetworkProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Describes the properties of a Virtual Network."
        },
        "systemData": {
          "oneOf": [
            {
              "$ref": "#/definitions/SystemData"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Metadata pertaining to creation and last modification of the resource."
        },
        "tags": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Gets or sets the Resource tags."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.ConnectedVMwarevSphere/virtualNetworks"
          ]
        }
      },
      "required": [
        "apiVersion",
        "location",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.ConnectedVMwarevSphere/virtualNetworks"
    }
  },
  "definitions": {
    "ClusterInventoryItem": {
      "type": "object",
      "properties": {
        "inventoryType": {
          "type": "string",
          "enum": [
            "Cluster"
          ]
        }
      },
      "required": [
        "inventoryType"
      ],
      "description": "The cluster inventory item."
    },
    "ClusterProperties": {
      "type": "object",
      "properties": {
        "inventoryItemId": {
          "type": "string",
          "description": "Gets or sets the inventory Item ID for the cluster."
        },
        "moRefId": {
          "type": "string",
          "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID for the cluster."
        },
        "vCenterId": {
          "type": "string",
          "description": "Gets or sets the ARM Id of the vCenter resource in which this cluster resides."
        }
      },
      "description": "Describes the properties of a Cluster."
    },
    "DatastoreInventoryItem": {
      "type": "object",
      "properties": {
        "capacityGB": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Gets or sets Maximum capacity of this datastore, in GBs."
        },
        "freeSpaceGB": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Gets or sets Available space of this datastore, in GBs."
        },
        "inventoryType": {
          "type": "string",
          "enum": [
            "Datastore"
          ]
        }
      },
      "required": [
        "inventoryType"
      ],
      "description": "The datastore inventory item."
    },
    "DatastoreProperties": {
      "type": "object",
      "properties": {
        "inventoryItemId": {
          "type": "string",
          "description": "Gets or sets the inventory Item ID for the datastore."
        },
        "moRefId": {
          "type": "string",
          "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID for the datastore."
        },
        "vCenterId": {
          "type": "string",
          "description": "Gets or sets the ARM Id of the vCenter resource in which this datastore resides."
        }
      },
      "description": "Describes the properties of a Datastore."
    },
    "ExtendedLocation": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The extended location name."
        },
        "type": {
          "type": "string",
          "description": "The extended location type."
        }
      },
      "description": "The extended location."
    },
    "GuestAgentProfile": {
      "type": "object",
      "properties": {
        "clientPublicKey": {
          "type": "string",
          "description": "Gets or sets the Public Key provided by the client for enabling guest management."
        }
      },
      "description": "Specifies the guest agent settings for the virtual machine."
    },
    "GuestAgentProperties": {
      "type": "object",
      "properties": {
        "credentials": {
          "oneOf": [
            {
              "$ref": "#/definitions/GuestCredential"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Username / Password Credentials to connect to guest."
        },
        "httpProxyConfig": {
          "oneOf": [
            {
              "$ref": "#/definitions/HttpProxyConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "HTTP Proxy configuration for the VM."
        },
        "provisioningAction": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "install",
                "uninstall",
                "repair"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Gets or sets the guest agent provisioning action."
        }
      },
      "description": "Describes the properties of a Virtual Machine Guest Agent."
    },
    "GuestCredential": {
      "type": "object",
      "properties": {
        "password": {
          "type": "string",
          "description": "Gets or sets the password to connect with the guest."
        },
        "username": {
          "type": "string",
          "description": "Gets or sets username to connect with the guest."
        }
      },
      "description": "Username / Password Credentials to connect to guest."
    },
    "HardwareProfile": {
      "type": "object",
      "properties": {
        "memorySizeMB": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Gets or sets memory size in MBs for the vm."
        },
        "numCoresPerSocket": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Gets or sets the number of cores per socket for the vm. Defaults to 1 if unspecified."
        },
        "numCPUs": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Gets or sets the number of vCPUs for the vm."
        }
      },
      "description": "Specifies the hardware settings for the virtual machine."
    },
    "HostInventoryItem": {
      "type": "object",
      "properties": {
        "inventoryType": {
          "type": "string",
          "enum": [
            "Host"
          ]
        },
        "parent": {
          "oneOf": [
            {
              "$ref": "#/definitions/InventoryItemDetails"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Describes the properties of an Inventory Item reference."
        }
      },
      "required": [
        "inventoryType"
      ],
      "description": "The host inventory item."
    },
    "HostProperties": {
      "type": "object",
      "properties": {
        "inventoryItemId": {
          "type": "string",
          "description": "Gets or sets the inventory Item ID for the host."
        },
        "moRefId": {
          "type": "string",
          "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID for the host."
        },
        "vCenterId": {
          "type": "string",
          "description": "Gets or sets the ARM Id of the vCenter resource in which this host resides."
        }
      },
      "description": "Describes the properties of a Host."
    },
    "HttpProxyConfiguration": {
      "type": "object",
      "properties": {
        "httpsProxy": {
          "type": "string",
          "description": "Gets or sets httpsProxy url."
        }
      },
      "description": "HTTP Proxy configuration for the VM."
    },
    "HybridIdentityMetadataProperties": {
      "type": "object",
      "properties": {
        "publicKey": {
          "type": "string",
          "description": "Gets or sets the Public Key."
        },
        "vmId": {
          "type": "string",
          "description": "Gets or sets the Vm Id."
        }
      },
      "description": "Describes the properties of Hybrid Identity Metadata for a Virtual Machine."
    },
    "Identity": {
      "type": "object",
      "properties": {
        "type": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "None",
                "SystemAssigned"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The type of managed service identity."
        }
      },
      "required": [
        "type"
      ],
      "description": "Managed service identity."
    },
    "InventoryItemDetails": {
      "type": "object",
      "properties": {
        "inventoryItemId": {
          "type": "string",
          "description": "Gets or sets the inventory Item ID for the resource."
        },
        "inventoryType": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "ResourcePool",
                "VirtualMachine",
                "VirtualMachineTemplate",
                "VirtualNetwork",
                "Cluster",
                "Datastore",
                "Host"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The inventory type."
        },
        "moName": {
          "type": "string",
          "description": "Gets or sets the vCenter Managed Object name for the resource."
        }
      },
      "description": "Describes the properties of an Inventory Item reference."
    },
    "InventoryItemProperties": {
      "type": "object",
      "oneOf": [
        {
          "$ref": "#/definitions/ResourcePoolInventoryItem"
        },
        {
          "$ref": "#/definitions/VirtualMachineInventoryItem"
        },
        {
          "$ref": "#/definitions/VirtualMachineTemplateInventoryItem"
        },
        {
          "$ref": "#/definitions/VirtualNetworkInventoryItem"
        },
        {
          "$ref": "#/definitions/ClusterInventoryItem"
        },
        {
          "$ref": "#/definitions/DatastoreInventoryItem"
        },
        {
          "$ref": "#/definitions/HostInventoryItem"
        }
      ],
      "properties": {
        "managedResourceId": {
          "type": "string",
          "description": "Gets or sets the tracked resource id corresponding to the inventory resource."
        },
        "moName": {
          "type": "string",
          "description": "Gets or sets the vCenter Managed Object name for the inventory item."
        },
        "moRefId": {
          "type": "string",
          "description": "Gets or sets the MoRef (Managed Object Reference) ID for the inventory item."
        }
      },
      "description": "Describes the properties of an Inventory Item."
    },
    "MachineExtensionInstanceViewStatus": {
      "type": "object",
      "properties": {},
      "description": "Instance view status."
    },
    "MachineExtensionProperties": {
      "type": "object",
      "properties": {
        "autoUpgradeMinorVersion": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true."
        },
        "enableAutomaticUpgrade": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Indicates whether the extension should be automatically upgraded by the platform if there is a newer version available."
        },
        "forceUpdateTag": {
          "type": "string",
          "description": "How the extension handler should be forced to update even if the extension configuration has not changed."
        },
        "instanceView": {
          "oneOf": [
            {
              "$ref": "#/definitions/MachineExtensionPropertiesInstanceView"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The machine extension instance view."
        },
        "protectedSettings": {
          "type": "object",
          "properties": {},
          "description": "The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected settings at all."
        },
        "publisher": {
          "type": "string",
          "description": "The name of the extension handler publisher."
        },
        "settings": {
          "type": "object",
          "properties": {},
          "description": "Json formatted public settings for the extension."
        },
        "type": {
          "type": "string",
          "description": "Specifies the type of the extension; an example is \"CustomScriptExtension\"."
        },
        "typeHandlerVersion": {
          "type": "string",
          "description": "Specifies the version of the script handler."
        }
      },
      "description": "Describes the properties of a Machine Extension."
    },
    "MachineExtensionPropertiesInstanceView": {
      "type": "object",
      "properties": {
        "status": {
          "oneOf": [
            {
              "$ref": "#/definitions/MachineExtensionInstanceViewStatus"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Instance view status."
        }
      },
      "description": "The machine extension instance view."
    },
    "NetworkInterface": {
      "type": "object",
      "properties": {
        "deviceKey": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Gets or sets the device key value."
        },
        "ipSettings": {
          "oneOf": [
            {
              "$ref": "#/definitions/NicIPSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Defines the network interface ip settings."
        },
        "name": {
          "type": "string",
          "description": "Gets or sets the name of the network interface."
        },
        "networkId": {
          "type": "string",
          "description": "Gets or sets the ARM Id of the network resource to connect the virtual machine."
        },
        "nicType": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "vmxnet3",
                "vmxnet2",
                "vmxnet",
                "e1000",
                "e1000e",
                "pcnet32"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "NIC type."
        },
        "powerOnBoot": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "enabled",
                "disabled"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Gets or sets the power on boot."
        }
      },
      "description": "Network Interface model"
    },
    "NetworkProfile": {
      "type": "object",
      "properties": {
        "networkInterfaces": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NetworkInterface"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Gets or sets the list of network interfaces associated with the virtual machine."
        }
      },
      "description": "Specifies the network interfaces of the virtual machine."
    },
    "NicIPSettings": {
      "type": "object",
      "properties": {
        "allocationMethod": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "unset",
                "dynamic",
                "static",
                "linklayer",
                "random",
                "other"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Gets or sets the nic allocation method."
        },
        "dnsServers": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Gets or sets the dns servers."
        },
        "gateway": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Gets or sets the gateway."
        },
        "ipAddress": {
          "type": "string",
          "description": "Gets or sets the ip address for the nic."
        },
        "subnetMask": {
          "type": "string",
          "description": "Gets or sets the mask."
        }
      },
      "description": "Defines the network interface ip settings."
    },
    "OsProfile": {
      "type": "object",
      "properties": {
        "adminPassword": {
          "type": "string",
          "description": "Gets or sets administrator password."
        },
        "adminUsername": {
          "type": "string",
          "description": "Gets or sets administrator username."
        },
        "computerName": {
          "type": "string",
          "description": "Gets or sets computer name."
        },
        "guestId": {
          "type": "string",
          "description": "Gets or sets the guestId."
        },
        "linuxConfiguration": {
          "oneOf": [
            {
              "$ref": "#/definitions/OsProfileLinuxConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Specifies the linux configuration for update management."
        },
        "osType": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Windows",
                "Linux",
                "Other"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Gets or sets the type of the os."
        },
        "windowsConfiguration": {
          "oneOf": [
            {
              "$ref": "#/definitions/OsProfileWindowsConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Specifies the windows configuration for update management."
        }
      },
      "description": "Specifies the operating system settings for the virtual machine."
    },
    "OsProfileLinuxConfiguration": {
      "type": "object",
      "properties": {
        "patchSettings": {
          "oneOf": [
            {
              "$ref": "#/definitions/PatchSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Specifies the patch settings."
        }
      },
      "description": "Specifies the linux configuration for update management."
    },
    "OsProfileWindowsConfiguration": {
      "type": "object",
      "properties": {
        "patchSettings": {
          "oneOf": [
            {
              "$ref": "#/definitions/PatchSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Specifies the patch settings."
        }
      },
      "description": "Specifies the windows configuration for update management."
    },
    "PatchSettings": {
      "type": "object",
      "properties": {
        "assessmentMode": {
          "type": "string",
          "description": "Specifies the assessment mode."
        },
        "patchMode": {
          "type": "string",
          "description": "Specifies the patch mode."
        }
      },
      "description": "Specifies the patch settings."
    },
    "PlacementProfile": {
      "type": "object",
      "properties": {
        "clusterId": {
          "type": "string",
          "description": "Gets or sets the ARM Id of the cluster resource on which this virtual machine will deploy."
        },
        "datastoreId": {
          "type": "string",
          "description": "Gets or sets the ARM Id of the datastore resource on which the data for the virtual machine will be kept."
        },
        "hostId": {
          "type": "string",
          "description": "Gets or sets the ARM Id of the host resource on which this virtual machine will deploy."
        },
        "resourcePoolId": {
          "type": "string",
          "description": "Gets or sets the ARM Id of the resourcePool resource on which this virtual machine will deploy."
        }
      },
      "description": "Specifies the compute and storage placement settings for the virtual machine."
    },
    "ResourcePoolInventoryItem": {
      "type": "object",
      "properties": {
        "inventoryType": {
          "type": "string",
          "enum": [
            "ResourcePool"
          ]
        },
        "parent": {
          "oneOf": [
            {
              "$ref": "#/definitions/InventoryItemDetails"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Describes the properties of an Inventory Item reference."
        }
      },
      "required": [
        "inventoryType"
      ],
      "description": "The resource pool inventory item."
    },
    "ResourcePoolProperties": {
      "type": "object",
      "properties": {
        "inventoryItemId": {
          "type": "string",
          "description": "Gets or sets the inventory Item ID for the resource pool."
        },
        "moRefId": {
          "type": "string",
          "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID for the resource pool."
        },
        "vCenterId": {
          "type": "string",
          "description": "Gets or sets the ARM Id of the vCenter resource in which this resource pool resides."
        }
      },
      "description": "Describes the properties of a Resource Pool."
    },
    "SecurityProfile": {
      "type": "object",
      "properties": {
        "uefiSettings": {
          "oneOf": [
            {
              "$ref": "#/definitions/UefiSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Specifies the security settings like secure boot used while creating the virtual machine."
        }
      },
      "description": "Specifies the Security profile settings for the virtual machine."
    },
    "StorageProfile": {
      "type": "object",
      "properties": {
        "disks": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/VirtualDisk"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Gets or sets the list of virtual disks associated with the virtual machine."
        }
      },
      "description": "Specifies the storage settings for the virtual machine disks."
    },
    "SystemData": {
      "type": "object",
      "properties": {
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource creation (UTC)."
        },
        "createdBy": {
          "type": "string",
          "description": "The identity that created the resource."
        },
        "createdByType": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The type of identity that created the resource."
        },
        "lastModifiedAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp of resource last modification (UTC)"
        },
        "lastModifiedBy": {
          "type": "string",
          "description": "The identity that last modified the resource."
        },
        "lastModifiedByType": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The type of identity that last modified the resource."
        }
      },
      "description": "Metadata pertaining to creation and last modification of the resource."
    },
    "UefiSettings": {
      "type": "object",
      "properties": {
        "secureBootEnabled": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Specifies whether secure boot should be enabled on the virtual machine."
        }
      },
      "description": "Specifies the security settings like secure boot used while creating the virtual machine."
    },
    "VCenterProperties": {
      "type": "object",
      "properties": {
        "credentials": {
          "oneOf": [
            {
              "$ref": "#/definitions/VICredential"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Username / Password Credentials to connect to vcenter."
        },
        "fqdn": {
          "type": "string",
          "description": "Gets or sets the FQDN/IPAddress of the vCenter."
        },
        "port": {
          "oneOf": [
            {
              "type": "integer",
              "minimum": 1,
              "maximum": 65535
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Gets or sets the port of the vCenter."
        }
      },
      "required": [
        "fqdn"
      ],
      "description": "Describes the properties of a VCenter."
    },
    "vcenters_inventoryItems_childResource": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2022-07-15-preview"
          ]
        },
        "kind": {
          "type": "string",
          "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value."
        },
        "name": {
          "type": "string",
          "description": "Name of the inventoryItem."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/InventoryItemProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Describes the properties of an Inventory Item."
        },
        "systemData": {
          "oneOf": [
            {
              "$ref": "#/definitions/SystemData"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Metadata pertaining to creation and last modification of the resource."
        },
        "type": {
          "type": "string",
          "enum": [
            "inventoryItems"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.ConnectedVMwarevSphere/vcenters/inventoryItems"
    },
    "VICredential": {
      "type": "object",
      "properties": {
        "password": {
          "type": "string",
          "description": "Gets or sets the password to connect with the vCenter."
        },
        "username": {
          "type": "string",
          "description": "Gets or sets username to connect with the vCenter."
        }
      },
      "description": "Username / Password Credentials to connect to vcenter."
    },
    "VirtualDisk": {
      "type": "object",
      "properties": {
        "controllerKey": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Gets or sets the controller id."
        },
        "deviceKey": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Gets or sets the device key value."
        },
        "deviceName": {
          "type": "string",
          "description": "Gets or sets the device name."
        },
        "diskMode": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "persistent",
                "independent_persistent",
                "independent_nonpersistent"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Gets or sets the disk mode."
        },
        "diskSizeGB": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Gets or sets the disk total size."
        },
        "diskType": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "flat",
                "pmem",
                "rawphysical",
                "rawvirtual",
                "sparse",
                "sesparse",
                "unknown"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Gets or sets the disk backing type."
        },
        "name": {
          "type": "string",
          "description": "Gets or sets the name of the virtual disk."
        },
        "unitNumber": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Gets or sets the unit number of the disk on the controller."
        }
      },
      "description": "Virtual disk model"
    },
    "VirtualMachineInventoryItem": {
      "type": "object",
      "properties": {
        "cluster": {
          "oneOf": [
            {
              "$ref": "#/definitions/InventoryItemDetails"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Describes the properties of an Inventory Item reference."
        },
        "folderPath": {
          "type": "string",
          "description": "Gets or sets the folder path of the vm."
        },
        "host": {
          "oneOf": [
            {
              "$ref": "#/definitions/InventoryItemDetails"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Describes the properties of an Inventory Item reference."
        },
        "instanceUuid": {
          "type": "string",
          "description": "Gets or sets the instance uuid of the vm."
        },
        "inventoryType": {
          "type": "string",
          "enum": [
            "VirtualMachine"
          ]
        },
        "ipAddresses": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Gets or sets the nic ip addresses."
        },
        "osName": {
          "type": "string",
          "description": "Gets or sets os name."
        },
        "osType": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Windows",
                "Linux",
                "Other"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Gets or sets the type of the os."
        },
        "resourcePool": {
          "oneOf": [
            {
              "$ref": "#/definitions/InventoryItemDetails"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Describes the properties of an Inventory Item reference."
        },
        "smbiosUuid": {
          "type": "string",
          "description": "Gets or sets the SMBIOS UUID of the vm."
        }
      },
      "required": [
        "inventoryType"
      ],
      "description": "The VM inventory item."
    },
    "VirtualMachineProperties": {
      "type": "object",
      "properties": {
        "firmwareType": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "bios",
                "efi"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Firmware type."
        },
        "guestAgentProfile": {
          "oneOf": [
            {
              "$ref": "#/definitions/GuestAgentProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Specifies the guest agent settings for the virtual machine."
        },
        "hardwareProfile": {
          "oneOf": [
            {
              "$ref": "#/definitions/HardwareProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Specifies the hardware settings for the virtual machine."
        },
        "inventoryItemId": {
          "type": "string",
          "description": "Gets or sets the inventory Item ID for the virtual machine."
        },
        "moRefId": {
          "type": "string",
          "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID for the virtual machine."
        },
        "networkProfile": {
          "oneOf": [
            {
              "$ref": "#/definitions/NetworkProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Specifies the network interfaces of the virtual machine."
        },
        "osProfile": {
          "oneOf": [
            {
              "$ref": "#/definitions/OsProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Specifies the operating system settings for the virtual machine."
        },
        "placementProfile": {
          "oneOf": [
            {
              "$ref": "#/definitions/PlacementProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Specifies the compute and storage placement settings for the virtual machine."
        },
        "resourcePoolId": {
          "type": "string",
          "description": "Gets or sets the ARM Id of the resourcePool resource on which this virtual machine will\r\ndeploy."
        },
        "securityProfile": {
          "oneOf": [
            {
              "$ref": "#/definitions/SecurityProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Specifies the Security profile settings for the virtual machine."
        },
        "smbiosUuid": {
          "type": "string",
          "description": "Gets or sets the SMBIOS UUID of the vm."
        },
        "storageProfile": {
          "oneOf": [
            {
              "$ref": "#/definitions/StorageProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Specifies the storage settings for the virtual machine disks."
        },
        "templateId": {
          "type": "string",
          "description": "Gets or sets the ARM Id of the template resource to deploy the virtual machine."
        },
        "vCenterId": {
          "type": "string",
          "description": "Gets or sets the ARM Id of the vCenter resource in which this resource pool resides."
        }
      },
      "description": "Describes the properties of a Virtual Machine."
    },
    "virtualMachines_extensions_childResource": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2022-07-15-preview"
          ]
        },
        "location": {
          "type": "string",
          "description": "Gets or sets the location."
        },
        "name": {
          "type": "string",
          "description": "The name of the machine extension."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/MachineExtensionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Describes the properties of a Machine Extension."
        },
        "systemData": {
          "oneOf": [
            {
              "$ref": "#/definitions/SystemData"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Metadata pertaining to creation and last modification of the resource."
        },
        "tags": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Gets or sets the Resource tags."
        },
        "type": {
          "type": "string",
          "enum": [
            "extensions"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.ConnectedVMwarevSphere/virtualMachines/extensions"
    },
    "virtualMachines_guestAgents_childResource": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2022-07-15-preview"
          ]
        },
        "name": {
          "type": "string",
          "description": "Name of the guestAgents."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/GuestAgentProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Describes the properties of a Virtual Machine Guest Agent."
        },
        "systemData": {
          "oneOf": [
            {
              "$ref": "#/definitions/SystemData"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Metadata pertaining to creation and last modification of the resource."
        },
        "type": {
          "type": "string",
          "enum": [
            "guestAgents"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.ConnectedVMwarevSphere/virtualMachines/guestAgents"
    },
    "virtualMachines_hybridIdentityMetadata_childResource": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2022-07-15-preview"
          ]
        },
        "name": {
          "type": "string",
          "description": "Name of the hybridIdentityMetadata."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/HybridIdentityMetadataProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Describes the properties of Hybrid Identity Metadata for a Virtual Machine."
        },
        "systemData": {
          "oneOf": [
            {
              "$ref": "#/definitions/SystemData"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Metadata pertaining to creation and last modification of the resource."
        },
        "type": {
          "type": "string",
          "enum": [
            "hybridIdentityMetadata"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.ConnectedVMwarevSphere/virtualMachines/hybridIdentityMetadata"
    },
    "VirtualMachineTemplateInventoryItem": {
      "type": "object",
      "properties": {
        "folderPath": {
          "type": "string",
          "description": "Gets or sets the folder path of the template."
        },
        "inventoryType": {
          "type": "string",
          "enum": [
            "VirtualMachineTemplate"
          ]
        },
        "memorySizeMB": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Gets or sets memory size in MBs for the template."
        },
        "numCoresPerSocket": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Gets or sets the number of cores per socket for the template.\r\nDefaults to 1 if unspecified."
        },
        "numCPUs": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Gets or sets the number of vCPUs for the template."
        },
        "osName": {
          "type": "string",
          "description": "Gets or sets os name."
        },
        "osType": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Windows",
                "Linux",
                "Other"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Gets or sets the type of the os."
        }
      },
      "required": [
        "inventoryType"
      ],
      "description": "The VM Template inventory item."
    },
    "VirtualMachineTemplateProperties": {
      "type": "object",
      "properties": {
        "inventoryItemId": {
          "type": "string",
          "description": "Gets or sets the inventory Item ID for the virtual machine template."
        },
        "moRefId": {
          "type": "string",
          "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID for the virtual machine\r\ntemplate."
        },
        "vCenterId": {
          "type": "string",
          "description": "Gets or sets the ARM Id of the vCenter resource in which this template resides."
        }
      },
      "description": "Describes the properties of a Virtual Machine Template."
    },
    "VirtualNetworkInventoryItem": {
      "type": "object",
      "properties": {
        "inventoryType": {
          "type": "string",
          "enum": [
            "VirtualNetwork"
          ]
        }
      },
      "required": [
        "inventoryType"
      ],
      "description": "The Virtual network inventory item."
    },
    "VirtualNetworkProperties": {
      "type": "object",
      "properties": {
        "inventoryItemId": {
          "type": "string",
          "description": "Gets or sets the inventory Item ID for the virtual network."
        },
        "moRefId": {
          "type": "string",
          "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID for the virtual network."
        },
        "vCenterId": {
          "type": "string",
          "description": "Gets or sets the ARM Id of the vCenter resource in which this template resides."
        }
      },
      "description": "Describes the properties of a Virtual Network."
    }
  }
}