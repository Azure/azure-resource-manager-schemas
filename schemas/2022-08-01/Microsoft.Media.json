{
  "id": "https://schema.management.azure.com/schemas/2022-08-01/Microsoft.Media.json#",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "title": "Microsoft.Media",
  "description": "Microsoft Media Resource Types",
  "resourceDefinitions": {
    "mediaServices_accountFilters": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2022-08-01"
          ]
        },
        "name": {
          "type": "string",
          "description": "The Account Filter name"
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/MediaFilterProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The Media Filter properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Media/mediaServices/accountFilters"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.Media/mediaServices/accountFilters"
    },
    "mediaServices_assets": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2022-08-01"
          ]
        },
        "name": {
          "type": "string",
          "description": "The Asset name."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/AssetProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The Asset properties."
        },
        "resources": {
          "type": "array",
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/mediaServices_assets_assetFilters_childResource"
              },
              {
                "$ref": "#/definitions/mediaServices_assets_tracks_childResource"
              }
            ]
          }
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Media/mediaServices/assets"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.Media/mediaServices/assets"
    },
    "mediaServices_assets_assetFilters": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2022-08-01"
          ]
        },
        "name": {
          "type": "string",
          "description": "The Asset Filter name"
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/MediaFilterProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The Media Filter properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Media/mediaServices/assets/assetFilters"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.Media/mediaServices/assets/assetFilters"
    },
    "mediaServices_assets_tracks": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2022-08-01"
          ]
        },
        "name": {
          "type": "string",
          "description": "The Asset Track name."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/AssetTrackProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Properties of a video, audio or text track in the asset."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Media/mediaServices/assets/tracks"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.Media/mediaServices/assets/tracks"
    },
    "mediaServices_contentKeyPolicies": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2022-08-01"
          ]
        },
        "name": {
          "type": "string",
          "description": "The Content Key Policy name."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/ContentKeyPolicyProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The properties of the Content Key Policy."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Media/mediaServices/contentKeyPolicies"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.Media/mediaServices/contentKeyPolicies"
    },
    "mediaservices_liveEvents": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2022-08-01"
          ]
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives"
        },
        "name": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^[a-zA-Z0-9]+(-*[a-zA-Z0-9])*$",
              "minLength": 1,
              "maxLength": 32
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The name of the live event, maximum length is 32."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/LiveEventProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The live event properties."
        },
        "resources": {
          "type": "array",
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/mediaservices_liveEvents_liveOutputs_childResource"
              }
            ]
          }
        },
        "tags": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Resource tags."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Media/mediaservices/liveEvents"
          ]
        }
      },
      "required": [
        "apiVersion",
        "location",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.Media/mediaservices/liveEvents"
    },
    "mediaservices_liveEvents_liveOutputs": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2022-08-01"
          ]
        },
        "name": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^([a-zA-Z0-9])+(-*[a-zA-Z0-9])*$",
              "minLength": 1,
              "maxLength": 256
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The name of the live output."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/LiveOutputProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The JSON object that contains the properties required to create a live output."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Media/mediaservices/liveEvents/liveOutputs"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.Media/mediaservices/liveEvents/liveOutputs"
    },
    "mediaservices_streamingEndpoints": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2022-08-01"
          ]
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives"
        },
        "name": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^[a-zA-Z0-9]+(-*[a-zA-Z0-9])*$",
              "minLength": 1,
              "maxLength": 24
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The name of the streaming endpoint, maximum length is 24."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/StreamingEndpointProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The streaming endpoint properties."
        },
        "sku": {
          "oneOf": [
            {
              "$ref": "#/definitions/ArmStreamingEndpointCurrentSku"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The streaming endpoint current sku."
        },
        "tags": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Resource tags."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Media/mediaservices/streamingEndpoints"
          ]
        }
      },
      "required": [
        "apiVersion",
        "location",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.Media/mediaservices/streamingEndpoints"
    },
    "mediaServices_streamingLocators": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2022-08-01"
          ]
        },
        "name": {
          "type": "string",
          "description": "The Streaming Locator name."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/StreamingLocatorProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Properties of the Streaming Locator."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Media/mediaServices/streamingLocators"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.Media/mediaServices/streamingLocators"
    },
    "mediaServices_streamingPolicies": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2022-08-01"
          ]
        },
        "name": {
          "type": "string",
          "description": "The Streaming Policy name."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/StreamingPolicyProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Class to specify properties of Streaming Policy"
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Media/mediaServices/streamingPolicies"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.Media/mediaServices/streamingPolicies"
    }
  },
  "definitions": {
    "AkamaiAccessControl": {
      "type": "object",
      "properties": {
        "akamaiSignatureHeaderAuthenticationKeyList": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AkamaiSignatureHeaderAuthenticationKey"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "authentication key list"
        }
      },
      "description": "Akamai access control"
    },
    "AkamaiSignatureHeaderAuthenticationKey": {
      "type": "object",
      "properties": {
        "base64Key": {
          "type": "string",
          "description": "authentication key"
        },
        "expiration": {
          "type": "string",
          "format": "date-time",
          "description": "The expiration time of the authentication key."
        },
        "identifier": {
          "type": "string",
          "description": "identifier of the key"
        }
      },
      "description": "Akamai Signature Header authentication key."
    },
    "ArmStreamingEndpointCurrentSku": {
      "type": "object",
      "properties": {
        "capacity": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The streaming endpoint sku capacity."
        }
      },
      "description": "The streaming endpoint current sku."
    },
    "AssetProperties": {
      "type": "object",
      "properties": {
        "alternateId": {
          "type": "string",
          "description": "The alternate ID of the Asset."
        },
        "container": {
          "type": "string",
          "description": "The name of the asset blob container."
        },
        "description": {
          "type": "string",
          "description": "The Asset description."
        },
        "storageAccountName": {
          "type": "string",
          "description": "The name of the storage account."
        }
      },
      "description": "The Asset properties."
    },
    "AssetTrackProperties": {
      "type": "object",
      "properties": {
        "track": {
          "oneOf": [
            {
              "$ref": "#/definitions/TrackBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Base type for concrete track types. A derived type must be used to represent the Track."
        }
      },
      "description": "Properties of a video, audio or text track in the asset."
    },
    "AudioTrack": {
      "type": "object",
      "properties": {
        "@odata.type": {
          "type": "string",
          "enum": [
            "#Microsoft.Media.AudioTrack"
          ]
        },
        "dashSettings": {
          "oneOf": [
            {
              "$ref": "#/definitions/DashSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The DASH setting for a track."
        },
        "displayName": {
          "type": "string",
          "description": "The display name of the audio track on a video player. In HLS, this maps to the NAME attribute of EXT-X-MEDIA."
        },
        "fileName": {
          "type": "string",
          "description": "The file name to the source file. This file is located in the storage container of the asset."
        },
        "hlsSettings": {
          "oneOf": [
            {
              "$ref": "#/definitions/HlsSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The HLS setting for a track."
        },
        "languageCode": {
          "type": "string",
          "description": "The RFC5646 language code for the audio track."
        },
        "mpeg4TrackId": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The MPEG-4 audio track ID for the audio track."
        }
      },
      "required": [
        "@odata.type"
      ],
      "description": "Represents an audio track in the asset."
    },
    "CbcsDrmConfiguration": {
      "type": "object",
      "properties": {
        "fairPlay": {
          "oneOf": [
            {
              "$ref": "#/definitions/StreamingPolicyFairPlayConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Class to specify configurations of FairPlay in Streaming Policy"
        },
        "playReady": {
          "oneOf": [
            {
              "$ref": "#/definitions/StreamingPolicyPlayReadyConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Class to specify configurations of PlayReady in Streaming Policy"
        },
        "widevine": {
          "oneOf": [
            {
              "$ref": "#/definitions/StreamingPolicyWidevineConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Class to specify configurations of Widevine in Streaming Policy"
        }
      },
      "description": "Class to specify DRM configurations of CommonEncryptionCbcs scheme in Streaming Policy"
    },
    "CencDrmConfiguration": {
      "type": "object",
      "properties": {
        "playReady": {
          "oneOf": [
            {
              "$ref": "#/definitions/StreamingPolicyPlayReadyConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Class to specify configurations of PlayReady in Streaming Policy"
        },
        "widevine": {
          "oneOf": [
            {
              "$ref": "#/definitions/StreamingPolicyWidevineConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Class to specify configurations of Widevine in Streaming Policy"
        }
      },
      "description": "Class to specify DRM configurations of CommonEncryptionCenc scheme in Streaming Policy"
    },
    "ClearKeyEncryptionConfiguration": {
      "type": "object",
      "properties": {
        "customKeysAcquisitionUrlTemplate": {
          "type": "string",
          "description": "Template for the URL of the custom service delivering content keys to end user players. Not required when using Azure Media Services for issuing licenses. The template supports replaceable tokens that the service will update at runtime with the value specific to the request.  The currently supported token value is {AlternativeMediaId}, which is replaced with the value of StreamingLocatorId.AlternativeMediaId."
        }
      },
      "description": "Class to specify ClearKey configuration of common encryption schemes in Streaming Policy"
    },
    "CommonEncryptionCbcs": {
      "type": "object",
      "properties": {
        "clearKeyEncryptionConfiguration": {
          "oneOf": [
            {
              "$ref": "#/definitions/ClearKeyEncryptionConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Class to specify ClearKey configuration of common encryption schemes in Streaming Policy"
        },
        "clearTracks": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TrackSelection"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Representing which tracks should not be encrypted"
        },
        "contentKeys": {
          "oneOf": [
            {
              "$ref": "#/definitions/StreamingPolicyContentKeys"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Class to specify properties of all content keys in Streaming Policy"
        },
        "drm": {
          "oneOf": [
            {
              "$ref": "#/definitions/CbcsDrmConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Class to specify DRM configurations of CommonEncryptionCbcs scheme in Streaming Policy"
        },
        "enabledProtocols": {
          "oneOf": [
            {
              "$ref": "#/definitions/EnabledProtocols"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Class to specify which protocols are enabled"
        }
      },
      "description": "Class for CommonEncryptionCbcs encryption scheme"
    },
    "CommonEncryptionCenc": {
      "type": "object",
      "properties": {
        "clearKeyEncryptionConfiguration": {
          "oneOf": [
            {
              "$ref": "#/definitions/ClearKeyEncryptionConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Class to specify ClearKey configuration of common encryption schemes in Streaming Policy"
        },
        "clearTracks": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TrackSelection"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Representing which tracks should not be encrypted"
        },
        "contentKeys": {
          "oneOf": [
            {
              "$ref": "#/definitions/StreamingPolicyContentKeys"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Class to specify properties of all content keys in Streaming Policy"
        },
        "drm": {
          "oneOf": [
            {
              "$ref": "#/definitions/CencDrmConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Class to specify DRM configurations of CommonEncryptionCenc scheme in Streaming Policy"
        },
        "enabledProtocols": {
          "oneOf": [
            {
              "$ref": "#/definitions/EnabledProtocols"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Class to specify which protocols are enabled"
        }
      },
      "description": "Class for envelope encryption scheme"
    },
    "ContentKeyPolicyClearKeyConfiguration": {
      "type": "object",
      "properties": {
        "@odata.type": {
          "type": "string",
          "enum": [
            "#Microsoft.Media.ContentKeyPolicyClearKeyConfiguration"
          ]
        }
      },
      "required": [
        "@odata.type"
      ],
      "description": "Represents a configuration for non-DRM keys."
    },
    "ContentKeyPolicyConfiguration": {
      "type": "object",
      "oneOf": [
        {
          "$ref": "#/definitions/ContentKeyPolicyClearKeyConfiguration"
        },
        {
          "$ref": "#/definitions/ContentKeyPolicyUnknownConfiguration"
        },
        {
          "$ref": "#/definitions/ContentKeyPolicyWidevineConfiguration"
        },
        {
          "$ref": "#/definitions/ContentKeyPolicyPlayReadyConfiguration"
        },
        {
          "$ref": "#/definitions/ContentKeyPolicyFairPlayConfiguration"
        }
      ],
      "properties": {},
      "description": "Base class for Content Key Policy configuration. A derived class must be used to create a configuration."
    },
    "ContentKeyPolicyFairPlayConfiguration": {
      "type": "object",
      "properties": {
        "@odata.type": {
          "type": "string",
          "enum": [
            "#Microsoft.Media.ContentKeyPolicyFairPlayConfiguration"
          ]
        },
        "ask": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^(?:[A-Za-z0-9+\\/]{4})*(?:[A-Za-z0-9+\\/]{2}==|[A-Za-z0-9+\\/]{3}=)?$"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The key that must be used as FairPlay Application Secret key. This needs to be base64 encoded."
        },
        "fairPlayPfx": {
          "type": "string",
          "description": "The Base64 representation of FairPlay certificate in PKCS 12 (pfx) format (including private key)."
        },
        "fairPlayPfxPassword": {
          "type": "string",
          "description": "The password encrypting FairPlay certificate in PKCS 12 (pfx) format."
        },
        "offlineRentalConfiguration": {
          "oneOf": [
            {
              "$ref": "#/definitions/ContentKeyPolicyFairPlayOfflineRentalConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "rentalAndLeaseKeyType": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Unknown",
                "Undefined",
                "DualExpiry",
                "PersistentUnlimited",
                "PersistentLimited"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The rental and lease key type."
        },
        "rentalDuration": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The rental duration. Must be greater than or equal to 0."
        }
      },
      "required": [
        "@odata.type",
        "ask",
        "fairPlayPfx",
        "fairPlayPfxPassword",
        "rentalAndLeaseKeyType",
        "rentalDuration"
      ],
      "description": "Specifies a configuration for FairPlay licenses."
    },
    "ContentKeyPolicyFairPlayOfflineRentalConfiguration": {
      "type": "object",
      "properties": {
        "playbackDurationSeconds": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Playback duration"
        },
        "storageDurationSeconds": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Storage duration"
        }
      },
      "required": [
        "playbackDurationSeconds",
        "storageDurationSeconds"
      ]
    },
    "ContentKeyPolicyOpenRestriction": {
      "type": "object",
      "properties": {
        "@odata.type": {
          "type": "string",
          "enum": [
            "#Microsoft.Media.ContentKeyPolicyOpenRestriction"
          ]
        }
      },
      "required": [
        "@odata.type"
      ],
      "description": "Represents an open restriction. License or key will be delivered on every request."
    },
    "ContentKeyPolicyOption": {
      "type": "object",
      "properties": {
        "configuration": {
          "oneOf": [
            {
              "$ref": "#/definitions/ContentKeyPolicyConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Base class for Content Key Policy configuration. A derived class must be used to create a configuration."
        },
        "name": {
          "type": "string",
          "description": "The Policy Option description."
        },
        "restriction": {
          "oneOf": [
            {
              "$ref": "#/definitions/ContentKeyPolicyRestriction"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Base class for Content Key Policy restrictions. A derived class must be used to create a restriction."
        }
      },
      "required": [
        "configuration",
        "restriction"
      ],
      "description": "Represents a policy option."
    },
    "ContentKeyPolicyPlayReadyConfiguration": {
      "type": "object",
      "properties": {
        "@odata.type": {
          "type": "string",
          "enum": [
            "#Microsoft.Media.ContentKeyPolicyPlayReadyConfiguration"
          ]
        },
        "licenses": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ContentKeyPolicyPlayReadyLicense"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The PlayReady licenses."
        },
        "responseCustomData": {
          "type": "string",
          "description": "The custom response data."
        }
      },
      "required": [
        "@odata.type",
        "licenses"
      ],
      "description": "Specifies a configuration for PlayReady licenses."
    },
    "ContentKeyPolicyPlayReadyContentEncryptionKeyFromHeader": {
      "type": "object",
      "properties": {
        "@odata.type": {
          "type": "string",
          "enum": [
            "#Microsoft.Media.ContentKeyPolicyPlayReadyContentEncryptionKeyFromHeader"
          ]
        }
      },
      "required": [
        "@odata.type"
      ],
      "description": "Specifies that the content key ID is in the PlayReady header."
    },
    "ContentKeyPolicyPlayReadyContentEncryptionKeyFromKeyIdentifier": {
      "type": "object",
      "properties": {
        "@odata.type": {
          "type": "string",
          "enum": [
            "#Microsoft.Media.ContentKeyPolicyPlayReadyContentEncryptionKeyFromKeyIdentifier"
          ]
        },
        "keyId": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^[0-9a-fA-F]{8}(-[0-9a-fA-F]{4}){3}-[0-9a-fA-F]{12}$"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The content key ID."
        }
      },
      "required": [
        "@odata.type",
        "keyId"
      ],
      "description": "Specifies that the content key ID is specified in the PlayReady configuration."
    },
    "ContentKeyPolicyPlayReadyContentKeyLocation": {
      "type": "object",
      "oneOf": [
        {
          "$ref": "#/definitions/ContentKeyPolicyPlayReadyContentEncryptionKeyFromHeader"
        },
        {
          "$ref": "#/definitions/ContentKeyPolicyPlayReadyContentEncryptionKeyFromKeyIdentifier"
        }
      ],
      "properties": {},
      "description": "Base class for content key ID location. A derived class must be used to represent the location."
    },
    "ContentKeyPolicyPlayReadyExplicitAnalogTelevisionRestriction": {
      "type": "object",
      "properties": {
        "bestEffort": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Indicates whether this restriction is enforced on a Best Effort basis."
        },
        "configurationData": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Configures the restriction control bits. Must be between 0 and 3 inclusive."
        }
      },
      "required": [
        "bestEffort",
        "configurationData"
      ],
      "description": "Configures the Explicit Analog Television Output Restriction control bits. For further details see the PlayReady Compliance Rules."
    },
    "ContentKeyPolicyPlayReadyLicense": {
      "type": "object",
      "properties": {
        "allowTestDevices": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "A flag indicating whether test devices can use the license."
        },
        "beginDate": {
          "type": "string",
          "format": "date-time",
          "description": "The begin date of license"
        },
        "contentKeyLocation": {
          "oneOf": [
            {
              "$ref": "#/definitions/ContentKeyPolicyPlayReadyContentKeyLocation"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Base class for content key ID location. A derived class must be used to represent the location."
        },
        "contentType": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Unknown",
                "Unspecified",
                "UltraVioletDownload",
                "UltraVioletStreaming"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The PlayReady content type."
        },
        "expirationDate": {
          "type": "string",
          "format": "date-time",
          "description": "The expiration date of license."
        },
        "gracePeriod": {
          "type": "string",
          "format": "duration",
          "description": "The grace period of license."
        },
        "licenseType": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Unknown",
                "NonPersistent",
                "Persistent"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The license type."
        },
        "playRight": {
          "oneOf": [
            {
              "$ref": "#/definitions/ContentKeyPolicyPlayReadyPlayRight"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Configures the Play Right in the PlayReady license."
        },
        "relativeBeginDate": {
          "type": "string",
          "format": "duration",
          "description": "The relative begin date of license."
        },
        "relativeExpirationDate": {
          "type": "string",
          "format": "duration",
          "description": "The relative expiration date of license."
        },
        "securityLevel": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Unknown",
                "SL150",
                "SL2000",
                "SL3000"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The security level."
        }
      },
      "required": [
        "allowTestDevices",
        "contentKeyLocation",
        "contentType",
        "licenseType"
      ],
      "description": "The PlayReady license"
    },
    "ContentKeyPolicyPlayReadyPlayRight": {
      "type": "object",
      "properties": {
        "agcAndColorStripeRestriction": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Configures Automatic Gain Control (AGC) and Color Stripe in the license. Must be between 0 and 3 inclusive."
        },
        "allowPassingVideoContentToUnknownOutput": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Unknown",
                "NotAllowed",
                "Allowed",
                "AllowedWithVideoConstriction"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Configures Unknown output handling settings of the license."
        },
        "analogVideoOpl": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Specifies the output protection level for compressed digital audio."
        },
        "compressedDigitalAudioOpl": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Specifies the output protection level for compressed digital audio."
        },
        "compressedDigitalVideoOpl": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Specifies the output protection level for compressed digital video."
        },
        "digitalVideoOnlyContentRestriction": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Enables the Image Constraint For Analog Component Video Restriction in the license."
        },
        "explicitAnalogTelevisionOutputRestriction": {
          "oneOf": [
            {
              "$ref": "#/definitions/ContentKeyPolicyPlayReadyExplicitAnalogTelevisionRestriction"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Configures the Explicit Analog Television Output Restriction control bits. For further details see the PlayReady Compliance Rules."
        },
        "firstPlayExpiration": {
          "type": "string",
          "format": "duration",
          "description": "The amount of time that the license is valid after the license is first used to play content."
        },
        "imageConstraintForAnalogComponentVideoRestriction": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Enables the Image Constraint For Analog Component Video Restriction in the license."
        },
        "imageConstraintForAnalogComputerMonitorRestriction": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Enables the Image Constraint For Analog Component Video Restriction in the license."
        },
        "scmsRestriction": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Configures the Serial Copy Management System (SCMS) in the license. Must be between 0 and 3 inclusive."
        },
        "uncompressedDigitalAudioOpl": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Specifies the output protection level for uncompressed digital audio."
        },
        "uncompressedDigitalVideoOpl": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Specifies the output protection level for uncompressed digital video."
        }
      },
      "required": [
        "allowPassingVideoContentToUnknownOutput",
        "digitalVideoOnlyContentRestriction",
        "imageConstraintForAnalogComponentVideoRestriction",
        "imageConstraintForAnalogComputerMonitorRestriction"
      ],
      "description": "Configures the Play Right in the PlayReady license."
    },
    "ContentKeyPolicyProperties": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "A description for the Policy."
        },
        "options": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ContentKeyPolicyOption"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The Key Policy options."
        }
      },
      "required": [
        "options"
      ],
      "description": "The properties of the Content Key Policy."
    },
    "ContentKeyPolicyRestriction": {
      "type": "object",
      "oneOf": [
        {
          "$ref": "#/definitions/ContentKeyPolicyOpenRestriction"
        },
        {
          "$ref": "#/definitions/ContentKeyPolicyUnknownRestriction"
        },
        {
          "$ref": "#/definitions/ContentKeyPolicyTokenRestriction"
        }
      ],
      "properties": {},
      "description": "Base class for Content Key Policy restrictions. A derived class must be used to create a restriction."
    },
    "ContentKeyPolicyRestrictionTokenKey": {
      "type": "object",
      "oneOf": [
        {
          "$ref": "#/definitions/ContentKeyPolicySymmetricTokenKey"
        },
        {
          "$ref": "#/definitions/ContentKeyPolicyRsaTokenKey"
        },
        {
          "$ref": "#/definitions/ContentKeyPolicyX509CertificateTokenKey"
        }
      ],
      "properties": {},
      "description": "Base class for Content Key Policy key for token validation. A derived class must be used to create a token key."
    },
    "ContentKeyPolicyRsaTokenKey": {
      "type": "object",
      "properties": {
        "@odata.type": {
          "type": "string",
          "enum": [
            "#Microsoft.Media.ContentKeyPolicyRsaTokenKey"
          ]
        },
        "exponent": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^(?:[A-Za-z0-9+\\/]{4})*(?:[A-Za-z0-9+\\/]{2}==|[A-Za-z0-9+\\/]{3}=)?$"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The RSA Parameter exponent"
        },
        "modulus": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^(?:[A-Za-z0-9+\\/]{4})*(?:[A-Za-z0-9+\\/]{2}==|[A-Za-z0-9+\\/]{3}=)?$"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The RSA Parameter modulus"
        }
      },
      "required": [
        "@odata.type",
        "exponent",
        "modulus"
      ],
      "description": "Specifies a RSA key for token validation"
    },
    "ContentKeyPolicySymmetricTokenKey": {
      "type": "object",
      "properties": {
        "@odata.type": {
          "type": "string",
          "enum": [
            "#Microsoft.Media.ContentKeyPolicySymmetricTokenKey"
          ]
        },
        "keyValue": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^(?:[A-Za-z0-9+\\/]{4})*(?:[A-Za-z0-9+\\/]{2}==|[A-Za-z0-9+\\/]{3}=)?$"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The key value of the key"
        }
      },
      "required": [
        "@odata.type",
        "keyValue"
      ],
      "description": "Specifies a symmetric key for token validation."
    },
    "ContentKeyPolicyTokenClaim": {
      "type": "object",
      "properties": {
        "claimType": {
          "type": "string",
          "description": "Token claim type."
        },
        "claimValue": {
          "type": "string",
          "description": "Token claim value."
        }
      },
      "description": "Represents a token claim."
    },
    "ContentKeyPolicyTokenRestriction": {
      "type": "object",
      "properties": {
        "@odata.type": {
          "type": "string",
          "enum": [
            "#Microsoft.Media.ContentKeyPolicyTokenRestriction"
          ]
        },
        "alternateVerificationKeys": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ContentKeyPolicyRestrictionTokenKey"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "A list of alternative verification keys."
        },
        "audience": {
          "type": "string",
          "description": "The audience for the token."
        },
        "issuer": {
          "type": "string",
          "description": "The token issuer."
        },
        "openIdConnectDiscoveryDocument": {
          "type": "string",
          "description": "The OpenID connect discovery document."
        },
        "primaryVerificationKey": {
          "oneOf": [
            {
              "$ref": "#/definitions/ContentKeyPolicyRestrictionTokenKey"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Base class for Content Key Policy key for token validation. A derived class must be used to create a token key."
        },
        "requiredClaims": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ContentKeyPolicyTokenClaim"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "A list of required token claims."
        },
        "restrictionTokenType": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Unknown",
                "Swt",
                "Jwt"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The type of token."
        }
      },
      "required": [
        "@odata.type",
        "audience",
        "issuer",
        "primaryVerificationKey",
        "restrictionTokenType"
      ],
      "description": "Represents a token restriction. Provided token must match these requirements for successful license or key delivery."
    },
    "ContentKeyPolicyUnknownConfiguration": {
      "type": "object",
      "properties": {
        "@odata.type": {
          "type": "string",
          "enum": [
            "#Microsoft.Media.ContentKeyPolicyUnknownConfiguration"
          ]
        }
      },
      "required": [
        "@odata.type"
      ],
      "description": "Represents a ContentKeyPolicyConfiguration that is unavailable in the current API version."
    },
    "ContentKeyPolicyUnknownRestriction": {
      "type": "object",
      "properties": {
        "@odata.type": {
          "type": "string",
          "enum": [
            "#Microsoft.Media.ContentKeyPolicyUnknownRestriction"
          ]
        }
      },
      "required": [
        "@odata.type"
      ],
      "description": "Represents a ContentKeyPolicyRestriction that is unavailable in the current API version."
    },
    "ContentKeyPolicyWidevineConfiguration": {
      "type": "object",
      "properties": {
        "@odata.type": {
          "type": "string",
          "enum": [
            "#Microsoft.Media.ContentKeyPolicyWidevineConfiguration"
          ]
        },
        "widevineTemplate": {
          "type": "string",
          "description": "The Widevine template."
        }
      },
      "required": [
        "@odata.type",
        "widevineTemplate"
      ],
      "description": "Specifies a configuration for Widevine licenses."
    },
    "ContentKeyPolicyX509CertificateTokenKey": {
      "type": "object",
      "properties": {
        "@odata.type": {
          "type": "string",
          "enum": [
            "#Microsoft.Media.ContentKeyPolicyX509CertificateTokenKey"
          ]
        },
        "rawBody": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^(?:[A-Za-z0-9+\\/]{4})*(?:[A-Za-z0-9+\\/]{2}==|[A-Za-z0-9+\\/]{3}=)?$"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The raw data field of a certificate in PKCS 12 format (X509Certificate2 in .NET)"
        }
      },
      "required": [
        "@odata.type",
        "rawBody"
      ],
      "description": "Specifies a certificate for token validation."
    },
    "CrossSiteAccessPolicies": {
      "type": "object",
      "properties": {
        "clientAccessPolicy": {
          "type": "string",
          "description": "The content of clientaccesspolicy.xml used by Silverlight."
        },
        "crossDomainPolicy": {
          "type": "string",
          "description": "The content of crossdomain.xml used by Silverlight."
        }
      },
      "description": "The client access policy."
    },
    "DashSettings": {
      "type": "object",
      "properties": {
        "role": {
          "type": "string",
          "description": "The role for the DASH setting."
        }
      },
      "description": "The DASH setting for a track."
    },
    "DefaultKey": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string",
          "description": "Label can be used to specify Content Key when creating a Streaming Locator"
        },
        "policyName": {
          "type": "string",
          "description": "Policy used by Default Key"
        }
      },
      "description": "Class to specify properties of default content key for each encryption scheme"
    },
    "EnabledProtocols": {
      "type": "object",
      "properties": {
        "dash": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Enable DASH protocol or not"
        },
        "download": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Enable Download protocol or not"
        },
        "hls": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Enable HLS protocol or not"
        },
        "smoothStreaming": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Enable SmoothStreaming protocol or not"
        }
      },
      "required": [
        "dash",
        "download",
        "hls",
        "smoothStreaming"
      ],
      "description": "Class to specify which protocols are enabled"
    },
    "EnvelopeEncryption": {
      "type": "object",
      "properties": {
        "clearTracks": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TrackSelection"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Representing which tracks should not be encrypted"
        },
        "contentKeys": {
          "oneOf": [
            {
              "$ref": "#/definitions/StreamingPolicyContentKeys"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Class to specify properties of all content keys in Streaming Policy"
        },
        "customKeyAcquisitionUrlTemplate": {
          "type": "string",
          "description": "Template for the URL of the custom service delivering keys to end user players.  Not required when using Azure Media Services for issuing keys.  The template supports replaceable tokens that the service will update at runtime with the value specific to the request.  The currently supported token values are {AlternativeMediaId}, which is replaced with the value of StreamingLocatorId.AlternativeMediaId, and {ContentKeyId}, which is replaced with the value of identifier of the key being requested."
        },
        "enabledProtocols": {
          "oneOf": [
            {
              "$ref": "#/definitions/EnabledProtocols"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Class to specify which protocols are enabled"
        }
      },
      "description": "Class for EnvelopeEncryption encryption scheme"
    },
    "FilterTrackPropertyCondition": {
      "type": "object",
      "properties": {
        "operation": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Equal",
                "NotEqual"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The track property condition operation."
        },
        "property": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Unknown",
                "Type",
                "Name",
                "Language",
                "FourCC",
                "Bitrate"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The track property type."
        },
        "value": {
          "type": "string",
          "description": "The track property value."
        }
      },
      "required": [
        "operation",
        "property",
        "value"
      ],
      "description": "The class to specify one track property condition."
    },
    "FilterTrackSelection": {
      "type": "object",
      "properties": {
        "trackSelections": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FilterTrackPropertyCondition"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The track selections."
        }
      },
      "required": [
        "trackSelections"
      ],
      "description": "Representing a list of FilterTrackPropertyConditions to select a track.  The filters are combined using a logical AND operation."
    },
    "FirstQuality": {
      "type": "object",
      "properties": {
        "bitrate": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The first quality bitrate."
        }
      },
      "required": [
        "bitrate"
      ],
      "description": "Filter First Quality"
    },
    "Hls": {
      "type": "object",
      "properties": {
        "fragmentsPerTsSegment": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The number of fragments in an HTTP Live Streaming (HLS) TS segment in the output of the live event. This value does not affect the packing ratio for HLS CMAF output."
        }
      },
      "description": "HTTP Live Streaming (HLS) packing setting for the live output."
    },
    "HlsSettings": {
      "type": "object",
      "properties": {
        "characteristics": {
          "type": "string",
          "description": "The characteristics for the HLS setting."
        },
        "default": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The default for the HLS setting."
        },
        "forced": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The forced for the HLS setting."
        }
      },
      "description": "The HLS setting for a track."
    },
    "IPAccessControl": {
      "type": "object",
      "properties": {
        "allow": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/IPRange"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The IP allow list."
        }
      },
      "description": "The IP access control."
    },
    "IPRange": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string",
          "description": "The IP address."
        },
        "name": {
          "type": "string",
          "description": "The friendly name for the IP address range."
        },
        "subnetPrefixLength": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The subnet mask prefix length (see CIDR notation)."
        }
      },
      "description": "The IP address range in the CIDR scheme."
    },
    "LiveEventEncoding": {
      "type": "object",
      "properties": {
        "encodingType": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "None",
                "Standard",
                "Premium1080p",
                "PassthroughBasic",
                "PassthroughStandard"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Live event type. When encodingType is set to PassthroughBasic or PassthroughStandard, the service simply passes through the incoming video and audio layer(s) to the output. When encodingType is set to Standard or Premium1080p, a live encoder transcodes the incoming stream into multiple bitrates or layers. See https://go.microsoft.com/fwlink/?linkid=2095101 for more information. This property cannot be modified after the live event is created."
        },
        "keyFrameInterval": {
          "type": "string",
          "format": "duration",
          "description": "Use an ISO 8601 time value between 0.5 to 20 seconds to specify the output fragment length for the video and audio tracks of an encoding live event. For example, use PT2S to indicate 2 seconds. For the video track it also defines the key frame interval, or the length of a GoP (group of pictures).   If this value is not set for an encoding live event, the fragment duration defaults to 2 seconds. The value cannot be set for pass-through live events."
        },
        "presetName": {
          "type": "string",
          "description": "The optional encoding preset name, used when encodingType is not None. This value is specified at creation time and cannot be updated. If the encodingType is set to Standard, then the default preset name is ‘Default720p’. Else if the encodingType is set to Premium1080p, the default preset is ‘Default1080p’."
        },
        "stretchMode": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "None",
                "AutoSize",
                "AutoFit"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Specifies how the input video will be resized to fit the desired output resolution(s). Default is None."
        }
      },
      "description": "Specifies the live event type and optional encoding settings for encoding live events."
    },
    "LiveEventEndpoint": {
      "type": "object",
      "properties": {
        "protocol": {
          "type": "string",
          "description": "The endpoint protocol."
        },
        "url": {
          "type": "string",
          "description": "The endpoint URL."
        }
      },
      "description": "The live event endpoint."
    },
    "LiveEventInput": {
      "type": "object",
      "properties": {
        "accessControl": {
          "oneOf": [
            {
              "$ref": "#/definitions/LiveEventInputAccessControl"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The IP access control for live event input."
        },
        "accessToken": {
          "type": "string",
          "description": "A UUID in string form to uniquely identify the stream. This can be specified at creation time but cannot be updated. If omitted, the service will generate a unique value."
        },
        "endpoints": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/LiveEventEndpoint"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The input endpoints for the live event."
        },
        "keyFrameIntervalDuration": {
          "type": "string",
          "description": "ISO 8601 time duration of the key frame interval duration of the input. This value sets the EXT-X-TARGETDURATION property in the HLS output. For example, use PT2S to indicate 2 seconds. Leave the value empty for encoding live events."
        },
        "streamingProtocol": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "FragmentedMP4",
                "RTMP"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The input protocol for the live event. This is specified at creation time and cannot be updated."
        }
      },
      "required": [
        "streamingProtocol"
      ],
      "description": "The live event input."
    },
    "LiveEventInputAccessControl": {
      "type": "object",
      "properties": {
        "ip": {
          "oneOf": [
            {
              "$ref": "#/definitions/IPAccessControl"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The IP access control."
        }
      },
      "description": "The IP access control for live event input."
    },
    "LiveEventInputTrackSelection": {
      "type": "object",
      "properties": {
        "operation": {
          "type": "string",
          "description": "Comparing operation. This property is reserved for future use, any value set on this property will be ignored."
        },
        "property": {
          "type": "string",
          "description": "Property name to select. This property is reserved for future use, any value set on this property will be ignored."
        },
        "value": {
          "type": "string",
          "description": "Property value to select. This property is reserved for future use, any value set on this property will be ignored."
        }
      },
      "description": "A track selection condition. This property is reserved for future use, any value set on this property will be ignored."
    },
    "LiveEventOutputTranscriptionTrack": {
      "type": "object",
      "properties": {
        "trackName": {
          "type": "string",
          "description": "The output track name. This property is reserved for future use, any value set on this property will be ignored."
        }
      },
      "required": [
        "trackName"
      ],
      "description": "Describes a transcription track in the output of a live event, generated using speech-to-text transcription. This property is reserved for future use, any value set on this property will be ignored."
    },
    "LiveEventPreview": {
      "type": "object",
      "properties": {
        "accessControl": {
          "oneOf": [
            {
              "$ref": "#/definitions/LiveEventPreviewAccessControl"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The IP access control for the live event preview endpoint."
        },
        "alternativeMediaId": {
          "type": "string",
          "description": "An alternative media identifier associated with the streaming locator created for the preview. This value is specified at creation time and cannot be updated. The identifier can be used in the CustomLicenseAcquisitionUrlTemplate or the CustomKeyAcquisitionUrlTemplate of the StreamingPolicy specified in the StreamingPolicyName field."
        },
        "endpoints": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/LiveEventEndpoint"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The endpoints for preview. Do not share the preview URL with the live event audience."
        },
        "previewLocator": {
          "type": "string",
          "description": "The identifier of the preview locator in Guid format. Specifying this at creation time allows the caller to know the preview locator url before the event is created. If omitted, the service will generate a random identifier. This value cannot be updated once the live event is created."
        },
        "streamingPolicyName": {
          "type": "string",
          "description": "The name of streaming policy used for the live event preview. This value is specified at creation time and cannot be updated."
        }
      },
      "description": "Live event preview settings."
    },
    "LiveEventPreviewAccessControl": {
      "type": "object",
      "properties": {
        "ip": {
          "oneOf": [
            {
              "$ref": "#/definitions/IPAccessControl"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The IP access control."
        }
      },
      "description": "The IP access control for the live event preview endpoint."
    },
    "LiveEventProperties": {
      "type": "object",
      "properties": {
        "crossSiteAccessPolicies": {
          "oneOf": [
            {
              "$ref": "#/definitions/CrossSiteAccessPolicies"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The client access policy."
        },
        "description": {
          "type": "string",
          "description": "A description for the live event."
        },
        "encoding": {
          "oneOf": [
            {
              "$ref": "#/definitions/LiveEventEncoding"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Specifies the live event type and optional encoding settings for encoding live events."
        },
        "hostnamePrefix": {
          "type": "string",
          "description": "When useStaticHostname is set to true, the hostnamePrefix specifies the first part of the hostname assigned to the live event preview and ingest endpoints. The final hostname would be a combination of this prefix, the media service account name and a short code for the Azure Media Services data center."
        },
        "input": {
          "oneOf": [
            {
              "$ref": "#/definitions/LiveEventInput"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The live event input."
        },
        "preview": {
          "oneOf": [
            {
              "$ref": "#/definitions/LiveEventPreview"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Live event preview settings."
        },
        "streamOptions": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "Default",
                  "LowLatency",
                  "LowLatencyV2"
                ]
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The options to use for the LiveEvent. This value is specified at creation time and cannot be updated. The valid values for the array entry values are 'Default' and 'LowLatency'."
        },
        "transcriptions": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/LiveEventTranscription"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Live transcription settings for the live event. See https://go.microsoft.com/fwlink/?linkid=2133742 for more information about the live transcription feature."
        },
        "useStaticHostname": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Specifies whether a static hostname would be assigned to the live event preview and ingest endpoints. This value can only be updated if the live event is in Standby state"
        }
      },
      "required": [
        "input"
      ],
      "description": "The live event properties."
    },
    "LiveEventTranscription": {
      "type": "object",
      "properties": {
        "inputTrackSelection": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/LiveEventInputTrackSelection"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Provides a mechanism to select the audio track in the input live feed, to which speech-to-text transcription is applied. This property is reserved for future use, any value set on this property will be ignored."
        },
        "language": {
          "type": "string",
          "description": "Specifies the language (locale) to be used for speech-to-text transcription – it should match the spoken language in the audio track. The value should be in BCP-47 format (e.g: 'en-US'). See https://go.microsoft.com/fwlink/?linkid=2133742 for more information about the live transcription feature and the list of supported languages."
        },
        "outputTranscriptionTrack": {
          "oneOf": [
            {
              "$ref": "#/definitions/LiveEventOutputTranscriptionTrack"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Describes a transcription track in the output of a live event, generated using speech-to-text transcription. This property is reserved for future use, any value set on this property will be ignored."
        }
      },
      "description": "Describes the transcription tracks in the output of a live event, generated using speech-to-text transcription. This property is reserved for future use, any value set on this property will be ignored."
    },
    "LiveOutputProperties": {
      "type": "object",
      "properties": {
        "archiveWindowLength": {
          "type": "string",
          "format": "duration",
          "description": "ISO 8601 time between 1 minute to 25 hours to indicate the maximum content length that can be archived in the asset for this live output. This also sets the maximum content length for the rewind window. For example, use PT1H30M to indicate 1 hour and 30 minutes of archive window."
        },
        "assetName": {
          "type": "string",
          "description": "The asset that the live output will write to."
        },
        "description": {
          "type": "string",
          "description": "The description of the live output."
        },
        "hls": {
          "oneOf": [
            {
              "$ref": "#/definitions/Hls"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "HTTP Live Streaming (HLS) packing setting for the live output."
        },
        "manifestName": {
          "type": "string",
          "description": "The manifest file name. If not provided, the service will generate one automatically."
        },
        "outputSnapTime": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The initial timestamp that the live output will start at, any content before this value will not be archived."
        },
        "rewindWindowLength": {
          "type": "string",
          "format": "duration",
          "description": "ISO 8601 time between 1 minute to the duration of archiveWindowLength to control seek-able window length during Live. The service won't use this property once LiveOutput stops. The archived VOD will have full content with original ArchiveWindowLength. For example, use PT1H30M to indicate 1 hour and 30 minutes of rewind window length. Service will use implicit default value 30m only if Live Event enables LL."
        }
      },
      "required": [
        "archiveWindowLength",
        "assetName"
      ],
      "description": "The JSON object that contains the properties required to create a live output."
    },
    "MediaFilterProperties": {
      "type": "object",
      "properties": {
        "firstQuality": {
          "oneOf": [
            {
              "$ref": "#/definitions/FirstQuality"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Filter First Quality"
        },
        "presentationTimeRange": {
          "oneOf": [
            {
              "$ref": "#/definitions/PresentationTimeRange"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The presentation time range, this is asset related and not recommended for Account Filter."
        },
        "tracks": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FilterTrackSelection"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The tracks selection conditions."
        }
      },
      "description": "The Media Filter properties."
    },
    "mediaServices_assets_assetFilters_childResource": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2022-08-01"
          ]
        },
        "name": {
          "type": "string",
          "description": "The Asset Filter name"
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/MediaFilterProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The Media Filter properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "assetFilters"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.Media/mediaServices/assets/assetFilters"
    },
    "mediaServices_assets_tracks_childResource": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2022-08-01"
          ]
        },
        "name": {
          "type": "string",
          "description": "The Asset Track name."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/AssetTrackProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Properties of a video, audio or text track in the asset."
        },
        "type": {
          "type": "string",
          "enum": [
            "tracks"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.Media/mediaServices/assets/tracks"
    },
    "mediaservices_liveEvents_liveOutputs_childResource": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2022-08-01"
          ]
        },
        "name": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^([a-zA-Z0-9])+(-*[a-zA-Z0-9])*$",
              "minLength": 1,
              "maxLength": 256
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The name of the live output."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/LiveOutputProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The JSON object that contains the properties required to create a live output."
        },
        "type": {
          "type": "string",
          "enum": [
            "liveOutputs"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.Media/mediaservices/liveEvents/liveOutputs"
    },
    "NoEncryption": {
      "type": "object",
      "properties": {
        "enabledProtocols": {
          "oneOf": [
            {
              "$ref": "#/definitions/EnabledProtocols"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Class to specify which protocols are enabled"
        }
      },
      "description": "Class for NoEncryption scheme"
    },
    "PresentationTimeRange": {
      "type": "object",
      "properties": {
        "endTimestamp": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The absolute end time boundary."
        },
        "forceEndTimestamp": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The indicator of forcing existing of end time stamp."
        },
        "liveBackoffDuration": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The relative to end right edge."
        },
        "presentationWindowDuration": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The relative to end sliding window."
        },
        "startTimestamp": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The absolute start time boundary."
        },
        "timescale": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The time scale of time stamps."
        }
      },
      "description": "The presentation time range, this is asset related and not recommended for Account Filter."
    },
    "StreamingEndpointAccessControl": {
      "type": "object",
      "properties": {
        "akamai": {
          "oneOf": [
            {
              "$ref": "#/definitions/AkamaiAccessControl"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Akamai access control"
        },
        "ip": {
          "oneOf": [
            {
              "$ref": "#/definitions/IPAccessControl"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The IP access control."
        }
      },
      "description": "Streaming endpoint access control definition."
    },
    "StreamingEndpointProperties": {
      "type": "object",
      "properties": {
        "accessControl": {
          "oneOf": [
            {
              "$ref": "#/definitions/StreamingEndpointAccessControl"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Streaming endpoint access control definition."
        },
        "availabilitySetName": {
          "type": "string",
          "description": "This feature is deprecated, do not set a value for this property."
        },
        "cdnEnabled": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The CDN enabled flag."
        },
        "cdnProfile": {
          "type": "string",
          "description": "The CDN profile name."
        },
        "cdnProvider": {
          "type": "string",
          "description": "The CDN provider name."
        },
        "crossSiteAccessPolicies": {
          "oneOf": [
            {
              "$ref": "#/definitions/CrossSiteAccessPolicies"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The client access policy."
        },
        "customHostNames": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The custom host names of the streaming endpoint"
        },
        "description": {
          "type": "string",
          "description": "The streaming endpoint description."
        },
        "maxCacheAge": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Max cache age"
        },
        "scaleUnits": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The number of scale units. Use the Scale operation to adjust this value."
        }
      },
      "required": [
        "scaleUnits"
      ],
      "description": "The streaming endpoint properties."
    },
    "StreamingLocatorContentKey": {
      "type": "object",
      "properties": {
        "id": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^[0-9a-fA-F]{8}(-[0-9a-fA-F]{4}){3}-[0-9a-fA-F]{12}$"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "ID of Content Key"
        },
        "labelReferenceInStreamingPolicy": {
          "type": "string",
          "description": "Label of Content Key as specified in the Streaming Policy"
        },
        "value": {
          "type": "string",
          "description": "Value of Content Key"
        }
      },
      "required": [
        "id"
      ],
      "description": "Class for content key in Streaming Locator"
    },
    "StreamingLocatorProperties": {
      "type": "object",
      "properties": {
        "alternativeMediaId": {
          "type": "string",
          "description": "Alternative Media ID of this Streaming Locator"
        },
        "assetName": {
          "type": "string",
          "description": "Asset Name"
        },
        "contentKeys": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StreamingLocatorContentKey"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The ContentKeys used by this Streaming Locator."
        },
        "defaultContentKeyPolicyName": {
          "type": "string",
          "description": "Name of the default ContentKeyPolicy used by this Streaming Locator."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "The end time of the Streaming Locator."
        },
        "filters": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "A list of asset or account filters which apply to this streaming locator"
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The start time of the Streaming Locator."
        },
        "streamingLocatorId": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^[0-9a-fA-F]{8}(-[0-9a-fA-F]{4}){3}-[0-9a-fA-F]{12}$"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The StreamingLocatorId of the Streaming Locator."
        },
        "streamingPolicyName": {
          "type": "string",
          "description": "Name of the Streaming Policy used by this Streaming Locator. Either specify the name of Streaming Policy you created or use one of the predefined Streaming Policies. The predefined Streaming Policies available are: 'Predefined_DownloadOnly', 'Predefined_ClearStreamingOnly', 'Predefined_DownloadAndClearStreaming', 'Predefined_ClearKey', 'Predefined_MultiDrmCencStreaming' and 'Predefined_MultiDrmStreaming'"
        }
      },
      "required": [
        "assetName",
        "streamingPolicyName"
      ],
      "description": "Properties of the Streaming Locator."
    },
    "StreamingPolicyContentKey": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string",
          "description": "Label can be used to specify Content Key when creating a Streaming Locator"
        },
        "policyName": {
          "type": "string",
          "description": "Policy used by Content Key"
        },
        "tracks": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TrackSelection"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Tracks which use this content key"
        }
      },
      "description": "Class to specify properties of content key"
    },
    "StreamingPolicyContentKeys": {
      "type": "object",
      "properties": {
        "defaultKey": {
          "oneOf": [
            {
              "$ref": "#/definitions/DefaultKey"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Class to specify properties of default content key for each encryption scheme"
        },
        "keyToTrackMappings": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StreamingPolicyContentKey"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Representing tracks needs separate content key"
        }
      },
      "description": "Class to specify properties of all content keys in Streaming Policy"
    },
    "StreamingPolicyFairPlayConfiguration": {
      "type": "object",
      "properties": {
        "allowPersistentLicense": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "All license to be persistent or not"
        },
        "customLicenseAcquisitionUrlTemplate": {
          "type": "string",
          "description": "Template for the URL of the custom service delivering licenses to end user players.  Not required when using Azure Media Services for issuing licenses.  The template supports replaceable tokens that the service will update at runtime with the value specific to the request.  The currently supported token values are {AlternativeMediaId}, which is replaced with the value of StreamingLocatorId.AlternativeMediaId, and {ContentKeyId}, which is replaced with the value of identifier of the key being requested."
        }
      },
      "required": [
        "allowPersistentLicense"
      ],
      "description": "Class to specify configurations of FairPlay in Streaming Policy"
    },
    "StreamingPolicyPlayReadyConfiguration": {
      "type": "object",
      "properties": {
        "customLicenseAcquisitionUrlTemplate": {
          "type": "string",
          "description": "Template for the URL of the custom service delivering licenses to end user players.  Not required when using Azure Media Services for issuing licenses.  The template supports replaceable tokens that the service will update at runtime with the value specific to the request.  The currently supported token values are {AlternativeMediaId}, which is replaced with the value of StreamingLocatorId.AlternativeMediaId, and {ContentKeyId}, which is replaced with the value of identifier of the key being requested."
        },
        "playReadyCustomAttributes": {
          "type": "string",
          "description": "Custom attributes for PlayReady"
        }
      },
      "description": "Class to specify configurations of PlayReady in Streaming Policy"
    },
    "StreamingPolicyProperties": {
      "type": "object",
      "properties": {
        "commonEncryptionCbcs": {
          "oneOf": [
            {
              "$ref": "#/definitions/CommonEncryptionCbcs"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Class for CommonEncryptionCbcs encryption scheme"
        },
        "commonEncryptionCenc": {
          "oneOf": [
            {
              "$ref": "#/definitions/CommonEncryptionCenc"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Class for envelope encryption scheme"
        },
        "defaultContentKeyPolicyName": {
          "type": "string",
          "description": "Default ContentKey used by current Streaming Policy"
        },
        "envelopeEncryption": {
          "oneOf": [
            {
              "$ref": "#/definitions/EnvelopeEncryption"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Class for EnvelopeEncryption encryption scheme"
        },
        "noEncryption": {
          "oneOf": [
            {
              "$ref": "#/definitions/NoEncryption"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Class for NoEncryption scheme"
        }
      },
      "description": "Class to specify properties of Streaming Policy"
    },
    "StreamingPolicyWidevineConfiguration": {
      "type": "object",
      "properties": {
        "customLicenseAcquisitionUrlTemplate": {
          "type": "string",
          "description": "Template for the URL of the custom service delivering licenses to end user players.  Not required when using Azure Media Services for issuing licenses.  The template supports replaceable tokens that the service will update at runtime with the value specific to the request.  The currently supported token values are {AlternativeMediaId}, which is replaced with the value of StreamingLocatorId.AlternativeMediaId, and {ContentKeyId}, which is replaced with the value of identifier of the key being requested."
        }
      },
      "description": "Class to specify configurations of Widevine in Streaming Policy"
    },
    "TextTrack": {
      "type": "object",
      "properties": {
        "@odata.type": {
          "type": "string",
          "enum": [
            "#Microsoft.Media.TextTrack"
          ]
        },
        "displayName": {
          "type": "string",
          "description": "The display name of the text track on a video player. In HLS, this maps to the NAME attribute of EXT-X-MEDIA."
        },
        "fileName": {
          "type": "string",
          "description": "The file name to the source file. This file is located in the storage container of the asset."
        },
        "hlsSettings": {
          "oneOf": [
            {
              "$ref": "#/definitions/HlsSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The HLS setting for a track."
        },
        "playerVisibility": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Hidden",
                "Visible"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "When PlayerVisibility is set to \"Visible\", the text track will be present in the DASH manifest or HLS playlist when requested by a client. When the PlayerVisibility is set to \"Hidden\", the text will not be available to the client. The default value is \"Visible\"."
        }
      },
      "required": [
        "@odata.type"
      ],
      "description": "Represents a text track in an asset. A text track is usually used for sparse data related to the audio or video tracks."
    },
    "TrackBase": {
      "type": "object",
      "oneOf": [
        {
          "$ref": "#/definitions/AudioTrack"
        },
        {
          "$ref": "#/definitions/VideoTrack"
        },
        {
          "$ref": "#/definitions/TextTrack"
        }
      ],
      "properties": {},
      "description": "Base type for concrete track types. A derived type must be used to represent the Track."
    },
    "TrackPropertyCondition": {
      "type": "object",
      "properties": {
        "operation": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Unknown",
                "Equal"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Track property condition operation."
        },
        "property": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Unknown",
                "FourCC"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Track property type."
        },
        "value": {
          "type": "string",
          "description": "Track property value"
        }
      },
      "required": [
        "operation",
        "property"
      ],
      "description": "Class to specify one track property condition"
    },
    "TrackSelection": {
      "type": "object",
      "properties": {
        "trackSelections": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TrackPropertyCondition"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "TrackSelections is a track property condition list which can specify track(s)"
        }
      },
      "description": "Class to select a track"
    },
    "VideoTrack": {
      "type": "object",
      "properties": {
        "@odata.type": {
          "type": "string",
          "enum": [
            "#Microsoft.Media.VideoTrack"
          ]
        }
      },
      "required": [
        "@odata.type"
      ],
      "description": "Represents a video track in the asset."
    }
  }
}