{
  "id": "https://schema.management.azure.com/schemas/2022-08-01/Microsoft.Media.json#",
  "title": "Microsoft.Media",
  "description": "Microsoft Media Resource Types",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "resourceDefinitions": {
    "mediaServices_accountFilters": {
      "description": "Microsoft.Media/mediaServices/accountFilters",
      "properties": {
        "apiVersion": {
          "enum": [
            "2022-08-01"
          ],
          "type": "string"
        },
        "name": {
          "description": "The Account Filter name",
          "type": "string"
        },
        "properties": {
          "description": "The Media Filter properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/MediaFilterProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.Media/mediaServices/accountFilters"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "mediaServices_assets": {
      "description": "Microsoft.Media/mediaServices/assets",
      "properties": {
        "apiVersion": {
          "enum": [
            "2022-08-01"
          ],
          "type": "string"
        },
        "name": {
          "description": "The Asset name.",
          "type": "string"
        },
        "properties": {
          "description": "The resource properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/AssetProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/mediaServices_assets_tracks_childResource"
              },
              {
                "$ref": "#/definitions/mediaServices_assets_assetFilters_childResource"
              }
            ]
          },
          "type": "array"
        },
        "type": {
          "enum": [
            "Microsoft.Media/mediaServices/assets"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "mediaServices_assets_assetFilters": {
      "description": "Microsoft.Media/mediaServices/assets/assetFilters",
      "properties": {
        "apiVersion": {
          "enum": [
            "2022-08-01"
          ],
          "type": "string"
        },
        "name": {
          "description": "The Asset Filter name",
          "type": "string"
        },
        "properties": {
          "description": "The Media Filter properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/MediaFilterProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.Media/mediaServices/assets/assetFilters"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "mediaServices_assets_tracks": {
      "description": "Microsoft.Media/mediaServices/assets/tracks",
      "properties": {
        "apiVersion": {
          "enum": [
            "2022-08-01"
          ],
          "type": "string"
        },
        "name": {
          "description": "The Asset Track name.",
          "type": "string"
        },
        "properties": {
          "description": "The resource properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/AssetTrackProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.Media/mediaServices/assets/tracks"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "mediaServices_contentKeyPolicies": {
      "description": "Microsoft.Media/mediaServices/contentKeyPolicies",
      "properties": {
        "apiVersion": {
          "enum": [
            "2022-08-01"
          ],
          "type": "string"
        },
        "name": {
          "description": "The Content Key Policy name.",
          "type": "string"
        },
        "properties": {
          "description": "The properties of the Content Key Policy.",
          "oneOf": [
            {
              "$ref": "#/definitions/ContentKeyPolicyProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.Media/mediaServices/contentKeyPolicies"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "mediaServices_streamingLocators": {
      "description": "Microsoft.Media/mediaServices/streamingLocators",
      "properties": {
        "apiVersion": {
          "enum": [
            "2022-08-01"
          ],
          "type": "string"
        },
        "name": {
          "description": "The Streaming Locator name.",
          "type": "string"
        },
        "properties": {
          "description": "Properties of the Streaming Locator.",
          "oneOf": [
            {
              "$ref": "#/definitions/StreamingLocatorProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.Media/mediaServices/streamingLocators"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "mediaServices_streamingPolicies": {
      "description": "Microsoft.Media/mediaServices/streamingPolicies",
      "properties": {
        "apiVersion": {
          "enum": [
            "2022-08-01"
          ],
          "type": "string"
        },
        "name": {
          "description": "The Streaming Policy name.",
          "type": "string"
        },
        "properties": {
          "description": "Class to specify properties of Streaming Policy",
          "oneOf": [
            {
              "$ref": "#/definitions/StreamingPolicyProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.Media/mediaServices/streamingPolicies"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "mediaservices_liveEvents": {
      "description": "Microsoft.Media/mediaservices/liveEvents",
      "properties": {
        "apiVersion": {
          "enum": [
            "2022-08-01"
          ],
          "type": "string"
        },
        "location": {
          "description": "The geo-location where the resource lives",
          "type": "string"
        },
        "name": {
          "description": "The name of the live event, maximum length is 32.",
          "oneOf": [
            {
              "maxLength": 32,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9]+(-*[a-zA-Z0-9])*$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The live event properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/LiveEventProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/mediaservices_liveEvents_liveOutputs_childResource"
              }
            ]
          },
          "type": "array"
        },
        "tags": {
          "description": "Resource tags.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.Media/mediaservices/liveEvents"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "mediaservices_liveEvents_liveOutputs": {
      "description": "Microsoft.Media/mediaservices/liveEvents/liveOutputs",
      "properties": {
        "apiVersion": {
          "enum": [
            "2022-08-01"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the live output.",
          "oneOf": [
            {
              "maxLength": 256,
              "minLength": 1,
              "pattern": "^([a-zA-Z0-9])+(-*[a-zA-Z0-9])*$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Live output properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/LiveOutputProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.Media/mediaservices/liveEvents/liveOutputs"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "mediaservices_streamingEndpoints": {
      "description": "Microsoft.Media/mediaservices/streamingEndpoints",
      "properties": {
        "apiVersion": {
          "enum": [
            "2022-08-01"
          ],
          "type": "string"
        },
        "location": {
          "description": "The geo-location where the resource lives",
          "type": "string"
        },
        "name": {
          "description": "The name of the streaming endpoint, maximum length is 24.",
          "oneOf": [
            {
              "maxLength": 24,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9]+(-*[a-zA-Z0-9])*$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The streaming endpoint properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/StreamingEndpointProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "sku": {
          "description": "The streaming endpoint sku.",
          "oneOf": [
            {
              "$ref": "#/definitions/ArmStreamingEndpointCurrentSku"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Resource tags.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.Media/mediaservices/streamingEndpoints"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    }
  },
  "definitions": {
    "AkamaiAccessControl": {
      "description": "Akamai access control",
      "properties": {
        "akamaiSignatureHeaderAuthenticationKeyList": {
          "description": "authentication key list",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/AkamaiSignatureHeaderAuthenticationKey"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "AkamaiSignatureHeaderAuthenticationKey": {
      "description": "Akamai Signature Header authentication key.",
      "properties": {
        "base64Key": {
          "description": "authentication key",
          "type": "string"
        },
        "expiration": {
          "description": "The expiration time of the authentication key.",
          "format": "date-time",
          "type": "string"
        },
        "identifier": {
          "description": "identifier of the key",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ArmStreamingEndpointCurrentSku": {
      "description": "The streaming endpoint current sku.",
      "properties": {
        "capacity": {
          "description": "The streaming endpoint sku capacity.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "AssetProperties": {
      "description": "The Asset properties.",
      "properties": {
        "alternateId": {
          "description": "The alternate ID of the Asset.",
          "type": "string"
        },
        "container": {
          "description": "The name of the asset blob container.",
          "type": "string"
        },
        "description": {
          "description": "The Asset description.",
          "type": "string"
        },
        "storageAccountName": {
          "description": "The name of the storage account.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "AssetTrackProperties": {
      "description": "Properties of a video, audio or text track in the asset.",
      "properties": {
        "track": {
          "description": "Detailed information about a track in the asset.",
          "oneOf": [
            {
              "$ref": "#/definitions/TrackBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "CbcsDrmConfiguration": {
      "description": "Class to specify DRM configurations of CommonEncryptionCbcs scheme in Streaming Policy",
      "properties": {
        "fairPlay": {
          "description": "FairPlay configurations",
          "oneOf": [
            {
              "$ref": "#/definitions/StreamingPolicyFairPlayConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "playReady": {
          "description": "PlayReady configurations",
          "oneOf": [
            {
              "$ref": "#/definitions/StreamingPolicyPlayReadyConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "widevine": {
          "description": "Widevine configurations",
          "oneOf": [
            {
              "$ref": "#/definitions/StreamingPolicyWidevineConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "CencDrmConfiguration": {
      "description": "Class to specify DRM configurations of CommonEncryptionCenc scheme in Streaming Policy",
      "properties": {
        "playReady": {
          "description": "PlayReady configurations",
          "oneOf": [
            {
              "$ref": "#/definitions/StreamingPolicyPlayReadyConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "widevine": {
          "description": "Widevine configurations",
          "oneOf": [
            {
              "$ref": "#/definitions/StreamingPolicyWidevineConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ClearKeyEncryptionConfiguration": {
      "description": "Class to specify ClearKey configuration of common encryption schemes in Streaming Policy",
      "properties": {
        "customKeysAcquisitionUrlTemplate": {
          "description": "Template for the URL of the custom service delivering content keys to end user players. Not required when using Azure Media Services for issuing licenses. The template supports replaceable tokens that the service will update at runtime with the value specific to the request.  The currently supported token value is {AlternativeMediaId}, which is replaced with the value of StreamingLocatorId.AlternativeMediaId.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CommonEncryptionCbcs": {
      "description": "Class for CommonEncryptionCbcs encryption scheme",
      "properties": {
        "clearKeyEncryptionConfiguration": {
          "description": "Optional configuration supporting ClearKey in CommonEncryptionCbcs encryption scheme.",
          "oneOf": [
            {
              "$ref": "#/definitions/ClearKeyEncryptionConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "clearTracks": {
          "description": "Representing which tracks should not be encrypted",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/TrackSelection"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "contentKeys": {
          "description": "Representing default content key for each encryption scheme and separate content keys for specific tracks",
          "oneOf": [
            {
              "$ref": "#/definitions/StreamingPolicyContentKeys"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "drm": {
          "description": "Configuration of DRMs for current encryption scheme",
          "oneOf": [
            {
              "$ref": "#/definitions/CbcsDrmConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "enabledProtocols": {
          "description": "Representing supported protocols",
          "oneOf": [
            {
              "$ref": "#/definitions/EnabledProtocols"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "CommonEncryptionCenc": {
      "description": "Class for envelope encryption scheme",
      "properties": {
        "clearKeyEncryptionConfiguration": {
          "description": "Optional configuration supporting ClearKey in CommonEncryptionCenc encryption scheme.",
          "oneOf": [
            {
              "$ref": "#/definitions/ClearKeyEncryptionConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "clearTracks": {
          "description": "Representing which tracks should not be encrypted",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/TrackSelection"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "contentKeys": {
          "description": "Representing default content key for each encryption scheme and separate content keys for specific tracks",
          "oneOf": [
            {
              "$ref": "#/definitions/StreamingPolicyContentKeys"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "drm": {
          "description": "Configuration of DRMs for CommonEncryptionCenc encryption scheme",
          "oneOf": [
            {
              "$ref": "#/definitions/CencDrmConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "enabledProtocols": {
          "description": "Representing supported protocols",
          "oneOf": [
            {
              "$ref": "#/definitions/EnabledProtocols"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ContentKeyPolicyConfiguration": {
      "description": "Base class for Content Key Policy configuration. A derived class must be used to create a configuration.",
      "oneOf": [
        {
          "description": "Represents a configuration for non-DRM keys.",
          "properties": {
            "@odata.type": {
              "enum": [
                "#Microsoft.Media.ContentKeyPolicyClearKeyConfiguration"
              ],
              "type": "string"
            }
          },
          "required": [
            "@odata.type"
          ],
          "type": "object"
        },
        {
          "description": "Specifies a configuration for FairPlay licenses.",
          "properties": {
            "@odata.type": {
              "enum": [
                "#Microsoft.Media.ContentKeyPolicyFairPlayConfiguration"
              ],
              "type": "string"
            },
            "ask": {
              "description": "The key that must be used as FairPlay Application Secret key. This needs to be base64 encoded."
            },
            "fairPlayPfx": {
              "description": "The Base64 representation of FairPlay certificate in PKCS 12 (pfx) format (including private key).",
              "type": "string"
            },
            "fairPlayPfxPassword": {
              "description": "The password encrypting FairPlay certificate in PKCS 12 (pfx) format.",
              "type": "string"
            },
            "offlineRentalConfiguration": {
              "description": "Offline rental policy",
              "oneOf": [
                {
                  "$ref": "#/definitions/ContentKeyPolicyFairPlayOfflineRentalConfiguration"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "rentalAndLeaseKeyType": {
              "description": "The rental and lease key type.",
              "oneOf": [
                {
                  "enum": [
                    "Unknown",
                    "Undefined",
                    "DualExpiry",
                    "PersistentUnlimited",
                    "PersistentLimited"
                  ],
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "rentalDuration": {
              "description": "The rental duration. Must be greater than or equal to 0.",
              "oneOf": [
                {
                  "type": "integer"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "ask",
            "fairPlayPfxPassword",
            "fairPlayPfx",
            "rentalAndLeaseKeyType",
            "rentalDuration",
            "@odata.type"
          ],
          "type": "object"
        },
        {
          "description": "Specifies a configuration for PlayReady licenses.",
          "properties": {
            "@odata.type": {
              "enum": [
                "#Microsoft.Media.ContentKeyPolicyPlayReadyConfiguration"
              ],
              "type": "string"
            },
            "licenses": {
              "description": "The PlayReady licenses.",
              "oneOf": [
                {
                  "items": {
                    "$ref": "#/definitions/ContentKeyPolicyPlayReadyLicense"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "responseCustomData": {
              "description": "The custom response data.",
              "type": "string"
            }
          },
          "required": [
            "licenses",
            "@odata.type"
          ],
          "type": "object"
        },
        {
          "description": "Represents a ContentKeyPolicyConfiguration that is unavailable in the current API version.",
          "properties": {
            "@odata.type": {
              "enum": [
                "#Microsoft.Media.ContentKeyPolicyUnknownConfiguration"
              ],
              "type": "string"
            }
          },
          "required": [
            "@odata.type"
          ],
          "type": "object"
        },
        {
          "description": "Specifies a configuration for Widevine licenses.",
          "properties": {
            "@odata.type": {
              "enum": [
                "#Microsoft.Media.ContentKeyPolicyWidevineConfiguration"
              ],
              "type": "string"
            },
            "widevineTemplate": {
              "description": "The Widevine template.",
              "type": "string"
            }
          },
          "required": [
            "widevineTemplate",
            "@odata.type"
          ],
          "type": "object"
        }
      ],
      "properties": {},
      "type": "object"
    },
    "ContentKeyPolicyFairPlayOfflineRentalConfiguration": {
      "properties": {
        "playbackDurationSeconds": {
          "description": "Playback duration",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "storageDurationSeconds": {
          "description": "Storage duration",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "playbackDurationSeconds",
        "storageDurationSeconds"
      ],
      "type": "object"
    },
    "ContentKeyPolicyOption": {
      "description": "Represents a policy option.",
      "properties": {
        "configuration": {
          "description": "The key delivery configuration.",
          "oneOf": [
            {
              "$ref": "#/definitions/ContentKeyPolicyConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "name": {
          "description": "The Policy Option description.",
          "type": "string"
        },
        "restriction": {
          "description": "The requirements that must be met to deliver keys with this configuration",
          "oneOf": [
            {
              "$ref": "#/definitions/ContentKeyPolicyRestriction"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "configuration",
        "restriction"
      ],
      "type": "object"
    },
    "ContentKeyPolicyPlayReadyContentKeyLocation": {
      "description": "Base class for content key ID location. A derived class must be used to represent the location.",
      "oneOf": [
        {
          "description": "Specifies that the content key ID is in the PlayReady header.",
          "properties": {
            "@odata.type": {
              "enum": [
                "#Microsoft.Media.ContentKeyPolicyPlayReadyContentEncryptionKeyFromHeader"
              ],
              "type": "string"
            }
          },
          "required": [
            "@odata.type"
          ],
          "type": "object"
        },
        {
          "description": "Specifies that the content key ID is specified in the PlayReady configuration.",
          "properties": {
            "@odata.type": {
              "enum": [
                "#Microsoft.Media.ContentKeyPolicyPlayReadyContentEncryptionKeyFromKeyIdentifier"
              ],
              "type": "string"
            },
            "keyId": {
              "description": "The content key ID.",
              "oneOf": [
                {
                  "pattern": "^[0-9a-fA-F]{8}(-[0-9a-fA-F]{4}){3}-[0-9a-fA-F]{12}$",
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "keyId",
            "@odata.type"
          ],
          "type": "object"
        }
      ],
      "properties": {},
      "type": "object"
    },
    "ContentKeyPolicyPlayReadyExplicitAnalogTelevisionRestriction": {
      "description": "Configures the Explicit Analog Television Output Restriction control bits. For further details see the PlayReady Compliance Rules.",
      "properties": {
        "bestEffort": {
          "description": "Indicates whether this restriction is enforced on a Best Effort basis.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "configurationData": {
          "description": "Configures the restriction control bits. Must be between 0 and 3 inclusive.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "bestEffort",
        "configurationData"
      ],
      "type": "object"
    },
    "ContentKeyPolicyPlayReadyLicense": {
      "description": "The PlayReady license",
      "properties": {
        "allowTestDevices": {
          "description": "A flag indicating whether test devices can use the license.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "beginDate": {
          "description": "The begin date of license",
          "format": "date-time",
          "type": "string"
        },
        "contentKeyLocation": {
          "description": "The content key location.",
          "oneOf": [
            {
              "$ref": "#/definitions/ContentKeyPolicyPlayReadyContentKeyLocation"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "contentType": {
          "description": "The PlayReady content type.",
          "oneOf": [
            {
              "enum": [
                "Unknown",
                "Unspecified",
                "UltraVioletDownload",
                "UltraVioletStreaming"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "expirationDate": {
          "description": "The expiration date of license.",
          "format": "date-time",
          "type": "string"
        },
        "gracePeriod": {
          "description": "The grace period of license.",
          "type": "string"
        },
        "licenseType": {
          "description": "The license type.",
          "oneOf": [
            {
              "enum": [
                "Unknown",
                "NonPersistent",
                "Persistent"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "playRight": {
          "description": "The license PlayRight",
          "oneOf": [
            {
              "$ref": "#/definitions/ContentKeyPolicyPlayReadyPlayRight"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "relativeBeginDate": {
          "description": "The relative begin date of license.",
          "type": "string"
        },
        "relativeExpirationDate": {
          "description": "The relative expiration date of license.",
          "type": "string"
        },
        "securityLevel": {
          "description": "The security level.",
          "oneOf": [
            {
              "enum": [
                "Unknown",
                "SL150",
                "SL2000",
                "SL3000"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "allowTestDevices",
        "licenseType",
        "contentKeyLocation",
        "contentType"
      ],
      "type": "object"
    },
    "ContentKeyPolicyPlayReadyPlayRight": {
      "description": "Configures the Play Right in the PlayReady license.",
      "properties": {
        "agcAndColorStripeRestriction": {
          "description": "Configures Automatic Gain Control (AGC) and Color Stripe in the license. Must be between 0 and 3 inclusive.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "allowPassingVideoContentToUnknownOutput": {
          "description": "Configures Unknown output handling settings of the license.",
          "oneOf": [
            {
              "enum": [
                "Unknown",
                "NotAllowed",
                "Allowed",
                "AllowedWithVideoConstriction"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "analogVideoOpl": {
          "description": "Specifies the output protection level for compressed digital audio.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "compressedDigitalAudioOpl": {
          "description": "Specifies the output protection level for compressed digital audio.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "compressedDigitalVideoOpl": {
          "description": "Specifies the output protection level for compressed digital video.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "digitalVideoOnlyContentRestriction": {
          "description": "Enables the Image Constraint For Analog Component Video Restriction in the license.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "explicitAnalogTelevisionOutputRestriction": {
          "description": "Configures the Explicit Analog Television Output Restriction in the license. Configuration data must be between 0 and 3 inclusive.",
          "oneOf": [
            {
              "$ref": "#/definitions/ContentKeyPolicyPlayReadyExplicitAnalogTelevisionRestriction"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "firstPlayExpiration": {
          "description": "The amount of time that the license is valid after the license is first used to play content.",
          "type": "string"
        },
        "imageConstraintForAnalogComponentVideoRestriction": {
          "description": "Enables the Image Constraint For Analog Component Video Restriction in the license.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "imageConstraintForAnalogComputerMonitorRestriction": {
          "description": "Enables the Image Constraint For Analog Component Video Restriction in the license.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "scmsRestriction": {
          "description": "Configures the Serial Copy Management System (SCMS) in the license. Must be between 0 and 3 inclusive.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "uncompressedDigitalAudioOpl": {
          "description": "Specifies the output protection level for uncompressed digital audio.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "uncompressedDigitalVideoOpl": {
          "description": "Specifies the output protection level for uncompressed digital video.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "digitalVideoOnlyContentRestriction",
        "imageConstraintForAnalogComponentVideoRestriction",
        "imageConstraintForAnalogComputerMonitorRestriction",
        "allowPassingVideoContentToUnknownOutput"
      ],
      "type": "object"
    },
    "ContentKeyPolicyProperties": {
      "description": "The properties of the Content Key Policy.",
      "properties": {
        "description": {
          "description": "A description for the Policy.",
          "type": "string"
        },
        "options": {
          "description": "The Key Policy options.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/ContentKeyPolicyOption"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "options"
      ],
      "type": "object"
    },
    "ContentKeyPolicyRestriction": {
      "description": "Base class for Content Key Policy restrictions. A derived class must be used to create a restriction.",
      "oneOf": [
        {
          "description": "Represents an open restriction. License or key will be delivered on every request.",
          "properties": {
            "@odata.type": {
              "enum": [
                "#Microsoft.Media.ContentKeyPolicyOpenRestriction"
              ],
              "type": "string"
            }
          },
          "required": [
            "@odata.type"
          ],
          "type": "object"
        },
        {
          "description": "Represents a token restriction. Provided token must match these requirements for successful license or key delivery.",
          "properties": {
            "@odata.type": {
              "enum": [
                "#Microsoft.Media.ContentKeyPolicyTokenRestriction"
              ],
              "type": "string"
            },
            "alternateVerificationKeys": {
              "description": "A list of alternative verification keys.",
              "oneOf": [
                {
                  "items": {
                    "$ref": "#/definitions/ContentKeyPolicyRestrictionTokenKey"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "audience": {
              "description": "The audience for the token.",
              "type": "string"
            },
            "issuer": {
              "description": "The token issuer.",
              "type": "string"
            },
            "openIdConnectDiscoveryDocument": {
              "description": "The OpenID connect discovery document.",
              "type": "string"
            },
            "primaryVerificationKey": {
              "description": "The primary verification key.",
              "oneOf": [
                {
                  "$ref": "#/definitions/ContentKeyPolicyRestrictionTokenKey"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "requiredClaims": {
              "description": "A list of required token claims.",
              "oneOf": [
                {
                  "items": {
                    "$ref": "#/definitions/ContentKeyPolicyTokenClaim"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "restrictionTokenType": {
              "description": "The type of token.",
              "oneOf": [
                {
                  "enum": [
                    "Unknown",
                    "Swt",
                    "Jwt"
                  ],
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "issuer",
            "audience",
            "primaryVerificationKey",
            "restrictionTokenType",
            "@odata.type"
          ],
          "type": "object"
        },
        {
          "description": "Represents a ContentKeyPolicyRestriction that is unavailable in the current API version.",
          "properties": {
            "@odata.type": {
              "enum": [
                "#Microsoft.Media.ContentKeyPolicyUnknownRestriction"
              ],
              "type": "string"
            }
          },
          "required": [
            "@odata.type"
          ],
          "type": "object"
        }
      ],
      "properties": {},
      "type": "object"
    },
    "ContentKeyPolicyRestrictionTokenKey": {
      "description": "Base class for Content Key Policy key for token validation. A derived class must be used to create a token key.",
      "oneOf": [
        {
          "description": "Specifies a RSA key for token validation",
          "properties": {
            "@odata.type": {
              "enum": [
                "#Microsoft.Media.ContentKeyPolicyRsaTokenKey"
              ],
              "type": "string"
            },
            "exponent": {
              "description": "The RSA Parameter exponent"
            },
            "modulus": {
              "description": "The RSA Parameter modulus"
            }
          },
          "required": [
            "exponent",
            "modulus",
            "@odata.type"
          ],
          "type": "object"
        },
        {
          "description": "Specifies a symmetric key for token validation.",
          "properties": {
            "@odata.type": {
              "enum": [
                "#Microsoft.Media.ContentKeyPolicySymmetricTokenKey"
              ],
              "type": "string"
            },
            "keyValue": {
              "description": "The key value of the key"
            }
          },
          "required": [
            "keyValue",
            "@odata.type"
          ],
          "type": "object"
        },
        {
          "description": "Specifies a certificate for token validation.",
          "properties": {
            "@odata.type": {
              "enum": [
                "#Microsoft.Media.ContentKeyPolicyX509CertificateTokenKey"
              ],
              "type": "string"
            },
            "rawBody": {
              "description": "The raw data field of a certificate in PKCS 12 format (X509Certificate2 in .NET)"
            }
          },
          "required": [
            "rawBody",
            "@odata.type"
          ],
          "type": "object"
        }
      ],
      "properties": {},
      "type": "object"
    },
    "ContentKeyPolicyTokenClaim": {
      "description": "Represents a token claim.",
      "properties": {
        "claimType": {
          "description": "Token claim type.",
          "type": "string"
        },
        "claimValue": {
          "description": "Token claim value.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CrossSiteAccessPolicies": {
      "description": "The client access policy.",
      "properties": {
        "clientAccessPolicy": {
          "description": "The content of clientaccesspolicy.xml used by Silverlight.",
          "type": "string"
        },
        "crossDomainPolicy": {
          "description": "The content of crossdomain.xml used by Silverlight.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DashSettings": {
      "description": "The DASH setting for a track.",
      "properties": {
        "role": {
          "description": "The role for the DASH setting.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DefaultKey": {
      "description": "Class to specify properties of default content key for each encryption scheme",
      "properties": {
        "label": {
          "description": "Label can be used to specify Content Key when creating a Streaming Locator",
          "type": "string"
        },
        "policyName": {
          "description": "Policy used by Default Key",
          "type": "string"
        }
      },
      "type": "object"
    },
    "EnabledProtocols": {
      "description": "Class to specify which protocols are enabled",
      "properties": {
        "dash": {
          "description": "Enable DASH protocol or not",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "download": {
          "description": "Enable Download protocol or not",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "hls": {
          "description": "Enable HLS protocol or not",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "smoothStreaming": {
          "description": "Enable SmoothStreaming protocol or not",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "download",
        "dash",
        "hls",
        "smoothStreaming"
      ],
      "type": "object"
    },
    "EnvelopeEncryption": {
      "description": "Class for EnvelopeEncryption encryption scheme",
      "properties": {
        "clearTracks": {
          "description": "Representing which tracks should not be encrypted",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/TrackSelection"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "contentKeys": {
          "description": "Representing default content key for each encryption scheme and separate content keys for specific tracks",
          "oneOf": [
            {
              "$ref": "#/definitions/StreamingPolicyContentKeys"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "customKeyAcquisitionUrlTemplate": {
          "description": "Template for the URL of the custom service delivering keys to end user players.  Not required when using Azure Media Services for issuing keys.  The template supports replaceable tokens that the service will update at runtime with the value specific to the request.  The currently supported token values are {AlternativeMediaId}, which is replaced with the value of StreamingLocatorId.AlternativeMediaId, and {ContentKeyId}, which is replaced with the value of identifier of the key being requested.",
          "type": "string"
        },
        "enabledProtocols": {
          "description": "Representing supported protocols",
          "oneOf": [
            {
              "$ref": "#/definitions/EnabledProtocols"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "FilterTrackPropertyCondition": {
      "description": "The class to specify one track property condition.",
      "properties": {
        "operation": {
          "description": "The track property condition operation.",
          "oneOf": [
            {
              "enum": [
                "Equal",
                "NotEqual"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "property": {
          "description": "The track property type.",
          "oneOf": [
            {
              "enum": [
                "Unknown",
                "Type",
                "Name",
                "Language",
                "FourCC",
                "Bitrate"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "value": {
          "description": "The track property value.",
          "type": "string"
        }
      },
      "required": [
        "property",
        "value",
        "operation"
      ],
      "type": "object"
    },
    "FilterTrackSelection": {
      "description": "Representing a list of FilterTrackPropertyConditions to select a track.  The filters are combined using a logical AND operation.",
      "properties": {
        "trackSelections": {
          "description": "The track selections.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/FilterTrackPropertyCondition"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "trackSelections"
      ],
      "type": "object"
    },
    "FirstQuality": {
      "description": "Filter First Quality",
      "properties": {
        "bitrate": {
          "description": "The first quality bitrate.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "bitrate"
      ],
      "type": "object"
    },
    "Hls": {
      "description": "HTTP Live Streaming (HLS) packing setting for the live output.",
      "properties": {
        "fragmentsPerTsSegment": {
          "description": "The number of fragments in an HTTP Live Streaming (HLS) TS segment in the output of the live event. This value does not affect the packing ratio for HLS CMAF output.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "HlsSettings": {
      "description": "The HLS setting for a track.",
      "properties": {
        "characteristics": {
          "description": "The characteristics for the HLS setting.",
          "type": "string"
        },
        "default": {
          "description": "The default for the HLS setting.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "forced": {
          "description": "The forced for the HLS setting.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "IPAccessControl": {
      "description": "The IP access control.",
      "properties": {
        "allow": {
          "description": "The IP allow list.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/IPRange"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "IPRange": {
      "description": "The IP address range in the CIDR scheme.",
      "properties": {
        "address": {
          "description": "The IP address.",
          "type": "string"
        },
        "name": {
          "description": "The friendly name for the IP address range.",
          "type": "string"
        },
        "subnetPrefixLength": {
          "description": "The subnet mask prefix length (see CIDR notation).",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "LiveEventEncoding": {
      "description": "Specifies the live event type and optional encoding settings for encoding live events.",
      "properties": {
        "encodingType": {
          "description": "Live event type. When encodingType is set to PassthroughBasic or PassthroughStandard, the service simply passes through the incoming video and audio layer(s) to the output. When encodingType is set to Standard or Premium1080p, a live encoder transcodes the incoming stream into multiple bitrates or layers. See https://go.microsoft.com/fwlink/?linkid=2095101 for more information. This property cannot be modified after the live event is created.",
          "oneOf": [
            {
              "enum": [
                "None",
                "Standard",
                "Premium1080p",
                "PassthroughBasic",
                "PassthroughStandard"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "keyFrameInterval": {
          "description": "Use an ISO 8601 time value between 0.5 to 20 seconds to specify the output fragment length for the video and audio tracks of an encoding live event. For example, use PT2S to indicate 2 seconds. For the video track it also defines the key frame interval, or the length of a GoP (group of pictures).   If this value is not set for an encoding live event, the fragment duration defaults to 2 seconds. The value cannot be set for pass-through live events.",
          "type": "string"
        },
        "presetName": {
          "description": "The optional encoding preset name, used when encodingType is not None. This value is specified at creation time and cannot be updated. If the encodingType is set to Standard, then the default preset name is ‘Default720p’. Else if the encodingType is set to Premium1080p, the default preset is ‘Default1080p’.",
          "type": "string"
        },
        "stretchMode": {
          "description": "Specifies how the input video will be resized to fit the desired output resolution(s). Default is None",
          "oneOf": [
            {
              "enum": [
                "None",
                "AutoSize",
                "AutoFit"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "LiveEventEndpoint": {
      "description": "The live event endpoint.",
      "properties": {
        "protocol": {
          "description": "The endpoint protocol.",
          "type": "string"
        },
        "url": {
          "description": "The endpoint URL.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "LiveEventInput": {
      "description": "The live event input.",
      "properties": {
        "accessControl": {
          "description": "Access control for live event input.",
          "oneOf": [
            {
              "$ref": "#/definitions/LiveEventInputAccessControl"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "accessToken": {
          "description": "A UUID in string form to uniquely identify the stream. This can be specified at creation time but cannot be updated. If omitted, the service will generate a unique value.",
          "type": "string"
        },
        "endpoints": {
          "description": "The input endpoints for the live event.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/LiveEventEndpoint"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "keyFrameIntervalDuration": {
          "description": "ISO 8601 time duration of the key frame interval duration of the input. This value sets the EXT-X-TARGETDURATION property in the HLS output. For example, use PT2S to indicate 2 seconds. Leave the value empty for encoding live events.",
          "type": "string"
        },
        "streamingProtocol": {
          "description": "The input protocol for the live event. This is specified at creation time and cannot be updated.",
          "oneOf": [
            {
              "enum": [
                "FragmentedMP4",
                "RTMP"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "streamingProtocol"
      ],
      "type": "object"
    },
    "LiveEventInputAccessControl": {
      "description": "The IP access control for live event input.",
      "properties": {
        "ip": {
          "description": "The IP access control properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/IPAccessControl"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "LiveEventInputTrackSelection": {
      "description": "A track selection condition. This property is reserved for future use, any value set on this property will be ignored.",
      "properties": {
        "operation": {
          "description": "Comparing operation. This property is reserved for future use, any value set on this property will be ignored.",
          "type": "string"
        },
        "property": {
          "description": "Property name to select. This property is reserved for future use, any value set on this property will be ignored.",
          "type": "string"
        },
        "value": {
          "description": "Property value to select. This property is reserved for future use, any value set on this property will be ignored.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "LiveEventOutputTranscriptionTrack": {
      "description": "Describes a transcription track in the output of a live event, generated using speech-to-text transcription. This property is reserved for future use, any value set on this property will be ignored.",
      "properties": {
        "trackName": {
          "description": "The output track name. This property is reserved for future use, any value set on this property will be ignored.",
          "type": "string"
        }
      },
      "required": [
        "trackName"
      ],
      "type": "object"
    },
    "LiveEventPreview": {
      "description": "Live event preview settings.",
      "properties": {
        "accessControl": {
          "description": "The access control for live event preview.",
          "oneOf": [
            {
              "$ref": "#/definitions/LiveEventPreviewAccessControl"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "alternativeMediaId": {
          "description": "An alternative media identifier associated with the streaming locator created for the preview. This value is specified at creation time and cannot be updated. The identifier can be used in the CustomLicenseAcquisitionUrlTemplate or the CustomKeyAcquisitionUrlTemplate of the StreamingPolicy specified in the StreamingPolicyName field.",
          "type": "string"
        },
        "endpoints": {
          "description": "The endpoints for preview. Do not share the preview URL with the live event audience.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/LiveEventEndpoint"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "previewLocator": {
          "description": "The identifier of the preview locator in Guid format. Specifying this at creation time allows the caller to know the preview locator url before the event is created. If omitted, the service will generate a random identifier. This value cannot be updated once the live event is created.",
          "type": "string"
        },
        "streamingPolicyName": {
          "description": "The name of streaming policy used for the live event preview. This value is specified at creation time and cannot be updated.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "LiveEventPreviewAccessControl": {
      "description": "The IP access control for the live event preview endpoint.",
      "properties": {
        "ip": {
          "description": "The IP access control properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/IPAccessControl"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "LiveEventProperties": {
      "description": "The live event properties.",
      "properties": {
        "crossSiteAccessPolicies": {
          "description": "Live event cross site access policies.",
          "oneOf": [
            {
              "$ref": "#/definitions/CrossSiteAccessPolicies"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "description": {
          "description": "A description for the live event.",
          "type": "string"
        },
        "encoding": {
          "description": "Encoding settings for the live event. It configures whether a live encoder is used for the live event and settings for the live encoder if it is used.",
          "oneOf": [
            {
              "$ref": "#/definitions/LiveEventEncoding"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "hostnamePrefix": {
          "description": "When useStaticHostname is set to true, the hostnamePrefix specifies the first part of the hostname assigned to the live event preview and ingest endpoints. The final hostname would be a combination of this prefix, the media service account name and a short code for the Azure Media Services data center.",
          "type": "string"
        },
        "input": {
          "description": "Live event input settings. It defines how the live event receives input from a contribution encoder.",
          "oneOf": [
            {
              "$ref": "#/definitions/LiveEventInput"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "preview": {
          "description": "Live event preview settings. Preview allows live event producers to preview the live streaming content without creating any live output.",
          "oneOf": [
            {
              "$ref": "#/definitions/LiveEventPreview"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "streamOptions": {
          "description": "The options to use for the LiveEvent. This value is specified at creation time and cannot be updated. The valid values for the array entry values are 'Default' and 'LowLatency'.",
          "oneOf": [
            {
              "items": {
                "enum": [
                  "Default",
                  "LowLatency",
                  "LowLatencyV2"
                ],
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "transcriptions": {
          "description": "Live transcription settings for the live event. See https://go.microsoft.com/fwlink/?linkid=2133742 for more information about the live transcription feature.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/LiveEventTranscription"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "useStaticHostname": {
          "description": "Specifies whether a static hostname would be assigned to the live event preview and ingest endpoints. This value can only be updated if the live event is in Standby state",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "input"
      ],
      "type": "object"
    },
    "LiveEventTranscription": {
      "description": "Describes the transcription tracks in the output of a live event, generated using speech-to-text transcription. This property is reserved for future use, any value set on this property will be ignored.",
      "properties": {
        "inputTrackSelection": {
          "description": "Provides a mechanism to select the audio track in the input live feed, to which speech-to-text transcription is applied. This property is reserved for future use, any value set on this property will be ignored.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/LiveEventInputTrackSelection"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "language": {
          "description": "Specifies the language (locale) to be used for speech-to-text transcription – it should match the spoken language in the audio track. The value should be in BCP-47 format (e.g: 'en-US'). See https://go.microsoft.com/fwlink/?linkid=2133742 for more information about the live transcription feature and the list of supported languages.",
          "type": "string"
        },
        "outputTranscriptionTrack": {
          "description": "Describes a transcription track in the output of a live event, generated using speech-to-text transcription. This property is reserved for future use, any value set on this property will be ignored.",
          "oneOf": [
            {
              "$ref": "#/definitions/LiveEventOutputTranscriptionTrack"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "LiveOutputProperties": {
      "description": "The JSON object that contains the properties required to create a live output.",
      "properties": {
        "archiveWindowLength": {
          "description": "ISO 8601 time between 1 minute to 25 hours to indicate the maximum content length that can be archived in the asset for this live output. This also sets the maximum content length for the rewind window. For example, use PT1H30M to indicate 1 hour and 30 minutes of archive window.",
          "type": "string"
        },
        "assetName": {
          "description": "The asset that the live output will write to.",
          "type": "string"
        },
        "description": {
          "description": "The description of the live output.",
          "type": "string"
        },
        "hls": {
          "description": "HTTP Live Streaming (HLS) packing setting for the live output.",
          "oneOf": [
            {
              "$ref": "#/definitions/Hls"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "manifestName": {
          "description": "The manifest file name. If not provided, the service will generate one automatically.",
          "type": "string"
        },
        "outputSnapTime": {
          "description": "The initial timestamp that the live output will start at, any content before this value will not be archived.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "rewindWindowLength": {
          "description": "ISO 8601 time between 1 minute to the duration of archiveWindowLength to control seek-able window length during Live. The service won't use this property once LiveOutput stops. The archived VOD will have full content with original ArchiveWindowLength. For example, use PT1H30M to indicate 1 hour and 30 minutes of rewind window length. Service will use implicit default value 30m only if Live Event enables LL.",
          "type": "string"
        }
      },
      "required": [
        "assetName",
        "archiveWindowLength"
      ],
      "type": "object"
    },
    "MediaFilterProperties": {
      "description": "The Media Filter properties.",
      "properties": {
        "firstQuality": {
          "description": "The first quality.",
          "oneOf": [
            {
              "$ref": "#/definitions/FirstQuality"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "presentationTimeRange": {
          "description": "The presentation time range.",
          "oneOf": [
            {
              "$ref": "#/definitions/PresentationTimeRange"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tracks": {
          "description": "The tracks selection conditions.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/FilterTrackSelection"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "NoEncryption": {
      "description": "Class for NoEncryption scheme",
      "properties": {
        "enabledProtocols": {
          "description": "Representing supported protocols",
          "oneOf": [
            {
              "$ref": "#/definitions/EnabledProtocols"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "PresentationTimeRange": {
      "description": "The presentation time range, this is asset related and not recommended for Account Filter.",
      "properties": {
        "endTimestamp": {
          "description": "The absolute end time boundary.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "forceEndTimestamp": {
          "description": "The indicator of forcing existing of end time stamp.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "liveBackoffDuration": {
          "description": "The relative to end right edge.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "presentationWindowDuration": {
          "description": "The relative to end sliding window.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "startTimestamp": {
          "description": "The absolute start time boundary.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "timescale": {
          "description": "The time scale of time stamps.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "StreamingEndpointAccessControl": {
      "description": "Streaming endpoint access control definition.",
      "properties": {
        "akamai": {
          "description": "The access control of Akamai",
          "oneOf": [
            {
              "$ref": "#/definitions/AkamaiAccessControl"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "ip": {
          "description": "The IP access control of the streaming endpoint.",
          "oneOf": [
            {
              "$ref": "#/definitions/IPAccessControl"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "StreamingEndpointProperties": {
      "description": "The streaming endpoint properties.",
      "properties": {
        "accessControl": {
          "description": "The access control definition of the streaming endpoint.",
          "oneOf": [
            {
              "$ref": "#/definitions/StreamingEndpointAccessControl"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "availabilitySetName": {
          "description": "This feature is deprecated, do not set a value for this property.",
          "type": "string"
        },
        "cdnEnabled": {
          "description": "The CDN enabled flag.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "cdnProfile": {
          "description": "The CDN profile name.",
          "type": "string"
        },
        "cdnProvider": {
          "description": "The CDN provider name.",
          "type": "string"
        },
        "crossSiteAccessPolicies": {
          "description": "The streaming endpoint access policies.",
          "oneOf": [
            {
              "$ref": "#/definitions/CrossSiteAccessPolicies"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "customHostNames": {
          "description": "The custom host names of the streaming endpoint",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "description": {
          "description": "The streaming endpoint description.",
          "type": "string"
        },
        "maxCacheAge": {
          "description": "Max cache age",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "scaleUnits": {
          "description": "The number of scale units. Use the Scale operation to adjust this value.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "scaleUnits"
      ],
      "type": "object"
    },
    "StreamingLocatorContentKey": {
      "description": "Class for content key in Streaming Locator",
      "properties": {
        "id": {
          "description": "ID of Content Key",
          "oneOf": [
            {
              "pattern": "^[0-9a-fA-F]{8}(-[0-9a-fA-F]{4}){3}-[0-9a-fA-F]{12}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "labelReferenceInStreamingPolicy": {
          "description": "Label of Content Key as specified in the Streaming Policy",
          "type": "string"
        },
        "value": {
          "description": "Value of Content Key",
          "type": "string"
        }
      },
      "required": [
        "id"
      ],
      "type": "object"
    },
    "StreamingLocatorProperties": {
      "description": "Properties of the Streaming Locator.",
      "properties": {
        "alternativeMediaId": {
          "description": "Alternative Media ID of this Streaming Locator",
          "type": "string"
        },
        "assetName": {
          "description": "Asset Name",
          "type": "string"
        },
        "contentKeys": {
          "description": "The ContentKeys used by this Streaming Locator.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/StreamingLocatorContentKey"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "defaultContentKeyPolicyName": {
          "description": "Name of the default ContentKeyPolicy used by this Streaming Locator.",
          "type": "string"
        },
        "endTime": {
          "description": "The end time of the Streaming Locator.",
          "format": "date-time",
          "type": "string"
        },
        "filters": {
          "description": "A list of asset or account filters which apply to this streaming locator",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "startTime": {
          "description": "The start time of the Streaming Locator.",
          "format": "date-time",
          "type": "string"
        },
        "streamingLocatorId": {
          "description": "The StreamingLocatorId of the Streaming Locator.",
          "oneOf": [
            {
              "pattern": "^[0-9a-fA-F]{8}(-[0-9a-fA-F]{4}){3}-[0-9a-fA-F]{12}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "streamingPolicyName": {
          "description": "Name of the Streaming Policy used by this Streaming Locator. Either specify the name of Streaming Policy you created or use one of the predefined Streaming Policies. The predefined Streaming Policies available are: 'Predefined_DownloadOnly', 'Predefined_ClearStreamingOnly', 'Predefined_DownloadAndClearStreaming', 'Predefined_ClearKey', 'Predefined_MultiDrmCencStreaming' and 'Predefined_MultiDrmStreaming'",
          "type": "string"
        }
      },
      "required": [
        "assetName",
        "streamingPolicyName"
      ],
      "type": "object"
    },
    "StreamingPolicyContentKey": {
      "description": "Class to specify properties of content key",
      "properties": {
        "label": {
          "description": "Label can be used to specify Content Key when creating a Streaming Locator",
          "type": "string"
        },
        "policyName": {
          "description": "Policy used by Content Key",
          "type": "string"
        },
        "tracks": {
          "description": "Tracks which use this content key",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/TrackSelection"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "StreamingPolicyContentKeys": {
      "description": "Class to specify properties of all content keys in Streaming Policy",
      "properties": {
        "defaultKey": {
          "description": "Default content key for an encryption scheme",
          "oneOf": [
            {
              "$ref": "#/definitions/DefaultKey"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "keyToTrackMappings": {
          "description": "Representing tracks needs separate content key",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/StreamingPolicyContentKey"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "StreamingPolicyFairPlayConfiguration": {
      "description": "Class to specify configurations of FairPlay in Streaming Policy",
      "properties": {
        "allowPersistentLicense": {
          "description": "All license to be persistent or not",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "customLicenseAcquisitionUrlTemplate": {
          "description": "Template for the URL of the custom service delivering licenses to end user players.  Not required when using Azure Media Services for issuing licenses.  The template supports replaceable tokens that the service will update at runtime with the value specific to the request.  The currently supported token values are {AlternativeMediaId}, which is replaced with the value of StreamingLocatorId.AlternativeMediaId, and {ContentKeyId}, which is replaced with the value of identifier of the key being requested.",
          "type": "string"
        }
      },
      "required": [
        "allowPersistentLicense"
      ],
      "type": "object"
    },
    "StreamingPolicyPlayReadyConfiguration": {
      "description": "Class to specify configurations of PlayReady in Streaming Policy",
      "properties": {
        "customLicenseAcquisitionUrlTemplate": {
          "description": "Template for the URL of the custom service delivering licenses to end user players.  Not required when using Azure Media Services for issuing licenses.  The template supports replaceable tokens that the service will update at runtime with the value specific to the request.  The currently supported token values are {AlternativeMediaId}, which is replaced with the value of StreamingLocatorId.AlternativeMediaId, and {ContentKeyId}, which is replaced with the value of identifier of the key being requested.",
          "type": "string"
        },
        "playReadyCustomAttributes": {
          "description": "Custom attributes for PlayReady",
          "type": "string"
        }
      },
      "type": "object"
    },
    "StreamingPolicyProperties": {
      "description": "Class to specify properties of Streaming Policy",
      "properties": {
        "commonEncryptionCbcs": {
          "description": "Configuration of CommonEncryptionCbcs",
          "oneOf": [
            {
              "$ref": "#/definitions/CommonEncryptionCbcs"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "commonEncryptionCenc": {
          "description": "Configuration of CommonEncryptionCenc",
          "oneOf": [
            {
              "$ref": "#/definitions/CommonEncryptionCenc"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "defaultContentKeyPolicyName": {
          "description": "Default ContentKey used by current Streaming Policy",
          "type": "string"
        },
        "envelopeEncryption": {
          "description": "Configuration of EnvelopeEncryption",
          "oneOf": [
            {
              "$ref": "#/definitions/EnvelopeEncryption"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "noEncryption": {
          "description": "Configurations of NoEncryption",
          "oneOf": [
            {
              "$ref": "#/definitions/NoEncryption"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "StreamingPolicyWidevineConfiguration": {
      "description": "Class to specify configurations of Widevine in Streaming Policy",
      "properties": {
        "customLicenseAcquisitionUrlTemplate": {
          "description": "Template for the URL of the custom service delivering licenses to end user players.  Not required when using Azure Media Services for issuing licenses.  The template supports replaceable tokens that the service will update at runtime with the value specific to the request.  The currently supported token values are {AlternativeMediaId}, which is replaced with the value of StreamingLocatorId.AlternativeMediaId, and {ContentKeyId}, which is replaced with the value of identifier of the key being requested.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "TrackBase": {
      "description": "Base type for concrete track types. A derived type must be used to represent the Track.",
      "oneOf": [
        {
          "description": "Represents an audio track in the asset.",
          "properties": {
            "@odata.type": {
              "enum": [
                "#Microsoft.Media.AudioTrack"
              ],
              "type": "string"
            },
            "dashSettings": {
              "description": "The DASH specific setting for the audio track.",
              "oneOf": [
                {
                  "$ref": "#/definitions/DashSettings"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "displayName": {
              "description": "The display name of the audio track on a video player. In HLS, this maps to the NAME attribute of EXT-X-MEDIA.",
              "type": "string"
            },
            "fileName": {
              "description": "The file name to the source file. This file is located in the storage container of the asset.",
              "type": "string"
            },
            "hlsSettings": {
              "description": "The HLS specific setting for the audio track.",
              "oneOf": [
                {
                  "$ref": "#/definitions/HlsSettings"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "languageCode": {
              "description": "The RFC5646 language code for the audio track.",
              "type": "string"
            },
            "mpeg4TrackId": {
              "description": "The MPEG-4 audio track ID for the audio track.",
              "oneOf": [
                {
                  "type": "integer"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "@odata.type"
          ],
          "type": "object"
        },
        {
          "description": "Represents a text track in an asset. A text track is usually used for sparse data related to the audio or video tracks.",
          "properties": {
            "@odata.type": {
              "enum": [
                "#Microsoft.Media.TextTrack"
              ],
              "type": "string"
            },
            "displayName": {
              "description": "The display name of the text track on a video player. In HLS, this maps to the NAME attribute of EXT-X-MEDIA.",
              "type": "string"
            },
            "fileName": {
              "description": "The file name to the source file. This file is located in the storage container of the asset.",
              "type": "string"
            },
            "hlsSettings": {
              "description": "The HLS specific setting for the text track.",
              "oneOf": [
                {
                  "$ref": "#/definitions/HlsSettings"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "playerVisibility": {
              "description": "When PlayerVisibility is set to \"Visible\", the text track will be present in the DASH manifest or HLS playlist when requested by a client. When the PlayerVisibility is set to \"Hidden\", the text will not be available to the client. The default value is \"Visible\".",
              "oneOf": [
                {
                  "enum": [
                    "Hidden",
                    "Visible"
                  ],
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "@odata.type"
          ],
          "type": "object"
        },
        {
          "description": "Represents a video track in the asset.",
          "properties": {
            "@odata.type": {
              "enum": [
                "#Microsoft.Media.VideoTrack"
              ],
              "type": "string"
            }
          },
          "required": [
            "@odata.type"
          ],
          "type": "object"
        }
      ],
      "properties": {},
      "type": "object"
    },
    "TrackPropertyCondition": {
      "description": "Class to specify one track property condition",
      "properties": {
        "operation": {
          "description": "Track property condition operation",
          "oneOf": [
            {
              "enum": [
                "Unknown",
                "Equal"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "property": {
          "description": "Track property type",
          "oneOf": [
            {
              "enum": [
                "Unknown",
                "FourCC"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "value": {
          "description": "Track property value",
          "type": "string"
        }
      },
      "required": [
        "property",
        "operation"
      ],
      "type": "object"
    },
    "TrackSelection": {
      "description": "Class to select a track",
      "properties": {
        "trackSelections": {
          "description": "TrackSelections is a track property condition list which can specify track(s)",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/TrackPropertyCondition"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "mediaServices_assets_assetFilters_childResource": {
      "description": "Microsoft.Media/mediaServices/assets/assetFilters",
      "properties": {
        "apiVersion": {
          "enum": [
            "2022-08-01"
          ],
          "type": "string"
        },
        "name": {
          "description": "The Asset Filter name",
          "type": "string"
        },
        "properties": {
          "description": "The Media Filter properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/MediaFilterProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "assetFilters"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "mediaServices_assets_tracks_childResource": {
      "description": "Microsoft.Media/mediaServices/assets/tracks",
      "properties": {
        "apiVersion": {
          "enum": [
            "2022-08-01"
          ],
          "type": "string"
        },
        "name": {
          "description": "The Asset Track name.",
          "type": "string"
        },
        "properties": {
          "description": "The resource properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/AssetTrackProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "tracks"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "mediaservices_liveEvents_liveOutputs_childResource": {
      "description": "Microsoft.Media/mediaservices/liveEvents/liveOutputs",
      "properties": {
        "apiVersion": {
          "enum": [
            "2022-08-01"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the live output.",
          "oneOf": [
            {
              "maxLength": 256,
              "minLength": 1,
              "pattern": "^([a-zA-Z0-9])+(-*[a-zA-Z0-9])*$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Live output properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/LiveOutputProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "liveOutputs"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    }
  }
}