{
  "id": "https://schema.management.azure.com/schemas/2022-11-01-preview/Microsoft.ServiceLinker.json#",
  "title": "Microsoft.ServiceLinker",
  "description": "Microsoft ServiceLinker Resource Types",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "resourceDefinitions": {
    "locations_connectors": {
      "description": "Microsoft.ServiceLinker/locations/connectors",
      "properties": {
        "apiVersion": {
          "enum": [
            "2022-11-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of resource.",
          "type": "string"
        },
        "properties": {
          "description": "The properties of the Linker.",
          "oneOf": [
            {
              "$ref": "#/definitions/LinkerProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.ServiceLinker/locations/connectors"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "locations_dryruns": {
      "description": "Microsoft.ServiceLinker/locations/dryruns",
      "properties": {
        "apiVersion": {
          "enum": [
            "2022-11-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of dryrun.",
          "type": "string"
        },
        "properties": {
          "description": "The properties of the dryrun job.",
          "oneOf": [
            {
              "$ref": "#/definitions/DryrunProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.ServiceLinker/locations/dryruns"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    }
  },
  "unknown_resourceDefinitions": {
    "dryruns": {
      "description": "Microsoft.ServiceLinker/dryruns",
      "properties": {
        "apiVersion": {
          "enum": [
            "2022-11-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of dryrun.",
          "type": "string"
        },
        "properties": {
          "description": "The properties of the dryrun job.",
          "oneOf": [
            {
              "$ref": "#/definitions/DryrunProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.ServiceLinker/dryruns"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "linkers": {
      "description": "Microsoft.ServiceLinker/linkers",
      "properties": {
        "apiVersion": {
          "enum": [
            "2022-11-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name Linker resource.",
          "type": "string"
        },
        "properties": {
          "description": "The properties of the Linker.",
          "oneOf": [
            {
              "$ref": "#/definitions/LinkerProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.ServiceLinker/linkers"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    }
  },
  "definitions": {
    "AuthInfoBase": {
      "description": "The authentication info",
      "oneOf": [
        {
          "description": "The access key directly from target resource properties, which target service is Azure Resource, such as Microsoft.Storage",
          "properties": {
            "permissions": {
              "description": "Permissions of the accessKey. `Read` and `Write` are for Azure Cosmos DB and Azure App Configuration, `Listen`, `Send` and `Manage` are for Azure Event Hub and Azure Service Bus.",
              "oneOf": [
                {
                  "items": {
                    "enum": [
                      "Read",
                      "Write",
                      "Listen",
                      "Send",
                      "Manage"
                    ],
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "type": "object"
        },
        {
          "description": "The authentication info when authType is secret",
          "properties": {
            "name": {
              "description": "Username or account name for secret auth.",
              "type": "string"
            },
            "secretInfo": {
              "description": "Password or key vault secret for secret auth.",
              "oneOf": [
                {
                  "$ref": "#/definitions/SecretInfoBase"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "type": "object"
        },
        {
          "description": "The authentication info when authType is servicePrincipal certificate",
          "properties": {
            "certificate": {
              "description": "ServicePrincipal certificate for servicePrincipal auth.",
              "type": "string"
            },
            "clientId": {
              "description": "Application clientId for servicePrincipal auth.",
              "type": "string"
            },
            "deleteOrUpdateBehavior": {
              "description": "Indicates whether to clean up previous operation when Linker is updating or deleting",
              "oneOf": [
                {
                  "enum": [
                    "Default",
                    "ForcedCleanup"
                  ],
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "principalId": {
              "description": "Principal Id for servicePrincipal auth.",
              "type": "string"
            },
            "roles": {
              "description": "Optional, this value specifies the Azure roles to be assigned. Automatically ",
              "oneOf": [
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "clientId",
            "principalId",
            "certificate"
          ],
          "type": "object"
        },
        {
          "description": "The authentication info when authType is servicePrincipal secret",
          "properties": {
            "clientId": {
              "description": "ServicePrincipal application clientId for servicePrincipal auth.",
              "type": "string"
            },
            "deleteOrUpdateBehavior": {
              "description": "Indicates whether to clean up previous operation when Linker is updating or deleting",
              "oneOf": [
                {
                  "enum": [
                    "Default",
                    "ForcedCleanup"
                  ],
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "principalId": {
              "description": "Principal Id for servicePrincipal auth.",
              "type": "string"
            },
            "roles": {
              "description": "Optional, this value specifies the Azure roles to be assigned. Automatically ",
              "oneOf": [
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "secret": {
              "description": "Secret for servicePrincipal auth.",
              "type": "string"
            },
            "userName": {
              "description": "Username created in the database which is mapped to a user in AAD.",
              "type": "string"
            }
          },
          "required": [
            "clientId",
            "principalId",
            "secret"
          ],
          "type": "object"
        },
        {
          "description": "The authentication info when authType is systemAssignedIdentity",
          "properties": {
            "deleteOrUpdateBehavior": {
              "description": "Indicates whether to clean up previous operation when Linker is updating or deleting",
              "oneOf": [
                {
                  "enum": [
                    "Default",
                    "ForcedCleanup"
                  ],
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "roles": {
              "description": "Optional, this value specifies the Azure role to be assigned",
              "oneOf": [
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "userName": {
              "description": "Username created in the database which is mapped to a user in AAD.",
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "description": "The authentication info when authType is user account",
          "properties": {
            "deleteOrUpdateBehavior": {
              "description": "Indicates whether to clean up previous operation when Linker is updating or deleting",
              "oneOf": [
                {
                  "enum": [
                    "Default",
                    "ForcedCleanup"
                  ],
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "principalId": {
              "description": "Principal Id for user account.",
              "type": "string"
            },
            "roles": {
              "description": "Optional, this value specifies the Azure roles to be assigned. Automatically ",
              "oneOf": [
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "userName": {
              "description": "Username created in the database which is mapped to a user in AAD.",
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "description": "The authentication info when authType is userAssignedIdentity",
          "properties": {
            "clientId": {
              "description": "Client Id for userAssignedIdentity.",
              "type": "string"
            },
            "deleteOrUpdateBehavior": {
              "description": "Indicates whether to clean up previous operation when Linker is updating or deleting",
              "oneOf": [
                {
                  "enum": [
                    "Default",
                    "ForcedCleanup"
                  ],
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "roles": {
              "description": "Optional, this value specifies the Azure role to be assigned",
              "oneOf": [
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "subscriptionId": {
              "description": "Subscription id for userAssignedIdentity.",
              "type": "string"
            },
            "userName": {
              "description": "Username created in the database which is mapped to a user in AAD.",
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "properties": {},
      "type": "object"
    },
    "AzureResourcePropertiesBase": {
      "description": "The azure resource properties",
      "oneOf": [
        {
          "description": "The resource properties when type is Azure Key Vault",
          "properties": {
            "connectAsKubernetesCsiDriver": {
              "description": "True if connect via Kubernetes CSI Driver.",
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "type": "object"
        }
      ],
      "properties": {},
      "type": "object"
    },
    "ConfigurationInfo": {
      "description": "The configuration information, used to generate configurations or save to applications",
      "properties": {
        "action": {
          "description": "Optional, indicate whether to apply configurations on source application. If enable, generate configurations and applied to the source application. Default is enable. If optOut, no configuration change will be made on source.",
          "oneOf": [
            {
              "enum": [
                "Internal",
                "enable",
                "optOut"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "additionalConfigurations": {
          "description": "A dictionary of additional configurations to be added. Service will auto generate a set of basic configurations and this property is to full fill more customized configurations",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "customizedKeys": {
          "description": "Optional. A dictionary of default key name and customized key name mapping. If not specified, default key name will be used for generate configurations",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "daprProperties": {
          "description": "Indicates some additional properties for dapr client type",
          "oneOf": [
            {
              "$ref": "#/definitions/DaprProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "deleteOrUpdateBehavior": {
          "description": "Indicates whether to clean up previous operation when Linker is updating or deleting",
          "oneOf": [
            {
              "enum": [
                "Default",
                "ForcedCleanup"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "DaprMetadata": {
      "description": "The dapr component metadata.",
      "properties": {
        "name": {
          "description": "Metadata property name.",
          "type": "string"
        },
        "secretRef": {
          "description": "The secret name where dapr could get value",
          "type": "string"
        },
        "value": {
          "description": "Metadata property value.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DaprProperties": {
      "description": "Indicates some additional properties for dapr client type",
      "properties": {
        "componentType": {
          "description": "The dapr component type",
          "type": "string"
        },
        "metadata": {
          "description": "Additional dapr metadata",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/DaprMetadata"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "scopes": {
          "description": "The dapr component scopes",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "secretStoreComponent": {
          "description": "The name of a secret store dapr to retrieve secret",
          "type": "string"
        },
        "version": {
          "description": "The dapr component version",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DryrunParameters": {
      "description": "The parameters of the dryrun",
      "oneOf": [
        {
          "description": "The dryrun parameters for creation or update a linker",
          "properties": {
            "authInfo": {
              "description": "The authentication type.",
              "oneOf": [
                {
                  "$ref": "#/definitions/AuthInfoBase"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "clientType": {
              "description": "The application client type",
              "oneOf": [
                {
                  "enum": [
                    "none",
                    "dotnet",
                    "java",
                    "python",
                    "go",
                    "php",
                    "ruby",
                    "django",
                    "nodejs",
                    "springBoot",
                    "kafka-springBoot",
                    "dapr"
                  ],
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "configurationInfo": {
              "description": "The connection information consumed by applications, including secrets, connection strings.",
              "oneOf": [
                {
                  "$ref": "#/definitions/ConfigurationInfo"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "publicNetworkSolution": {
              "description": "The network solution.",
              "oneOf": [
                {
                  "$ref": "#/definitions/PublicNetworkSolution"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "scope": {
              "description": "connection scope in source service.",
              "type": "string"
            },
            "secretStore": {
              "description": "An option to store secret value in secure place",
              "oneOf": [
                {
                  "$ref": "#/definitions/SecretStore"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "targetService": {
              "description": "The target service properties",
              "oneOf": [
                {
                  "$ref": "#/definitions/TargetServiceBase"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "vNetSolution": {
              "description": "The VNet solution.",
              "oneOf": [
                {
                  "$ref": "#/definitions/VNetSolution"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "type": "object"
        }
      ],
      "properties": {},
      "type": "object"
    },
    "DryrunProperties": {
      "description": "The properties of the dryrun job",
      "properties": {
        "parameters": {
          "description": "The parameters of the dryrun",
          "oneOf": [
            {
              "$ref": "#/definitions/DryrunParameters"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "FirewallRules": {
      "description": "Target service's firewall rules. to allow connections from source service.",
      "properties": {
        "azureServices": {
          "description": "Allow Azure services to access the target service if true.",
          "oneOf": [
            {
              "enum": [
                "true",
                "false"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "callerClientIP": {
          "description": "Allow caller client IP to access the target service if true. the property is used when connecting local application to target service.",
          "oneOf": [
            {
              "enum": [
                "true",
                "false"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "ipRanges": {
          "description": "This value specifies the set of IP addresses or IP address ranges in CIDR form to be included as the allowed list of client IPs for a given database account.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "LinkerProperties": {
      "description": "The properties of the Linker.",
      "properties": {
        "authInfo": {
          "description": "The authentication type.",
          "oneOf": [
            {
              "$ref": "#/definitions/AuthInfoBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "clientType": {
          "description": "The application client type",
          "oneOf": [
            {
              "enum": [
                "none",
                "dotnet",
                "java",
                "python",
                "go",
                "php",
                "ruby",
                "django",
                "nodejs",
                "springBoot",
                "kafka-springBoot",
                "dapr"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "configurationInfo": {
          "description": "The connection information consumed by applications, including secrets, connection strings.",
          "oneOf": [
            {
              "$ref": "#/definitions/ConfigurationInfo"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "publicNetworkSolution": {
          "description": "The network solution.",
          "oneOf": [
            {
              "$ref": "#/definitions/PublicNetworkSolution"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "scope": {
          "description": "connection scope in source service.",
          "type": "string"
        },
        "secretStore": {
          "description": "An option to store secret value in secure place",
          "oneOf": [
            {
              "$ref": "#/definitions/SecretStore"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "targetService": {
          "description": "The target service properties",
          "oneOf": [
            {
              "$ref": "#/definitions/TargetServiceBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "vNetSolution": {
          "description": "The VNet solution.",
          "oneOf": [
            {
              "$ref": "#/definitions/VNetSolution"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "PublicNetworkSolution": {
      "description": "Indicates public network solution, include firewall rules",
      "properties": {
        "action": {
          "description": "Optional. Indicates public network solution. If enable, enable public network access of target service with best try. Default is enable. If optOut, opt out public network access configuration.",
          "oneOf": [
            {
              "enum": [
                "Internal",
                "enable",
                "optOut"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "deleteOrUpdateBehavior": {
          "description": "Indicates whether to clean up previous operation(such as firewall rules) when Linker is updating or deleting",
          "oneOf": [
            {
              "enum": [
                "Default",
                "ForcedCleanup"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "firewallRules": {
          "description": "Describe firewall rules of target service to make sure source application could connect to the target.",
          "oneOf": [
            {
              "$ref": "#/definitions/FirewallRules"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "SecretInfoBase": {
      "description": "The secret info",
      "oneOf": [
        {
          "description": "The secret info when type is keyVaultSecretReference. It's for scenario that user provides a secret stored in user's keyvault and source is Azure Kubernetes. The key Vault's resource id is linked to secretStore.keyVaultId.",
          "properties": {
            "name": {
              "description": "Name of the Key Vault secret.",
              "type": "string"
            },
            "version": {
              "description": "Version of the Key Vault secret.",
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "description": "The secret info when type is keyVaultSecretUri. It's for scenario that user provides a secret stored in user's keyvault and source is Web App, Spring Cloud or Container App.",
          "properties": {
            "value": {
              "description": "URI to the keyvault secret",
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "description": "The secret info when type is rawValue. It's for scenarios that user input the secret.",
          "properties": {
            "value": {
              "description": "The actual value of the secret.",
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "properties": {},
      "type": "object"
    },
    "SecretStore": {
      "description": "An option to store secret value in secure place",
      "properties": {
        "keyVaultId": {
          "description": "The key vault id to store secret",
          "type": "string"
        },
        "keyVaultSecretName": {
          "description": "The key vault secret name to store secret, only valid when storing one secret",
          "type": "string"
        }
      },
      "type": "object"
    },
    "TargetServiceBase": {
      "description": "The target service properties",
      "oneOf": [
        {
          "description": "The azure resource info when target service type is AzureResource",
          "properties": {
            "id": {
              "description": "The Id of azure resource.",
              "type": "string"
            },
            "resourceProperties": {
              "description": "The azure resource connection related properties.",
              "oneOf": [
                {
                  "$ref": "#/definitions/AzureResourcePropertiesBase"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "type": "object"
        },
        {
          "description": "The service properties when target service type is ConfluentBootstrapServer",
          "properties": {
            "endpoint": {
              "description": "The endpoint of service.",
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "description": "The service properties when target service type is ConfluentSchemaRegistry",
          "properties": {
            "endpoint": {
              "description": "The endpoint of service.",
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "description": "The service properties when target service type is SelfHostedServer",
          "properties": {
            "endpoint": {
              "description": "The endpoint of service.",
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "properties": {},
      "type": "object"
    },
    "VNetSolution": {
      "description": "The VNet solution for linker",
      "properties": {
        "deleteOrUpdateBehavior": {
          "description": "Indicates whether to clean up previous operation when Linker is updating or deleting",
          "oneOf": [
            {
              "enum": [
                "Default",
                "ForcedCleanup"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "description": "Type of VNet solution.",
          "oneOf": [
            {
              "enum": [
                "serviceEndpoint",
                "privateLink"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    }
  }
}