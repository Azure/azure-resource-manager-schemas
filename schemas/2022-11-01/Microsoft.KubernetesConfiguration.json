{
  "id": "https://schema.management.azure.com/schemas/2022-11-01/Microsoft.KubernetesConfiguration.json#",
  "title": "Microsoft.KubernetesConfiguration",
  "description": "Microsoft KubernetesConfiguration Resource Types",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "extension_resourceDefinitions": {
    "extensions": {
      "description": "Microsoft.KubernetesConfiguration/extensions",
      "properties": {
        "apiVersion": {
          "enum": [
            "2022-11-01"
          ],
          "type": "string"
        },
        "identity": {
          "description": "Identity of the Extension resource",
          "oneOf": [
            {
              "$ref": "#/definitions/Identity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "name": {
          "description": "Name of the Extension.",
          "type": "string"
        },
        "plan": {
          "description": "The plan information.",
          "oneOf": [
            {
              "$ref": "#/definitions/Plan"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Properties of an Extension resource",
          "oneOf": [
            {
              "$ref": "#/definitions/ExtensionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.KubernetesConfiguration/extensions"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "fluxConfigurations": {
      "description": "Microsoft.KubernetesConfiguration/fluxConfigurations",
      "properties": {
        "apiVersion": {
          "enum": [
            "2022-11-01"
          ],
          "type": "string"
        },
        "name": {
          "description": "Name of the Flux Configuration.",
          "type": "string"
        },
        "properties": {
          "description": "Properties to create a Flux Configuration resource",
          "oneOf": [
            {
              "$ref": "#/definitions/FluxConfigurationProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.KubernetesConfiguration/fluxConfigurations"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "sourceControlConfigurations": {
      "description": "Microsoft.KubernetesConfiguration/sourceControlConfigurations",
      "properties": {
        "apiVersion": {
          "enum": [
            "2022-11-01"
          ],
          "type": "string"
        },
        "name": {
          "description": "Name of the Source Control Configuration.",
          "type": "string"
        },
        "properties": {
          "description": "Properties to create a Source Control Configuration resource",
          "oneOf": [
            {
              "$ref": "#/definitions/SourceControlConfigurationProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.KubernetesConfiguration/sourceControlConfigurations"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    }
  },
  "definitions": {
    "AzureBlobDefinition": {
      "description": "Parameters to reconcile to the AzureBlob source kind type.",
      "properties": {
        "accountKey": {
          "description": "The account key (shared key) to access the storage account",
          "type": "string"
        },
        "containerName": {
          "description": "The Azure Blob container name to sync from the url endpoint for the flux configuration.",
          "type": "string"
        },
        "localAuthRef": {
          "description": "Name of a local secret on the Kubernetes cluster to use as the authentication secret rather than the managed or user-provided configuration secrets.",
          "type": "string"
        },
        "managedIdentity": {
          "description": "Parameters to authenticate using a Managed Identity.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedIdentityDefinition"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "sasToken": {
          "description": "The Shared Access token to access the storage container",
          "type": "string"
        },
        "servicePrincipal": {
          "description": "Parameters to authenticate using Service Principal.",
          "oneOf": [
            {
              "$ref": "#/definitions/ServicePrincipalDefinition"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "syncIntervalInSeconds": {
          "description": "The interval at which to re-reconcile the cluster Azure Blob source with the remote.",
          "oneOf": [
            {
              "default": 600,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "timeoutInSeconds": {
          "description": "The maximum time to attempt to reconcile the cluster Azure Blob source with the remote.",
          "oneOf": [
            {
              "default": 600,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "url": {
          "description": "The URL to sync for the flux configuration Azure Blob storage account.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "BucketDefinition": {
      "description": "Parameters to reconcile to the Bucket source kind type.",
      "properties": {
        "accessKey": {
          "description": "Plaintext access key used to securely access the S3 bucket",
          "type": "string"
        },
        "bucketName": {
          "description": "The bucket name to sync from the url endpoint for the flux configuration.",
          "type": "string"
        },
        "insecure": {
          "description": "Specify whether to use insecure communication when puling data from the S3 bucket.",
          "oneOf": [
            {
              "default": true,
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "localAuthRef": {
          "description": "Name of a local secret on the Kubernetes cluster to use as the authentication secret rather than the managed or user-provided configuration secrets.",
          "type": "string"
        },
        "syncIntervalInSeconds": {
          "description": "The interval at which to re-reconcile the cluster bucket source with the remote.",
          "oneOf": [
            {
              "default": 600,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "timeoutInSeconds": {
          "description": "The maximum time to attempt to reconcile the cluster bucket source with the remote.",
          "oneOf": [
            {
              "default": 600,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "url": {
          "description": "The URL to sync for the flux configuration S3 bucket.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ExtensionProperties": {
      "description": "Properties of an Extension resource",
      "properties": {
        "aksAssignedIdentity": {
          "description": "Identity of the Extension resource in an AKS cluster",
          "oneOf": [
            {
              "$ref": "#/definitions/ExtensionPropertiesAksAssignedIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "autoUpgradeMinorVersion": {
          "description": "Flag to note if this extension participates in auto upgrade of minor version, or not.",
          "oneOf": [
            {
              "default": true,
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "configurationProtectedSettings": {
          "description": "Configuration settings that are sensitive, as name-value pairs for configuring this extension.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "configurationSettings": {
          "description": "Configuration settings, as name-value pairs for configuring this extension.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "extensionType": {
          "description": "Type of the Extension, of which this resource is an instance of.  It must be one of the Extension Types registered with Microsoft.KubernetesConfiguration by the Extension publisher.",
          "type": "string"
        },
        "releaseTrain": {
          "default": "Stable",
          "description": "ReleaseTrain this extension participates in for auto-upgrade (e.g. Stable, Preview, etc.) - only if autoUpgradeMinorVersion is 'true'.",
          "type": "string"
        },
        "scope": {
          "description": "Scope at which the extension is installed.",
          "oneOf": [
            {
              "$ref": "#/definitions/Scope"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "statuses": {
          "description": "Status from this extension.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/ExtensionStatus"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "version": {
          "description": "User-specified version of the extension for this extension to 'pin'. To use 'version', autoUpgradeMinorVersion must be 'false'.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ExtensionPropertiesAksAssignedIdentity": {
      "description": "Identity of the Extension resource in an AKS cluster",
      "properties": {
        "type": {
          "description": "The identity type.",
          "oneOf": [
            {
              "enum": [
                "SystemAssigned",
                "UserAssigned"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ExtensionStatus": {
      "description": "Status from the extension.",
      "properties": {
        "code": {
          "description": "Status code provided by the Extension",
          "type": "string"
        },
        "displayStatus": {
          "description": "Short description of status of the extension.",
          "type": "string"
        },
        "level": {
          "description": "Level of the status.",
          "oneOf": [
            {
              "enum": [
                "Error",
                "Warning",
                "Information"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "message": {
          "description": "Detailed message of the status from the Extension.",
          "type": "string"
        },
        "time": {
          "description": "DateLiteral (per ISO8601) noting the time of installation status.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "FluxConfigurationProperties": {
      "description": "Properties to create a Flux Configuration resource",
      "properties": {
        "azureBlob": {
          "description": "Parameters to reconcile to the AzureBlob source kind type.",
          "oneOf": [
            {
              "$ref": "#/definitions/AzureBlobDefinition"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "bucket": {
          "description": "Parameters to reconcile to the Bucket source kind type.",
          "oneOf": [
            {
              "$ref": "#/definitions/BucketDefinition"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "configurationProtectedSettings": {
          "description": "Key-value pairs of protected configuration settings for the configuration",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "gitRepository": {
          "description": "Parameters to reconcile to the GitRepository source kind type.",
          "oneOf": [
            {
              "$ref": "#/definitions/GitRepositoryDefinition"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "kustomizations": {
          "description": "Array of kustomizations used to reconcile the artifact pulled by the source type on the cluster.",
          "oneOf": [
            {
              "additionalProperties": {
                "$ref": "#/definitions/KustomizationDefinition"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "namespace": {
          "default": "default",
          "description": "The namespace to which this configuration is installed to. Maximum of 253 lower case alphanumeric characters, hyphen and period only.",
          "type": "string"
        },
        "scope": {
          "description": "Scope at which the operator will be installed.",
          "oneOf": [
            {
              "enum": [
                "cluster",
                "namespace"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "sourceKind": {
          "description": "Source Kind to pull the configuration data from.",
          "oneOf": [
            {
              "enum": [
                "GitRepository",
                "Bucket",
                "AzureBlob"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "suspend": {
          "description": "Whether this configuration should suspend its reconciliation of its kustomizations and sources.",
          "oneOf": [
            {
              "default": false,
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "GitRepositoryDefinition": {
      "description": "Parameters to reconcile to the GitRepository source kind type.",
      "properties": {
        "httpsCACert": {
          "description": "Base64-encoded HTTPS certificate authority contents used to access git private git repositories over HTTPS",
          "type": "string"
        },
        "httpsUser": {
          "description": "Plaintext HTTPS username used to access private git repositories over HTTPS",
          "type": "string"
        },
        "localAuthRef": {
          "description": "Name of a local secret on the Kubernetes cluster to use as the authentication secret rather than the managed or user-provided configuration secrets.",
          "type": "string"
        },
        "repositoryRef": {
          "description": "The source reference for the GitRepository object.",
          "oneOf": [
            {
              "$ref": "#/definitions/RepositoryRefDefinition"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "sshKnownHosts": {
          "description": "Base64-encoded known_hosts value containing public SSH keys required to access private git repositories over SSH",
          "type": "string"
        },
        "syncIntervalInSeconds": {
          "description": "The interval at which to re-reconcile the cluster git repository source with the remote.",
          "oneOf": [
            {
              "default": 600,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "timeoutInSeconds": {
          "description": "The maximum time to attempt to reconcile the cluster git repository source with the remote.",
          "oneOf": [
            {
              "default": 600,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "url": {
          "description": "The URL to sync for the flux configuration git repository.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "HelmOperatorProperties": {
      "description": "Properties for Helm operator.",
      "properties": {
        "chartValues": {
          "description": "Values override for the operator Helm chart.",
          "type": "string"
        },
        "chartVersion": {
          "description": "Version of the operator Helm chart.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Identity": {
      "description": "Identity for the resource.",
      "properties": {
        "type": {
          "description": "The identity type.",
          "oneOf": [
            {
              "enum": [
                "SystemAssigned"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "KustomizationDefinition": {
      "description": "The Kustomization defining how to reconcile the artifact pulled by the source type on the cluster.",
      "properties": {
        "dependsOn": {
          "description": "Specifies other Kustomizations that this Kustomization depends on. This Kustomization will not reconcile until all dependencies have completed their reconciliation.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "force": {
          "description": "Enable/disable re-creating Kubernetes resources on the cluster when patching fails due to an immutable field change.",
          "oneOf": [
            {
              "default": false,
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "path": {
          "default": "",
          "description": "The path in the source reference to reconcile on the cluster.",
          "type": "string"
        },
        "prune": {
          "description": "Enable/disable garbage collections of Kubernetes objects created by this Kustomization.",
          "oneOf": [
            {
              "default": false,
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "retryIntervalInSeconds": {
          "description": "The interval at which to re-reconcile the Kustomization on the cluster in the event of failure on reconciliation.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "syncIntervalInSeconds": {
          "description": "The interval at which to re-reconcile the Kustomization on the cluster.",
          "oneOf": [
            {
              "default": 600,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "timeoutInSeconds": {
          "description": "The maximum time to attempt to reconcile the Kustomization on the cluster.",
          "oneOf": [
            {
              "default": 600,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ManagedIdentityDefinition": {
      "description": "Parameters to authenticate using a Managed Identity.",
      "properties": {
        "clientId": {
          "description": "The client Id for authenticating a Managed Identity.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Plan": {
      "description": "Plan for the resource.",
      "properties": {
        "name": {
          "description": "A user defined name of the 3rd Party Artifact that is being procured.",
          "type": "string"
        },
        "product": {
          "description": "The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. ",
          "type": "string"
        },
        "promotionCode": {
          "description": "A publisher provided promotion code as provisioned in Data Market for the said product/artifact.",
          "type": "string"
        },
        "publisher": {
          "description": "The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic",
          "type": "string"
        },
        "version": {
          "description": "The version of the desired product/artifact.",
          "type": "string"
        }
      },
      "required": [
        "name",
        "publisher",
        "product"
      ],
      "type": "object"
    },
    "RepositoryRefDefinition": {
      "description": "The source reference for the GitRepository object.",
      "properties": {
        "branch": {
          "description": "The git repository branch name to checkout.",
          "type": "string"
        },
        "commit": {
          "description": "The commit SHA to checkout. This value must be combined with the branch name to be valid. This takes precedence over semver.",
          "type": "string"
        },
        "semver": {
          "description": "The semver range used to match against git repository tags. This takes precedence over tag.",
          "type": "string"
        },
        "tag": {
          "description": "The git repository tag name to checkout. This takes precedence over branch.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Scope": {
      "description": "Scope of the extension. It can be either Cluster or Namespace; but not both.",
      "properties": {
        "cluster": {
          "description": "Specifies that the scope of the extension is Cluster",
          "oneOf": [
            {
              "$ref": "#/definitions/ScopeCluster"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "namespace": {
          "description": "Specifies that the scope of the extension is Namespace",
          "oneOf": [
            {
              "$ref": "#/definitions/ScopeNamespace"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ScopeCluster": {
      "description": "Specifies that the scope of the extension is Cluster",
      "properties": {
        "releaseNamespace": {
          "description": "Namespace where the extension Release must be placed, for a Cluster scoped extension.  If this namespace does not exist, it will be created",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ScopeNamespace": {
      "description": "Specifies that the scope of the extension is Namespace",
      "properties": {
        "targetNamespace": {
          "description": "Namespace where the extension will be created for an Namespace scoped extension.  If this namespace does not exist, it will be created",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ServicePrincipalDefinition": {
      "description": "Parameters to authenticate using Service Principal.",
      "properties": {
        "clientCertificate": {
          "description": "Base64-encoded certificate used to authenticate a Service Principal ",
          "type": "string"
        },
        "clientCertificatePassword": {
          "description": "The password for the certificate used to authenticate a Service Principal ",
          "type": "string"
        },
        "clientCertificateSendChain": {
          "description": "Specifies whether to include x5c header in client claims when acquiring a token to enable subject name / issuer based authentication for the Client Certificate",
          "oneOf": [
            {
              "default": false,
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "clientId": {
          "description": "The client Id for authenticating a Service Principal.",
          "type": "string"
        },
        "clientSecret": {
          "description": "The client secret for authenticating a Service Principal",
          "type": "string"
        },
        "tenantId": {
          "description": "The tenant Id for authenticating a Service Principal",
          "type": "string"
        }
      },
      "type": "object"
    },
    "SourceControlConfigurationProperties": {
      "description": "Properties to create a Source Control Configuration resource",
      "properties": {
        "configurationProtectedSettings": {
          "description": "Name-value pairs of protected configuration settings for the configuration",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "enableHelmOperator": {
          "description": "Option to enable Helm Operator for this git configuration.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "helmOperatorProperties": {
          "description": "Properties for Helm operator.",
          "oneOf": [
            {
              "$ref": "#/definitions/HelmOperatorProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "operatorInstanceName": {
          "description": "Instance name of the operator - identifying the specific configuration.",
          "type": "string"
        },
        "operatorNamespace": {
          "default": "default",
          "description": "The namespace to which this operator is installed to. Maximum of 253 lower case alphanumeric characters, hyphen and period only.",
          "type": "string"
        },
        "operatorParams": {
          "description": "Any Parameters for the Operator instance in string format.",
          "type": "string"
        },
        "operatorScope": {
          "description": "Scope at which the operator will be installed.",
          "oneOf": [
            {
              "enum": [
                "cluster",
                "namespace"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "operatorType": {
          "description": "Type of the operator",
          "oneOf": [
            {
              "enum": [
                "Flux"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "repositoryUrl": {
          "description": "Url of the SourceControl Repository.",
          "type": "string"
        },
        "sshKnownHostsContents": {
          "description": "Base64-encoded known_hosts contents containing public SSH keys required to access private Git instances",
          "type": "string"
        }
      },
      "type": "object"
    }
  }
}