{
  "id": "https://schema.management.azure.com/schemas/2023-01-01/Microsoft.Media.json#",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "title": "Microsoft.Media",
  "description": "Microsoft Media Resource Types",
  "resourceDefinitions": {
    "mediaservices": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2023-01-01"
          ]
        },
        "identity": {
          "oneOf": [
            {
              "$ref": "#/definitions/MediaServiceIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives"
        },
        "name": {
          "type": "string",
          "description": "The Media Services account name."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/MediaServiceProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Properties of the Media Services account."
        },
        "resources": {
          "type": "array",
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/mediaServices_accountFilters_childResource"
              },
              {
                "$ref": "#/definitions/mediaservices_privateEndpointConnections_childResource"
              },
              {
                "$ref": "#/definitions/mediaServices_assets_childResource"
              },
              {
                "$ref": "#/definitions/mediaServices_contentKeyPolicies_childResource"
              },
              {
                "$ref": "#/definitions/mediaServices_streamingPolicies_childResource"
              },
              {
                "$ref": "#/definitions/mediaServices_streamingLocators_childResource"
              }
            ]
          }
        },
        "tags": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Resource tags."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Media/mediaservices"
          ]
        }
      },
      "required": [
        "apiVersion",
        "location",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.Media/mediaservices"
    },
    "mediaServices_accountFilters": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2023-01-01"
          ]
        },
        "name": {
          "type": "string",
          "description": "The Account Filter name"
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/MediaFilterProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The Media Filter properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Media/mediaServices/accountFilters"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.Media/mediaServices/accountFilters"
    },
    "mediaServices_assets": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2023-01-01"
          ]
        },
        "name": {
          "type": "string",
          "description": "The Asset name."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/AssetProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The Asset properties."
        },
        "resources": {
          "type": "array",
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/mediaServices_assets_assetFilters_childResource"
              },
              {
                "$ref": "#/definitions/mediaServices_assets_tracks_childResource"
              }
            ]
          }
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Media/mediaServices/assets"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.Media/mediaServices/assets"
    },
    "mediaServices_assets_assetFilters": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2023-01-01"
          ]
        },
        "name": {
          "type": "string",
          "description": "The Asset Filter name"
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/MediaFilterProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The Media Filter properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Media/mediaServices/assets/assetFilters"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.Media/mediaServices/assets/assetFilters"
    },
    "mediaServices_assets_tracks": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2023-01-01"
          ]
        },
        "name": {
          "type": "string",
          "description": "The Asset Track name."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/AssetTrackProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Properties of a video, audio or text track in the asset."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Media/mediaServices/assets/tracks"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.Media/mediaServices/assets/tracks"
    },
    "mediaServices_contentKeyPolicies": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2023-01-01"
          ]
        },
        "name": {
          "type": "string",
          "description": "The Content Key Policy name."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/ContentKeyPolicyProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The properties of the Content Key Policy."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Media/mediaServices/contentKeyPolicies"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.Media/mediaServices/contentKeyPolicies"
    },
    "mediaservices_privateEndpointConnections": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2023-01-01"
          ]
        },
        "name": {
          "type": "string"
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/PrivateEndpointConnectionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Properties of the PrivateEndpointConnectProperties."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Media/mediaservices/privateEndpointConnections"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.Media/mediaservices/privateEndpointConnections"
    },
    "mediaServices_streamingLocators": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2023-01-01"
          ]
        },
        "name": {
          "type": "string",
          "description": "The Streaming Locator name."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/StreamingLocatorProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Properties of the Streaming Locator."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Media/mediaServices/streamingLocators"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.Media/mediaServices/streamingLocators"
    },
    "mediaServices_streamingPolicies": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2023-01-01"
          ]
        },
        "name": {
          "type": "string",
          "description": "The Streaming Policy name."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/StreamingPolicyProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Class to specify properties of Streaming Policy"
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Media/mediaServices/streamingPolicies"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.Media/mediaServices/streamingPolicies"
    }
  },
  "definitions": {
    "AccessControl": {
      "type": "object",
      "properties": {
        "defaultAction": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Allow",
                "Deny"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The behavior for IP access control in Key Delivery."
        },
        "ipAllowList": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The IP allow list for access control in Key Delivery. If the default action is set to 'Allow', the IP allow list must be empty."
        }
      }
    },
    "AccountEncryption": {
      "type": "object",
      "properties": {
        "identity": {
          "oneOf": [
            {
              "$ref": "#/definitions/ResourceIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "keyVaultProperties": {
          "oneOf": [
            {
              "$ref": "#/definitions/KeyVaultProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "SystemKey",
                "CustomerKey"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The type of key used to encrypt the Account Key."
        }
      },
      "required": [
        "type"
      ]
    },
    "AssetProperties": {
      "type": "object",
      "properties": {
        "alternateId": {
          "type": "string",
          "description": "The alternate ID of the Asset."
        },
        "container": {
          "type": "string",
          "description": "The name of the asset blob container."
        },
        "description": {
          "type": "string",
          "description": "The Asset description."
        },
        "encryptionScope": {
          "type": "string",
          "description": "The Asset container encryption scope in the storage account."
        },
        "storageAccountName": {
          "type": "string",
          "description": "The name of the storage account."
        }
      },
      "description": "The Asset properties."
    },
    "AssetTrackProperties": {
      "type": "object",
      "properties": {
        "track": {
          "oneOf": [
            {
              "$ref": "#/definitions/TrackBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Base type for concrete track types. A derived type must be used to represent the Track."
        }
      },
      "description": "Properties of a video, audio or text track in the asset."
    },
    "AudioTrack": {
      "type": "object",
      "properties": {
        "@odata.type": {
          "type": "string",
          "enum": [
            "#Microsoft.Media.AudioTrack"
          ]
        },
        "dashSettings": {
          "oneOf": [
            {
              "$ref": "#/definitions/DashSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The DASH setting for a track."
        },
        "displayName": {
          "type": "string",
          "description": "The display name of the audio track on a video player. In HLS, this maps to the NAME attribute of EXT-X-MEDIA."
        },
        "fileName": {
          "type": "string",
          "description": "The file name to the source file. This file is located in the storage container of the asset."
        },
        "hlsSettings": {
          "oneOf": [
            {
              "$ref": "#/definitions/HlsSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The HLS setting for a track."
        },
        "languageCode": {
          "type": "string",
          "description": "The RFC5646 language code for the audio track."
        },
        "mpeg4TrackId": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The MPEG-4 audio track ID for the audio track."
        }
      },
      "required": [
        "@odata.type"
      ],
      "description": "Represents an audio track in the asset."
    },
    "CbcsDrmConfiguration": {
      "type": "object",
      "properties": {
        "fairPlay": {
          "oneOf": [
            {
              "$ref": "#/definitions/StreamingPolicyFairPlayConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Class to specify configurations of FairPlay in Streaming Policy"
        },
        "playReady": {
          "oneOf": [
            {
              "$ref": "#/definitions/StreamingPolicyPlayReadyConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Class to specify configurations of PlayReady in Streaming Policy"
        },
        "widevine": {
          "oneOf": [
            {
              "$ref": "#/definitions/StreamingPolicyWidevineConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Class to specify configurations of Widevine in Streaming Policy"
        }
      },
      "description": "Class to specify DRM configurations of CommonEncryptionCbcs scheme in Streaming Policy"
    },
    "CencDrmConfiguration": {
      "type": "object",
      "properties": {
        "playReady": {
          "oneOf": [
            {
              "$ref": "#/definitions/StreamingPolicyPlayReadyConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Class to specify configurations of PlayReady in Streaming Policy"
        },
        "widevine": {
          "oneOf": [
            {
              "$ref": "#/definitions/StreamingPolicyWidevineConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Class to specify configurations of Widevine in Streaming Policy"
        }
      },
      "description": "Class to specify DRM configurations of CommonEncryptionCenc scheme in Streaming Policy"
    },
    "ClearKeyEncryptionConfiguration": {
      "type": "object",
      "properties": {
        "customKeysAcquisitionUrlTemplate": {
          "type": "string",
          "description": "Template for the URL of the custom service delivering content keys to end user players. Not required when using Azure Media Services for issuing licenses. The template supports replaceable tokens that the service will update at runtime with the value specific to the request.  The currently supported token value is {AlternativeMediaId}, which is replaced with the value of StreamingLocatorId.AlternativeMediaId."
        }
      },
      "description": "Class to specify ClearKey configuration of common encryption schemes in Streaming Policy"
    },
    "CommonEncryptionCbcs": {
      "type": "object",
      "properties": {
        "clearKeyEncryptionConfiguration": {
          "oneOf": [
            {
              "$ref": "#/definitions/ClearKeyEncryptionConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Class to specify ClearKey configuration of common encryption schemes in Streaming Policy"
        },
        "clearTracks": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TrackSelection"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Representing which tracks should not be encrypted"
        },
        "contentKeys": {
          "oneOf": [
            {
              "$ref": "#/definitions/StreamingPolicyContentKeys"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Class to specify properties of all content keys in Streaming Policy"
        },
        "drm": {
          "oneOf": [
            {
              "$ref": "#/definitions/CbcsDrmConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Class to specify DRM configurations of CommonEncryptionCbcs scheme in Streaming Policy"
        },
        "enabledProtocols": {
          "oneOf": [
            {
              "$ref": "#/definitions/EnabledProtocols"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Class to specify which protocols are enabled"
        }
      },
      "description": "Class for CommonEncryptionCbcs encryption scheme"
    },
    "CommonEncryptionCenc": {
      "type": "object",
      "properties": {
        "clearKeyEncryptionConfiguration": {
          "oneOf": [
            {
              "$ref": "#/definitions/ClearKeyEncryptionConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Class to specify ClearKey configuration of common encryption schemes in Streaming Policy"
        },
        "clearTracks": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TrackSelection"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Representing which tracks should not be encrypted"
        },
        "contentKeys": {
          "oneOf": [
            {
              "$ref": "#/definitions/StreamingPolicyContentKeys"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Class to specify properties of all content keys in Streaming Policy"
        },
        "drm": {
          "oneOf": [
            {
              "$ref": "#/definitions/CencDrmConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Class to specify DRM configurations of CommonEncryptionCenc scheme in Streaming Policy"
        },
        "enabledProtocols": {
          "oneOf": [
            {
              "$ref": "#/definitions/EnabledProtocols"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Class to specify which protocols are enabled"
        }
      },
      "description": "Class for envelope encryption scheme"
    },
    "ContentKeyPolicyClearKeyConfiguration": {
      "type": "object",
      "properties": {
        "@odata.type": {
          "type": "string",
          "enum": [
            "#Microsoft.Media.ContentKeyPolicyClearKeyConfiguration"
          ]
        }
      },
      "required": [
        "@odata.type"
      ],
      "description": "Represents a configuration for non-DRM keys."
    },
    "ContentKeyPolicyConfiguration": {
      "type": "object",
      "oneOf": [
        {
          "$ref": "#/definitions/ContentKeyPolicyClearKeyConfiguration"
        },
        {
          "$ref": "#/definitions/ContentKeyPolicyUnknownConfiguration"
        },
        {
          "$ref": "#/definitions/ContentKeyPolicyWidevineConfiguration"
        },
        {
          "$ref": "#/definitions/ContentKeyPolicyPlayReadyConfiguration"
        },
        {
          "$ref": "#/definitions/ContentKeyPolicyFairPlayConfiguration"
        }
      ],
      "properties": {},
      "description": "Base class for Content Key Policy configuration. A derived class must be used to create a configuration."
    },
    "ContentKeyPolicyFairPlayConfiguration": {
      "type": "object",
      "properties": {
        "@odata.type": {
          "type": "string",
          "enum": [
            "#Microsoft.Media.ContentKeyPolicyFairPlayConfiguration"
          ]
        },
        "ask": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^(?:[A-Za-z0-9+\\/]{4})*(?:[A-Za-z0-9+\\/]{2}==|[A-Za-z0-9+\\/]{3}=)?$"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The key that must be used as FairPlay Application Secret key. This needs to be base64 encoded."
        },
        "fairPlayPfx": {
          "type": "string",
          "description": "The Base64 representation of FairPlay certificate in PKCS 12 (pfx) format (including private key)."
        },
        "fairPlayPfxPassword": {
          "type": "string",
          "description": "The password encrypting FairPlay certificate in PKCS 12 (pfx) format."
        },
        "offlineRentalConfiguration": {
          "oneOf": [
            {
              "$ref": "#/definitions/ContentKeyPolicyFairPlayOfflineRentalConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "rentalAndLeaseKeyType": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Unknown",
                "Undefined",
                "DualExpiry",
                "PersistentUnlimited",
                "PersistentLimited"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The rental and lease key type."
        },
        "rentalDuration": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The rental duration. Must be greater than or equal to 0."
        }
      },
      "required": [
        "@odata.type",
        "ask",
        "fairPlayPfx",
        "fairPlayPfxPassword",
        "rentalAndLeaseKeyType",
        "rentalDuration"
      ],
      "description": "Specifies a configuration for FairPlay licenses."
    },
    "ContentKeyPolicyFairPlayOfflineRentalConfiguration": {
      "type": "object",
      "properties": {
        "playbackDurationSeconds": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Playback duration"
        },
        "storageDurationSeconds": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Storage duration"
        }
      },
      "required": [
        "playbackDurationSeconds",
        "storageDurationSeconds"
      ]
    },
    "ContentKeyPolicyOpenRestriction": {
      "type": "object",
      "properties": {
        "@odata.type": {
          "type": "string",
          "enum": [
            "#Microsoft.Media.ContentKeyPolicyOpenRestriction"
          ]
        }
      },
      "required": [
        "@odata.type"
      ],
      "description": "Represents an open restriction. License or key will be delivered on every request."
    },
    "ContentKeyPolicyOption": {
      "type": "object",
      "properties": {
        "configuration": {
          "oneOf": [
            {
              "$ref": "#/definitions/ContentKeyPolicyConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Base class for Content Key Policy configuration. A derived class must be used to create a configuration."
        },
        "name": {
          "type": "string",
          "description": "The Policy Option description."
        },
        "restriction": {
          "oneOf": [
            {
              "$ref": "#/definitions/ContentKeyPolicyRestriction"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Base class for Content Key Policy restrictions. A derived class must be used to create a restriction."
        }
      },
      "required": [
        "configuration",
        "restriction"
      ],
      "description": "Represents a policy option."
    },
    "ContentKeyPolicyPlayReadyConfiguration": {
      "type": "object",
      "properties": {
        "@odata.type": {
          "type": "string",
          "enum": [
            "#Microsoft.Media.ContentKeyPolicyPlayReadyConfiguration"
          ]
        },
        "licenses": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ContentKeyPolicyPlayReadyLicense"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The PlayReady licenses."
        },
        "responseCustomData": {
          "type": "string",
          "description": "The custom response data."
        }
      },
      "required": [
        "@odata.type",
        "licenses"
      ],
      "description": "Specifies a configuration for PlayReady licenses."
    },
    "ContentKeyPolicyPlayReadyContentEncryptionKeyFromHeader": {
      "type": "object",
      "properties": {
        "@odata.type": {
          "type": "string",
          "enum": [
            "#Microsoft.Media.ContentKeyPolicyPlayReadyContentEncryptionKeyFromHeader"
          ]
        }
      },
      "required": [
        "@odata.type"
      ],
      "description": "Specifies that the content key ID is in the PlayReady header."
    },
    "ContentKeyPolicyPlayReadyContentEncryptionKeyFromKeyIdentifier": {
      "type": "object",
      "properties": {
        "@odata.type": {
          "type": "string",
          "enum": [
            "#Microsoft.Media.ContentKeyPolicyPlayReadyContentEncryptionKeyFromKeyIdentifier"
          ]
        },
        "keyId": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^[0-9a-fA-F]{8}(-[0-9a-fA-F]{4}){3}-[0-9a-fA-F]{12}$"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The content key ID."
        }
      },
      "required": [
        "@odata.type",
        "keyId"
      ],
      "description": "Specifies that the content key ID is specified in the PlayReady configuration."
    },
    "ContentKeyPolicyPlayReadyContentKeyLocation": {
      "type": "object",
      "oneOf": [
        {
          "$ref": "#/definitions/ContentKeyPolicyPlayReadyContentEncryptionKeyFromHeader"
        },
        {
          "$ref": "#/definitions/ContentKeyPolicyPlayReadyContentEncryptionKeyFromKeyIdentifier"
        }
      ],
      "properties": {},
      "description": "Base class for content key ID location. A derived class must be used to represent the location."
    },
    "ContentKeyPolicyPlayReadyExplicitAnalogTelevisionRestriction": {
      "type": "object",
      "properties": {
        "bestEffort": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Indicates whether this restriction is enforced on a Best Effort basis."
        },
        "configurationData": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Configures the restriction control bits. Must be between 0 and 3 inclusive."
        }
      },
      "required": [
        "bestEffort",
        "configurationData"
      ],
      "description": "Configures the Explicit Analog Television Output Restriction control bits. For further details see the PlayReady Compliance Rules."
    },
    "ContentKeyPolicyPlayReadyLicense": {
      "type": "object",
      "properties": {
        "allowTestDevices": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "A flag indicating whether test devices can use the license."
        },
        "beginDate": {
          "type": "string",
          "format": "date-time",
          "description": "The begin date of license"
        },
        "contentKeyLocation": {
          "oneOf": [
            {
              "$ref": "#/definitions/ContentKeyPolicyPlayReadyContentKeyLocation"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Base class for content key ID location. A derived class must be used to represent the location."
        },
        "contentType": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Unknown",
                "Unspecified",
                "UltraVioletDownload",
                "UltraVioletStreaming"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The PlayReady content type."
        },
        "expirationDate": {
          "type": "string",
          "format": "date-time",
          "description": "The expiration date of license."
        },
        "gracePeriod": {
          "type": "string",
          "format": "duration",
          "description": "The grace period of license."
        },
        "licenseType": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Unknown",
                "NonPersistent",
                "Persistent"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The license type."
        },
        "playRight": {
          "oneOf": [
            {
              "$ref": "#/definitions/ContentKeyPolicyPlayReadyPlayRight"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Configures the Play Right in the PlayReady license."
        },
        "relativeBeginDate": {
          "type": "string",
          "format": "duration",
          "description": "The relative begin date of license."
        },
        "relativeExpirationDate": {
          "type": "string",
          "format": "duration",
          "description": "The relative expiration date of license."
        },
        "securityLevel": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Unknown",
                "SL150",
                "SL2000",
                "SL3000"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The security level."
        }
      },
      "required": [
        "allowTestDevices",
        "contentKeyLocation",
        "contentType",
        "licenseType"
      ],
      "description": "The PlayReady license"
    },
    "ContentKeyPolicyPlayReadyPlayRight": {
      "type": "object",
      "properties": {
        "agcAndColorStripeRestriction": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Configures Automatic Gain Control (AGC) and Color Stripe in the license. Must be between 0 and 3 inclusive."
        },
        "allowPassingVideoContentToUnknownOutput": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Unknown",
                "NotAllowed",
                "Allowed",
                "AllowedWithVideoConstriction"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Configures Unknown output handling settings of the license."
        },
        "analogVideoOpl": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Specifies the output protection level for compressed digital audio."
        },
        "compressedDigitalAudioOpl": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Specifies the output protection level for compressed digital audio."
        },
        "compressedDigitalVideoOpl": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Specifies the output protection level for compressed digital video."
        },
        "digitalVideoOnlyContentRestriction": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Enables the Image Constraint For Analog Component Video Restriction in the license."
        },
        "explicitAnalogTelevisionOutputRestriction": {
          "oneOf": [
            {
              "$ref": "#/definitions/ContentKeyPolicyPlayReadyExplicitAnalogTelevisionRestriction"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Configures the Explicit Analog Television Output Restriction control bits. For further details see the PlayReady Compliance Rules."
        },
        "firstPlayExpiration": {
          "type": "string",
          "format": "duration",
          "description": "The amount of time that the license is valid after the license is first used to play content."
        },
        "imageConstraintForAnalogComponentVideoRestriction": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Enables the Image Constraint For Analog Component Video Restriction in the license."
        },
        "imageConstraintForAnalogComputerMonitorRestriction": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Enables the Image Constraint For Analog Component Video Restriction in the license."
        },
        "scmsRestriction": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Configures the Serial Copy Management System (SCMS) in the license. Must be between 0 and 3 inclusive."
        },
        "uncompressedDigitalAudioOpl": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Specifies the output protection level for uncompressed digital audio."
        },
        "uncompressedDigitalVideoOpl": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Specifies the output protection level for uncompressed digital video."
        }
      },
      "required": [
        "allowPassingVideoContentToUnknownOutput",
        "digitalVideoOnlyContentRestriction",
        "imageConstraintForAnalogComponentVideoRestriction",
        "imageConstraintForAnalogComputerMonitorRestriction"
      ],
      "description": "Configures the Play Right in the PlayReady license."
    },
    "ContentKeyPolicyProperties": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "A description for the Policy."
        },
        "options": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ContentKeyPolicyOption"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The Key Policy options."
        }
      },
      "required": [
        "options"
      ],
      "description": "The properties of the Content Key Policy."
    },
    "ContentKeyPolicyRestriction": {
      "type": "object",
      "oneOf": [
        {
          "$ref": "#/definitions/ContentKeyPolicyOpenRestriction"
        },
        {
          "$ref": "#/definitions/ContentKeyPolicyUnknownRestriction"
        },
        {
          "$ref": "#/definitions/ContentKeyPolicyTokenRestriction"
        }
      ],
      "properties": {},
      "description": "Base class for Content Key Policy restrictions. A derived class must be used to create a restriction."
    },
    "ContentKeyPolicyRestrictionTokenKey": {
      "type": "object",
      "oneOf": [
        {
          "$ref": "#/definitions/ContentKeyPolicySymmetricTokenKey"
        },
        {
          "$ref": "#/definitions/ContentKeyPolicyRsaTokenKey"
        },
        {
          "$ref": "#/definitions/ContentKeyPolicyX509CertificateTokenKey"
        }
      ],
      "properties": {},
      "description": "Base class for Content Key Policy key for token validation. A derived class must be used to create a token key."
    },
    "ContentKeyPolicyRsaTokenKey": {
      "type": "object",
      "properties": {
        "@odata.type": {
          "type": "string",
          "enum": [
            "#Microsoft.Media.ContentKeyPolicyRsaTokenKey"
          ]
        },
        "exponent": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^(?:[A-Za-z0-9+\\/]{4})*(?:[A-Za-z0-9+\\/]{2}==|[A-Za-z0-9+\\/]{3}=)?$"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The RSA Parameter exponent"
        },
        "modulus": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^(?:[A-Za-z0-9+\\/]{4})*(?:[A-Za-z0-9+\\/]{2}==|[A-Za-z0-9+\\/]{3}=)?$"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The RSA Parameter modulus"
        }
      },
      "required": [
        "@odata.type",
        "exponent",
        "modulus"
      ],
      "description": "Specifies a RSA key for token validation"
    },
    "ContentKeyPolicySymmetricTokenKey": {
      "type": "object",
      "properties": {
        "@odata.type": {
          "type": "string",
          "enum": [
            "#Microsoft.Media.ContentKeyPolicySymmetricTokenKey"
          ]
        },
        "keyValue": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^(?:[A-Za-z0-9+\\/]{4})*(?:[A-Za-z0-9+\\/]{2}==|[A-Za-z0-9+\\/]{3}=)?$"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The key value of the key"
        }
      },
      "required": [
        "@odata.type",
        "keyValue"
      ],
      "description": "Specifies a symmetric key for token validation."
    },
    "ContentKeyPolicyTokenClaim": {
      "type": "object",
      "properties": {
        "claimType": {
          "type": "string",
          "description": "Token claim type."
        },
        "claimValue": {
          "type": "string",
          "description": "Token claim value."
        }
      },
      "description": "Represents a token claim."
    },
    "ContentKeyPolicyTokenRestriction": {
      "type": "object",
      "properties": {
        "@odata.type": {
          "type": "string",
          "enum": [
            "#Microsoft.Media.ContentKeyPolicyTokenRestriction"
          ]
        },
        "alternateVerificationKeys": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ContentKeyPolicyRestrictionTokenKey"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "A list of alternative verification keys."
        },
        "audience": {
          "type": "string",
          "description": "The audience for the token."
        },
        "issuer": {
          "type": "string",
          "description": "The token issuer."
        },
        "openIdConnectDiscoveryDocument": {
          "type": "string",
          "description": "The OpenID connect discovery document."
        },
        "primaryVerificationKey": {
          "oneOf": [
            {
              "$ref": "#/definitions/ContentKeyPolicyRestrictionTokenKey"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Base class for Content Key Policy key for token validation. A derived class must be used to create a token key."
        },
        "requiredClaims": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ContentKeyPolicyTokenClaim"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "A list of required token claims."
        },
        "restrictionTokenType": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Unknown",
                "Swt",
                "Jwt"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The type of token."
        }
      },
      "required": [
        "@odata.type",
        "audience",
        "issuer",
        "primaryVerificationKey",
        "restrictionTokenType"
      ],
      "description": "Represents a token restriction. Provided token must match these requirements for successful license or key delivery."
    },
    "ContentKeyPolicyUnknownConfiguration": {
      "type": "object",
      "properties": {
        "@odata.type": {
          "type": "string",
          "enum": [
            "#Microsoft.Media.ContentKeyPolicyUnknownConfiguration"
          ]
        }
      },
      "required": [
        "@odata.type"
      ],
      "description": "Represents a ContentKeyPolicyConfiguration that is unavailable in the current API version."
    },
    "ContentKeyPolicyUnknownRestriction": {
      "type": "object",
      "properties": {
        "@odata.type": {
          "type": "string",
          "enum": [
            "#Microsoft.Media.ContentKeyPolicyUnknownRestriction"
          ]
        }
      },
      "required": [
        "@odata.type"
      ],
      "description": "Represents a ContentKeyPolicyRestriction that is unavailable in the current API version."
    },
    "ContentKeyPolicyWidevineConfiguration": {
      "type": "object",
      "properties": {
        "@odata.type": {
          "type": "string",
          "enum": [
            "#Microsoft.Media.ContentKeyPolicyWidevineConfiguration"
          ]
        },
        "widevineTemplate": {
          "type": "string",
          "description": "The Widevine template."
        }
      },
      "required": [
        "@odata.type",
        "widevineTemplate"
      ],
      "description": "Specifies a configuration for Widevine licenses."
    },
    "ContentKeyPolicyX509CertificateTokenKey": {
      "type": "object",
      "properties": {
        "@odata.type": {
          "type": "string",
          "enum": [
            "#Microsoft.Media.ContentKeyPolicyX509CertificateTokenKey"
          ]
        },
        "rawBody": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^(?:[A-Za-z0-9+\\/]{4})*(?:[A-Za-z0-9+\\/]{2}==|[A-Za-z0-9+\\/]{3}=)?$"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The raw data field of a certificate in PKCS 12 format (X509Certificate2 in .NET)"
        }
      },
      "required": [
        "@odata.type",
        "rawBody"
      ],
      "description": "Specifies a certificate for token validation."
    },
    "DashSettings": {
      "type": "object",
      "properties": {
        "role": {
          "type": "string",
          "description": "The role for the DASH setting."
        }
      },
      "description": "The DASH setting for a track."
    },
    "DefaultKey": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string",
          "description": "Label can be used to specify Content Key when creating a Streaming Locator"
        },
        "policyName": {
          "type": "string",
          "description": "Policy used by Default Key"
        }
      },
      "description": "Class to specify properties of default content key for each encryption scheme"
    },
    "EnabledProtocols": {
      "type": "object",
      "properties": {
        "dash": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Enable DASH protocol or not"
        },
        "download": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Enable Download protocol or not"
        },
        "hls": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Enable HLS protocol or not"
        },
        "smoothStreaming": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Enable SmoothStreaming protocol or not"
        }
      },
      "required": [
        "dash",
        "download",
        "hls",
        "smoothStreaming"
      ],
      "description": "Class to specify which protocols are enabled"
    },
    "EnvelopeEncryption": {
      "type": "object",
      "properties": {
        "clearTracks": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TrackSelection"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Representing which tracks should not be encrypted"
        },
        "contentKeys": {
          "oneOf": [
            {
              "$ref": "#/definitions/StreamingPolicyContentKeys"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Class to specify properties of all content keys in Streaming Policy"
        },
        "customKeyAcquisitionUrlTemplate": {
          "type": "string",
          "description": "Template for the URL of the custom service delivering keys to end user players.  Not required when using Azure Media Services for issuing keys.  The template supports replaceable tokens that the service will update at runtime with the value specific to the request.  The currently supported token values are {AlternativeMediaId}, which is replaced with the value of StreamingLocatorId.AlternativeMediaId, and {ContentKeyId}, which is replaced with the value of identifier of the key being requested."
        },
        "enabledProtocols": {
          "oneOf": [
            {
              "$ref": "#/definitions/EnabledProtocols"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Class to specify which protocols are enabled"
        }
      },
      "description": "Class for EnvelopeEncryption encryption scheme"
    },
    "FilterTrackPropertyCondition": {
      "type": "object",
      "properties": {
        "operation": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Equal",
                "NotEqual"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The track property condition operation."
        },
        "property": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Unknown",
                "Type",
                "Name",
                "Language",
                "FourCC",
                "Bitrate"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The track property type."
        },
        "value": {
          "type": "string",
          "description": "The track property value."
        }
      },
      "required": [
        "operation",
        "property",
        "value"
      ],
      "description": "The class to specify one track property condition."
    },
    "FilterTrackSelection": {
      "type": "object",
      "properties": {
        "trackSelections": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FilterTrackPropertyCondition"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The track selections."
        }
      },
      "required": [
        "trackSelections"
      ],
      "description": "Representing a list of FilterTrackPropertyConditions to select a track.  The filters are combined using a logical AND operation."
    },
    "FirstQuality": {
      "type": "object",
      "properties": {
        "bitrate": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The first quality bitrate."
        }
      },
      "required": [
        "bitrate"
      ],
      "description": "Filter First Quality"
    },
    "HlsSettings": {
      "type": "object",
      "properties": {
        "characteristics": {
          "type": "string",
          "description": "The characteristics for the HLS setting."
        },
        "default": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The default for the HLS setting."
        },
        "forced": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The forced for the HLS setting."
        }
      },
      "description": "The HLS setting for a track."
    },
    "KeyDelivery": {
      "type": "object",
      "properties": {
        "accessControl": {
          "oneOf": [
            {
              "$ref": "#/definitions/AccessControl"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      }
    },
    "KeyVaultProperties": {
      "type": "object",
      "properties": {
        "keyIdentifier": {
          "type": "string",
          "description": "The URL of the Key Vault key used to encrypt the account. The key may either be versioned (for example https://vault/keys/mykey/version1) or reference a key without a version (for example https://vault/keys/mykey)."
        }
      }
    },
    "MediaFilterProperties": {
      "type": "object",
      "properties": {
        "firstQuality": {
          "oneOf": [
            {
              "$ref": "#/definitions/FirstQuality"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Filter First Quality"
        },
        "presentationTimeRange": {
          "oneOf": [
            {
              "$ref": "#/definitions/PresentationTimeRange"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The presentation time range, this is asset related and not recommended for Account Filter."
        },
        "tracks": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FilterTrackSelection"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The tracks selection conditions."
        }
      },
      "description": "The Media Filter properties."
    },
    "MediaServiceIdentity": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "The identity type."
        },
        "userAssignedIdentities": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/UserAssignedManagedIdentity"
              },
              "properties": {}
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The User Assigned Managed Identities."
        }
      },
      "required": [
        "type"
      ]
    },
    "MediaServiceProperties": {
      "type": "object",
      "properties": {
        "encryption": {
          "oneOf": [
            {
              "$ref": "#/definitions/AccountEncryption"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "keyDelivery": {
          "oneOf": [
            {
              "$ref": "#/definitions/KeyDelivery"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "minimumTlsVersion": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Tls10",
                "Tls11",
                "Tls12",
                "Tls13"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The minimum TLS version allowed for this account's requests. This is an optional property. If unspecified, a secure default value will be used."
        },
        "publicNetworkAccess": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Enabled",
                "Disabled"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Whether or not public network access is allowed for resources under the Media Services account."
        },
        "storageAccounts": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StorageAccount"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The storage accounts for this resource."
        },
        "storageAuthentication": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "System",
                "ManagedIdentity"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "description": "Properties of the Media Services account."
    },
    "mediaServices_accountFilters_childResource": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2023-01-01"
          ]
        },
        "name": {
          "type": "string",
          "description": "The Account Filter name"
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/MediaFilterProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The Media Filter properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "accountFilters"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.Media/mediaServices/accountFilters"
    },
    "mediaServices_assets_assetFilters_childResource": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2023-01-01"
          ]
        },
        "name": {
          "type": "string",
          "description": "The Asset Filter name"
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/MediaFilterProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The Media Filter properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "assetFilters"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.Media/mediaServices/assets/assetFilters"
    },
    "mediaServices_assets_childResource": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2023-01-01"
          ]
        },
        "name": {
          "type": "string",
          "description": "The Asset name."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/AssetProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The Asset properties."
        },
        "type": {
          "type": "string",
          "enum": [
            "assets"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.Media/mediaServices/assets"
    },
    "mediaServices_assets_tracks_childResource": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2023-01-01"
          ]
        },
        "name": {
          "type": "string",
          "description": "The Asset Track name."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/AssetTrackProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Properties of a video, audio or text track in the asset."
        },
        "type": {
          "type": "string",
          "enum": [
            "tracks"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.Media/mediaServices/assets/tracks"
    },
    "mediaServices_contentKeyPolicies_childResource": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2023-01-01"
          ]
        },
        "name": {
          "type": "string",
          "description": "The Content Key Policy name."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/ContentKeyPolicyProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The properties of the Content Key Policy."
        },
        "type": {
          "type": "string",
          "enum": [
            "contentKeyPolicies"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.Media/mediaServices/contentKeyPolicies"
    },
    "mediaservices_privateEndpointConnections_childResource": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2023-01-01"
          ]
        },
        "name": {
          "type": "string"
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/PrivateEndpointConnectionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Properties of the PrivateEndpointConnectProperties."
        },
        "type": {
          "type": "string",
          "enum": [
            "privateEndpointConnections"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.Media/mediaservices/privateEndpointConnections"
    },
    "mediaServices_streamingLocators_childResource": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2023-01-01"
          ]
        },
        "name": {
          "type": "string",
          "description": "The Streaming Locator name."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/StreamingLocatorProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Properties of the Streaming Locator."
        },
        "type": {
          "type": "string",
          "enum": [
            "streamingLocators"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.Media/mediaServices/streamingLocators"
    },
    "mediaServices_streamingPolicies_childResource": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "enum": [
            "2023-01-01"
          ]
        },
        "name": {
          "type": "string",
          "description": "The Streaming Policy name."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/StreamingPolicyProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Class to specify properties of Streaming Policy"
        },
        "type": {
          "type": "string",
          "enum": [
            "streamingPolicies"
          ]
        }
      },
      "required": [
        "apiVersion",
        "name",
        "properties",
        "type"
      ],
      "description": "Microsoft.Media/mediaServices/streamingPolicies"
    },
    "NoEncryption": {
      "type": "object",
      "properties": {
        "enabledProtocols": {
          "oneOf": [
            {
              "$ref": "#/definitions/EnabledProtocols"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Class to specify which protocols are enabled"
        }
      },
      "description": "Class for NoEncryption scheme"
    },
    "PresentationTimeRange": {
      "type": "object",
      "properties": {
        "endTimestamp": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The absolute end time boundary."
        },
        "forceEndTimestamp": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The indicator of forcing existing of end time stamp."
        },
        "liveBackoffDuration": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The relative to end right edge."
        },
        "presentationWindowDuration": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The relative to end sliding window."
        },
        "startTimestamp": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The absolute start time boundary."
        },
        "timescale": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The time scale of time stamps."
        }
      },
      "description": "The presentation time range, this is asset related and not recommended for Account Filter."
    },
    "PrivateEndpoint": {
      "type": "object",
      "properties": {},
      "description": "The Private Endpoint resource."
    },
    "PrivateEndpointConnectionProperties": {
      "type": "object",
      "properties": {
        "privateEndpoint": {
          "oneOf": [
            {
              "$ref": "#/definitions/PrivateEndpoint"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The Private Endpoint resource."
        },
        "privateLinkServiceConnectionState": {
          "oneOf": [
            {
              "$ref": "#/definitions/PrivateLinkServiceConnectionState"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "A collection of information about the state of the connection between service consumer and provider."
        },
        "provisioningState": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Succeeded",
                "Creating",
                "Deleting",
                "Failed"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The provisioning state of the private endpoint connection resource."
        }
      },
      "required": [
        "privateLinkServiceConnectionState"
      ],
      "description": "Properties of the PrivateEndpointConnectProperties."
    },
    "PrivateLinkServiceConnectionState": {
      "type": "object",
      "properties": {
        "actionsRequired": {
          "type": "string",
          "description": "A message indicating if changes on the service provider require any updates on the consumer."
        },
        "description": {
          "type": "string",
          "description": "The reason for approval/rejection of the connection."
        },
        "status": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Pending",
                "Approved",
                "Rejected"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service."
        }
      },
      "description": "A collection of information about the state of the connection between service consumer and provider."
    },
    "ResourceIdentity": {
      "type": "object",
      "properties": {
        "userAssignedIdentity": {
          "type": "string",
          "description": "The user assigned managed identity's ARM ID to use when accessing a resource."
        },
        "useSystemAssignedIdentity": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Indicates whether to use System Assigned Managed Identity. Mutual exclusive with User Assigned Managed Identity."
        }
      },
      "required": [
        "useSystemAssignedIdentity"
      ]
    },
    "StorageAccount": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the storage account resource. Media Services relies on tables and queues as well as blobs, so the primary storage account must be a Standard Storage account (either Microsoft.ClassicStorage or Microsoft.Storage). Blob only storage accounts can be added as secondary storage accounts."
        },
        "identity": {
          "oneOf": [
            {
              "$ref": "#/definitions/ResourceIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Primary",
                "Secondary"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The type of the storage account."
        }
      },
      "required": [
        "type"
      ],
      "description": "The storage account details."
    },
    "StreamingLocatorContentKey": {
      "type": "object",
      "properties": {
        "id": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^[0-9a-fA-F]{8}(-[0-9a-fA-F]{4}){3}-[0-9a-fA-F]{12}$"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "ID of Content Key"
        },
        "labelReferenceInStreamingPolicy": {
          "type": "string",
          "description": "Label of Content Key as specified in the Streaming Policy"
        },
        "value": {
          "type": "string",
          "description": "Value of Content Key"
        }
      },
      "required": [
        "id"
      ],
      "description": "Class for content key in Streaming Locator"
    },
    "StreamingLocatorProperties": {
      "type": "object",
      "properties": {
        "alternativeMediaId": {
          "type": "string",
          "description": "Alternative Media ID of this Streaming Locator"
        },
        "assetName": {
          "type": "string",
          "description": "Asset Name"
        },
        "contentKeys": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StreamingLocatorContentKey"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The ContentKeys used by this Streaming Locator."
        },
        "defaultContentKeyPolicyName": {
          "type": "string",
          "description": "Name of the default ContentKeyPolicy used by this Streaming Locator."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "The end time of the Streaming Locator."
        },
        "filters": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "A list of asset or account filters which apply to this streaming locator"
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "The start time of the Streaming Locator."
        },
        "streamingLocatorId": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^[0-9a-fA-F]{8}(-[0-9a-fA-F]{4}){3}-[0-9a-fA-F]{12}$"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The StreamingLocatorId of the Streaming Locator."
        },
        "streamingPolicyName": {
          "type": "string",
          "description": "Name of the Streaming Policy used by this Streaming Locator. Either specify the name of Streaming Policy you created or use one of the predefined Streaming Policies. The predefined Streaming Policies available are: 'Predefined_DownloadOnly', 'Predefined_ClearStreamingOnly', 'Predefined_DownloadAndClearStreaming', 'Predefined_ClearKey', 'Predefined_MultiDrmCencStreaming' and 'Predefined_MultiDrmStreaming'"
        }
      },
      "required": [
        "assetName",
        "streamingPolicyName"
      ],
      "description": "Properties of the Streaming Locator."
    },
    "StreamingPolicyContentKey": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string",
          "description": "Label can be used to specify Content Key when creating a Streaming Locator"
        },
        "policyName": {
          "type": "string",
          "description": "Policy used by Content Key"
        },
        "tracks": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TrackSelection"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Tracks which use this content key"
        }
      },
      "description": "Class to specify properties of content key"
    },
    "StreamingPolicyContentKeys": {
      "type": "object",
      "properties": {
        "defaultKey": {
          "oneOf": [
            {
              "$ref": "#/definitions/DefaultKey"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Class to specify properties of default content key for each encryption scheme"
        },
        "keyToTrackMappings": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StreamingPolicyContentKey"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Representing tracks needs separate content key"
        }
      },
      "description": "Class to specify properties of all content keys in Streaming Policy"
    },
    "StreamingPolicyFairPlayConfiguration": {
      "type": "object",
      "properties": {
        "allowPersistentLicense": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "All license to be persistent or not"
        },
        "customLicenseAcquisitionUrlTemplate": {
          "type": "string",
          "description": "Template for the URL of the custom service delivering licenses to end user players.  Not required when using Azure Media Services for issuing licenses.  The template supports replaceable tokens that the service will update at runtime with the value specific to the request.  The currently supported token values are {AlternativeMediaId}, which is replaced with the value of StreamingLocatorId.AlternativeMediaId, and {ContentKeyId}, which is replaced with the value of identifier of the key being requested."
        }
      },
      "required": [
        "allowPersistentLicense"
      ],
      "description": "Class to specify configurations of FairPlay in Streaming Policy"
    },
    "StreamingPolicyPlayReadyConfiguration": {
      "type": "object",
      "properties": {
        "customLicenseAcquisitionUrlTemplate": {
          "type": "string",
          "description": "Template for the URL of the custom service delivering licenses to end user players.  Not required when using Azure Media Services for issuing licenses.  The template supports replaceable tokens that the service will update at runtime with the value specific to the request.  The currently supported token values are {AlternativeMediaId}, which is replaced with the value of StreamingLocatorId.AlternativeMediaId, and {ContentKeyId}, which is replaced with the value of identifier of the key being requested."
        },
        "playReadyCustomAttributes": {
          "type": "string",
          "description": "Custom attributes for PlayReady"
        }
      },
      "description": "Class to specify configurations of PlayReady in Streaming Policy"
    },
    "StreamingPolicyProperties": {
      "type": "object",
      "properties": {
        "commonEncryptionCbcs": {
          "oneOf": [
            {
              "$ref": "#/definitions/CommonEncryptionCbcs"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Class for CommonEncryptionCbcs encryption scheme"
        },
        "commonEncryptionCenc": {
          "oneOf": [
            {
              "$ref": "#/definitions/CommonEncryptionCenc"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Class for envelope encryption scheme"
        },
        "defaultContentKeyPolicyName": {
          "type": "string",
          "description": "Default ContentKey used by current Streaming Policy"
        },
        "envelopeEncryption": {
          "oneOf": [
            {
              "$ref": "#/definitions/EnvelopeEncryption"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Class for EnvelopeEncryption encryption scheme"
        },
        "noEncryption": {
          "oneOf": [
            {
              "$ref": "#/definitions/NoEncryption"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Class for NoEncryption scheme"
        }
      },
      "description": "Class to specify properties of Streaming Policy"
    },
    "StreamingPolicyWidevineConfiguration": {
      "type": "object",
      "properties": {
        "customLicenseAcquisitionUrlTemplate": {
          "type": "string",
          "description": "Template for the URL of the custom service delivering licenses to end user players.  Not required when using Azure Media Services for issuing licenses.  The template supports replaceable tokens that the service will update at runtime with the value specific to the request.  The currently supported token values are {AlternativeMediaId}, which is replaced with the value of StreamingLocatorId.AlternativeMediaId, and {ContentKeyId}, which is replaced with the value of identifier of the key being requested."
        }
      },
      "description": "Class to specify configurations of Widevine in Streaming Policy"
    },
    "TextTrack": {
      "type": "object",
      "properties": {
        "@odata.type": {
          "type": "string",
          "enum": [
            "#Microsoft.Media.TextTrack"
          ]
        },
        "displayName": {
          "type": "string",
          "description": "The display name of the text track on a video player. In HLS, this maps to the NAME attribute of EXT-X-MEDIA."
        },
        "fileName": {
          "type": "string",
          "description": "The file name to the source file. This file is located in the storage container of the asset."
        },
        "hlsSettings": {
          "oneOf": [
            {
              "$ref": "#/definitions/HlsSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The HLS setting for a track."
        },
        "playerVisibility": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Hidden",
                "Visible"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "When PlayerVisibility is set to \"Visible\", the text track will be present in the DASH manifest or HLS playlist when requested by a client. When the PlayerVisibility is set to \"Hidden\", the text will not be available to the client. The default value is \"Visible\"."
        }
      },
      "required": [
        "@odata.type"
      ],
      "description": "Represents a text track in an asset. A text track is usually used for sparse data related to the audio or video tracks."
    },
    "TrackBase": {
      "type": "object",
      "oneOf": [
        {
          "$ref": "#/definitions/AudioTrack"
        },
        {
          "$ref": "#/definitions/VideoTrack"
        },
        {
          "$ref": "#/definitions/TextTrack"
        }
      ],
      "properties": {},
      "description": "Base type for concrete track types. A derived type must be used to represent the Track."
    },
    "TrackPropertyCondition": {
      "type": "object",
      "properties": {
        "operation": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Unknown",
                "Equal"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Track property condition operation."
        },
        "property": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Unknown",
                "FourCC"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "Track property type."
        },
        "value": {
          "type": "string",
          "description": "Track property value"
        }
      },
      "required": [
        "operation",
        "property"
      ],
      "description": "Class to specify one track property condition"
    },
    "TrackSelection": {
      "type": "object",
      "properties": {
        "trackSelections": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TrackPropertyCondition"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "TrackSelections is a track property condition list which can specify track(s)"
        }
      },
      "description": "Class to select a track"
    },
    "UserAssignedManagedIdentity": {
      "type": "object",
      "properties": {}
    },
    "VideoTrack": {
      "type": "object",
      "properties": {
        "@odata.type": {
          "type": "string",
          "enum": [
            "#Microsoft.Media.VideoTrack"
          ]
        }
      },
      "required": [
        "@odata.type"
      ],
      "description": "Represents a video track in the asset."
    }
  }
}