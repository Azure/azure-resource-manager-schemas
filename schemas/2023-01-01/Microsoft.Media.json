{
  "id": "https://schema.management.azure.com/schemas/2023-01-01/Microsoft.Media.json#",
  "title": "Microsoft.Media",
  "description": "Microsoft Media Resource Types",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "resourceDefinitions": {
    "mediaServices_accountFilters": {
      "description": "Microsoft.Media/mediaServices/accountFilters",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-01-01"
          ],
          "type": "string"
        },
        "name": {
          "description": "The Account Filter name",
          "type": "string"
        },
        "properties": {
          "description": "The Media Filter properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/MediaFilterProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.Media/mediaServices/accountFilters"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "mediaServices_assets": {
      "description": "Microsoft.Media/mediaServices/assets",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-01-01"
          ],
          "type": "string"
        },
        "name": {
          "description": "The Asset name.",
          "type": "string"
        },
        "properties": {
          "description": "The resource properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/AssetProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/mediaServices_assets_tracks_childResource"
              },
              {
                "$ref": "#/definitions/mediaServices_assets_assetFilters_childResource"
              }
            ]
          },
          "type": "array"
        },
        "type": {
          "enum": [
            "Microsoft.Media/mediaServices/assets"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "mediaServices_assets_assetFilters": {
      "description": "Microsoft.Media/mediaServices/assets/assetFilters",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-01-01"
          ],
          "type": "string"
        },
        "name": {
          "description": "The Asset Filter name",
          "type": "string"
        },
        "properties": {
          "description": "The Media Filter properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/MediaFilterProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.Media/mediaServices/assets/assetFilters"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "mediaServices_assets_tracks": {
      "description": "Microsoft.Media/mediaServices/assets/tracks",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-01-01"
          ],
          "type": "string"
        },
        "name": {
          "description": "The Asset Track name.",
          "type": "string"
        },
        "properties": {
          "description": "The resource properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/AssetTrackProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.Media/mediaServices/assets/tracks"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "mediaServices_contentKeyPolicies": {
      "description": "Microsoft.Media/mediaServices/contentKeyPolicies",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-01-01"
          ],
          "type": "string"
        },
        "name": {
          "description": "The Content Key Policy name.",
          "type": "string"
        },
        "properties": {
          "description": "The properties of the Content Key Policy.",
          "oneOf": [
            {
              "$ref": "#/definitions/ContentKeyPolicyProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.Media/mediaServices/contentKeyPolicies"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "mediaServices_streamingLocators": {
      "description": "Microsoft.Media/mediaServices/streamingLocators",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-01-01"
          ],
          "type": "string"
        },
        "name": {
          "description": "The Streaming Locator name.",
          "type": "string"
        },
        "properties": {
          "description": "Properties of the Streaming Locator.",
          "oneOf": [
            {
              "$ref": "#/definitions/StreamingLocatorProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.Media/mediaServices/streamingLocators"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "mediaServices_streamingPolicies": {
      "description": "Microsoft.Media/mediaServices/streamingPolicies",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-01-01"
          ],
          "type": "string"
        },
        "name": {
          "description": "The Streaming Policy name.",
          "type": "string"
        },
        "properties": {
          "description": "Class to specify properties of Streaming Policy",
          "oneOf": [
            {
              "$ref": "#/definitions/StreamingPolicyProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.Media/mediaServices/streamingPolicies"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "mediaservices": {
      "description": "Microsoft.Media/mediaservices",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-01-01"
          ],
          "type": "string"
        },
        "identity": {
          "description": "The Managed Identity for the Media Services account.",
          "oneOf": [
            {
              "$ref": "#/definitions/MediaServiceIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "location": {
          "description": "The geo-location where the resource lives",
          "type": "string"
        },
        "name": {
          "description": "The Media Services account name.",
          "type": "string"
        },
        "properties": {
          "description": "The resource properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/MediaServiceProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/mediaServices_assets_childResource"
              },
              {
                "$ref": "#/definitions/mediaServices_accountFilters_childResource"
              },
              {
                "$ref": "#/definitions/mediaServices_streamingPolicies_childResource"
              },
              {
                "$ref": "#/definitions/mediaServices_streamingLocators_childResource"
              },
              {
                "$ref": "#/definitions/mediaServices_contentKeyPolicies_childResource"
              },
              {
                "$ref": "#/definitions/mediaservices_privateEndpointConnections_childResource"
              }
            ]
          },
          "type": "array"
        },
        "tags": {
          "description": "Resource tags.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.Media/mediaservices"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "mediaservices_privateEndpointConnections": {
      "description": "Microsoft.Media/mediaservices/privateEndpointConnections",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-01-01"
          ],
          "type": "string"
        },
        "name": {
          "description": "",
          "type": "string"
        },
        "properties": {
          "description": "Resource properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/PrivateEndpointConnectionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.Media/mediaservices/privateEndpointConnections"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    }
  },
  "definitions": {
    "AccessControl": {
      "properties": {
        "defaultAction": {
          "description": "The behavior for IP access control in Key Delivery.",
          "oneOf": [
            {
              "enum": [
                "Allow",
                "Deny"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "ipAllowList": {
          "description": "The IP allow list for access control in Key Delivery. If the default action is set to 'Allow', the IP allow list must be empty.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "AccountEncryption": {
      "properties": {
        "identity": {
          "description": "The Key Vault identity.",
          "oneOf": [
            {
              "$ref": "#/definitions/ResourceIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "keyVaultProperties": {
          "description": "The properties of the key used to encrypt the account.",
          "oneOf": [
            {
              "$ref": "#/definitions/KeyVaultProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "description": "The type of key used to encrypt the Account Key.",
          "oneOf": [
            {
              "enum": [
                "SystemKey",
                "CustomerKey"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "type"
      ],
      "type": "object"
    },
    "AssetProperties": {
      "description": "The Asset properties.",
      "properties": {
        "alternateId": {
          "description": "The alternate ID of the Asset.",
          "type": "string"
        },
        "container": {
          "description": "The name of the asset blob container.",
          "type": "string"
        },
        "description": {
          "description": "The Asset description.",
          "type": "string"
        },
        "encryptionScope": {
          "description": "The Asset container encryption scope in the storage account.",
          "type": "string"
        },
        "storageAccountName": {
          "description": "The name of the storage account.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "AssetTrackProperties": {
      "description": "Properties of a video, audio or text track in the asset.",
      "properties": {
        "track": {
          "description": "Detailed information about a track in the asset.",
          "oneOf": [
            {
              "$ref": "#/definitions/TrackBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "CbcsDrmConfiguration": {
      "description": "Class to specify DRM configurations of CommonEncryptionCbcs scheme in Streaming Policy",
      "properties": {
        "fairPlay": {
          "description": "FairPlay configurations",
          "oneOf": [
            {
              "$ref": "#/definitions/StreamingPolicyFairPlayConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "playReady": {
          "description": "PlayReady configurations",
          "oneOf": [
            {
              "$ref": "#/definitions/StreamingPolicyPlayReadyConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "widevine": {
          "description": "Widevine configurations",
          "oneOf": [
            {
              "$ref": "#/definitions/StreamingPolicyWidevineConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "CencDrmConfiguration": {
      "description": "Class to specify DRM configurations of CommonEncryptionCenc scheme in Streaming Policy",
      "properties": {
        "playReady": {
          "description": "PlayReady configurations",
          "oneOf": [
            {
              "$ref": "#/definitions/StreamingPolicyPlayReadyConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "widevine": {
          "description": "Widevine configurations",
          "oneOf": [
            {
              "$ref": "#/definitions/StreamingPolicyWidevineConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ClearKeyEncryptionConfiguration": {
      "description": "Class to specify ClearKey configuration of common encryption schemes in Streaming Policy",
      "properties": {
        "customKeysAcquisitionUrlTemplate": {
          "description": "Template for the URL of the custom service delivering content keys to end user players. Not required when using Azure Media Services for issuing licenses. The template supports replaceable tokens that the service will update at runtime with the value specific to the request.  The currently supported token value is {AlternativeMediaId}, which is replaced with the value of StreamingLocatorId.AlternativeMediaId.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CommonEncryptionCbcs": {
      "description": "Class for CommonEncryptionCbcs encryption scheme",
      "properties": {
        "clearKeyEncryptionConfiguration": {
          "description": "Optional configuration supporting ClearKey in CommonEncryptionCbcs encryption scheme.",
          "oneOf": [
            {
              "$ref": "#/definitions/ClearKeyEncryptionConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "clearTracks": {
          "description": "Representing which tracks should not be encrypted",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/TrackSelection"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "contentKeys": {
          "description": "Representing default content key for each encryption scheme and separate content keys for specific tracks",
          "oneOf": [
            {
              "$ref": "#/definitions/StreamingPolicyContentKeys"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "drm": {
          "description": "Configuration of DRMs for current encryption scheme",
          "oneOf": [
            {
              "$ref": "#/definitions/CbcsDrmConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "enabledProtocols": {
          "description": "Representing supported protocols",
          "oneOf": [
            {
              "$ref": "#/definitions/EnabledProtocols"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "CommonEncryptionCenc": {
      "description": "Class for envelope encryption scheme",
      "properties": {
        "clearKeyEncryptionConfiguration": {
          "description": "Optional configuration supporting ClearKey in CommonEncryptionCenc encryption scheme.",
          "oneOf": [
            {
              "$ref": "#/definitions/ClearKeyEncryptionConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "clearTracks": {
          "description": "Representing which tracks should not be encrypted",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/TrackSelection"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "contentKeys": {
          "description": "Representing default content key for each encryption scheme and separate content keys for specific tracks",
          "oneOf": [
            {
              "$ref": "#/definitions/StreamingPolicyContentKeys"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "drm": {
          "description": "Configuration of DRMs for CommonEncryptionCenc encryption scheme",
          "oneOf": [
            {
              "$ref": "#/definitions/CencDrmConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "enabledProtocols": {
          "description": "Representing supported protocols",
          "oneOf": [
            {
              "$ref": "#/definitions/EnabledProtocols"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ContentKeyPolicyConfiguration": {
      "description": "Base class for Content Key Policy configuration. A derived class must be used to create a configuration.",
      "oneOf": [
        {
          "description": "Represents a configuration for non-DRM keys.",
          "properties": {},
          "type": "object"
        },
        {
          "description": "Specifies a configuration for FairPlay licenses.",
          "properties": {
            "ask": {
              "description": "The key that must be used as FairPlay Application Secret key. This needs to be base64 encoded."
            },
            "fairPlayPfx": {
              "description": "The Base64 representation of FairPlay certificate in PKCS 12 (pfx) format (including private key).",
              "type": "string"
            },
            "fairPlayPfxPassword": {
              "description": "The password encrypting FairPlay certificate in PKCS 12 (pfx) format.",
              "type": "string"
            },
            "offlineRentalConfiguration": {
              "description": "Offline rental policy",
              "oneOf": [
                {
                  "$ref": "#/definitions/ContentKeyPolicyFairPlayOfflineRentalConfiguration"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "rentalAndLeaseKeyType": {
              "description": "The rental and lease key type.",
              "oneOf": [
                {
                  "enum": [
                    "Unknown",
                    "Undefined",
                    "DualExpiry",
                    "PersistentUnlimited",
                    "PersistentLimited"
                  ],
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "rentalDuration": {
              "description": "The rental duration. Must be greater than or equal to 0.",
              "oneOf": [
                {
                  "type": "integer"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "ask",
            "fairPlayPfxPassword",
            "fairPlayPfx",
            "rentalAndLeaseKeyType",
            "rentalDuration"
          ],
          "type": "object"
        },
        {
          "description": "Specifies a configuration for PlayReady licenses.",
          "properties": {
            "licenses": {
              "description": "The PlayReady licenses.",
              "oneOf": [
                {
                  "items": {
                    "$ref": "#/definitions/ContentKeyPolicyPlayReadyLicense"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "responseCustomData": {
              "description": "The custom response data.",
              "type": "string"
            }
          },
          "required": [
            "licenses"
          ],
          "type": "object"
        },
        {
          "description": "Represents a ContentKeyPolicyConfiguration that is unavailable in the current API version.",
          "properties": {},
          "type": "object"
        },
        {
          "description": "Specifies a configuration for Widevine licenses.",
          "properties": {
            "widevineTemplate": {
              "description": "The Widevine template.",
              "type": "string"
            }
          },
          "required": [
            "widevineTemplate"
          ],
          "type": "object"
        }
      ],
      "properties": {},
      "type": "object"
    },
    "ContentKeyPolicyFairPlayOfflineRentalConfiguration": {
      "properties": {
        "playbackDurationSeconds": {
          "description": "Playback duration",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "storageDurationSeconds": {
          "description": "Storage duration",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "playbackDurationSeconds",
        "storageDurationSeconds"
      ],
      "type": "object"
    },
    "ContentKeyPolicyOption": {
      "description": "Represents a policy option.",
      "properties": {
        "configuration": {
          "description": "The key delivery configuration.",
          "oneOf": [
            {
              "$ref": "#/definitions/ContentKeyPolicyConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "name": {
          "description": "The Policy Option description.",
          "type": "string"
        },
        "restriction": {
          "description": "The requirements that must be met to deliver keys with this configuration",
          "oneOf": [
            {
              "$ref": "#/definitions/ContentKeyPolicyRestriction"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "configuration",
        "restriction"
      ],
      "type": "object"
    },
    "ContentKeyPolicyPlayReadyContentKeyLocation": {
      "description": "Base class for content key ID location. A derived class must be used to represent the location.",
      "oneOf": [
        {
          "description": "Specifies that the content key ID is in the PlayReady header.",
          "properties": {},
          "type": "object"
        },
        {
          "description": "Specifies that the content key ID is specified in the PlayReady configuration.",
          "properties": {
            "keyId": {
              "description": "The content key ID.",
              "oneOf": [
                {
                  "pattern": "^[0-9a-fA-F]{8}(-[0-9a-fA-F]{4}){3}-[0-9a-fA-F]{12}$",
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "keyId"
          ],
          "type": "object"
        }
      ],
      "properties": {},
      "type": "object"
    },
    "ContentKeyPolicyPlayReadyExplicitAnalogTelevisionRestriction": {
      "description": "Configures the Explicit Analog Television Output Restriction control bits. For further details see the PlayReady Compliance Rules.",
      "properties": {
        "bestEffort": {
          "description": "Indicates whether this restriction is enforced on a Best Effort basis.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "configurationData": {
          "description": "Configures the restriction control bits. Must be between 0 and 3 inclusive.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "bestEffort",
        "configurationData"
      ],
      "type": "object"
    },
    "ContentKeyPolicyPlayReadyLicense": {
      "description": "The PlayReady license",
      "properties": {
        "allowTestDevices": {
          "description": "A flag indicating whether test devices can use the license.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "beginDate": {
          "description": "The begin date of license",
          "format": "date-time",
          "type": "string"
        },
        "contentKeyLocation": {
          "description": "The content key location.",
          "oneOf": [
            {
              "$ref": "#/definitions/ContentKeyPolicyPlayReadyContentKeyLocation"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "contentType": {
          "description": "The PlayReady content type.",
          "oneOf": [
            {
              "enum": [
                "Unknown",
                "Unspecified",
                "UltraVioletDownload",
                "UltraVioletStreaming"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "expirationDate": {
          "description": "The expiration date of license.",
          "format": "date-time",
          "type": "string"
        },
        "gracePeriod": {
          "description": "The grace period of license.",
          "type": "string"
        },
        "licenseType": {
          "description": "The license type.",
          "oneOf": [
            {
              "enum": [
                "Unknown",
                "NonPersistent",
                "Persistent"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "playRight": {
          "description": "The license PlayRight",
          "oneOf": [
            {
              "$ref": "#/definitions/ContentKeyPolicyPlayReadyPlayRight"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "relativeBeginDate": {
          "description": "The relative begin date of license.",
          "type": "string"
        },
        "relativeExpirationDate": {
          "description": "The relative expiration date of license.",
          "type": "string"
        },
        "securityLevel": {
          "description": "The security level.",
          "oneOf": [
            {
              "enum": [
                "Unknown",
                "SL150",
                "SL2000",
                "SL3000"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "allowTestDevices",
        "licenseType",
        "contentKeyLocation",
        "contentType"
      ],
      "type": "object"
    },
    "ContentKeyPolicyPlayReadyPlayRight": {
      "description": "Configures the Play Right in the PlayReady license.",
      "properties": {
        "agcAndColorStripeRestriction": {
          "description": "Configures Automatic Gain Control (AGC) and Color Stripe in the license. Must be between 0 and 3 inclusive.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "allowPassingVideoContentToUnknownOutput": {
          "description": "Configures Unknown output handling settings of the license.",
          "oneOf": [
            {
              "enum": [
                "Unknown",
                "NotAllowed",
                "Allowed",
                "AllowedWithVideoConstriction"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "analogVideoOpl": {
          "description": "Specifies the output protection level for compressed digital audio.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "compressedDigitalAudioOpl": {
          "description": "Specifies the output protection level for compressed digital audio.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "compressedDigitalVideoOpl": {
          "description": "Specifies the output protection level for compressed digital video.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "digitalVideoOnlyContentRestriction": {
          "description": "Enables the Image Constraint For Analog Component Video Restriction in the license.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "explicitAnalogTelevisionOutputRestriction": {
          "description": "Configures the Explicit Analog Television Output Restriction in the license. Configuration data must be between 0 and 3 inclusive.",
          "oneOf": [
            {
              "$ref": "#/definitions/ContentKeyPolicyPlayReadyExplicitAnalogTelevisionRestriction"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "firstPlayExpiration": {
          "description": "The amount of time that the license is valid after the license is first used to play content.",
          "type": "string"
        },
        "imageConstraintForAnalogComponentVideoRestriction": {
          "description": "Enables the Image Constraint For Analog Component Video Restriction in the license.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "imageConstraintForAnalogComputerMonitorRestriction": {
          "description": "Enables the Image Constraint For Analog Component Video Restriction in the license.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "scmsRestriction": {
          "description": "Configures the Serial Copy Management System (SCMS) in the license. Must be between 0 and 3 inclusive.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "uncompressedDigitalAudioOpl": {
          "description": "Specifies the output protection level for uncompressed digital audio.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "uncompressedDigitalVideoOpl": {
          "description": "Specifies the output protection level for uncompressed digital video.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "digitalVideoOnlyContentRestriction",
        "imageConstraintForAnalogComponentVideoRestriction",
        "imageConstraintForAnalogComputerMonitorRestriction",
        "allowPassingVideoContentToUnknownOutput"
      ],
      "type": "object"
    },
    "ContentKeyPolicyProperties": {
      "description": "The properties of the Content Key Policy.",
      "properties": {
        "description": {
          "description": "A description for the Policy.",
          "type": "string"
        },
        "options": {
          "description": "The Key Policy options.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/ContentKeyPolicyOption"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "options"
      ],
      "type": "object"
    },
    "ContentKeyPolicyRestriction": {
      "description": "Base class for Content Key Policy restrictions. A derived class must be used to create a restriction.",
      "oneOf": [
        {
          "description": "Represents an open restriction. License or key will be delivered on every request.",
          "properties": {},
          "type": "object"
        },
        {
          "description": "Represents a token restriction. Provided token must match these requirements for successful license or key delivery.",
          "properties": {
            "alternateVerificationKeys": {
              "description": "A list of alternative verification keys.",
              "oneOf": [
                {
                  "items": {
                    "$ref": "#/definitions/ContentKeyPolicyRestrictionTokenKey"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "audience": {
              "description": "The audience for the token.",
              "type": "string"
            },
            "issuer": {
              "description": "The token issuer.",
              "type": "string"
            },
            "openIdConnectDiscoveryDocument": {
              "description": "The OpenID connect discovery document.",
              "type": "string"
            },
            "primaryVerificationKey": {
              "description": "The primary verification key.",
              "oneOf": [
                {
                  "$ref": "#/definitions/ContentKeyPolicyRestrictionTokenKey"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "requiredClaims": {
              "description": "A list of required token claims.",
              "oneOf": [
                {
                  "items": {
                    "$ref": "#/definitions/ContentKeyPolicyTokenClaim"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "restrictionTokenType": {
              "description": "The type of token.",
              "oneOf": [
                {
                  "enum": [
                    "Unknown",
                    "Swt",
                    "Jwt"
                  ],
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "issuer",
            "audience",
            "primaryVerificationKey",
            "restrictionTokenType"
          ],
          "type": "object"
        },
        {
          "description": "Represents a ContentKeyPolicyRestriction that is unavailable in the current API version.",
          "properties": {},
          "type": "object"
        }
      ],
      "properties": {},
      "type": "object"
    },
    "ContentKeyPolicyRestrictionTokenKey": {
      "description": "Base class for Content Key Policy key for token validation. A derived class must be used to create a token key.",
      "oneOf": [
        {
          "description": "Specifies a RSA key for token validation",
          "properties": {
            "exponent": {
              "description": "The RSA Parameter exponent"
            },
            "modulus": {
              "description": "The RSA Parameter modulus"
            }
          },
          "required": [
            "exponent",
            "modulus"
          ],
          "type": "object"
        },
        {
          "description": "Specifies a symmetric key for token validation.",
          "properties": {
            "keyValue": {
              "description": "The key value of the key"
            }
          },
          "required": [
            "keyValue"
          ],
          "type": "object"
        },
        {
          "description": "Specifies a certificate for token validation.",
          "properties": {
            "rawBody": {
              "description": "The raw data field of a certificate in PKCS 12 format (X509Certificate2 in .NET)"
            }
          },
          "required": [
            "rawBody"
          ],
          "type": "object"
        }
      ],
      "properties": {},
      "type": "object"
    },
    "ContentKeyPolicyTokenClaim": {
      "description": "Represents a token claim.",
      "properties": {
        "claimType": {
          "description": "Token claim type.",
          "type": "string"
        },
        "claimValue": {
          "description": "Token claim value.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DashSettings": {
      "description": "The DASH setting for a track.",
      "properties": {
        "role": {
          "description": "The role for the DASH setting.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DefaultKey": {
      "description": "Class to specify properties of default content key for each encryption scheme",
      "properties": {
        "label": {
          "description": "Label can be used to specify Content Key when creating a Streaming Locator",
          "type": "string"
        },
        "policyName": {
          "description": "Policy used by Default Key",
          "type": "string"
        }
      },
      "type": "object"
    },
    "EnabledProtocols": {
      "description": "Class to specify which protocols are enabled",
      "properties": {
        "dash": {
          "description": "Enable DASH protocol or not",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "download": {
          "description": "Enable Download protocol or not",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "hls": {
          "description": "Enable HLS protocol or not",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "smoothStreaming": {
          "description": "Enable SmoothStreaming protocol or not",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "download",
        "dash",
        "hls",
        "smoothStreaming"
      ],
      "type": "object"
    },
    "EnvelopeEncryption": {
      "description": "Class for EnvelopeEncryption encryption scheme",
      "properties": {
        "clearTracks": {
          "description": "Representing which tracks should not be encrypted",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/TrackSelection"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "contentKeys": {
          "description": "Representing default content key for each encryption scheme and separate content keys for specific tracks",
          "oneOf": [
            {
              "$ref": "#/definitions/StreamingPolicyContentKeys"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "customKeyAcquisitionUrlTemplate": {
          "description": "Template for the URL of the custom service delivering keys to end user players.  Not required when using Azure Media Services for issuing keys.  The template supports replaceable tokens that the service will update at runtime with the value specific to the request.  The currently supported token values are {AlternativeMediaId}, which is replaced with the value of StreamingLocatorId.AlternativeMediaId, and {ContentKeyId}, which is replaced with the value of identifier of the key being requested.",
          "type": "string"
        },
        "enabledProtocols": {
          "description": "Representing supported protocols",
          "oneOf": [
            {
              "$ref": "#/definitions/EnabledProtocols"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "FilterTrackPropertyCondition": {
      "description": "The class to specify one track property condition.",
      "properties": {
        "operation": {
          "description": "The track property condition operation.",
          "oneOf": [
            {
              "enum": [
                "Equal",
                "NotEqual"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "property": {
          "description": "The track property type.",
          "oneOf": [
            {
              "enum": [
                "Unknown",
                "Type",
                "Name",
                "Language",
                "FourCC",
                "Bitrate"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "value": {
          "description": "The track property value.",
          "type": "string"
        }
      },
      "required": [
        "property",
        "value",
        "operation"
      ],
      "type": "object"
    },
    "FilterTrackSelection": {
      "description": "Representing a list of FilterTrackPropertyConditions to select a track.  The filters are combined using a logical AND operation.",
      "properties": {
        "trackSelections": {
          "description": "The track selections.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/FilterTrackPropertyCondition"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "trackSelections"
      ],
      "type": "object"
    },
    "FirstQuality": {
      "description": "Filter First Quality",
      "properties": {
        "bitrate": {
          "description": "The first quality bitrate.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "bitrate"
      ],
      "type": "object"
    },
    "HlsSettings": {
      "description": "The HLS setting for a track.",
      "properties": {
        "characteristics": {
          "description": "The characteristics for the HLS setting.",
          "type": "string"
        },
        "default": {
          "description": "The default for the HLS setting.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "forced": {
          "description": "The forced for the HLS setting.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "KeyDelivery": {
      "properties": {
        "accessControl": {
          "description": "The access control properties for Key Delivery.",
          "oneOf": [
            {
              "$ref": "#/definitions/AccessControl"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "KeyVaultProperties": {
      "properties": {
        "keyIdentifier": {
          "description": "The URL of the Key Vault key used to encrypt the account. The key may either be versioned (for example https://vault/keys/mykey/version1) or reference a key without a version (for example https://vault/keys/mykey).",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MediaFilterProperties": {
      "description": "The Media Filter properties.",
      "properties": {
        "firstQuality": {
          "description": "The first quality.",
          "oneOf": [
            {
              "$ref": "#/definitions/FirstQuality"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "presentationTimeRange": {
          "description": "The presentation time range.",
          "oneOf": [
            {
              "$ref": "#/definitions/PresentationTimeRange"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tracks": {
          "description": "The tracks selection conditions.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/FilterTrackSelection"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "MediaServiceIdentity": {
      "properties": {
        "type": {
          "description": "The identity type.",
          "type": "string"
        },
        "userAssignedIdentities": {
          "description": "The user assigned managed identities.",
          "oneOf": [
            {
              "additionalProperties": {
                "$ref": "#/definitions/UserAssignedManagedIdentity"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "type"
      ],
      "type": "object"
    },
    "MediaServiceProperties": {
      "description": "Properties of the Media Services account.",
      "properties": {
        "encryption": {
          "description": "The account encryption properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/AccountEncryption"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "keyDelivery": {
          "description": "The Key Delivery properties for Media Services account.",
          "oneOf": [
            {
              "$ref": "#/definitions/KeyDelivery"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "minimumTlsVersion": {
          "description": "The minimum TLS version allowed for this account's requests. This is an optional property. If unspecified, a secure default value will be used.",
          "oneOf": [
            {
              "enum": [
                "Tls10",
                "Tls11",
                "Tls12",
                "Tls13"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "publicNetworkAccess": {
          "description": "Whether or not public network access is allowed for resources under the Media Services account.",
          "oneOf": [
            {
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "storageAccounts": {
          "description": "The storage accounts for this resource.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/StorageAccount"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "storageAuthentication": {
          "oneOf": [
            {
              "enum": [
                "System",
                "ManagedIdentity"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "NoEncryption": {
      "description": "Class for NoEncryption scheme",
      "properties": {
        "enabledProtocols": {
          "description": "Representing supported protocols",
          "oneOf": [
            {
              "$ref": "#/definitions/EnabledProtocols"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "PresentationTimeRange": {
      "description": "The presentation time range, this is asset related and not recommended for Account Filter.",
      "properties": {
        "endTimestamp": {
          "description": "The absolute end time boundary.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "forceEndTimestamp": {
          "description": "The indicator of forcing existing of end time stamp.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "liveBackoffDuration": {
          "description": "The relative to end right edge.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "presentationWindowDuration": {
          "description": "The relative to end sliding window.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "startTimestamp": {
          "description": "The absolute start time boundary.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "timescale": {
          "description": "The time scale of time stamps.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "PrivateEndpoint": {
      "description": "The Private Endpoint resource.",
      "properties": {},
      "type": "object"
    },
    "PrivateEndpointConnectionProperties": {
      "description": "Properties of the PrivateEndpointConnectProperties.",
      "properties": {
        "privateEndpoint": {
          "description": "The resource of private end point.",
          "oneOf": [
            {
              "$ref": "#/definitions/PrivateEndpoint"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "privateLinkServiceConnectionState": {
          "description": "A collection of information about the state of the connection between service consumer and provider.",
          "oneOf": [
            {
              "$ref": "#/definitions/PrivateLinkServiceConnectionState"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "privateLinkServiceConnectionState"
      ],
      "type": "object"
    },
    "PrivateLinkServiceConnectionState": {
      "description": "A collection of information about the state of the connection between service consumer and provider.",
      "properties": {
        "actionsRequired": {
          "description": "A message indicating if changes on the service provider require any updates on the consumer.",
          "type": "string"
        },
        "description": {
          "description": "The reason for approval/rejection of the connection.",
          "type": "string"
        },
        "status": {
          "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
          "oneOf": [
            {
              "enum": [
                "Pending",
                "Approved",
                "Rejected"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ResourceIdentity": {
      "properties": {
        "useSystemAssignedIdentity": {
          "description": "Indicates whether to use System Assigned Managed Identity. Mutual exclusive with User Assigned Managed Identity.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "userAssignedIdentity": {
          "description": "The user assigned managed identity's ARM ID to use when accessing a resource.",
          "type": "string"
        }
      },
      "required": [
        "useSystemAssignedIdentity"
      ],
      "type": "object"
    },
    "StorageAccount": {
      "description": "The storage account details.",
      "properties": {
        "id": {
          "description": "The ID of the storage account resource. Media Services relies on tables and queues as well as blobs, so the primary storage account must be a Standard Storage account (either Microsoft.ClassicStorage or Microsoft.Storage). Blob only storage accounts can be added as secondary storage accounts.",
          "type": "string"
        },
        "identity": {
          "description": "The storage account identity.",
          "oneOf": [
            {
              "$ref": "#/definitions/ResourceIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "description": "The type of the storage account.",
          "oneOf": [
            {
              "enum": [
                "Primary",
                "Secondary"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "type"
      ],
      "type": "object"
    },
    "StreamingLocatorContentKey": {
      "description": "Class for content key in Streaming Locator",
      "properties": {
        "id": {
          "description": "ID of Content Key",
          "oneOf": [
            {
              "pattern": "^[0-9a-fA-F]{8}(-[0-9a-fA-F]{4}){3}-[0-9a-fA-F]{12}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "labelReferenceInStreamingPolicy": {
          "description": "Label of Content Key as specified in the Streaming Policy",
          "type": "string"
        },
        "value": {
          "description": "Value of Content Key",
          "type": "string"
        }
      },
      "required": [
        "id"
      ],
      "type": "object"
    },
    "StreamingLocatorProperties": {
      "description": "Properties of the Streaming Locator.",
      "properties": {
        "alternativeMediaId": {
          "description": "Alternative Media ID of this Streaming Locator",
          "type": "string"
        },
        "assetName": {
          "description": "Asset Name",
          "type": "string"
        },
        "contentKeys": {
          "description": "The ContentKeys used by this Streaming Locator.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/StreamingLocatorContentKey"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "defaultContentKeyPolicyName": {
          "description": "Name of the default ContentKeyPolicy used by this Streaming Locator.",
          "type": "string"
        },
        "endTime": {
          "description": "The end time of the Streaming Locator.",
          "format": "date-time",
          "type": "string"
        },
        "filters": {
          "description": "A list of asset or account filters which apply to this streaming locator",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "startTime": {
          "description": "The start time of the Streaming Locator.",
          "format": "date-time",
          "type": "string"
        },
        "streamingLocatorId": {
          "description": "The StreamingLocatorId of the Streaming Locator.",
          "oneOf": [
            {
              "pattern": "^[0-9a-fA-F]{8}(-[0-9a-fA-F]{4}){3}-[0-9a-fA-F]{12}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "streamingPolicyName": {
          "description": "Name of the Streaming Policy used by this Streaming Locator. Either specify the name of Streaming Policy you created or use one of the predefined Streaming Policies. The predefined Streaming Policies available are: 'Predefined_DownloadOnly', 'Predefined_ClearStreamingOnly', 'Predefined_DownloadAndClearStreaming', 'Predefined_ClearKey', 'Predefined_MultiDrmCencStreaming' and 'Predefined_MultiDrmStreaming'",
          "type": "string"
        }
      },
      "required": [
        "assetName",
        "streamingPolicyName"
      ],
      "type": "object"
    },
    "StreamingPolicyContentKey": {
      "description": "Class to specify properties of content key",
      "properties": {
        "label": {
          "description": "Label can be used to specify Content Key when creating a Streaming Locator",
          "type": "string"
        },
        "policyName": {
          "description": "Policy used by Content Key",
          "type": "string"
        },
        "tracks": {
          "description": "Tracks which use this content key",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/TrackSelection"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "StreamingPolicyContentKeys": {
      "description": "Class to specify properties of all content keys in Streaming Policy",
      "properties": {
        "defaultKey": {
          "description": "Default content key for an encryption scheme",
          "oneOf": [
            {
              "$ref": "#/definitions/DefaultKey"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "keyToTrackMappings": {
          "description": "Representing tracks needs separate content key",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/StreamingPolicyContentKey"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "StreamingPolicyFairPlayConfiguration": {
      "description": "Class to specify configurations of FairPlay in Streaming Policy",
      "properties": {
        "allowPersistentLicense": {
          "description": "All license to be persistent or not",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "customLicenseAcquisitionUrlTemplate": {
          "description": "Template for the URL of the custom service delivering licenses to end user players.  Not required when using Azure Media Services for issuing licenses.  The template supports replaceable tokens that the service will update at runtime with the value specific to the request.  The currently supported token values are {AlternativeMediaId}, which is replaced with the value of StreamingLocatorId.AlternativeMediaId, and {ContentKeyId}, which is replaced with the value of identifier of the key being requested.",
          "type": "string"
        }
      },
      "required": [
        "allowPersistentLicense"
      ],
      "type": "object"
    },
    "StreamingPolicyPlayReadyConfiguration": {
      "description": "Class to specify configurations of PlayReady in Streaming Policy",
      "properties": {
        "customLicenseAcquisitionUrlTemplate": {
          "description": "Template for the URL of the custom service delivering licenses to end user players.  Not required when using Azure Media Services for issuing licenses.  The template supports replaceable tokens that the service will update at runtime with the value specific to the request.  The currently supported token values are {AlternativeMediaId}, which is replaced with the value of StreamingLocatorId.AlternativeMediaId, and {ContentKeyId}, which is replaced with the value of identifier of the key being requested.",
          "type": "string"
        },
        "playReadyCustomAttributes": {
          "description": "Custom attributes for PlayReady",
          "type": "string"
        }
      },
      "type": "object"
    },
    "StreamingPolicyProperties": {
      "description": "Class to specify properties of Streaming Policy",
      "properties": {
        "commonEncryptionCbcs": {
          "description": "Configuration of CommonEncryptionCbcs",
          "oneOf": [
            {
              "$ref": "#/definitions/CommonEncryptionCbcs"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "commonEncryptionCenc": {
          "description": "Configuration of CommonEncryptionCenc",
          "oneOf": [
            {
              "$ref": "#/definitions/CommonEncryptionCenc"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "defaultContentKeyPolicyName": {
          "description": "Default ContentKey used by current Streaming Policy",
          "type": "string"
        },
        "envelopeEncryption": {
          "description": "Configuration of EnvelopeEncryption",
          "oneOf": [
            {
              "$ref": "#/definitions/EnvelopeEncryption"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "noEncryption": {
          "description": "Configurations of NoEncryption",
          "oneOf": [
            {
              "$ref": "#/definitions/NoEncryption"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "StreamingPolicyWidevineConfiguration": {
      "description": "Class to specify configurations of Widevine in Streaming Policy",
      "properties": {
        "customLicenseAcquisitionUrlTemplate": {
          "description": "Template for the URL of the custom service delivering licenses to end user players.  Not required when using Azure Media Services for issuing licenses.  The template supports replaceable tokens that the service will update at runtime with the value specific to the request.  The currently supported token values are {AlternativeMediaId}, which is replaced with the value of StreamingLocatorId.AlternativeMediaId, and {ContentKeyId}, which is replaced with the value of identifier of the key being requested.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "TrackBase": {
      "description": "Base type for concrete track types. A derived type must be used to represent the Track.",
      "oneOf": [
        {
          "description": "Represents an audio track in the asset.",
          "properties": {
            "dashSettings": {
              "description": "The DASH specific setting for the audio track.",
              "oneOf": [
                {
                  "$ref": "#/definitions/DashSettings"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "displayName": {
              "description": "The display name of the audio track on a video player. In HLS, this maps to the NAME attribute of EXT-X-MEDIA.",
              "type": "string"
            },
            "fileName": {
              "description": "The file name to the source file. This file is located in the storage container of the asset.",
              "type": "string"
            },
            "hlsSettings": {
              "description": "The HLS specific setting for the audio track.",
              "oneOf": [
                {
                  "$ref": "#/definitions/HlsSettings"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "languageCode": {
              "description": "The RFC5646 language code for the audio track.",
              "type": "string"
            },
            "mpeg4TrackId": {
              "description": "The MPEG-4 audio track ID for the audio track.",
              "oneOf": [
                {
                  "type": "integer"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "type": "object"
        },
        {
          "description": "Represents a text track in an asset. A text track is usually used for sparse data related to the audio or video tracks.",
          "properties": {
            "displayName": {
              "description": "The display name of the text track on a video player. In HLS, this maps to the NAME attribute of EXT-X-MEDIA.",
              "type": "string"
            },
            "fileName": {
              "description": "The file name to the source file. This file is located in the storage container of the asset.",
              "type": "string"
            },
            "hlsSettings": {
              "description": "The HLS specific setting for the text track.",
              "oneOf": [
                {
                  "$ref": "#/definitions/HlsSettings"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "playerVisibility": {
              "description": "When PlayerVisibility is set to \"Visible\", the text track will be present in the DASH manifest or HLS playlist when requested by a client. When the PlayerVisibility is set to \"Hidden\", the text will not be available to the client. The default value is \"Visible\".",
              "oneOf": [
                {
                  "enum": [
                    "Hidden",
                    "Visible"
                  ],
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "type": "object"
        },
        {
          "description": "Represents a video track in the asset.",
          "properties": {},
          "type": "object"
        }
      ],
      "properties": {},
      "type": "object"
    },
    "TrackPropertyCondition": {
      "description": "Class to specify one track property condition",
      "properties": {
        "operation": {
          "description": "Track property condition operation",
          "oneOf": [
            {
              "enum": [
                "Unknown",
                "Equal"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "property": {
          "description": "Track property type",
          "oneOf": [
            {
              "enum": [
                "Unknown",
                "FourCC"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "value": {
          "description": "Track property value",
          "type": "string"
        }
      },
      "required": [
        "property",
        "operation"
      ],
      "type": "object"
    },
    "TrackSelection": {
      "description": "Class to select a track",
      "properties": {
        "trackSelections": {
          "description": "TrackSelections is a track property condition list which can specify track(s)",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/TrackPropertyCondition"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "UserAssignedManagedIdentity": {
      "properties": {},
      "type": "object"
    },
    "mediaServices_accountFilters_childResource": {
      "description": "Microsoft.Media/mediaServices/accountFilters",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-01-01"
          ],
          "type": "string"
        },
        "name": {
          "description": "The Account Filter name",
          "type": "string"
        },
        "properties": {
          "description": "The Media Filter properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/MediaFilterProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "accountFilters"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "mediaServices_assets_assetFilters_childResource": {
      "description": "Microsoft.Media/mediaServices/assets/assetFilters",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-01-01"
          ],
          "type": "string"
        },
        "name": {
          "description": "The Asset Filter name",
          "type": "string"
        },
        "properties": {
          "description": "The Media Filter properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/MediaFilterProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "assetFilters"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "mediaServices_assets_childResource": {
      "description": "Microsoft.Media/mediaServices/assets",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-01-01"
          ],
          "type": "string"
        },
        "name": {
          "description": "The Asset name.",
          "type": "string"
        },
        "properties": {
          "description": "The resource properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/AssetProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "assets"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "mediaServices_assets_tracks_childResource": {
      "description": "Microsoft.Media/mediaServices/assets/tracks",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-01-01"
          ],
          "type": "string"
        },
        "name": {
          "description": "The Asset Track name.",
          "type": "string"
        },
        "properties": {
          "description": "The resource properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/AssetTrackProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "tracks"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "mediaServices_contentKeyPolicies_childResource": {
      "description": "Microsoft.Media/mediaServices/contentKeyPolicies",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-01-01"
          ],
          "type": "string"
        },
        "name": {
          "description": "The Content Key Policy name.",
          "type": "string"
        },
        "properties": {
          "description": "The properties of the Content Key Policy.",
          "oneOf": [
            {
              "$ref": "#/definitions/ContentKeyPolicyProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "contentKeyPolicies"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "mediaServices_streamingLocators_childResource": {
      "description": "Microsoft.Media/mediaServices/streamingLocators",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-01-01"
          ],
          "type": "string"
        },
        "name": {
          "description": "The Streaming Locator name.",
          "type": "string"
        },
        "properties": {
          "description": "Properties of the Streaming Locator.",
          "oneOf": [
            {
              "$ref": "#/definitions/StreamingLocatorProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "streamingLocators"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "mediaServices_streamingPolicies_childResource": {
      "description": "Microsoft.Media/mediaServices/streamingPolicies",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-01-01"
          ],
          "type": "string"
        },
        "name": {
          "description": "The Streaming Policy name.",
          "type": "string"
        },
        "properties": {
          "description": "Class to specify properties of Streaming Policy",
          "oneOf": [
            {
              "$ref": "#/definitions/StreamingPolicyProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "streamingPolicies"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "mediaservices_privateEndpointConnections_childResource": {
      "description": "Microsoft.Media/mediaservices/privateEndpointConnections",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-01-01"
          ],
          "type": "string"
        },
        "name": {
          "description": "",
          "type": "string"
        },
        "properties": {
          "description": "Resource properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/PrivateEndpointConnectionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "privateEndpointConnections"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    }
  }
}