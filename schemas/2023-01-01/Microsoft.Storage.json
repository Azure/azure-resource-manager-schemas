{
  "id": "https://schema.management.azure.com/schemas/2023-01-01/Microsoft.Storage.json#",
  "title": "Microsoft.Storage",
  "description": "Microsoft Storage Resource Types",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "resourceDefinitions": {
    "storageAccounts": {
      "description": "Microsoft.Storage/storageAccounts",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-01-01"
          ],
          "type": "string"
        },
        "extendedLocation": {
          "description": "Optional. Set the extended location of the resource. If not set, the storage account will be created in Azure main region. Otherwise it will be created in the specified extended location",
          "oneOf": [
            {
              "$ref": "#/definitions/ExtendedLocation"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "identity": {
          "description": "The identity of the resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/Identity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "kind": {
          "description": "Required. Indicates the type of storage account.",
          "oneOf": [
            {
              "enum": [
                "Storage",
                "StorageV2",
                "BlobStorage",
                "FileStorage",
                "BlockBlobStorage"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "location": {
          "description": "Required. Gets or sets the location of the resource. This will be one of the supported and registered Azure Geo Regions (e.g. West US, East US, Southeast Asia, etc.). The geo region of a resource cannot be changed once it is created, but if an identical geo region is specified on update, the request will succeed.",
          "type": "string"
        },
        "name": {
          "description": "The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.",
          "oneOf": [
            {
              "maxLength": 24,
              "minLength": 3,
              "pattern": "^[a-z0-9]+$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The parameters used to create the storage account.",
          "oneOf": [
            {
              "$ref": "#/definitions/StorageAccountPropertiesCreateParameters"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/storageAccounts_localUsers_childResource"
              },
              {
                "$ref": "#/definitions/storageAccounts_blobServices_childResource"
              },
              {
                "$ref": "#/definitions/storageAccounts_fileServices_childResource"
              },
              {
                "$ref": "#/definitions/storageAccounts_queueServices_childResource"
              },
              {
                "$ref": "#/definitions/storageAccounts_tableServices_childResource"
              },
              {
                "$ref": "#/definitions/storageAccounts_encryptionScopes_childResource"
              },
              {
                "$ref": "#/definitions/storageAccounts_inventoryPolicies_childResource"
              },
              {
                "$ref": "#/definitions/storageAccounts_managementPolicies_childResource"
              },
              {
                "$ref": "#/definitions/storageAccounts_objectReplicationPolicies_childResource"
              },
              {
                "$ref": "#/definitions/storageAccounts_privateEndpointConnections_childResource"
              }
            ]
          },
          "type": "array"
        },
        "sku": {
          "description": "Required. Gets or sets the SKU name.",
          "oneOf": [
            {
              "$ref": "#/definitions/Sku"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Gets or sets a list of key value pairs that describe the resource. These tags can be used for viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key with a length no greater than 128 characters and a value with a length no greater than 256 characters.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.Storage/storageAccounts"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "storageAccounts_blobServices": {
      "description": "Microsoft.Storage/storageAccounts/blobServices",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-01-01"
          ],
          "type": "string"
        },
        "name": {
          "oneOf": [
            {
              "pattern": "^.*/default$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The properties of a storage accountâ€™s Blob service.",
          "oneOf": [
            {
              "$ref": "#/definitions/BlobServicePropertiesProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/storageAccounts_blobServices_containers_childResource"
              }
            ]
          },
          "type": "array"
        },
        "type": {
          "enum": [
            "Microsoft.Storage/storageAccounts/blobServices"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "storageAccounts_blobServices_containers": {
      "description": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-01-01"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the blob container within the specified storage account. Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number.",
          "maxLength": 63,
          "minLength": 3,
          "type": "string"
        },
        "properties": {
          "description": "Properties of the blob container.",
          "oneOf": [
            {
              "$ref": "#/definitions/ContainerProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/storageAccounts_blobServices_containers_immutabilityPolicies_childResource"
              }
            ]
          },
          "type": "array"
        },
        "type": {
          "enum": [
            "Microsoft.Storage/storageAccounts/blobServices/containers"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "storageAccounts_blobServices_containers_immutabilityPolicies": {
      "description": "Microsoft.Storage/storageAccounts/blobServices/containers/immutabilityPolicies",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-01-01"
          ],
          "type": "string"
        },
        "name": {
          "oneOf": [
            {
              "pattern": "^.*/default$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The properties of an ImmutabilityPolicy of a blob container.",
          "oneOf": [
            {
              "$ref": "#/definitions/ImmutabilityPolicyProperty"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.Storage/storageAccounts/blobServices/containers/immutabilityPolicies"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "storageAccounts_encryptionScopes": {
      "description": "Microsoft.Storage/storageAccounts/encryptionScopes",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-01-01"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the encryption scope within the specified storage account. Encryption scope names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number.",
          "maxLength": 63,
          "minLength": 3,
          "type": "string"
        },
        "properties": {
          "description": "Properties of the encryption scope.",
          "oneOf": [
            {
              "$ref": "#/definitions/EncryptionScopeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.Storage/storageAccounts/encryptionScopes"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "storageAccounts_fileServices": {
      "description": "Microsoft.Storage/storageAccounts/fileServices",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-01-01"
          ],
          "type": "string"
        },
        "name": {
          "oneOf": [
            {
              "pattern": "^.*/default$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The properties of File services in storage account.",
          "oneOf": [
            {
              "$ref": "#/definitions/FileServicePropertiesProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/storageAccounts_fileServices_shares_childResource"
              }
            ]
          },
          "type": "array"
        },
        "type": {
          "enum": [
            "Microsoft.Storage/storageAccounts/fileServices"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "storageAccounts_fileServices_shares": {
      "description": "Microsoft.Storage/storageAccounts/fileServices/shares",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-01-01"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the file share within the specified storage account. File share names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number.",
          "maxLength": 63,
          "minLength": 3,
          "type": "string"
        },
        "properties": {
          "description": "Properties of the file share.",
          "oneOf": [
            {
              "$ref": "#/definitions/FileShareProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.Storage/storageAccounts/fileServices/shares"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "storageAccounts_inventoryPolicies": {
      "description": "Microsoft.Storage/storageAccounts/inventoryPolicies",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-01-01"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the storage account blob inventory policy. It should always be 'default'",
          "oneOf": [
            {
              "pattern": "^.*/default$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Returns the storage account blob inventory policy rules.",
          "oneOf": [
            {
              "$ref": "#/definitions/BlobInventoryPolicyProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.Storage/storageAccounts/inventoryPolicies"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "storageAccounts_localUsers": {
      "description": "Microsoft.Storage/storageAccounts/localUsers",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-01-01"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of local user. The username must contain lowercase letters and numbers only. It must be unique only within the storage account.",
          "maxLength": 64,
          "minLength": 3,
          "type": "string"
        },
        "properties": {
          "description": "Storage account local user properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/LocalUserProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.Storage/storageAccounts/localUsers"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "storageAccounts_managementPolicies": {
      "description": "Microsoft.Storage/storageAccounts/managementPolicies",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-01-01"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the Storage Account Management Policy. It should always be 'default'",
          "oneOf": [
            {
              "pattern": "^.*/default$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Returns the Storage Account Data Policies Rules.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagementPolicyProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.Storage/storageAccounts/managementPolicies"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "storageAccounts_objectReplicationPolicies": {
      "description": "Microsoft.Storage/storageAccounts/objectReplicationPolicies",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-01-01"
          ],
          "type": "string"
        },
        "name": {
          "description": "For the destination account, provide the value 'default'. Configure the policy on the destination account first. For the source account, provide the value of the policy ID that is returned when you download the policy that was defined on the destination account. The policy is downloaded as a JSON file.",
          "minLength": 1,
          "type": "string"
        },
        "properties": {
          "description": "Returns the Storage Account Object Replication Policy.",
          "oneOf": [
            {
              "$ref": "#/definitions/ObjectReplicationPolicyProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.Storage/storageAccounts/objectReplicationPolicies"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "storageAccounts_privateEndpointConnections": {
      "description": "Microsoft.Storage/storageAccounts/privateEndpointConnections",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-01-01"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the private endpoint connection associated with the Azure resource",
          "type": "string"
        },
        "properties": {
          "description": "Resource properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/PrivateEndpointConnectionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.Storage/storageAccounts/privateEndpointConnections"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "storageAccounts_queueServices": {
      "description": "Microsoft.Storage/storageAccounts/queueServices",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-01-01"
          ],
          "type": "string"
        },
        "name": {
          "oneOf": [
            {
              "pattern": "^.*/default$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The properties of a storage accountâ€™s Queue service.",
          "oneOf": [
            {
              "$ref": "#/definitions/QueueServicePropertiesProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/storageAccounts_queueServices_queues_childResource"
              }
            ]
          },
          "type": "array"
        },
        "type": {
          "enum": [
            "Microsoft.Storage/storageAccounts/queueServices"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "storageAccounts_queueServices_queues": {
      "description": "Microsoft.Storage/storageAccounts/queueServices/queues",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-01-01"
          ],
          "type": "string"
        },
        "name": {
          "description": "A queue name must be unique within a storage account and must be between 3 and 63 characters.The name must comprise of lowercase alphanumeric and dash(-) characters only, it should begin and end with an alphanumeric character and it cannot have two consecutive dash(-) characters.",
          "oneOf": [
            {
              "maxLength": 63,
              "minLength": 3,
              "pattern": "^[a-z0-9]([a-z0-9]|(-(?!-))){1,61}[a-z0-9]$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Queue resource properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/QueueProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.Storage/storageAccounts/queueServices/queues"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "storageAccounts_tableServices": {
      "description": "Microsoft.Storage/storageAccounts/tableServices",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-01-01"
          ],
          "type": "string"
        },
        "name": {
          "oneOf": [
            {
              "pattern": "^.*/default$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The properties of a storage accountâ€™s Table service.",
          "oneOf": [
            {
              "$ref": "#/definitions/TableServicePropertiesProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/storageAccounts_tableServices_tables_childResource"
              }
            ]
          },
          "type": "array"
        },
        "type": {
          "enum": [
            "Microsoft.Storage/storageAccounts/tableServices"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "storageAccounts_tableServices_tables": {
      "description": "Microsoft.Storage/storageAccounts/tableServices/tables",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-01-01"
          ],
          "type": "string"
        },
        "name": {
          "description": "A table name must be unique within a storage account and must be between 3 and 63 characters.The name must comprise of only alphanumeric characters and it cannot begin with a numeric character.",
          "oneOf": [
            {
              "maxLength": 63,
              "minLength": 3,
              "pattern": "^[A-Za-z][A-Za-z0-9]{2,62}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Table resource properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/TableProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.Storage/storageAccounts/tableServices/tables"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "apiVersion",
        "type"
      ],
      "type": "object"
    }
  },
  "definitions": {
    "AccessPolicy": {
      "properties": {
        "expiryTime": {
          "description": "Expiry time of the access policy",
          "format": "date-time",
          "type": "string"
        },
        "permission": {
          "description": "List of abbreviated permissions.",
          "type": "string"
        },
        "startTime": {
          "description": "Start time of the access policy",
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "AccountImmutabilityPolicyProperties": {
      "description": "This defines account-level immutability policy properties.",
      "properties": {
        "allowProtectedAppendWrites": {
          "description": "This property can only be changed for disabled and unlocked time-based retention policies. When enabled, new blocks can be written to an append blob while maintaining immutability protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "immutabilityPeriodSinceCreationInDays": {
          "description": "The immutability period for the blobs in the container since the policy creation, in days.",
          "oneOf": [
            {
              "maximum": 146000,
              "minimum": 1,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "state": {
          "description": "The ImmutabilityPolicy state defines the mode of the policy. Disabled state disables the policy, Unlocked state allows increase and decrease of immutability retention time and also allows toggling allowProtectedAppendWrites property, Locked state only allows the increase of the immutability retention time. A policy can only be created in a Disabled or Unlocked state and can be toggled between the two states. Only a policy in an Unlocked state can transition to a Locked state which cannot be reverted.",
          "oneOf": [
            {
              "enum": [
                "Unlocked",
                "Locked",
                "Disabled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ActiveDirectoryProperties": {
      "description": "Settings properties for Active Directory (AD).",
      "properties": {
        "accountType": {
          "description": "Specifies the Active Directory account type for Azure Storage.",
          "oneOf": [
            {
              "enum": [
                "User",
                "Computer"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "azureStorageSid": {
          "description": "Specifies the security identifier (SID) for Azure Storage.",
          "type": "string"
        },
        "domainGuid": {
          "description": "Specifies the domain GUID.",
          "type": "string"
        },
        "domainName": {
          "description": "Specifies the primary domain that the AD DNS server is authoritative for.",
          "type": "string"
        },
        "domainSid": {
          "description": "Specifies the security identifier (SID).",
          "type": "string"
        },
        "forestName": {
          "description": "Specifies the Active Directory forest to get.",
          "type": "string"
        },
        "netBiosDomainName": {
          "description": "Specifies the NetBIOS domain name.",
          "type": "string"
        },
        "samAccountName": {
          "description": "Specifies the Active Directory SAMAccountName for Azure Storage.",
          "type": "string"
        }
      },
      "required": [
        "domainName",
        "domainGuid"
      ],
      "type": "object"
    },
    "AzureFilesIdentityBasedAuthentication": {
      "description": "Settings for Azure Files identity based authentication.",
      "properties": {
        "activeDirectoryProperties": {
          "description": "Required if directoryServiceOptions are AD, optional if they are AADKERB.",
          "oneOf": [
            {
              "$ref": "#/definitions/ActiveDirectoryProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "defaultSharePermission": {
          "description": "Default share permission for users using Kerberos authentication if RBAC role is not assigned.",
          "oneOf": [
            {
              "enum": [
                "None",
                "StorageFileDataSmbShareReader",
                "StorageFileDataSmbShareContributor",
                "StorageFileDataSmbShareElevatedContributor"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "directoryServiceOptions": {
          "description": "Indicates the directory service used. Note that this enum may be extended in the future.",
          "oneOf": [
            {
              "enum": [
                "None",
                "AADDS",
                "AD",
                "AADKERB"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "directoryServiceOptions"
      ],
      "type": "object"
    },
    "BlobInventoryCreationTime": {
      "description": "This property defines the creation time based filtering condition. Blob Inventory schema parameter 'Creation-Time' is mandatory with this filter.",
      "properties": {
        "lastNDays": {
          "description": "When set the policy filters the objects that are created in the last N days. Where N is an integer value between 1 to 36500.",
          "oneOf": [
            {
              "maximum": 36500,
              "minimum": 1,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "BlobInventoryPolicyDefinition": {
      "description": "An object that defines the blob inventory rule.",
      "properties": {
        "filters": {
          "description": "An object that defines the filter set.",
          "oneOf": [
            {
              "$ref": "#/definitions/BlobInventoryPolicyFilter"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "format": {
          "description": "This is a required field, it specifies the format for the inventory files.",
          "oneOf": [
            {
              "enum": [
                "Csv",
                "Parquet"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "objectType": {
          "description": "This is a required field. This field specifies the scope of the inventory created either at the blob or container level.",
          "oneOf": [
            {
              "enum": [
                "Blob",
                "Container"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "schedule": {
          "description": "This is a required field. This field is used to schedule an inventory formation.",
          "oneOf": [
            {
              "enum": [
                "Daily",
                "Weekly"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "schemaFields": {
          "description": "This is a required field. This field specifies the fields and properties of the object to be included in the inventory. The Schema field value 'Name' is always required. The valid values for this field for the 'Blob' definition.objectType include 'Name, Creation-Time, Last-Modified, Content-Length, Content-MD5, BlobType, AccessTier, AccessTierChangeTime, AccessTierInferred, Tags, Expiry-Time, hdi_isfolder, Owner, Group, Permissions, Acl, Snapshot, VersionId, IsCurrentVersion, Metadata, LastAccessTime, Tags, Etag, ContentType, ContentEncoding, ContentLanguage, ContentCRC64, CacheControl, ContentDisposition, LeaseStatus, LeaseState, LeaseDuration, ServerEncrypted, Deleted, DeletionId, DeletedTime, RemainingRetentionDays, ImmutabilityPolicyUntilDate, ImmutabilityPolicyMode, LegalHold, CopyId, CopyStatus, CopySource, CopyProgress, CopyCompletionTime, CopyStatusDescription, CustomerProvidedKeySha256, RehydratePriority, ArchiveStatus, XmsBlobSequenceNumber, EncryptionScope, IncrementalCopy, TagCount'. For Blob object type schema field value 'DeletedTime' is applicable only for Hns enabled accounts. The valid values for 'Container' definition.objectType include 'Name, Last-Modified, Metadata, LeaseStatus, LeaseState, LeaseDuration, PublicAccess, HasImmutabilityPolicy, HasLegalHold, Etag, DefaultEncryptionScope, DenyEncryptionScopeOverride, ImmutableStorageWithVersioningEnabled, Deleted, Version, DeletedTime, RemainingRetentionDays'. Schema field values 'Expiry-Time, hdi_isfolder, Owner, Group, Permissions, Acl, DeletionId' are valid only for Hns enabled accounts.Schema field values 'Tags, TagCount' are only valid for Non-Hns accounts.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "format",
        "schedule",
        "objectType",
        "schemaFields"
      ],
      "type": "object"
    },
    "BlobInventoryPolicyFilter": {
      "description": "An object that defines the blob inventory rule filter conditions. For 'Blob' definition.objectType all filter properties are applicable, 'blobTypes' is required and others are optional. For 'Container' definition.objectType only prefixMatch is applicable and is optional.",
      "properties": {
        "blobTypes": {
          "description": "An array of predefined enum values. Valid values include blockBlob, appendBlob, pageBlob. Hns accounts does not support pageBlobs. This field is required when definition.objectType property is set to 'Blob'.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "creationTime": {
          "description": "This property is used to filter objects based on the object creation time",
          "oneOf": [
            {
              "$ref": "#/definitions/BlobInventoryCreationTime"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "excludePrefix": {
          "description": "An array of strings with maximum 10 blob prefixes to be excluded from the inventory.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "includeBlobVersions": {
          "description": "Includes blob versions in blob inventory when value is set to true. The definition.schemaFields values 'VersionId and IsCurrentVersion' are required if this property is set to true, else they must be excluded.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "includeDeleted": {
          "description": "For 'Container' definition.objectType the definition.schemaFields must include 'Deleted, Version, DeletedTime and RemainingRetentionDays'. For 'Blob' definition.objectType and HNS enabled storage accounts the definition.schemaFields must include 'DeletionId, Deleted, DeletedTime and RemainingRetentionDays' and for Hns disabled accounts the definition.schemaFields must include 'Deleted and RemainingRetentionDays', else it must be excluded.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "includeSnapshots": {
          "description": "Includes blob snapshots in blob inventory when value is set to true. The definition.schemaFields value 'Snapshot' is required if this property is set to true, else it must be excluded.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "prefixMatch": {
          "description": "An array of strings with maximum 10 blob prefixes to be included in the inventory.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "BlobInventoryPolicyProperties": {
      "description": "The storage account blob inventory policy properties.",
      "properties": {
        "policy": {
          "description": "The storage account blob inventory policy object. It is composed of policy rules.",
          "oneOf": [
            {
              "$ref": "#/definitions/BlobInventoryPolicySchema"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "policy"
      ],
      "type": "object"
    },
    "BlobInventoryPolicyRule": {
      "description": "An object that wraps the blob inventory rule. Each rule is uniquely defined by name.",
      "properties": {
        "definition": {
          "description": "An object that defines the blob inventory policy rule.",
          "oneOf": [
            {
              "$ref": "#/definitions/BlobInventoryPolicyDefinition"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "destination": {
          "description": "Container name where blob inventory files are stored. Must be pre-created.",
          "type": "string"
        },
        "enabled": {
          "description": "Rule is enabled when set to true.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "name": {
          "description": "A rule name can contain any combination of alpha numeric characters. Rule name is case-sensitive. It must be unique within a policy.",
          "type": "string"
        }
      },
      "required": [
        "enabled",
        "name",
        "destination",
        "definition"
      ],
      "type": "object"
    },
    "BlobInventoryPolicySchema": {
      "description": "The storage account blob inventory policy rules.",
      "properties": {
        "enabled": {
          "description": "Policy is enabled if set to true.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "rules": {
          "description": "The storage account blob inventory policy rules. The rule is applied when it is enabled.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/BlobInventoryPolicyRule"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "description": "The valid value is Inventory",
          "oneOf": [
            {
              "enum": [
                "Inventory"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "enabled",
        "type",
        "rules"
      ],
      "type": "object"
    },
    "BlobServicePropertiesProperties": {
      "description": "The properties of a storage accountâ€™s Blob service.",
      "properties": {
        "automaticSnapshotPolicyEnabled": {
          "description": "Deprecated in favor of isVersioningEnabled property.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "changeFeed": {
          "description": "The blob service properties for change feed events.",
          "oneOf": [
            {
              "$ref": "#/definitions/ChangeFeed"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "containerDeleteRetentionPolicy": {
          "description": "The blob service properties for container soft delete.",
          "oneOf": [
            {
              "$ref": "#/definitions/DeleteRetentionPolicy"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "cors": {
          "description": "Specifies CORS rules for the Blob service. You can include up to five CorsRule elements in the request. If no CorsRule elements are included in the request body, all CORS rules will be deleted, and CORS will be disabled for the Blob service.",
          "oneOf": [
            {
              "$ref": "#/definitions/CorsRules"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "defaultServiceVersion": {
          "description": "DefaultServiceVersion indicates the default version to use for requests to the Blob service if an incoming requestâ€™s version is not specified. Possible values include version 2008-10-27 and all more recent versions.",
          "type": "string"
        },
        "deleteRetentionPolicy": {
          "description": "The blob service properties for blob soft delete.",
          "oneOf": [
            {
              "$ref": "#/definitions/DeleteRetentionPolicy"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "isVersioningEnabled": {
          "description": "Versioning is enabled if set to true.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "lastAccessTimeTrackingPolicy": {
          "description": "The blob service property to configure last access time based tracking policy.",
          "oneOf": [
            {
              "$ref": "#/definitions/LastAccessTimeTrackingPolicy"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "restorePolicy": {
          "description": "The blob service properties for blob restore policy.",
          "oneOf": [
            {
              "$ref": "#/definitions/RestorePolicyProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ChangeFeed": {
      "description": "The blob service properties for change feed events.",
      "properties": {
        "enabled": {
          "description": "Indicates whether change feed event logging is enabled for the Blob service.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "retentionInDays": {
          "description": "Indicates the duration of changeFeed retention in days. Minimum value is 1 day and maximum value is 146000 days (400 years). A null value indicates an infinite retention of the change feed.",
          "oneOf": [
            {
              "maximum": 146000,
              "minimum": 1,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ContainerProperties": {
      "description": "The properties of a container.",
      "properties": {
        "defaultEncryptionScope": {
          "description": "Default the container to use specified encryption scope for all writes.",
          "type": "string"
        },
        "denyEncryptionScopeOverride": {
          "description": "Block override of encryption scope from the container default.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "enableNfsV3AllSquash": {
          "description": "Enable NFSv3 all squash on blob container.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "enableNfsV3RootSquash": {
          "description": "Enable NFSv3 root squash on blob container.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "immutableStorageWithVersioning": {
          "description": "The object level immutability property of the container. The property is immutable and can only be set to true at the container creation time. Existing containers must undergo a migration process.",
          "oneOf": [
            {
              "$ref": "#/definitions/ImmutableStorageWithVersioning"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "metadata": {
          "description": "A name-value pair to associate with the container as metadata.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "publicAccess": {
          "description": "Specifies whether data in the container may be accessed publicly and the level of access.",
          "oneOf": [
            {
              "enum": [
                "Container",
                "Blob",
                "None"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "CorsRule": {
      "description": "Specifies a CORS rule for the Blob service.",
      "properties": {
        "allowedHeaders": {
          "description": "Required if CorsRule element is present. A list of headers allowed to be part of the cross-origin request.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "allowedMethods": {
          "description": "Required if CorsRule element is present. A list of HTTP methods that are allowed to be executed by the origin.",
          "oneOf": [
            {
              "items": {
                "enum": [
                  "DELETE",
                  "GET",
                  "HEAD",
                  "MERGE",
                  "POST",
                  "OPTIONS",
                  "PUT",
                  "PATCH",
                  "CONNECT",
                  "TRACE"
                ],
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "allowedOrigins": {
          "description": "Required if CorsRule element is present. A list of origin domains that will be allowed via CORS, or \"*\" to allow all domains",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "exposedHeaders": {
          "description": "Required if CorsRule element is present. A list of response headers to expose to CORS clients.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "maxAgeInSeconds": {
          "description": "Required if CorsRule element is present. The number of seconds that the client/browser should cache a preflight response.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "allowedOrigins",
        "allowedMethods",
        "maxAgeInSeconds",
        "exposedHeaders",
        "allowedHeaders"
      ],
      "type": "object"
    },
    "CorsRules": {
      "description": "Sets the CORS rules. You can include up to five CorsRule elements in the request. ",
      "properties": {
        "corsRules": {
          "description": "The List of CORS rules. You can include up to five CorsRule elements in the request. ",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/CorsRule"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "CustomDomain": {
      "description": "The custom domain assigned to this storage account. This can be set via Update.",
      "properties": {
        "name": {
          "description": "Gets or sets the custom domain name assigned to the storage account. Name is the CNAME source.",
          "type": "string"
        },
        "useSubDomainName": {
          "description": "Indicates whether indirect CName validation is enabled. Default value is false. This should only be set on updates.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "DateAfterCreation": {
      "description": "Object to define snapshot and version action conditions.",
      "properties": {
        "daysAfterCreationGreaterThan": {
          "description": "Value indicating the age in days after creation",
          "oneOf": [
            {
              "minimum": 0,
              "multipleOf": 1,
              "type": "number"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "daysAfterLastTierChangeGreaterThan": {
          "description": "Value indicating the age in days after last blob tier change time. This property is only applicable for tierToArchive actions and requires daysAfterCreationGreaterThan to be set for snapshots and blob version based actions. The blob will be archived if both the conditions are satisfied.",
          "oneOf": [
            {
              "minimum": 0,
              "multipleOf": 1,
              "type": "number"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "daysAfterCreationGreaterThan"
      ],
      "type": "object"
    },
    "DateAfterModification": {
      "description": "Object to define the base blob action conditions. Properties daysAfterModificationGreaterThan, daysAfterLastAccessTimeGreaterThan and daysAfterCreationGreaterThan are mutually exclusive. The daysAfterLastTierChangeGreaterThan property is only applicable for tierToArchive actions which requires daysAfterModificationGreaterThan to be set, also it cannot be used in conjunction with daysAfterLastAccessTimeGreaterThan or daysAfterCreationGreaterThan.",
      "properties": {
        "daysAfterCreationGreaterThan": {
          "description": "Value indicating the age in days after blob creation.",
          "oneOf": [
            {
              "minimum": 0,
              "multipleOf": 1,
              "type": "number"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "daysAfterLastAccessTimeGreaterThan": {
          "description": "Value indicating the age in days after last blob access. This property can only be used in conjunction with last access time tracking policy",
          "oneOf": [
            {
              "minimum": 0,
              "multipleOf": 1,
              "type": "number"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "daysAfterLastTierChangeGreaterThan": {
          "description": "Value indicating the age in days after last blob tier change time. This property is only applicable for tierToArchive actions and requires daysAfterModificationGreaterThan to be set for baseBlobs based actions. The blob will be archived if both the conditions are satisfied.",
          "oneOf": [
            {
              "minimum": 0,
              "multipleOf": 1,
              "type": "number"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "daysAfterModificationGreaterThan": {
          "description": "Value indicating the age in days after last modification",
          "oneOf": [
            {
              "minimum": 0,
              "multipleOf": 1,
              "type": "number"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "DeleteRetentionPolicy": {
      "description": "The service properties for soft delete.",
      "properties": {
        "allowPermanentDelete": {
          "description": "This property when set to true allows deletion of the soft deleted blob versions and snapshots. This property cannot be used blob restore policy. This property only applies to blob service and does not apply to containers or file share.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "days": {
          "description": "Indicates the number of days that the deleted item should be retained. The minimum specified value can be 1 and the maximum value can be 365.",
          "oneOf": [
            {
              "maximum": 365,
              "minimum": 1,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "enabled": {
          "description": "Indicates whether DeleteRetentionPolicy is enabled.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "Encryption": {
      "description": "The encryption settings on the storage account.",
      "properties": {
        "identity": {
          "description": "The identity to be used with service-side encryption at rest.",
          "oneOf": [
            {
              "$ref": "#/definitions/EncryptionIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "keySource": {
          "description": "The encryption keySource (provider). Possible values (case-insensitive):  Microsoft.Storage, Microsoft.Keyvault",
          "oneOf": [
            {
              "enum": [
                "Microsoft.Storage",
                "Microsoft.Keyvault"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "keyvaultproperties": {
          "description": "Properties provided by key vault.",
          "oneOf": [
            {
              "$ref": "#/definitions/KeyVaultProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "requireInfrastructureEncryption": {
          "description": "A boolean indicating whether or not the service applies a secondary layer of encryption with platform managed keys for data at rest.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "services": {
          "description": "List of services which support encryption.",
          "oneOf": [
            {
              "$ref": "#/definitions/EncryptionServices"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "EncryptionIdentity": {
      "description": "Encryption identity for the storage account.",
      "properties": {
        "federatedIdentityClientId": {
          "description": "ClientId of the multi-tenant application to be used in conjunction with the user-assigned identity for cross-tenant customer-managed-keys server-side encryption on the storage account.",
          "type": "string"
        },
        "userAssignedIdentity": {
          "description": "Resource identifier of the UserAssigned identity to be associated with server-side encryption on the storage account.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "EncryptionScopeKeyVaultProperties": {
      "description": "The key vault properties for the encryption scope. This is a required field if encryption scope 'source' attribute is set to 'Microsoft.KeyVault'.",
      "properties": {
        "keyUri": {
          "description": "The object identifier for a key vault key object. When applied, the encryption scope will use the key referenced by the identifier to enable customer-managed key support on this encryption scope.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "EncryptionScopeProperties": {
      "description": "Properties of the encryption scope.",
      "properties": {
        "keyVaultProperties": {
          "description": "The key vault properties for the encryption scope. This is a required field if encryption scope 'source' attribute is set to 'Microsoft.KeyVault'.",
          "oneOf": [
            {
              "$ref": "#/definitions/EncryptionScopeKeyVaultProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "requireInfrastructureEncryption": {
          "description": "A boolean indicating whether or not the service applies a secondary layer of encryption with platform managed keys for data at rest.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "source": {
          "description": "The provider for the encryption scope. Possible values (case-insensitive):  Microsoft.Storage, Microsoft.KeyVault.",
          "oneOf": [
            {
              "enum": [
                "Microsoft.Storage",
                "Microsoft.KeyVault"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "state": {
          "description": "The state of the encryption scope. Possible values (case-insensitive):  Enabled, Disabled.",
          "oneOf": [
            {
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "EncryptionService": {
      "description": "A service that allows server-side encryption to be used.",
      "properties": {
        "enabled": {
          "description": "A boolean indicating whether or not the service encrypts the data as it is stored. Encryption at rest is enabled by default today and cannot be disabled.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "keyType": {
          "description": "Encryption key type to be used for the encryption service. 'Account' key type implies that an account-scoped encryption key will be used. 'Service' key type implies that a default service key is used.",
          "oneOf": [
            {
              "enum": [
                "Service",
                "Account"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "EncryptionServices": {
      "description": "A list of services that support encryption.",
      "properties": {
        "blob": {
          "description": "The encryption function of the blob storage service.",
          "oneOf": [
            {
              "$ref": "#/definitions/EncryptionService"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "file": {
          "description": "The encryption function of the file storage service.",
          "oneOf": [
            {
              "$ref": "#/definitions/EncryptionService"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "queue": {
          "description": "The encryption function of the queue storage service.",
          "oneOf": [
            {
              "$ref": "#/definitions/EncryptionService"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "table": {
          "description": "The encryption function of the table storage service.",
          "oneOf": [
            {
              "$ref": "#/definitions/EncryptionService"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ExtendedLocation": {
      "description": "The complex type of the extended location.",
      "properties": {
        "name": {
          "description": "The name of the extended location.",
          "type": "string"
        },
        "type": {
          "description": "The type of the extended location.",
          "oneOf": [
            {
              "enum": [
                "EdgeZone"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "FileServicePropertiesProperties": {
      "description": "The properties of File services in storage account.",
      "properties": {
        "cors": {
          "description": "Specifies CORS rules for the File service. You can include up to five CorsRule elements in the request. If no CorsRule elements are included in the request body, all CORS rules will be deleted, and CORS will be disabled for the File service.",
          "oneOf": [
            {
              "$ref": "#/definitions/CorsRules"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "protocolSettings": {
          "description": "Protocol settings for file service",
          "oneOf": [
            {
              "$ref": "#/definitions/ProtocolSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "shareDeleteRetentionPolicy": {
          "description": "The file service properties for share soft delete.",
          "oneOf": [
            {
              "$ref": "#/definitions/DeleteRetentionPolicy"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "FileShareProperties": {
      "description": "The properties of the file share.",
      "properties": {
        "accessTier": {
          "description": "Access tier for specific share. GpV2 account can choose between TransactionOptimized (default), Hot, and Cool. FileStorage account can choose Premium.",
          "oneOf": [
            {
              "enum": [
                "TransactionOptimized",
                "Hot",
                "Cool",
                "Premium"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "enabledProtocols": {
          "description": "The authentication protocol that is used for the file share. Can only be specified when creating a share.",
          "oneOf": [
            {
              "enum": [
                "SMB",
                "NFS"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "metadata": {
          "description": "A name-value pair to associate with the share as metadata.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "rootSquash": {
          "description": "The property is for NFS share only. The default is NoRootSquash.",
          "oneOf": [
            {
              "enum": [
                "NoRootSquash",
                "RootSquash",
                "AllSquash"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "shareQuota": {
          "description": "The maximum size of the share, in gigabytes. Must be greater than 0, and less than or equal to 5TB (5120). For Large File Shares, the maximum size is 102400.",
          "oneOf": [
            {
              "maximum": 102400,
              "minimum": 1,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "signedIdentifiers": {
          "description": "List of stored access policies specified on the share.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/SignedIdentifier"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "IPRule": {
      "description": "IP rule with specific IP or IP range in CIDR format.",
      "properties": {
        "action": {
          "description": "The action of IP ACL rule.",
          "oneOf": [
            {
              "enum": [
                "Allow"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "value": {
          "description": "Specifies the IP or IP range in CIDR format. Only IPV4 address is allowed.",
          "type": "string"
        }
      },
      "required": [
        "value"
      ],
      "type": "object"
    },
    "Identity": {
      "description": "Identity for the resource.",
      "properties": {
        "type": {
          "description": "The identity type.",
          "oneOf": [
            {
              "enum": [
                "None",
                "SystemAssigned",
                "UserAssigned",
                "SystemAssigned,UserAssigned"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "userAssignedIdentities": {
          "description": "Gets or sets a list of key value pairs that describe the set of User Assigned identities that will be used with this storage account. The key is the ARM resource identifier of the identity. Only 1 User Assigned identity is permitted here.",
          "oneOf": [
            {
              "additionalProperties": {
                "$ref": "#/definitions/UserAssignedIdentity"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "type"
      ],
      "type": "object"
    },
    "ImmutabilityPolicyProperty": {
      "description": "The properties of an ImmutabilityPolicy of a blob container.",
      "properties": {
        "allowProtectedAppendWrites": {
          "description": "This property can only be changed for unlocked time-based retention policies. When enabled, new blocks can be written to an append blob while maintaining immutability protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted. This property cannot be changed with ExtendImmutabilityPolicy API.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "allowProtectedAppendWritesAll": {
          "description": "This property can only be changed for unlocked time-based retention policies. When enabled, new blocks can be written to both 'Append and Bock Blobs' while maintaining immutability protection and compliance. Only new blocks can be added and any existing blocks cannot be modified or deleted. This property cannot be changed with ExtendImmutabilityPolicy API. The 'allowProtectedAppendWrites' and 'allowProtectedAppendWritesAll' properties are mutually exclusive.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "immutabilityPeriodSinceCreationInDays": {
          "description": "The immutability period for the blobs in the container since the policy creation, in days.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ImmutableStorageAccount": {
      "description": "This property enables and defines account-level immutability. Enabling the feature auto-enables Blob Versioning.",
      "properties": {
        "enabled": {
          "description": "A boolean flag which enables account-level immutability. All the containers under such an account have object-level immutability enabled by default.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "immutabilityPolicy": {
          "description": "Specifies the default account-level immutability policy which is inherited and applied to objects that do not possess an explicit immutability policy at the object level. The object-level immutability policy has higher precedence than the container-level immutability policy, which has a higher precedence than the account-level immutability policy.",
          "oneOf": [
            {
              "$ref": "#/definitions/AccountImmutabilityPolicyProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ImmutableStorageWithVersioning": {
      "description": "Object level immutability properties of the container.",
      "properties": {
        "enabled": {
          "description": "This is an immutable property, when set to true it enables object level immutability at the container level.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "KeyPolicy": {
      "description": "KeyPolicy assigned to the storage account.",
      "properties": {
        "keyExpirationPeriodInDays": {
          "description": "The key expiration period in days.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "keyExpirationPeriodInDays"
      ],
      "type": "object"
    },
    "KeyVaultProperties": {
      "description": "Properties of key vault.",
      "properties": {
        "keyname": {
          "description": "The name of KeyVault key.",
          "type": "string"
        },
        "keyvaulturi": {
          "description": "The Uri of KeyVault.",
          "type": "string"
        },
        "keyversion": {
          "description": "The version of KeyVault key.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "LastAccessTimeTrackingPolicy": {
      "description": "The blob service properties for Last access time based tracking policy.",
      "properties": {
        "blobType": {
          "description": "An array of predefined supported blob types. Only blockBlob is the supported value. This field is currently read only",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "enable": {
          "description": "When set to true last access time based tracking is enabled.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "name": {
          "description": "Name of the policy. The valid value is AccessTimeTracking. This field is currently read only",
          "oneOf": [
            {
              "enum": [
                "AccessTimeTracking"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "trackingGranularityInDays": {
          "description": "The field specifies blob object tracking granularity in days, typically how often the blob object should be tracked.This field is currently read only with value as 1",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "enable"
      ],
      "type": "object"
    },
    "LocalUserProperties": {
      "description": "The Storage Account Local User properties.",
      "properties": {
        "hasSharedKey": {
          "description": "Indicates whether shared key exists. Set it to false to remove existing shared key.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "hasSshKey": {
          "description": "Indicates whether ssh key exists. Set it to false to remove existing SSH key.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "hasSshPassword": {
          "description": "Indicates whether ssh password exists. Set it to false to remove existing SSH password.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "homeDirectory": {
          "description": "Optional, local user home directory.",
          "type": "string"
        },
        "permissionScopes": {
          "description": "The permission scopes of the local user.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/PermissionScope"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "sshAuthorizedKeys": {
          "description": "Optional, local user ssh authorized keys for SFTP.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/SshPublicKey"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ManagementPolicyAction": {
      "description": "Actions are applied to the filtered blobs when the execution condition is met.",
      "properties": {
        "baseBlob": {
          "description": "The management policy action for base blob",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagementPolicyBaseBlob"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "snapshot": {
          "description": "The management policy action for snapshot",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagementPolicySnapShot"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "version": {
          "description": "The management policy action for version",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagementPolicyVersion"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ManagementPolicyBaseBlob": {
      "description": "Management policy action for base blob.",
      "properties": {
        "delete": {
          "description": "The function to delete the blob",
          "oneOf": [
            {
              "$ref": "#/definitions/DateAfterModification"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "enableAutoTierToHotFromCool": {
          "description": "This property enables auto tiering of a blob from cool to hot on a blob access. This property requires tierToCool.daysAfterLastAccessTimeGreaterThan.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tierToArchive": {
          "description": "The function to tier blobs to archive storage.",
          "oneOf": [
            {
              "$ref": "#/definitions/DateAfterModification"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tierToCold": {
          "description": "The function to tier blobs to cold storage.",
          "oneOf": [
            {
              "$ref": "#/definitions/DateAfterModification"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tierToCool": {
          "description": "The function to tier blobs to cool storage.",
          "oneOf": [
            {
              "$ref": "#/definitions/DateAfterModification"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tierToHot": {
          "description": "The function to tier blobs to hot storage. This action can only be used with Premium Block Blob Storage Accounts",
          "oneOf": [
            {
              "$ref": "#/definitions/DateAfterModification"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ManagementPolicyDefinition": {
      "description": "An object that defines the Lifecycle rule. Each definition is made up with a filters set and an actions set.",
      "properties": {
        "actions": {
          "description": "An object that defines the action set.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagementPolicyAction"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "filters": {
          "description": "An object that defines the filter set.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagementPolicyFilter"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "actions"
      ],
      "type": "object"
    },
    "ManagementPolicyFilter": {
      "description": "Filters limit rule actions to a subset of blobs within the storage account. If multiple filters are defined, a logical AND is performed on all filters. ",
      "properties": {
        "blobIndexMatch": {
          "description": "An array of blob index tag based filters, there can be at most 10 tag filters",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/TagFilter"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "blobTypes": {
          "description": "An array of predefined enum values. Currently blockBlob supports all tiering and delete actions. Only delete actions are supported for appendBlob.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "prefixMatch": {
          "description": "An array of strings for prefixes to be match.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "blobTypes"
      ],
      "type": "object"
    },
    "ManagementPolicyProperties": {
      "description": "The Storage Account ManagementPolicy properties.",
      "properties": {
        "policy": {
          "description": "The Storage Account ManagementPolicy, in JSON format. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagementPolicySchema"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "policy"
      ],
      "type": "object"
    },
    "ManagementPolicyRule": {
      "description": "An object that wraps the Lifecycle rule. Each rule is uniquely defined by name.",
      "properties": {
        "definition": {
          "description": "An object that defines the Lifecycle rule.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagementPolicyDefinition"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "enabled": {
          "description": "Rule is enabled if set to true.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "name": {
          "description": "A rule name can contain any combination of alpha numeric characters. Rule name is case-sensitive. It must be unique within a policy.",
          "type": "string"
        },
        "type": {
          "description": "The valid value is Lifecycle",
          "oneOf": [
            {
              "enum": [
                "Lifecycle"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "name",
        "type",
        "definition"
      ],
      "type": "object"
    },
    "ManagementPolicySchema": {
      "description": "The Storage Account ManagementPolicies Rules. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts.",
      "properties": {
        "rules": {
          "description": "The Storage Account ManagementPolicies Rules. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/ManagementPolicyRule"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "rules"
      ],
      "type": "object"
    },
    "ManagementPolicySnapShot": {
      "description": "Management policy action for snapshot.",
      "properties": {
        "delete": {
          "description": "The function to delete the blob snapshot",
          "oneOf": [
            {
              "$ref": "#/definitions/DateAfterCreation"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tierToArchive": {
          "description": "The function to tier blob snapshot to archive storage.",
          "oneOf": [
            {
              "$ref": "#/definitions/DateAfterCreation"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tierToCold": {
          "description": "The function to tier blobs to cold storage.",
          "oneOf": [
            {
              "$ref": "#/definitions/DateAfterCreation"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tierToCool": {
          "description": "The function to tier blob snapshot to cool storage.",
          "oneOf": [
            {
              "$ref": "#/definitions/DateAfterCreation"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tierToHot": {
          "description": "The function to tier blobs to hot storage. This action can only be used with Premium Block Blob Storage Accounts",
          "oneOf": [
            {
              "$ref": "#/definitions/DateAfterCreation"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ManagementPolicyVersion": {
      "description": "Management policy action for blob version.",
      "properties": {
        "delete": {
          "description": "The function to delete the blob version",
          "oneOf": [
            {
              "$ref": "#/definitions/DateAfterCreation"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tierToArchive": {
          "description": "The function to tier blob version to archive storage.",
          "oneOf": [
            {
              "$ref": "#/definitions/DateAfterCreation"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tierToCold": {
          "description": "The function to tier blobs to cold storage.",
          "oneOf": [
            {
              "$ref": "#/definitions/DateAfterCreation"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tierToCool": {
          "description": "The function to tier blob version to cool storage.",
          "oneOf": [
            {
              "$ref": "#/definitions/DateAfterCreation"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tierToHot": {
          "description": "The function to tier blobs to hot storage. This action can only be used with Premium Block Blob Storage Accounts",
          "oneOf": [
            {
              "$ref": "#/definitions/DateAfterCreation"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "Multichannel": {
      "description": "Multichannel setting. Applies to Premium FileStorage only.",
      "properties": {
        "enabled": {
          "description": "Indicates whether multichannel is enabled",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "NetworkRuleSet": {
      "description": "Network rule set",
      "properties": {
        "bypass": {
          "description": "Specifies whether traffic is bypassed for Logging/Metrics/AzureServices. Possible values are any combination of Logging|Metrics|AzureServices (For example, \"Logging, Metrics\"), or None to bypass none of those traffics.",
          "oneOf": [
            {
              "enum": [
                "None",
                "Logging",
                "Metrics",
                "AzureServices"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "defaultAction": {
          "description": "Specifies the default action of allow or deny when no other rules match.",
          "oneOf": [
            {
              "enum": [
                "Allow",
                "Deny"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "ipRules": {
          "description": "Sets the IP ACL rules",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/IPRule"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resourceAccessRules": {
          "description": "Sets the resource access rules",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/ResourceAccessRule"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "virtualNetworkRules": {
          "description": "Sets the virtual network rules",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/VirtualNetworkRule"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "defaultAction"
      ],
      "type": "object"
    },
    "ObjectReplicationPolicyFilter": {
      "description": "Filters limit replication to a subset of blobs within the storage account. A logical OR is performed on values in the filter. If multiple filters are defined, a logical AND is performed on all filters.",
      "properties": {
        "minCreationTime": {
          "description": "Blobs created after the time will be replicated to the destination. It must be in datetime format 'yyyy-MM-ddTHH:mm:ssZ'. Example: 2020-02-19T16:05:00Z",
          "type": "string"
        },
        "prefixMatch": {
          "description": "Optional. Filters the results to replicate only blobs whose names begin with the specified prefix.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ObjectReplicationPolicyProperties": {
      "description": "The Storage Account ObjectReplicationPolicy properties.",
      "properties": {
        "destinationAccount": {
          "description": "Required. Destination account name. It should be full resource id if allowCrossTenantReplication set to false.",
          "type": "string"
        },
        "rules": {
          "description": "The storage account object replication rules.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/ObjectReplicationPolicyRule"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "sourceAccount": {
          "description": "Required. Source account name. It should be full resource id if allowCrossTenantReplication set to false.",
          "type": "string"
        }
      },
      "required": [
        "sourceAccount",
        "destinationAccount"
      ],
      "type": "object"
    },
    "ObjectReplicationPolicyRule": {
      "description": "The replication policy rule between two containers.",
      "properties": {
        "destinationContainer": {
          "description": "Required. Destination container name.",
          "type": "string"
        },
        "filters": {
          "description": "Optional. An object that defines the filter set.",
          "oneOf": [
            {
              "$ref": "#/definitions/ObjectReplicationPolicyFilter"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "ruleId": {
          "description": "Rule Id is auto-generated for each new rule on destination account. It is required for put policy on source account.",
          "type": "string"
        },
        "sourceContainer": {
          "description": "Required. Source container name.",
          "type": "string"
        }
      },
      "required": [
        "sourceContainer",
        "destinationContainer"
      ],
      "type": "object"
    },
    "PermissionScope": {
      "properties": {
        "permissions": {
          "description": "The permissions for the local user. Possible values include: Read (r), Write (w), Delete (d), List (l), and Create (c).",
          "type": "string"
        },
        "resourceName": {
          "description": "The name of resource, normally the container name or the file share name, used by the local user.",
          "type": "string"
        },
        "service": {
          "description": "The service used by the local user, e.g. blob, file.",
          "type": "string"
        }
      },
      "required": [
        "permissions",
        "service",
        "resourceName"
      ],
      "type": "object"
    },
    "PrivateEndpoint": {
      "description": "The Private Endpoint resource.",
      "properties": {},
      "type": "object"
    },
    "PrivateEndpointConnectionProperties": {
      "description": "Properties of the PrivateEndpointConnectProperties.",
      "properties": {
        "privateEndpoint": {
          "description": "The resource of private end point.",
          "oneOf": [
            {
              "$ref": "#/definitions/PrivateEndpoint"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "privateLinkServiceConnectionState": {
          "description": "A collection of information about the state of the connection between service consumer and provider.",
          "oneOf": [
            {
              "$ref": "#/definitions/PrivateLinkServiceConnectionState"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "privateLinkServiceConnectionState"
      ],
      "type": "object"
    },
    "PrivateLinkServiceConnectionState": {
      "description": "A collection of information about the state of the connection between service consumer and provider.",
      "properties": {
        "actionRequired": {
          "description": "A message indicating if changes on the service provider require any updates on the consumer.",
          "type": "string"
        },
        "description": {
          "description": "The reason for approval/rejection of the connection.",
          "type": "string"
        },
        "status": {
          "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
          "oneOf": [
            {
              "enum": [
                "Pending",
                "Approved",
                "Rejected"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ProtocolSettings": {
      "description": "Protocol settings for file service",
      "properties": {
        "smb": {
          "description": "Setting for SMB protocol",
          "oneOf": [
            {
              "$ref": "#/definitions/SmbSetting"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "QueueProperties": {
      "properties": {
        "metadata": {
          "description": "A name-value pair that represents queue metadata.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "QueueServicePropertiesProperties": {
      "description": "The properties of a storage accountâ€™s Queue service.",
      "properties": {
        "cors": {
          "description": "Specifies CORS rules for the Queue service. You can include up to five CorsRule elements in the request. If no CorsRule elements are included in the request body, all CORS rules will be deleted, and CORS will be disabled for the Queue service.",
          "oneOf": [
            {
              "$ref": "#/definitions/CorsRules"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ResourceAccessRule": {
      "description": "Resource Access Rule.",
      "properties": {
        "resourceId": {
          "description": "Resource Id",
          "type": "string"
        },
        "tenantId": {
          "description": "Tenant Id",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RestorePolicyProperties": {
      "description": "The blob service properties for blob restore policy",
      "properties": {
        "days": {
          "description": "how long this blob can be restored. It should be great than zero and less than DeleteRetentionPolicy.days.",
          "oneOf": [
            {
              "maximum": 365,
              "minimum": 1,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "enabled": {
          "description": "Blob restore is enabled if set to true.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "enabled"
      ],
      "type": "object"
    },
    "RoutingPreference": {
      "description": "Routing preference defines the type of network, either microsoft or internet routing to be used to deliver the user data, the default option is microsoft routing",
      "properties": {
        "publishInternetEndpoints": {
          "description": "A boolean flag which indicates whether internet routing storage endpoints are to be published",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "publishMicrosoftEndpoints": {
          "description": "A boolean flag which indicates whether microsoft routing storage endpoints are to be published",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "routingChoice": {
          "description": "Routing Choice defines the kind of network routing opted by the user.",
          "oneOf": [
            {
              "enum": [
                "MicrosoftRouting",
                "InternetRouting"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "SasPolicy": {
      "description": "SasPolicy assigned to the storage account.",
      "properties": {
        "expirationAction": {
          "description": "The SAS expiration action. Can only be Log.",
          "oneOf": [
            {
              "enum": [
                "Log"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "sasExpirationPeriod": {
          "description": "The SAS expiration period, DD.HH:MM:SS.",
          "type": "string"
        }
      },
      "required": [
        "sasExpirationPeriod",
        "expirationAction"
      ],
      "type": "object"
    },
    "SignedIdentifier": {
      "properties": {
        "accessPolicy": {
          "description": "Access policy",
          "oneOf": [
            {
              "$ref": "#/definitions/AccessPolicy"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "id": {
          "description": "An unique identifier of the stored access policy.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Sku": {
      "description": "The SKU of the storage account.",
      "properties": {
        "name": {
          "description": "The SKU name. Required for account creation; optional for update. Note that in older versions, SKU name was called accountType.",
          "oneOf": [
            {
              "enum": [
                "Standard_LRS",
                "Standard_GRS",
                "Standard_RAGRS",
                "Standard_ZRS",
                "Premium_LRS",
                "Premium_ZRS",
                "Standard_GZRS",
                "Standard_RAGZRS"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "SmbSetting": {
      "description": "Setting for SMB protocol",
      "properties": {
        "authenticationMethods": {
          "description": "SMB authentication methods supported by server. Valid values are NTLMv2, Kerberos. Should be passed as a string with delimiter ';'.",
          "type": "string"
        },
        "channelEncryption": {
          "description": "SMB channel encryption supported by server. Valid values are AES-128-CCM, AES-128-GCM, AES-256-GCM. Should be passed as a string with delimiter ';'.",
          "type": "string"
        },
        "kerberosTicketEncryption": {
          "description": "Kerberos ticket encryption supported by server. Valid values are RC4-HMAC, AES-256. Should be passed as a string with delimiter ';'",
          "type": "string"
        },
        "multichannel": {
          "description": "Multichannel setting. Applies to Premium FileStorage only.",
          "oneOf": [
            {
              "$ref": "#/definitions/Multichannel"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "versions": {
          "description": "SMB protocol versions supported by server. Valid values are SMB2.1, SMB3.0, SMB3.1.1. Should be passed as a string with delimiter ';'.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "SshPublicKey": {
      "properties": {
        "description": {
          "description": "Optional. It is used to store the function/usage of the key",
          "type": "string"
        },
        "key": {
          "description": "Ssh public key base64 encoded. The format should be: '<keyType> <keyData>', e.g. ssh-rsa AAAABBBB",
          "type": "string"
        }
      },
      "type": "object"
    },
    "StorageAccountPropertiesCreateParameters": {
      "description": "The parameters used to create the storage account.",
      "properties": {
        "accessTier": {
          "description": "Required for storage accounts where kind = BlobStorage. The access tier is used for billing. The 'Premium' access tier is the default value for premium block blobs storage account type and it cannot be changed for the premium block blobs storage account type.",
          "oneOf": [
            {
              "enum": [
                "Hot",
                "Cool",
                "Premium"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "allowBlobPublicAccess": {
          "description": "Allow or disallow public access to all blobs or containers in the storage account. The default interpretation is false for this property.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "allowCrossTenantReplication": {
          "description": "Allow or disallow cross AAD tenant object replication. Set this property to true for new or existing accounts only if object replication policies will involve storage accounts in different AAD tenants. The default interpretation is false for new accounts to follow best security practices by default.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "allowSharedKeyAccess": {
          "description": "Indicates whether the storage account permits requests to be authorized with the account access key via Shared Key. If false, then all requests, including shared access signatures, must be authorized with Azure Active Directory (Azure AD). The default value is null, which is equivalent to true.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "allowedCopyScope": {
          "description": "Restrict copy to and from Storage Accounts within an AAD tenant or with Private Links to the same VNet.",
          "oneOf": [
            {
              "enum": [
                "PrivateLink",
                "AAD"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "azureFilesIdentityBasedAuthentication": {
          "description": "Provides the identity based authentication settings for Azure Files.",
          "oneOf": [
            {
              "$ref": "#/definitions/AzureFilesIdentityBasedAuthentication"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "customDomain": {
          "description": "User domain assigned to the storage account. Name is the CNAME source. Only one custom domain is supported per storage account at this time. To clear the existing custom domain, use an empty string for the custom domain name property.",
          "oneOf": [
            {
              "$ref": "#/definitions/CustomDomain"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "defaultToOAuthAuthentication": {
          "description": "A boolean flag which indicates whether the default authentication is OAuth or not. The default interpretation is false for this property.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "dnsEndpointType": {
          "description": "Allows you to specify the type of endpoint. Set this to AzureDNSZone to create a large number of accounts in a single subscription, which creates accounts in an Azure DNS Zone and the endpoint URL will have an alphanumeric DNS Zone identifier.",
          "oneOf": [
            {
              "enum": [
                "Standard",
                "AzureDnsZone"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "encryption": {
          "description": "Encryption settings to be used for server-side encryption for the storage account.",
          "oneOf": [
            {
              "$ref": "#/definitions/Encryption"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "immutableStorageWithVersioning": {
          "description": "The property is immutable and can only be set to true at the account creation time. When set to true, it enables object level immutability for all the new containers in the account by default.",
          "oneOf": [
            {
              "$ref": "#/definitions/ImmutableStorageAccount"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "isHnsEnabled": {
          "description": "Account HierarchicalNamespace enabled if sets to true.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "isLocalUserEnabled": {
          "description": "Enables local users feature, if set to true",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "isNfsV3Enabled": {
          "description": "NFS 3.0 protocol support enabled if set to true.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "isSftpEnabled": {
          "description": "Enables Secure File Transfer Protocol, if set to true",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "keyPolicy": {
          "description": "KeyPolicy assigned to the storage account.",
          "oneOf": [
            {
              "$ref": "#/definitions/KeyPolicy"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "largeFileSharesState": {
          "description": "Allow large file shares if sets to Enabled. It cannot be disabled once it is enabled.",
          "oneOf": [
            {
              "enum": [
                "Disabled",
                "Enabled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "minimumTlsVersion": {
          "description": "Set the minimum TLS version to be permitted on requests to storage. The default interpretation is TLS 1.0 for this property.",
          "oneOf": [
            {
              "enum": [
                "TLS1_0",
                "TLS1_1",
                "TLS1_2"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "networkAcls": {
          "description": "Network rule set",
          "oneOf": [
            {
              "$ref": "#/definitions/NetworkRuleSet"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "publicNetworkAccess": {
          "description": "Allow or disallow public network access to Storage Account. Value is optional but if passed in, must be 'Enabled' or 'Disabled'.",
          "oneOf": [
            {
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "routingPreference": {
          "description": "Maintains information about the network routing choice opted by the user for data transfer",
          "oneOf": [
            {
              "$ref": "#/definitions/RoutingPreference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "sasPolicy": {
          "description": "SasPolicy assigned to the storage account.",
          "oneOf": [
            {
              "$ref": "#/definitions/SasPolicy"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "supportsHttpsTrafficOnly": {
          "description": "Allows https traffic only to storage service if sets to true. The default value is true since API version 2019-04-01.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "TableAccessPolicy": {
      "description": "Table Access Policy Properties Object.",
      "properties": {
        "expiryTime": {
          "description": "Expiry time of the access policy",
          "format": "date-time",
          "type": "string"
        },
        "permission": {
          "description": "Required. List of abbreviated permissions. Supported permission values include 'r','a','u','d'",
          "type": "string"
        },
        "startTime": {
          "description": "Start time of the access policy",
          "format": "date-time",
          "type": "string"
        }
      },
      "required": [
        "permission"
      ],
      "type": "object"
    },
    "TableProperties": {
      "properties": {
        "signedIdentifiers": {
          "description": "List of stored access policies specified on the table.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/TableSignedIdentifier"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "TableServicePropertiesProperties": {
      "description": "The properties of a storage accountâ€™s Table service.",
      "properties": {
        "cors": {
          "description": "Specifies CORS rules for the Table service. You can include up to five CorsRule elements in the request. If no CorsRule elements are included in the request body, all CORS rules will be deleted, and CORS will be disabled for the Table service.",
          "oneOf": [
            {
              "$ref": "#/definitions/CorsRules"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "TableSignedIdentifier": {
      "description": "Object to set Table Access Policy.",
      "properties": {
        "accessPolicy": {
          "description": "Access policy",
          "oneOf": [
            {
              "$ref": "#/definitions/TableAccessPolicy"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "id": {
          "description": "unique-64-character-value of the stored access policy.",
          "type": "string"
        }
      },
      "required": [
        "id"
      ],
      "type": "object"
    },
    "TagFilter": {
      "description": "Blob index tag based filtering for blob objects",
      "properties": {
        "name": {
          "description": "This is the filter tag name, it can have 1 - 128 characters",
          "maxLength": 128,
          "minLength": 1,
          "type": "string"
        },
        "op": {
          "description": "This is the comparison operator which is used for object comparison and filtering. Only == (equality operator) is currently supported",
          "type": "string"
        },
        "value": {
          "description": "This is the filter tag value field used for tag based filtering, it can have 0 - 256 characters",
          "maxLength": 256,
          "type": "string"
        }
      },
      "required": [
        "name",
        "op",
        "value"
      ],
      "type": "object"
    },
    "UserAssignedIdentity": {
      "description": "UserAssignedIdentity for the resource.",
      "properties": {},
      "type": "object"
    },
    "VirtualNetworkRule": {
      "description": "Virtual Network rule.",
      "properties": {
        "action": {
          "description": "The action of virtual network rule.",
          "oneOf": [
            {
              "enum": [
                "Allow"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "id": {
          "description": "Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}.",
          "type": "string"
        },
        "state": {
          "description": "Gets the state of virtual network rule.",
          "oneOf": [
            {
              "enum": [
                "Provisioning",
                "Deprovisioning",
                "Succeeded",
                "Failed",
                "NetworkSourceDeleted"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "id"
      ],
      "type": "object"
    },
    "storageAccounts_blobServices_childResource": {
      "description": "Microsoft.Storage/storageAccounts/blobServices",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-01-01"
          ],
          "type": "string"
        },
        "name": {
          "oneOf": [
            {
              "enum": [
                "default"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The properties of a storage accountâ€™s Blob service.",
          "oneOf": [
            {
              "$ref": "#/definitions/BlobServicePropertiesProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "blobServices"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "storageAccounts_blobServices_containers_childResource": {
      "description": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-01-01"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the blob container within the specified storage account. Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number.",
          "maxLength": 63,
          "minLength": 3,
          "type": "string"
        },
        "properties": {
          "description": "Properties of the blob container.",
          "oneOf": [
            {
              "$ref": "#/definitions/ContainerProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "containers"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "storageAccounts_blobServices_containers_immutabilityPolicies_childResource": {
      "description": "Microsoft.Storage/storageAccounts/blobServices/containers/immutabilityPolicies",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-01-01"
          ],
          "type": "string"
        },
        "name": {
          "oneOf": [
            {
              "enum": [
                "default"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The properties of an ImmutabilityPolicy of a blob container.",
          "oneOf": [
            {
              "$ref": "#/definitions/ImmutabilityPolicyProperty"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "immutabilityPolicies"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "storageAccounts_encryptionScopes_childResource": {
      "description": "Microsoft.Storage/storageAccounts/encryptionScopes",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-01-01"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the encryption scope within the specified storage account. Encryption scope names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number.",
          "maxLength": 63,
          "minLength": 3,
          "type": "string"
        },
        "properties": {
          "description": "Properties of the encryption scope.",
          "oneOf": [
            {
              "$ref": "#/definitions/EncryptionScopeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "encryptionScopes"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "storageAccounts_fileServices_childResource": {
      "description": "Microsoft.Storage/storageAccounts/fileServices",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-01-01"
          ],
          "type": "string"
        },
        "name": {
          "oneOf": [
            {
              "enum": [
                "default"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The properties of File services in storage account.",
          "oneOf": [
            {
              "$ref": "#/definitions/FileServicePropertiesProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "fileServices"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "storageAccounts_fileServices_shares_childResource": {
      "description": "Microsoft.Storage/storageAccounts/fileServices/shares",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-01-01"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the file share within the specified storage account. File share names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number.",
          "maxLength": 63,
          "minLength": 3,
          "type": "string"
        },
        "properties": {
          "description": "Properties of the file share.",
          "oneOf": [
            {
              "$ref": "#/definitions/FileShareProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "shares"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "storageAccounts_inventoryPolicies_childResource": {
      "description": "Microsoft.Storage/storageAccounts/inventoryPolicies",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-01-01"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the storage account blob inventory policy. It should always be 'default'",
          "oneOf": [
            {
              "enum": [
                "default"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Returns the storage account blob inventory policy rules.",
          "oneOf": [
            {
              "$ref": "#/definitions/BlobInventoryPolicyProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "inventoryPolicies"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "storageAccounts_localUsers_childResource": {
      "description": "Microsoft.Storage/storageAccounts/localUsers",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-01-01"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of local user. The username must contain lowercase letters and numbers only. It must be unique only within the storage account.",
          "maxLength": 64,
          "minLength": 3,
          "type": "string"
        },
        "properties": {
          "description": "Storage account local user properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/LocalUserProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "localUsers"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "storageAccounts_managementPolicies_childResource": {
      "description": "Microsoft.Storage/storageAccounts/managementPolicies",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-01-01"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the Storage Account Management Policy. It should always be 'default'",
          "oneOf": [
            {
              "enum": [
                "default"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Returns the Storage Account Data Policies Rules.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagementPolicyProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "managementPolicies"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "storageAccounts_objectReplicationPolicies_childResource": {
      "description": "Microsoft.Storage/storageAccounts/objectReplicationPolicies",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-01-01"
          ],
          "type": "string"
        },
        "name": {
          "description": "For the destination account, provide the value 'default'. Configure the policy on the destination account first. For the source account, provide the value of the policy ID that is returned when you download the policy that was defined on the destination account. The policy is downloaded as a JSON file.",
          "minLength": 1,
          "type": "string"
        },
        "properties": {
          "description": "Returns the Storage Account Object Replication Policy.",
          "oneOf": [
            {
              "$ref": "#/definitions/ObjectReplicationPolicyProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "objectReplicationPolicies"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "storageAccounts_privateEndpointConnections_childResource": {
      "description": "Microsoft.Storage/storageAccounts/privateEndpointConnections",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-01-01"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the private endpoint connection associated with the Azure resource",
          "type": "string"
        },
        "properties": {
          "description": "Resource properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/PrivateEndpointConnectionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "privateEndpointConnections"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "storageAccounts_queueServices_childResource": {
      "description": "Microsoft.Storage/storageAccounts/queueServices",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-01-01"
          ],
          "type": "string"
        },
        "name": {
          "oneOf": [
            {
              "enum": [
                "default"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The properties of a storage accountâ€™s Queue service.",
          "oneOf": [
            {
              "$ref": "#/definitions/QueueServicePropertiesProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "queueServices"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "storageAccounts_queueServices_queues_childResource": {
      "description": "Microsoft.Storage/storageAccounts/queueServices/queues",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-01-01"
          ],
          "type": "string"
        },
        "name": {
          "description": "A queue name must be unique within a storage account and must be between 3 and 63 characters.The name must comprise of lowercase alphanumeric and dash(-) characters only, it should begin and end with an alphanumeric character and it cannot have two consecutive dash(-) characters.",
          "oneOf": [
            {
              "maxLength": 63,
              "minLength": 3,
              "pattern": "^[a-z0-9]([a-z0-9]|(-(?!-))){1,61}[a-z0-9]$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Queue resource properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/QueueProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "queues"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "storageAccounts_tableServices_childResource": {
      "description": "Microsoft.Storage/storageAccounts/tableServices",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-01-01"
          ],
          "type": "string"
        },
        "name": {
          "oneOf": [
            {
              "enum": [
                "default"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The properties of a storage accountâ€™s Table service.",
          "oneOf": [
            {
              "$ref": "#/definitions/TableServicePropertiesProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "tableServices"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "storageAccounts_tableServices_tables_childResource": {
      "description": "Microsoft.Storage/storageAccounts/tableServices/tables",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-01-01"
          ],
          "type": "string"
        },
        "name": {
          "description": "A table name must be unique within a storage account and must be between 3 and 63 characters.The name must comprise of only alphanumeric characters and it cannot begin with a numeric character.",
          "oneOf": [
            {
              "maxLength": 63,
              "minLength": 3,
              "pattern": "^[A-Za-z][A-Za-z0-9]{2,62}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Table resource properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/TableProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "tables"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    }
  }
}