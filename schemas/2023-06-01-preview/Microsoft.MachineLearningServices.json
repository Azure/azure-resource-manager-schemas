{
  "id": "https://schema.management.azure.com/schemas/2023-06-01-preview/Microsoft.MachineLearningServices.json#",
  "title": "Microsoft.MachineLearningServices",
  "description": "Microsoft MachineLearningServices Resource Types",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "resourceDefinitions": {
    "registries": {
      "description": "Microsoft.MachineLearningServices/registries",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-06-01-preview"
          ],
          "type": "string"
        },
        "identity": {
          "description": "Managed service identity (system assigned and/or user assigned identities)",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedServiceIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "kind": {
          "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type.",
          "type": "string"
        },
        "location": {
          "description": "The geo-location where the resource lives",
          "type": "string"
        },
        "name": {
          "description": "Name of Azure Machine Learning registry. This is case-insensitive",
          "oneOf": [
            {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{2,32}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "[Required] Additional attributes of the entity.",
          "oneOf": [
            {
              "$ref": "#/definitions/RegistryProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/registries_data_childResource"
              },
              {
                "$ref": "#/definitions/registries_codes_childResource"
              },
              {
                "$ref": "#/definitions/registries_models_childResource"
              },
              {
                "$ref": "#/definitions/registries_components_childResource"
              },
              {
                "$ref": "#/definitions/registries_environments_childResource"
              }
            ]
          },
          "type": "array"
        },
        "sku": {
          "description": "Sku details required for ARM contract for Autoscaling.",
          "oneOf": [
            {
              "$ref": "#/definitions/Sku"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Resource tags.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.MachineLearningServices/registries"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "registries_codes": {
      "description": "Microsoft.MachineLearningServices/registries/codes",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-06-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Container name.",
          "oneOf": [
            {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "[Required] Additional attributes of the entity.",
          "oneOf": [
            {
              "$ref": "#/definitions/CodeContainerProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/registries_codes_versions_childResource"
              }
            ]
          },
          "type": "array"
        },
        "type": {
          "enum": [
            "Microsoft.MachineLearningServices/registries/codes"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "registries_codes_versions": {
      "description": "Microsoft.MachineLearningServices/registries/codes/versions",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-06-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Version identifier.",
          "type": "string"
        },
        "properties": {
          "description": "[Required] Additional attributes of the entity.",
          "oneOf": [
            {
              "$ref": "#/definitions/CodeVersionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.MachineLearningServices/registries/codes/versions"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "registries_components": {
      "description": "Microsoft.MachineLearningServices/registries/components",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-06-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Container name.",
          "oneOf": [
            {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "[Required] Additional attributes of the entity.",
          "oneOf": [
            {
              "$ref": "#/definitions/ComponentContainerProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/registries_components_versions_childResource"
              }
            ]
          },
          "type": "array"
        },
        "type": {
          "enum": [
            "Microsoft.MachineLearningServices/registries/components"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "registries_components_versions": {
      "description": "Microsoft.MachineLearningServices/registries/components/versions",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-06-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Version identifier.",
          "type": "string"
        },
        "properties": {
          "description": "[Required] Additional attributes of the entity.",
          "oneOf": [
            {
              "$ref": "#/definitions/ComponentVersionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.MachineLearningServices/registries/components/versions"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "registries_data": {
      "description": "Microsoft.MachineLearningServices/registries/data",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-06-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Container name.",
          "oneOf": [
            {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "[Required] Additional attributes of the entity.",
          "oneOf": [
            {
              "$ref": "#/definitions/DataContainerProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/registries_data_versions_childResource"
              }
            ]
          },
          "type": "array"
        },
        "type": {
          "enum": [
            "Microsoft.MachineLearningServices/registries/data"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "registries_data_versions": {
      "description": "Microsoft.MachineLearningServices/registries/data/versions",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-06-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Version identifier.",
          "type": "string"
        },
        "properties": {
          "description": "[Required] Additional attributes of the entity.",
          "oneOf": [
            {
              "$ref": "#/definitions/DataVersionBaseProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.MachineLearningServices/registries/data/versions"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "registries_environments": {
      "description": "Microsoft.MachineLearningServices/registries/environments",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-06-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Container name.",
          "oneOf": [
            {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "[Required] Additional attributes of the entity.",
          "oneOf": [
            {
              "$ref": "#/definitions/EnvironmentContainerProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/registries_environments_versions_childResource"
              }
            ]
          },
          "type": "array"
        },
        "type": {
          "enum": [
            "Microsoft.MachineLearningServices/registries/environments"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "registries_environments_versions": {
      "description": "Microsoft.MachineLearningServices/registries/environments/versions",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-06-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Version identifier.",
          "type": "string"
        },
        "properties": {
          "description": "[Required] Additional attributes of the entity.",
          "oneOf": [
            {
              "$ref": "#/definitions/EnvironmentVersionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.MachineLearningServices/registries/environments/versions"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "registries_models": {
      "description": "Microsoft.MachineLearningServices/registries/models",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-06-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Container name.",
          "oneOf": [
            {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "[Required] Additional attributes of the entity.",
          "oneOf": [
            {
              "$ref": "#/definitions/ModelContainerProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/registries_models_versions_childResource"
              }
            ]
          },
          "type": "array"
        },
        "type": {
          "enum": [
            "Microsoft.MachineLearningServices/registries/models"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "registries_models_versions": {
      "description": "Microsoft.MachineLearningServices/registries/models/versions",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-06-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Version identifier.",
          "type": "string"
        },
        "properties": {
          "description": "[Required] Additional attributes of the entity.",
          "oneOf": [
            {
              "$ref": "#/definitions/ModelVersionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.MachineLearningServices/registries/models/versions"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "workspaces": {
      "description": "Microsoft.MachineLearningServices/workspaces",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-06-01-preview"
          ],
          "type": "string"
        },
        "identity": {
          "description": "Managed service identity (system assigned and/or user assigned identities)",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedServiceIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "kind": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "name": {
          "description": "Name of Azure Machine Learning workspace.",
          "oneOf": [
            {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Additional attributes of the entity.",
          "oneOf": [
            {
              "$ref": "#/definitions/WorkspaceProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/workspaces_data_childResource"
              },
              {
                "$ref": "#/definitions/workspaces_jobs_childResource"
              },
              {
                "$ref": "#/definitions/workspaces_codes_childResource"
              },
              {
                "$ref": "#/definitions/workspaces_models_childResource"
              },
              {
                "$ref": "#/definitions/workspaces_computes_childResource"
              },
              {
                "$ref": "#/definitions/workspaces_schedules_childResource"
              },
              {
                "$ref": "#/definitions/workspaces_components_childResource"
              },
              {
                "$ref": "#/definitions/workspaces_datastores_childResource"
              },
              {
                "$ref": "#/definitions/workspaces_featuresets_childResource"
              },
              {
                "$ref": "#/definitions/workspaces_connections_childResource"
              },
              {
                "$ref": "#/definitions/workspaces_environments_childResource"
              },
              {
                "$ref": "#/definitions/workspaces_labelingJobs_childResource"
              },
              {
                "$ref": "#/definitions/workspaces_outboundRules_childResource"
              },
              {
                "$ref": "#/definitions/workspaces_batchEndpoints_childResource"
              },
              {
                "$ref": "#/definitions/workspaces_onlineEndpoints_childResource"
              },
              {
                "$ref": "#/definitions/workspaces_featurestoreEntities_childResource"
              },
              {
                "$ref": "#/definitions/workspaces_privateEndpointConnections_childResource"
              }
            ]
          },
          "type": "array"
        },
        "sku": {
          "description": "Optional. This field is required to be implemented by the RP because AML is supporting more than one tier",
          "oneOf": [
            {
              "$ref": "#/definitions/Sku"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Dictionary of <string>",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.MachineLearningServices/workspaces"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "workspaces_batchEndpoints": {
      "description": "Microsoft.MachineLearningServices/workspaces/batchEndpoints",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-06-01-preview"
          ],
          "type": "string"
        },
        "identity": {
          "description": "Managed service identity (system assigned and/or user assigned identities)",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedServiceIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "kind": {
          "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type.",
          "type": "string"
        },
        "location": {
          "description": "The geo-location where the resource lives",
          "type": "string"
        },
        "name": {
          "description": "Name for the Batch inference endpoint.",
          "oneOf": [
            {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "[Required] Additional attributes of the entity.",
          "oneOf": [
            {
              "$ref": "#/definitions/BatchEndpointProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/workspaces_batchEndpoints_deployments_childResource"
              }
            ]
          },
          "type": "array"
        },
        "sku": {
          "description": "Sku details required for ARM contract for Autoscaling.",
          "oneOf": [
            {
              "$ref": "#/definitions/Sku"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Resource tags.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.MachineLearningServices/workspaces/batchEndpoints"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "workspaces_batchEndpoints_deployments": {
      "description": "Microsoft.MachineLearningServices/workspaces/batchEndpoints/deployments",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-06-01-preview"
          ],
          "type": "string"
        },
        "identity": {
          "description": "Managed service identity (system assigned and/or user assigned identities)",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedServiceIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "kind": {
          "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type.",
          "type": "string"
        },
        "location": {
          "description": "The geo-location where the resource lives",
          "type": "string"
        },
        "name": {
          "description": "The identifier for the Batch inference deployment.",
          "oneOf": [
            {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "[Required] Additional attributes of the entity.",
          "oneOf": [
            {
              "$ref": "#/definitions/BatchDeploymentProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "sku": {
          "description": "Sku details required for ARM contract for Autoscaling.",
          "oneOf": [
            {
              "$ref": "#/definitions/Sku"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Resource tags.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.MachineLearningServices/workspaces/batchEndpoints/deployments"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "workspaces_codes": {
      "description": "Microsoft.MachineLearningServices/workspaces/codes",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-06-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Container name. This is case-sensitive.",
          "oneOf": [
            {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "[Required] Additional attributes of the entity.",
          "oneOf": [
            {
              "$ref": "#/definitions/CodeContainerProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/workspaces_codes_versions_childResource"
              }
            ]
          },
          "type": "array"
        },
        "type": {
          "enum": [
            "Microsoft.MachineLearningServices/workspaces/codes"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "workspaces_codes_versions": {
      "description": "Microsoft.MachineLearningServices/workspaces/codes/versions",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-06-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Version identifier. This is case-sensitive.",
          "type": "string"
        },
        "properties": {
          "description": "[Required] Additional attributes of the entity.",
          "oneOf": [
            {
              "$ref": "#/definitions/CodeVersionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.MachineLearningServices/workspaces/codes/versions"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "workspaces_components": {
      "description": "Microsoft.MachineLearningServices/workspaces/components",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-06-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Container name.",
          "oneOf": [
            {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "[Required] Additional attributes of the entity.",
          "oneOf": [
            {
              "$ref": "#/definitions/ComponentContainerProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/workspaces_components_versions_childResource"
              }
            ]
          },
          "type": "array"
        },
        "type": {
          "enum": [
            "Microsoft.MachineLearningServices/workspaces/components"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "workspaces_components_versions": {
      "description": "Microsoft.MachineLearningServices/workspaces/components/versions",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-06-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Version identifier.",
          "type": "string"
        },
        "properties": {
          "description": "[Required] Additional attributes of the entity.",
          "oneOf": [
            {
              "$ref": "#/definitions/ComponentVersionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.MachineLearningServices/workspaces/components/versions"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "workspaces_computes": {
      "description": "Microsoft.MachineLearningServices/workspaces/computes",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-06-01-preview"
          ],
          "type": "string"
        },
        "identity": {
          "description": "The identity of the resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedServiceIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "location": {
          "description": "Specifies the location of the resource.",
          "type": "string"
        },
        "name": {
          "description": "Name of the Azure Machine Learning compute.",
          "type": "string"
        },
        "properties": {
          "description": "Compute properties",
          "oneOf": [
            {
              "$ref": "#/definitions/Compute"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "sku": {
          "description": "The sku of the workspace.",
          "oneOf": [
            {
              "$ref": "#/definitions/Sku"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Contains resource tags defined as key/value pairs.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.MachineLearningServices/workspaces/computes"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "workspaces_connections": {
      "description": "Microsoft.MachineLearningServices/workspaces/connections",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-06-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Friendly name of the workspace connection",
          "oneOf": [
            {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/WorkspaceConnectionPropertiesV2"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.MachineLearningServices/workspaces/connections"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "workspaces_data": {
      "description": "Microsoft.MachineLearningServices/workspaces/data",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-06-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Container name.",
          "oneOf": [
            {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "[Required] Additional attributes of the entity.",
          "oneOf": [
            {
              "$ref": "#/definitions/DataContainerProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/workspaces_data_versions_childResource"
              }
            ]
          },
          "type": "array"
        },
        "type": {
          "enum": [
            "Microsoft.MachineLearningServices/workspaces/data"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "workspaces_data_versions": {
      "description": "Microsoft.MachineLearningServices/workspaces/data/versions",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-06-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Version identifier.",
          "type": "string"
        },
        "properties": {
          "description": "[Required] Additional attributes of the entity.",
          "oneOf": [
            {
              "$ref": "#/definitions/DataVersionBaseProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.MachineLearningServices/workspaces/data/versions"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "workspaces_datastores": {
      "description": "Microsoft.MachineLearningServices/workspaces/datastores",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-06-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Datastore name.",
          "oneOf": [
            {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "[Required] Additional attributes of the entity.",
          "oneOf": [
            {
              "$ref": "#/definitions/DatastoreProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.MachineLearningServices/workspaces/datastores"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "workspaces_environments": {
      "description": "Microsoft.MachineLearningServices/workspaces/environments",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-06-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Container name. This is case-sensitive.",
          "oneOf": [
            {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "[Required] Additional attributes of the entity.",
          "oneOf": [
            {
              "$ref": "#/definitions/EnvironmentContainerProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/workspaces_environments_versions_childResource"
              }
            ]
          },
          "type": "array"
        },
        "type": {
          "enum": [
            "Microsoft.MachineLearningServices/workspaces/environments"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "workspaces_environments_versions": {
      "description": "Microsoft.MachineLearningServices/workspaces/environments/versions",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-06-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Version of EnvironmentVersion.",
          "type": "string"
        },
        "properties": {
          "description": "[Required] Additional attributes of the entity.",
          "oneOf": [
            {
              "$ref": "#/definitions/EnvironmentVersionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.MachineLearningServices/workspaces/environments/versions"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "workspaces_featuresets": {
      "description": "Microsoft.MachineLearningServices/workspaces/featuresets",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-06-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Container name. This is case-sensitive.",
          "oneOf": [
            {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "[Required] Additional attributes of the entity.",
          "oneOf": [
            {
              "$ref": "#/definitions/FeaturesetContainerProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/workspaces_featuresets_versions_childResource"
              }
            ]
          },
          "type": "array"
        },
        "type": {
          "enum": [
            "Microsoft.MachineLearningServices/workspaces/featuresets"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "workspaces_featuresets_versions": {
      "description": "Microsoft.MachineLearningServices/workspaces/featuresets/versions",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-06-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Version identifier. This is case-sensitive.",
          "type": "string"
        },
        "properties": {
          "description": "[Required] Additional attributes of the entity.",
          "oneOf": [
            {
              "$ref": "#/definitions/FeaturesetVersionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.MachineLearningServices/workspaces/featuresets/versions"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "workspaces_featurestoreEntities": {
      "description": "Microsoft.MachineLearningServices/workspaces/featurestoreEntities",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-06-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Container name. This is case-sensitive.",
          "oneOf": [
            {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "[Required] Additional attributes of the entity.",
          "oneOf": [
            {
              "$ref": "#/definitions/FeaturestoreEntityContainerProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/workspaces_featurestoreEntities_versions_childResource"
              }
            ]
          },
          "type": "array"
        },
        "type": {
          "enum": [
            "Microsoft.MachineLearningServices/workspaces/featurestoreEntities"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "workspaces_featurestoreEntities_versions": {
      "description": "Microsoft.MachineLearningServices/workspaces/featurestoreEntities/versions",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-06-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Version identifier. This is case-sensitive.",
          "type": "string"
        },
        "properties": {
          "description": "[Required] Additional attributes of the entity.",
          "oneOf": [
            {
              "$ref": "#/definitions/FeaturestoreEntityVersionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.MachineLearningServices/workspaces/featurestoreEntities/versions"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "workspaces_jobs": {
      "description": "Microsoft.MachineLearningServices/workspaces/jobs",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-06-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name and identifier for the Job. This is case-sensitive.",
          "oneOf": [
            {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "[Required] Additional attributes of the entity.",
          "oneOf": [
            {
              "$ref": "#/definitions/JobBaseProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.MachineLearningServices/workspaces/jobs"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "workspaces_labelingJobs": {
      "description": "Microsoft.MachineLearningServices/workspaces/labelingJobs",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-06-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name and identifier for the LabelingJob.",
          "oneOf": [
            {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "[Required] Additional attributes of the entity.",
          "oneOf": [
            {
              "$ref": "#/definitions/LabelingJobProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.MachineLearningServices/workspaces/labelingJobs"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "workspaces_models": {
      "description": "Microsoft.MachineLearningServices/workspaces/models",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-06-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Container name. This is case-sensitive.",
          "oneOf": [
            {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "[Required] Additional attributes of the entity.",
          "oneOf": [
            {
              "$ref": "#/definitions/ModelContainerProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/workspaces_models_versions_childResource"
              }
            ]
          },
          "type": "array"
        },
        "type": {
          "enum": [
            "Microsoft.MachineLearningServices/workspaces/models"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "workspaces_models_versions": {
      "description": "Microsoft.MachineLearningServices/workspaces/models/versions",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-06-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Version identifier. This is case-sensitive.",
          "type": "string"
        },
        "properties": {
          "description": "[Required] Additional attributes of the entity.",
          "oneOf": [
            {
              "$ref": "#/definitions/ModelVersionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.MachineLearningServices/workspaces/models/versions"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "workspaces_onlineEndpoints": {
      "description": "Microsoft.MachineLearningServices/workspaces/onlineEndpoints",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-06-01-preview"
          ],
          "type": "string"
        },
        "identity": {
          "description": "Managed service identity (system assigned and/or user assigned identities)",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedServiceIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "kind": {
          "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type.",
          "type": "string"
        },
        "location": {
          "description": "The geo-location where the resource lives",
          "type": "string"
        },
        "name": {
          "description": "Online Endpoint name.",
          "oneOf": [
            {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "[Required] Additional attributes of the entity.",
          "oneOf": [
            {
              "$ref": "#/definitions/OnlineEndpointProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/workspaces_onlineEndpoints_deployments_childResource"
              }
            ]
          },
          "type": "array"
        },
        "sku": {
          "description": "Sku details required for ARM contract for Autoscaling.",
          "oneOf": [
            {
              "$ref": "#/definitions/Sku"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Resource tags.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.MachineLearningServices/workspaces/onlineEndpoints"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "workspaces_onlineEndpoints_deployments": {
      "description": "Microsoft.MachineLearningServices/workspaces/onlineEndpoints/deployments",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-06-01-preview"
          ],
          "type": "string"
        },
        "identity": {
          "description": "Managed service identity (system assigned and/or user assigned identities)",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedServiceIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "kind": {
          "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type.",
          "type": "string"
        },
        "location": {
          "description": "The geo-location where the resource lives",
          "type": "string"
        },
        "name": {
          "description": "Inference Endpoint Deployment name.",
          "oneOf": [
            {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "[Required] Additional attributes of the entity.",
          "oneOf": [
            {
              "$ref": "#/definitions/OnlineDeploymentProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "sku": {
          "description": "Sku details required for ARM contract for Autoscaling.",
          "oneOf": [
            {
              "$ref": "#/definitions/Sku"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Resource tags.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.MachineLearningServices/workspaces/onlineEndpoints/deployments"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "workspaces_outboundRules": {
      "description": "Microsoft.MachineLearningServices/workspaces/outboundRules",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-06-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Name of the workspace managed network outbound rule",
          "oneOf": [
            {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Outbound Rule for the managed network of a machine learning workspace.",
          "oneOf": [
            {
              "$ref": "#/definitions/OutboundRule"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.MachineLearningServices/workspaces/outboundRules"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "workspaces_privateEndpointConnections": {
      "description": "Microsoft.MachineLearningServices/workspaces/privateEndpointConnections",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-06-01-preview"
          ],
          "type": "string"
        },
        "identity": {
          "description": "Managed service identity (system assigned and/or user assigned identities)",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedServiceIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "location": {
          "description": "Same as workspace location.",
          "type": "string"
        },
        "name": {
          "description": "NRP Private Endpoint Connection Name",
          "type": "string"
        },
        "properties": {
          "description": "Private endpoint connection properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/PrivateEndpointConnectionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "sku": {
          "description": "Optional. This field is required to be implemented by the RP because AML is supporting more than one tier",
          "oneOf": [
            {
              "$ref": "#/definitions/Sku"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Dictionary of <string>",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.MachineLearningServices/workspaces/privateEndpointConnections"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "workspaces_schedules": {
      "description": "Microsoft.MachineLearningServices/workspaces/schedules",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-06-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Schedule name.",
          "oneOf": [
            {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "[Required] Additional attributes of the entity.",
          "oneOf": [
            {
              "$ref": "#/definitions/ScheduleProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.MachineLearningServices/workspaces/schedules"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    }
  },
  "definitions": {
    "AKSSchemaProperties": {
      "description": "AKS properties",
      "properties": {
        "agentCount": {
          "description": "Number of agents",
          "oneOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "agentVmSize": {
          "description": "Agent virtual machine size",
          "type": "string"
        },
        "aksNetworkingConfiguration": {
          "description": "AKS networking configuration for vnet",
          "oneOf": [
            {
              "$ref": "#/definitions/AksNetworkingConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "clusterFqdn": {
          "description": "Cluster full qualified domain name",
          "type": "string"
        },
        "clusterPurpose": {
          "description": "Intended usage of the cluster",
          "oneOf": [
            {
              "enum": [
                "FastProd",
                "DenseProd",
                "DevTest"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "loadBalancerSubnet": {
          "description": "Load Balancer Subnet",
          "type": "string"
        },
        "loadBalancerType": {
          "description": "Load Balancer Type",
          "oneOf": [
            {
              "enum": [
                "PublicIp",
                "InternalLoadBalancer"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "sslConfiguration": {
          "description": "SSL configuration",
          "oneOf": [
            {
              "$ref": "#/definitions/SslConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "AccountKeyDatastoreSecrets": {
      "description": "Datastore account key secrets.",
      "properties": {
        "key": {
          "description": "Storage account key.",
          "type": "string"
        },
        "secretsType": {
          "description": "[Required] Credential type used to authentication with storage.",
          "oneOf": [
            {
              "enum": [
                "AccountKey",
                "Certificate",
                "Sas",
                "ServicePrincipal",
                "KerberosPassword",
                "KerberosKeytab"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "secretsType"
      ],
      "type": "object"
    },
    "AcrDetails": {
      "description": "Details of ACR account to be used for the Registry",
      "properties": {
        "systemCreatedAcrAccount": {
          "description": "Details of system created ACR account to be used for the Registry",
          "oneOf": [
            {
              "$ref": "#/definitions/SystemCreatedAcrAccount"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "userCreatedAcrAccount": {
          "description": "Details of user created ACR account to be used for the Registry. Not supported in most cases and will throw 400 error if provided.",
          "oneOf": [
            {
              "$ref": "#/definitions/UserCreatedAcrAccount"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "AksNetworkingConfiguration": {
      "description": "Advance configuration for AKS networking",
      "properties": {
        "dnsServiceIP": {
          "description": "An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified in serviceCidr.",
          "oneOf": [
            {
              "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "dockerBridgeCidr": {
          "description": "A CIDR notation IP range assigned to the Docker bridge network. It must not overlap with any Subnet IP ranges or the Kubernetes service address range.",
          "oneOf": [
            {
              "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}(\\/([0-9]|[1-2][0-9]|3[0-2]))?$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "serviceCidr": {
          "description": "A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges.",
          "oneOf": [
            {
              "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}(\\/([0-9]|[1-2][0-9]|3[0-2]))?$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "subnetId": {
          "description": "Virtual network subnet resource ID the compute nodes belong to",
          "type": "string"
        }
      },
      "type": "object"
    },
    "AmlComputeProperties": {
      "description": "AML Compute properties",
      "properties": {
        "enableNodePublicIp": {
          "description": "Enable or disable node public IP address provisioning. Possible values are: Possible values are: true - Indicates that the compute nodes will have public IPs provisioned. false - Indicates that the compute nodes will have a private endpoint and no public IPs.",
          "oneOf": [
            {
              "default": true,
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "isolatedNetwork": {
          "description": "Network is isolated or not",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "osType": {
          "description": "Compute OS Type",
          "oneOf": [
            {
              "enum": [
                "Linux",
                "Windows"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "propertyBag": {
          "description": "A property bag containing additional properties.",
          "oneOf": [
            {
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "remoteLoginPortPublicAccess": {
          "description": "State of the public SSH port. Possible values are: Disabled - Indicates that the public ssh port is closed on all nodes of the cluster. Enabled - Indicates that the public ssh port is open on all nodes of the cluster. NotSpecified - Indicates that the public ssh port is closed on all nodes of the cluster if VNet is defined, else is open all public nodes. It can be default only during cluster creation time, after creation it will be either enabled or disabled.",
          "oneOf": [
            {
              "enum": [
                "Enabled",
                "Disabled",
                "NotSpecified"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "scaleSettings": {
          "description": "Scale settings for AML Compute",
          "oneOf": [
            {
              "$ref": "#/definitions/ScaleSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "subnet": {
          "description": "Virtual network subnet resource ID the compute nodes belong to.",
          "oneOf": [
            {
              "$ref": "#/definitions/ResourceId"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "userAccountCredentials": {
          "description": "Credentials for an administrator user account that will be created on each compute node.",
          "oneOf": [
            {
              "$ref": "#/definitions/UserAccountCredentials"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "virtualMachineImage": {
          "description": "Virtual Machine image for AML Compute - windows only",
          "oneOf": [
            {
              "$ref": "#/definitions/VirtualMachineImage"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "vmPriority": {
          "description": "Virtual Machine priority",
          "oneOf": [
            {
              "enum": [
                "Dedicated",
                "LowPriority"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "vmSize": {
          "description": "Virtual Machine Size",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ArmResourceId": {
      "description": "ARM ResourceId of a resource",
      "properties": {
        "resourceId": {
          "description": "Arm ResourceId is in the format \"/subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroupName}/providers/Microsoft.Storage/storageAccounts/{StorageAccountName}\"\r\nor \"/subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{AcrName}\"",
          "type": "string"
        }
      },
      "type": "object"
    },
    "AssetReferenceBase": {
      "description": "Base definition for asset references.",
      "oneOf": [
        {
          "description": "Reference to an asset via its path in a datastore.",
          "properties": {
            "datastoreId": {
              "description": "ARM resource ID of the datastore where the asset is located.",
              "type": "string"
            },
            "path": {
              "description": "The path of the file/directory in the datastore.",
              "type": "string"
            },
            "referenceType": {
              "enum": [
                "DataPath"
              ],
              "type": "string"
            }
          },
          "required": [
            "referenceType"
          ],
          "type": "object"
        },
        {
          "description": "Reference to an asset via its ARM resource ID.",
          "properties": {
            "assetId": {
              "description": "[Required] ARM resource ID of the asset.",
              "oneOf": [
                {
                  "minLength": 1,
                  "pattern": "[a-zA-Z0-9_]",
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "referenceType": {
              "enum": [
                "Id"
              ],
              "type": "string"
            }
          },
          "required": [
            "assetId",
            "referenceType"
          ],
          "type": "object"
        },
        {
          "description": "Reference to an asset via its path in a job output.",
          "properties": {
            "jobId": {
              "description": "ARM resource ID of the job.",
              "type": "string"
            },
            "path": {
              "description": "The path of the file/directory in the job output.",
              "type": "string"
            },
            "referenceType": {
              "enum": [
                "OutputPath"
              ],
              "type": "string"
            }
          },
          "required": [
            "referenceType"
          ],
          "type": "object"
        }
      ],
      "properties": {},
      "type": "object"
    },
    "AssignedUser": {
      "description": "A user that can be assigned to a compute instance.",
      "properties": {
        "objectId": {
          "description": "User’s AAD Object Id.",
          "type": "string"
        },
        "tenantId": {
          "description": "User’s AAD Tenant Id.",
          "type": "string"
        }
      },
      "required": [
        "objectId",
        "tenantId"
      ],
      "type": "object"
    },
    "AutoDeleteSetting": {
      "properties": {
        "condition": {
          "description": "When to check if an asset is expired",
          "oneOf": [
            {
              "enum": [
                "CreatedGreaterThan",
                "LastAccessedGreaterThan"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "value": {
          "description": "Expiration condition value.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "AutoMLVertical": {
      "description": "AutoML vertical class.\r\nBase class for AutoML verticals - TableVertical/ImageVertical/NLPVertical",
      "oneOf": [
        {
          "description": "Classification task in AutoML Table vertical.",
          "properties": {
            "cvSplitColumnNames": {
              "description": "Columns to use for CVSplit data.",
              "oneOf": [
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "featurizationSettings": {
              "description": "Featurization inputs needed for AutoML job.",
              "oneOf": [
                {
                  "$ref": "#/definitions/TableVerticalFeaturizationSettings"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "fixedParameters": {
              "description": "Model/training parameters that will remain constant throughout training.",
              "oneOf": [
                {
                  "$ref": "#/definitions/TableFixedParameters"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "limitSettings": {
              "description": "Execution constraints for AutoMLJob.",
              "oneOf": [
                {
                  "$ref": "#/definitions/TableVerticalLimitSettings"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "nCrossValidations": {
              "description": "Number of cross validation folds to be applied on training dataset\r\nwhen validation dataset is not provided.",
              "oneOf": [
                {
                  "$ref": "#/definitions/NCrossValidations"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "positiveLabel": {
              "description": "Positive label for binary metrics calculation.",
              "type": "string"
            },
            "primaryMetric": {
              "description": "Primary metric for the task.",
              "oneOf": [
                {
                  "enum": [
                    "AUCWeighted",
                    "Accuracy",
                    "NormMacroRecall",
                    "AveragePrecisionScoreWeighted",
                    "PrecisionScoreWeighted"
                  ],
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "searchSpace": {
              "description": "Search space for sampling different combinations of models and their hyperparameters.",
              "oneOf": [
                {
                  "items": {
                    "$ref": "#/definitions/TableParameterSubspace"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "sweepSettings": {
              "description": "Settings for model sweeping and hyperparameter tuning.",
              "oneOf": [
                {
                  "$ref": "#/definitions/TableSweepSettings"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "taskType": {
              "enum": [
                "Classification"
              ],
              "type": "string"
            },
            "testData": {
              "description": "Test data input.",
              "oneOf": [
                {
                  "$ref": "#/definitions/MLTableJobInput"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "testDataSize": {
              "description": "The fraction of test dataset that needs to be set aside for validation purpose.\r\nValues between (0.0 , 1.0)\r\nApplied when validation dataset is not provided.",
              "oneOf": [
                {
                  "type": "number"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "trainingSettings": {
              "description": "Inputs for training phase for an AutoML Job.",
              "oneOf": [
                {
                  "$ref": "#/definitions/ClassificationTrainingSettings"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "validationData": {
              "description": "Validation data inputs.",
              "oneOf": [
                {
                  "$ref": "#/definitions/MLTableJobInput"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "validationDataSize": {
              "description": "The fraction of training dataset that needs to be set aside for validation purpose.\r\nValues between (0.0 , 1.0)\r\nApplied when validation dataset is not provided.",
              "oneOf": [
                {
                  "type": "number"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "weightColumnName": {
              "description": "The name of the sample weight column. Automated ML supports a weighted column as an input, causing rows in the data to be weighted up or down.",
              "type": "string"
            }
          },
          "required": [
            "taskType"
          ],
          "type": "object"
        },
        {
          "description": "Forecasting task in AutoML Table vertical.",
          "properties": {
            "cvSplitColumnNames": {
              "description": "Columns to use for CVSplit data.",
              "oneOf": [
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "featurizationSettings": {
              "description": "Featurization inputs needed for AutoML job.",
              "oneOf": [
                {
                  "$ref": "#/definitions/TableVerticalFeaturizationSettings"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "fixedParameters": {
              "description": "Model/training parameters that will remain constant throughout training.",
              "oneOf": [
                {
                  "$ref": "#/definitions/TableFixedParameters"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "forecastingSettings": {
              "description": "Forecasting task specific inputs.",
              "oneOf": [
                {
                  "$ref": "#/definitions/ForecastingSettings"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "limitSettings": {
              "description": "Execution constraints for AutoMLJob.",
              "oneOf": [
                {
                  "$ref": "#/definitions/TableVerticalLimitSettings"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "nCrossValidations": {
              "description": "Number of cross validation folds to be applied on training dataset\r\nwhen validation dataset is not provided.",
              "oneOf": [
                {
                  "$ref": "#/definitions/NCrossValidations"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "primaryMetric": {
              "description": "Primary metric for forecasting task.",
              "oneOf": [
                {
                  "enum": [
                    "SpearmanCorrelation",
                    "NormalizedRootMeanSquaredError",
                    "R2Score",
                    "NormalizedMeanAbsoluteError"
                  ],
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "searchSpace": {
              "description": "Search space for sampling different combinations of models and their hyperparameters.",
              "oneOf": [
                {
                  "items": {
                    "$ref": "#/definitions/TableParameterSubspace"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "sweepSettings": {
              "description": "Settings for model sweeping and hyperparameter tuning.",
              "oneOf": [
                {
                  "$ref": "#/definitions/TableSweepSettings"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "taskType": {
              "enum": [
                "Forecasting"
              ],
              "type": "string"
            },
            "testData": {
              "description": "Test data input.",
              "oneOf": [
                {
                  "$ref": "#/definitions/MLTableJobInput"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "testDataSize": {
              "description": "The fraction of test dataset that needs to be set aside for validation purpose.\r\nValues between (0.0 , 1.0)\r\nApplied when validation dataset is not provided.",
              "oneOf": [
                {
                  "type": "number"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "trainingSettings": {
              "description": "Inputs for training phase for an AutoML Job.",
              "oneOf": [
                {
                  "$ref": "#/definitions/ForecastingTrainingSettings"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "validationData": {
              "description": "Validation data inputs.",
              "oneOf": [
                {
                  "$ref": "#/definitions/MLTableJobInput"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "validationDataSize": {
              "description": "The fraction of training dataset that needs to be set aside for validation purpose.\r\nValues between (0.0 , 1.0)\r\nApplied when validation dataset is not provided.",
              "oneOf": [
                {
                  "type": "number"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "weightColumnName": {
              "description": "The name of the sample weight column. Automated ML supports a weighted column as an input, causing rows in the data to be weighted up or down.",
              "type": "string"
            }
          },
          "required": [
            "taskType"
          ],
          "type": "object"
        },
        {
          "description": "Image Classification. Multi-class image classification is used when an image is classified with only a single label\r\nfrom a set of classes - e.g. each image is classified as either an image of a 'cat' or a 'dog' or a 'duck'.",
          "properties": {
            "limitSettings": {
              "description": "[Required] Limit settings for the AutoML job.",
              "oneOf": [
                {
                  "$ref": "#/definitions/ImageLimitSettings"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "modelSettings": {
              "description": "Settings used for training the model.",
              "oneOf": [
                {
                  "$ref": "#/definitions/ImageModelSettingsClassification"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "primaryMetric": {
              "description": "Primary metric to optimize for this task.",
              "oneOf": [
                {
                  "enum": [
                    "AUCWeighted",
                    "Accuracy",
                    "NormMacroRecall",
                    "AveragePrecisionScoreWeighted",
                    "PrecisionScoreWeighted"
                  ],
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "searchSpace": {
              "description": "Search space for sampling different combinations of models and their hyperparameters.",
              "oneOf": [
                {
                  "items": {
                    "$ref": "#/definitions/ImageModelDistributionSettingsClassification"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "sweepSettings": {
              "description": "Model sweeping and hyperparameter sweeping related settings.",
              "oneOf": [
                {
                  "$ref": "#/definitions/ImageSweepSettings"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "taskType": {
              "enum": [
                "ImageClassification"
              ],
              "type": "string"
            },
            "validationData": {
              "description": "Validation data inputs.",
              "oneOf": [
                {
                  "$ref": "#/definitions/MLTableJobInput"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "validationDataSize": {
              "description": "The fraction of training dataset that needs to be set aside for validation purpose.\r\nValues between (0.0 , 1.0)\r\nApplied when validation dataset is not provided.",
              "oneOf": [
                {
                  "type": "number"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "limitSettings",
            "taskType"
          ],
          "type": "object"
        },
        {
          "description": "Image Classification Multilabel. Multi-label image classification is used when an image could have one or more labels\r\nfrom a set of labels - e.g. an image could be labeled with both 'cat' and 'dog'.",
          "properties": {
            "limitSettings": {
              "description": "[Required] Limit settings for the AutoML job.",
              "oneOf": [
                {
                  "$ref": "#/definitions/ImageLimitSettings"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "modelSettings": {
              "description": "Settings used for training the model.",
              "oneOf": [
                {
                  "$ref": "#/definitions/ImageModelSettingsClassification"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "primaryMetric": {
              "description": "Primary metric to optimize for this task.",
              "oneOf": [
                {
                  "enum": [
                    "AUCWeighted",
                    "Accuracy",
                    "NormMacroRecall",
                    "AveragePrecisionScoreWeighted",
                    "PrecisionScoreWeighted",
                    "IOU"
                  ],
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "searchSpace": {
              "description": "Search space for sampling different combinations of models and their hyperparameters.",
              "oneOf": [
                {
                  "items": {
                    "$ref": "#/definitions/ImageModelDistributionSettingsClassification"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "sweepSettings": {
              "description": "Model sweeping and hyperparameter sweeping related settings.",
              "oneOf": [
                {
                  "$ref": "#/definitions/ImageSweepSettings"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "taskType": {
              "enum": [
                "ImageClassificationMultilabel"
              ],
              "type": "string"
            },
            "validationData": {
              "description": "Validation data inputs.",
              "oneOf": [
                {
                  "$ref": "#/definitions/MLTableJobInput"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "validationDataSize": {
              "description": "The fraction of training dataset that needs to be set aside for validation purpose.\r\nValues between (0.0 , 1.0)\r\nApplied when validation dataset is not provided.",
              "oneOf": [
                {
                  "type": "number"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "limitSettings",
            "taskType"
          ],
          "type": "object"
        },
        {
          "description": "Image Instance Segmentation. Instance segmentation is used to identify objects in an image at the pixel level,\r\ndrawing a polygon around each object in the image.",
          "properties": {
            "limitSettings": {
              "description": "[Required] Limit settings for the AutoML job.",
              "oneOf": [
                {
                  "$ref": "#/definitions/ImageLimitSettings"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "modelSettings": {
              "description": "Settings used for training the model.",
              "oneOf": [
                {
                  "$ref": "#/definitions/ImageModelSettingsObjectDetection"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "primaryMetric": {
              "description": "Primary metric to optimize for this task.",
              "oneOf": [
                {
                  "enum": [
                    "MeanAveragePrecision"
                  ],
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "searchSpace": {
              "description": "Search space for sampling different combinations of models and their hyperparameters.",
              "oneOf": [
                {
                  "items": {
                    "$ref": "#/definitions/ImageModelDistributionSettingsObjectDetection"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "sweepSettings": {
              "description": "Model sweeping and hyperparameter sweeping related settings.",
              "oneOf": [
                {
                  "$ref": "#/definitions/ImageSweepSettings"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "taskType": {
              "enum": [
                "ImageInstanceSegmentation"
              ],
              "type": "string"
            },
            "validationData": {
              "description": "Validation data inputs.",
              "oneOf": [
                {
                  "$ref": "#/definitions/MLTableJobInput"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "validationDataSize": {
              "description": "The fraction of training dataset that needs to be set aside for validation purpose.\r\nValues between (0.0 , 1.0)\r\nApplied when validation dataset is not provided.",
              "oneOf": [
                {
                  "type": "number"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "limitSettings",
            "taskType"
          ],
          "type": "object"
        },
        {
          "description": "Image Object Detection. Object detection is used to identify objects in an image and locate each object with a\r\nbounding box e.g. locate all dogs and cats in an image and draw a bounding box around each.",
          "properties": {
            "limitSettings": {
              "description": "[Required] Limit settings for the AutoML job.",
              "oneOf": [
                {
                  "$ref": "#/definitions/ImageLimitSettings"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "modelSettings": {
              "description": "Settings used for training the model.",
              "oneOf": [
                {
                  "$ref": "#/definitions/ImageModelSettingsObjectDetection"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "primaryMetric": {
              "description": "Primary metric to optimize for this task.",
              "oneOf": [
                {
                  "enum": [
                    "MeanAveragePrecision"
                  ],
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "searchSpace": {
              "description": "Search space for sampling different combinations of models and their hyperparameters.",
              "oneOf": [
                {
                  "items": {
                    "$ref": "#/definitions/ImageModelDistributionSettingsObjectDetection"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "sweepSettings": {
              "description": "Model sweeping and hyperparameter sweeping related settings.",
              "oneOf": [
                {
                  "$ref": "#/definitions/ImageSweepSettings"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "taskType": {
              "enum": [
                "ImageObjectDetection"
              ],
              "type": "string"
            },
            "validationData": {
              "description": "Validation data inputs.",
              "oneOf": [
                {
                  "$ref": "#/definitions/MLTableJobInput"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "validationDataSize": {
              "description": "The fraction of training dataset that needs to be set aside for validation purpose.\r\nValues between (0.0 , 1.0)\r\nApplied when validation dataset is not provided.",
              "oneOf": [
                {
                  "type": "number"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "limitSettings",
            "taskType"
          ],
          "type": "object"
        },
        {
          "description": "Regression task in AutoML Table vertical.",
          "properties": {
            "cvSplitColumnNames": {
              "description": "Columns to use for CVSplit data.",
              "oneOf": [
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "featurizationSettings": {
              "description": "Featurization inputs needed for AutoML job.",
              "oneOf": [
                {
                  "$ref": "#/definitions/TableVerticalFeaturizationSettings"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "fixedParameters": {
              "description": "Model/training parameters that will remain constant throughout training.",
              "oneOf": [
                {
                  "$ref": "#/definitions/TableFixedParameters"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "limitSettings": {
              "description": "Execution constraints for AutoMLJob.",
              "oneOf": [
                {
                  "$ref": "#/definitions/TableVerticalLimitSettings"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "nCrossValidations": {
              "description": "Number of cross validation folds to be applied on training dataset\r\nwhen validation dataset is not provided.",
              "oneOf": [
                {
                  "$ref": "#/definitions/NCrossValidations"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "primaryMetric": {
              "description": "Primary metric for regression task.",
              "oneOf": [
                {
                  "enum": [
                    "SpearmanCorrelation",
                    "NormalizedRootMeanSquaredError",
                    "R2Score",
                    "NormalizedMeanAbsoluteError"
                  ],
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "searchSpace": {
              "description": "Search space for sampling different combinations of models and their hyperparameters.",
              "oneOf": [
                {
                  "items": {
                    "$ref": "#/definitions/TableParameterSubspace"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "sweepSettings": {
              "description": "Settings for model sweeping and hyperparameter tuning.",
              "oneOf": [
                {
                  "$ref": "#/definitions/TableSweepSettings"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "taskType": {
              "enum": [
                "Regression"
              ],
              "type": "string"
            },
            "testData": {
              "description": "Test data input.",
              "oneOf": [
                {
                  "$ref": "#/definitions/MLTableJobInput"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "testDataSize": {
              "description": "The fraction of test dataset that needs to be set aside for validation purpose.\r\nValues between (0.0 , 1.0)\r\nApplied when validation dataset is not provided.",
              "oneOf": [
                {
                  "type": "number"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "trainingSettings": {
              "description": "Inputs for training phase for an AutoML Job.",
              "oneOf": [
                {
                  "$ref": "#/definitions/RegressionTrainingSettings"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "validationData": {
              "description": "Validation data inputs.",
              "oneOf": [
                {
                  "$ref": "#/definitions/MLTableJobInput"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "validationDataSize": {
              "description": "The fraction of training dataset that needs to be set aside for validation purpose.\r\nValues between (0.0 , 1.0)\r\nApplied when validation dataset is not provided.",
              "oneOf": [
                {
                  "type": "number"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "weightColumnName": {
              "description": "The name of the sample weight column. Automated ML supports a weighted column as an input, causing rows in the data to be weighted up or down.",
              "type": "string"
            }
          },
          "required": [
            "taskType"
          ],
          "type": "object"
        },
        {
          "description": "Text Classification task in AutoML NLP vertical.\r\nNLP - Natural Language Processing.",
          "properties": {
            "featurizationSettings": {
              "description": "Featurization inputs needed for AutoML job.",
              "oneOf": [
                {
                  "$ref": "#/definitions/NlpVerticalFeaturizationSettings"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "fixedParameters": {
              "description": "Model/training parameters that will remain constant throughout training.",
              "oneOf": [
                {
                  "$ref": "#/definitions/NlpFixedParameters"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "limitSettings": {
              "description": "Execution constraints for AutoMLJob.",
              "oneOf": [
                {
                  "$ref": "#/definitions/NlpVerticalLimitSettings"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "primaryMetric": {
              "description": "Primary metric for Text-Classification task.",
              "oneOf": [
                {
                  "enum": [
                    "AUCWeighted",
                    "Accuracy",
                    "NormMacroRecall",
                    "AveragePrecisionScoreWeighted",
                    "PrecisionScoreWeighted"
                  ],
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "searchSpace": {
              "description": "Search space for sampling different combinations of models and their hyperparameters.",
              "oneOf": [
                {
                  "items": {
                    "$ref": "#/definitions/NlpParameterSubspace"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "sweepSettings": {
              "description": "Settings for model sweeping and hyperparameter tuning.",
              "oneOf": [
                {
                  "$ref": "#/definitions/NlpSweepSettings"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "taskType": {
              "enum": [
                "TextClassification"
              ],
              "type": "string"
            },
            "validationData": {
              "description": "Validation data inputs.",
              "oneOf": [
                {
                  "$ref": "#/definitions/MLTableJobInput"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "taskType"
          ],
          "type": "object"
        },
        {
          "description": "Text Classification Multilabel task in AutoML NLP vertical.\r\nNLP - Natural Language Processing.",
          "properties": {
            "featurizationSettings": {
              "description": "Featurization inputs needed for AutoML job.",
              "oneOf": [
                {
                  "$ref": "#/definitions/NlpVerticalFeaturizationSettings"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "fixedParameters": {
              "description": "Model/training parameters that will remain constant throughout training.",
              "oneOf": [
                {
                  "$ref": "#/definitions/NlpFixedParameters"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "limitSettings": {
              "description": "Execution constraints for AutoMLJob.",
              "oneOf": [
                {
                  "$ref": "#/definitions/NlpVerticalLimitSettings"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "searchSpace": {
              "description": "Search space for sampling different combinations of models and their hyperparameters.",
              "oneOf": [
                {
                  "items": {
                    "$ref": "#/definitions/NlpParameterSubspace"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "sweepSettings": {
              "description": "Settings for model sweeping and hyperparameter tuning.",
              "oneOf": [
                {
                  "$ref": "#/definitions/NlpSweepSettings"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "taskType": {
              "enum": [
                "TextClassificationMultilabel"
              ],
              "type": "string"
            },
            "validationData": {
              "description": "Validation data inputs.",
              "oneOf": [
                {
                  "$ref": "#/definitions/MLTableJobInput"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "taskType"
          ],
          "type": "object"
        },
        {
          "description": "Text-NER task in AutoML NLP vertical.\r\nNER - Named Entity Recognition.\r\nNLP - Natural Language Processing.",
          "properties": {
            "featurizationSettings": {
              "description": "Featurization inputs needed for AutoML job.",
              "oneOf": [
                {
                  "$ref": "#/definitions/NlpVerticalFeaturizationSettings"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "fixedParameters": {
              "description": "Model/training parameters that will remain constant throughout training.",
              "oneOf": [
                {
                  "$ref": "#/definitions/NlpFixedParameters"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "limitSettings": {
              "description": "Execution constraints for AutoMLJob.",
              "oneOf": [
                {
                  "$ref": "#/definitions/NlpVerticalLimitSettings"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "searchSpace": {
              "description": "Search space for sampling different combinations of models and their hyperparameters.",
              "oneOf": [
                {
                  "items": {
                    "$ref": "#/definitions/NlpParameterSubspace"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "sweepSettings": {
              "description": "Settings for model sweeping and hyperparameter tuning.",
              "oneOf": [
                {
                  "$ref": "#/definitions/NlpSweepSettings"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "taskType": {
              "enum": [
                "TextNER"
              ],
              "type": "string"
            },
            "validationData": {
              "description": "Validation data inputs.",
              "oneOf": [
                {
                  "$ref": "#/definitions/MLTableJobInput"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "taskType"
          ],
          "type": "object"
        }
      ],
      "properties": {
        "logVerbosity": {
          "description": "Log verbosity for the job.",
          "oneOf": [
            {
              "enum": [
                "NotSet",
                "Debug",
                "Info",
                "Warning",
                "Error",
                "Critical"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "targetColumnName": {
          "description": "Target column name: This is prediction values column.\r\nAlso known as label column name in context of classification tasks.",
          "type": "string"
        },
        "trainingData": {
          "description": "[Required] Training data input.",
          "oneOf": [
            {
              "$ref": "#/definitions/MLTableJobInput"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "trainingData"
      ],
      "type": "object"
    },
    "AutoPauseProperties": {
      "description": "Auto pause properties",
      "properties": {
        "delayInMinutes": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "enabled": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "AutoScaleProperties": {
      "description": "Auto scale properties",
      "properties": {
        "enabled": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "maxNodeCount": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "minNodeCount": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "AutologgerSettings": {
      "description": "Settings for Autologger.",
      "properties": {
        "mlflowAutologger": {
          "description": "[Required] Indicates whether mlflow autologger is enabled.",
          "oneOf": [
            {
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "mlflowAutologger"
      ],
      "type": "object"
    },
    "BatchDeploymentConfiguration": {
      "description": "Properties relevant to different deployment types.",
      "oneOf": [
        {
          "description": "Properties for a Batch Pipeline Component Deployment.",
          "properties": {
            "componentId": {
              "description": "The ARM id of the component to be run.",
              "oneOf": [
                {
                  "$ref": "#/definitions/IdAssetReference"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "deploymentConfigurationType": {
              "enum": [
                "PipelineComponent"
              ],
              "type": "string"
            },
            "description": {
              "description": "The description which will be applied to the job.",
              "type": "string"
            },
            "settings": {
              "description": "Run-time settings for the pipeline job.",
              "oneOf": [
                {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "properties": {},
                  "type": "object"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "tags": {
              "description": "The tags which will be applied to the job.",
              "oneOf": [
                {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "properties": {},
                  "type": "object"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "deploymentConfigurationType"
          ],
          "type": "object"
        }
      ],
      "properties": {},
      "type": "object"
    },
    "BatchDeploymentProperties": {
      "description": "Batch inference settings per deployment.",
      "properties": {
        "codeConfiguration": {
          "description": "Code configuration for the endpoint deployment.",
          "oneOf": [
            {
              "$ref": "#/definitions/CodeConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "compute": {
          "description": "Compute target for batch inference operation.",
          "type": "string"
        },
        "deploymentConfiguration": {
          "description": "Properties relevant to different deployment types.",
          "oneOf": [
            {
              "$ref": "#/definitions/BatchDeploymentConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "description": {
          "description": "Description of the endpoint deployment.",
          "type": "string"
        },
        "environmentId": {
          "description": "ARM resource ID of the environment specification for the endpoint deployment.",
          "type": "string"
        },
        "environmentVariables": {
          "description": "Environment variables configuration for the deployment.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "errorThreshold": {
          "description": "Error threshold, if the error count for the entire input goes above this value,\r\nthe batch inference will be aborted. Range is [-1, int.MaxValue].\r\nFor FileDataset, this value is the count of file failures.\r\nFor TabularDataset, this value is the count of record failures.\r\nIf set to -1 (the lower bound), all failures during batch inference will be ignored.",
          "oneOf": [
            {
              "default": -1,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "loggingLevel": {
          "description": "Logging level for batch inference operation.",
          "oneOf": [
            {
              "enum": [
                "Info",
                "Warning",
                "Debug"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "maxConcurrencyPerInstance": {
          "description": "Indicates maximum number of parallelism per instance.",
          "oneOf": [
            {
              "default": 1,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "miniBatchSize": {
          "description": "Size of the mini-batch passed to each batch invocation.\r\nFor FileDataset, this is the number of files per mini-batch.\r\nFor TabularDataset, this is the size of the records in bytes, per mini-batch.",
          "oneOf": [
            {
              "default": 10,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "model": {
          "description": "Reference to the model asset for the endpoint deployment.",
          "oneOf": [
            {
              "$ref": "#/definitions/AssetReferenceBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "outputAction": {
          "description": "Indicates how the output will be organized.",
          "oneOf": [
            {
              "enum": [
                "SummaryOnly",
                "AppendRow"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "outputFileName": {
          "default": "predictions.csv",
          "description": "Customized output file name for append_row output action.",
          "type": "string"
        },
        "properties": {
          "description": "Property dictionary. Properties can be added, but not removed or altered.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "description": "Indicates compute configuration for the job.\r\nIf not provided, will default to the defaults defined in ResourceConfiguration.",
          "oneOf": [
            {
              "$ref": "#/definitions/DeploymentResourceConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "retrySettings": {
          "description": "Retry Settings for the batch inference operation.\r\nIf not provided, will default to the defaults defined in BatchRetrySettings.",
          "oneOf": [
            {
              "$ref": "#/definitions/BatchRetrySettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "BatchEndpointDefaults": {
      "description": "Batch endpoint default values",
      "properties": {
        "deploymentName": {
          "description": "Name of the deployment that will be default for the endpoint.\r\nThis deployment will end up getting 100% traffic when the endpoint scoring URL is invoked.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "BatchEndpointProperties": {
      "description": "Batch endpoint configuration.",
      "properties": {
        "authMode": {
          "description": "[Required] Use 'Key' for key based authentication and 'AMLToken' for Azure Machine Learning token-based authentication. 'Key' doesn't expire but 'AMLToken' does.",
          "oneOf": [
            {
              "enum": [
                "AMLToken",
                "Key",
                "AADToken"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "defaults": {
          "description": "Default values for Batch Endpoint.",
          "oneOf": [
            {
              "$ref": "#/definitions/BatchEndpointDefaults"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "description": {
          "description": "Description of the inference endpoint.",
          "type": "string"
        },
        "keys": {
          "description": "EndpointAuthKeys to set initially on an Endpoint.\r\nThis property will always be returned as null. AuthKey values must be retrieved using the ListKeys API.",
          "oneOf": [
            {
              "$ref": "#/definitions/EndpointAuthKeys"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Property dictionary. Properties can be added, but not removed or altered.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "authMode"
      ],
      "type": "object"
    },
    "BatchRetrySettings": {
      "description": "Retry settings for a batch inference operation.",
      "properties": {
        "maxRetries": {
          "description": "Maximum retry count for a mini-batch",
          "oneOf": [
            {
              "default": 3,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "timeout": {
          "default": "PT30S",
          "description": "Invocation timeout for a mini-batch, in ISO 8601 format.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "BindOptions": {
      "properties": {
        "createHostPath": {
          "description": "Indicate whether to create host path.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "propagation": {
          "description": "Type of Bind Option",
          "type": "string"
        },
        "selinux": {
          "description": "Mention the selinux options.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "BuildContext": {
      "description": "Configuration settings for Docker build context",
      "properties": {
        "contextUri": {
          "description": "[Required] URI of the Docker build context used to build the image. Supports blob URIs on environment creation and may return blob or Git URIs.\r\n<seealso href=\"https://docs.docker.com/engine/reference/commandline/build/#extended-description\" />",
          "oneOf": [
            {
              "minLength": 1,
              "pattern": "[a-zA-Z0-9_]",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "dockerfilePath": {
          "default": "Dockerfile",
          "description": "Path to the Dockerfile in the build context.\r\n<seealso href=\"https://docs.docker.com/engine/reference/builder/\" />",
          "type": "string"
        }
      },
      "required": [
        "contextUri"
      ],
      "type": "object"
    },
    "CertificateDatastoreSecrets": {
      "description": "Datastore certificate secrets.",
      "properties": {
        "certificate": {
          "description": "Service principal certificate.",
          "type": "string"
        },
        "secretsType": {
          "description": "[Required] Credential type used to authentication with storage.",
          "oneOf": [
            {
              "enum": [
                "AccountKey",
                "Certificate",
                "Sas",
                "ServicePrincipal",
                "KerberosPassword",
                "KerberosKeytab"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "secretsType"
      ],
      "type": "object"
    },
    "ClassificationTrainingSettings": {
      "description": "Classification Training related configuration.",
      "properties": {
        "allowedTrainingAlgorithms": {
          "description": "Allowed models for classification task.",
          "oneOf": [
            {
              "items": {
                "enum": [
                  "LogisticRegression",
                  "SGD",
                  "MultinomialNaiveBayes",
                  "BernoulliNaiveBayes",
                  "SVM",
                  "LinearSVM",
                  "KNN",
                  "DecisionTree",
                  "RandomForest",
                  "ExtremeRandomTrees",
                  "LightGBM",
                  "GradientBoosting",
                  "XGBoostClassifier"
                ],
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "blockedTrainingAlgorithms": {
          "description": "Blocked models for classification task.",
          "oneOf": [
            {
              "items": {
                "enum": [
                  "LogisticRegression",
                  "SGD",
                  "MultinomialNaiveBayes",
                  "BernoulliNaiveBayes",
                  "SVM",
                  "LinearSVM",
                  "KNN",
                  "DecisionTree",
                  "RandomForest",
                  "ExtremeRandomTrees",
                  "LightGBM",
                  "GradientBoosting",
                  "XGBoostClassifier"
                ],
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "enableDnnTraining": {
          "description": "Enable recommendation of DNN models.",
          "oneOf": [
            {
              "default": false,
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "enableModelExplainability": {
          "description": "Flag to turn on explainability on best model.",
          "oneOf": [
            {
              "default": true,
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "enableOnnxCompatibleModels": {
          "description": "Flag for enabling onnx compatible models.",
          "oneOf": [
            {
              "default": false,
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "enableStackEnsemble": {
          "description": "Enable stack ensemble run.",
          "oneOf": [
            {
              "default": true,
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "enableVoteEnsemble": {
          "description": "Enable voting ensemble run.",
          "oneOf": [
            {
              "default": true,
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "ensembleModelDownloadTimeout": {
          "default": "PT5M",
          "description": "During VotingEnsemble and StackEnsemble model generation, multiple fitted models from the previous child runs are downloaded.\r\nConfigure this parameter with a higher value than 300 secs, if more time is needed.",
          "type": "string"
        },
        "stackEnsembleSettings": {
          "description": "Stack ensemble settings for stack ensemble run.",
          "oneOf": [
            {
              "$ref": "#/definitions/StackEnsembleSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "trainingMode": {
          "description": "TrainingMode mode - Setting to 'auto' is same as setting it to 'non-distributed' for now, however in the future may result in mixed mode or heuristics based mode selection. Default is 'auto'.\r\nIf 'Distributed' then only distributed featurization is used and distributed algorithms are chosen.\r\nIf 'NonDistributed' then only non distributed algorithms are chosen.",
          "oneOf": [
            {
              "enum": [
                "Auto",
                "Distributed",
                "NonDistributed"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "CodeConfiguration": {
      "description": "Configuration for a scoring code asset.",
      "properties": {
        "codeId": {
          "description": "ARM resource ID of the code asset.",
          "type": "string"
        },
        "scoringScript": {
          "description": "[Required] The script to execute on startup. eg. \"score.py\"",
          "oneOf": [
            {
              "minLength": 1,
              "pattern": "[a-zA-Z0-9_]",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "scoringScript"
      ],
      "type": "object"
    },
    "CodeContainerProperties": {
      "description": "Container for code asset versions.",
      "properties": {
        "description": {
          "description": "The asset description text.",
          "type": "string"
        },
        "isArchived": {
          "description": "Is the asset archived?",
          "oneOf": [
            {
              "default": false,
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The asset property dictionary.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Tag dictionary. Tags can be added, removed, and updated.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "CodeVersionProperties": {
      "description": "Code asset version details.",
      "properties": {
        "autoDeleteSetting": {
          "description": "Specifies the lifecycle setting of managed data asset.",
          "oneOf": [
            {
              "$ref": "#/definitions/AutoDeleteSetting"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "codeUri": {
          "description": "Uri where code is located",
          "type": "string"
        },
        "description": {
          "description": "The asset description text.",
          "type": "string"
        },
        "isAnonymous": {
          "description": "If the name version are system generated (anonymous registration). For types where Stage is defined, when Stage is provided it will be used to populate IsAnonymous",
          "oneOf": [
            {
              "default": false,
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "isArchived": {
          "description": "Is the asset archived? For types where Stage is defined, when Stage is provided it will be used to populate IsArchived",
          "oneOf": [
            {
              "default": false,
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The asset property dictionary.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Tag dictionary. Tags can be added, removed, and updated.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "Collection": {
      "properties": {
        "clientId": {
          "description": "The msi client id used to collect logging to blob storage. If it's null,backend will pick a registered endpoint identity to auth.",
          "type": "string"
        },
        "dataCollectionMode": {
          "description": "Enable or disable data collection.",
          "oneOf": [
            {
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "dataId": {
          "description": "The data asset arm resource id. Client side will ensure data asset is pointing to the blob storage, and backend will collect data to the blob storage.",
          "type": "string"
        },
        "samplingRate": {
          "description": "The sampling rate for collection. Sampling rate 1.0 means we collect 100% of data by default.",
          "oneOf": [
            {
              "default": 1,
              "type": "number"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ColumnTransformer": {
      "description": "Column transformer parameters.",
      "properties": {
        "fields": {
          "description": "Fields to apply transformer logic on.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "parameters": {
          "description": "Different properties to be passed to transformer.\r\nInput expected is dictionary of key,value pairs in JSON format.",
          "oneOf": [
            {
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "CommandJobLimits": {
      "description": "Command Job limit class.",
      "properties": {
        "jobLimitsType": {
          "description": "[Required] JobLimit type.",
          "oneOf": [
            {
              "enum": [
                "Command",
                "Sweep"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "timeout": {
          "description": "The max run duration in ISO 8601 format, after which the job will be cancelled. Only supports duration with precision as low as Seconds.",
          "type": "string"
        }
      },
      "required": [
        "jobLimitsType"
      ],
      "type": "object"
    },
    "ComponentContainerProperties": {
      "description": "Component container definition.\r\n<see href=\"https://docs.microsoft.com/en-us/azure/machine-learning/reference-yaml-component-command\" />",
      "properties": {
        "description": {
          "description": "The asset description text.",
          "type": "string"
        },
        "isArchived": {
          "description": "Is the asset archived?",
          "oneOf": [
            {
              "default": false,
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The asset property dictionary.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Tag dictionary. Tags can be added, removed, and updated.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ComponentVersionProperties": {
      "description": "Definition of a component version: defines resources that span component types.",
      "properties": {
        "autoDeleteSetting": {
          "description": "Specifies the lifecycle setting of managed data asset.",
          "oneOf": [
            {
              "$ref": "#/definitions/AutoDeleteSetting"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "componentSpec": {
          "description": "Defines Component definition details.\r\n<see href=\"https://docs.microsoft.com/en-us/azure/machine-learning/reference-yaml-component-command\" />",
          "oneOf": [
            {
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "description": {
          "description": "The asset description text.",
          "type": "string"
        },
        "isAnonymous": {
          "description": "If the name version are system generated (anonymous registration). For types where Stage is defined, when Stage is provided it will be used to populate IsAnonymous",
          "oneOf": [
            {
              "default": false,
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "isArchived": {
          "description": "Is the asset archived? For types where Stage is defined, when Stage is provided it will be used to populate IsArchived",
          "oneOf": [
            {
              "default": false,
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The asset property dictionary.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "stage": {
          "description": "Stage in the component lifecycle",
          "type": "string"
        },
        "tags": {
          "description": "Tag dictionary. Tags can be added, removed, and updated.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "Compute": {
      "description": "Machine Learning compute object.",
      "oneOf": [
        {
          "description": "A Machine Learning compute based on AKS.",
          "properties": {
            "computeType": {
              "enum": [
                "AKS"
              ],
              "type": "string"
            },
            "properties": {
              "description": "AKS properties",
              "oneOf": [
                {
                  "$ref": "#/definitions/AKSSchemaProperties"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "computeType"
          ],
          "type": "object"
        },
        {
          "description": "An Azure Machine Learning compute.",
          "properties": {
            "computeType": {
              "enum": [
                "AmlCompute"
              ],
              "type": "string"
            },
            "properties": {
              "description": "Properties of AmlCompute",
              "oneOf": [
                {
                  "$ref": "#/definitions/AmlComputeProperties"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "computeType"
          ],
          "type": "object"
        },
        {
          "description": "An Azure Machine Learning compute instance.",
          "properties": {
            "computeType": {
              "enum": [
                "ComputeInstance"
              ],
              "type": "string"
            },
            "properties": {
              "description": "Properties of ComputeInstance",
              "oneOf": [
                {
                  "$ref": "#/definitions/ComputeInstanceProperties"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "computeType"
          ],
          "type": "object"
        },
        {
          "description": "A DataFactory compute.",
          "properties": {
            "computeType": {
              "enum": [
                "DataFactory"
              ],
              "type": "string"
            }
          },
          "required": [
            "computeType"
          ],
          "type": "object"
        },
        {
          "description": "A DataLakeAnalytics compute.",
          "properties": {
            "computeType": {
              "enum": [
                "DataLakeAnalytics"
              ],
              "type": "string"
            },
            "properties": {
              "oneOf": [
                {
                  "$ref": "#/definitions/DataLakeAnalyticsSchemaProperties"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "computeType"
          ],
          "type": "object"
        },
        {
          "description": "A DataFactory compute.",
          "properties": {
            "computeType": {
              "enum": [
                "Databricks"
              ],
              "type": "string"
            },
            "properties": {
              "description": "Properties of Databricks",
              "oneOf": [
                {
                  "$ref": "#/definitions/DatabricksProperties"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "computeType"
          ],
          "type": "object"
        },
        {
          "description": "A HDInsight compute.",
          "properties": {
            "computeType": {
              "enum": [
                "HDInsight"
              ],
              "type": "string"
            },
            "properties": {
              "description": "HDInsight compute properties",
              "oneOf": [
                {
                  "$ref": "#/definitions/HDInsightProperties"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "computeType"
          ],
          "type": "object"
        },
        {
          "description": "A Machine Learning compute based on Kubernetes Compute.",
          "properties": {
            "computeType": {
              "enum": [
                "Kubernetes"
              ],
              "type": "string"
            },
            "properties": {
              "description": "Properties of Kubernetes",
              "oneOf": [
                {
                  "$ref": "#/definitions/KubernetesProperties"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "computeType"
          ],
          "type": "object"
        },
        {
          "description": "A SynapseSpark compute.",
          "properties": {
            "computeType": {
              "enum": [
                "SynapseSpark"
              ],
              "type": "string"
            },
            "properties": {
              "oneOf": [
                {
                  "$ref": "#/definitions/SynapseSparkProperties"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "computeType"
          ],
          "type": "object"
        },
        {
          "description": "A Machine Learning compute based on Azure Virtual Machines.",
          "properties": {
            "computeType": {
              "enum": [
                "VirtualMachine"
              ],
              "type": "string"
            },
            "properties": {
              "oneOf": [
                {
                  "$ref": "#/definitions/VirtualMachineSchemaProperties"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "computeType"
          ],
          "type": "object"
        }
      ],
      "properties": {
        "computeLocation": {
          "description": "Location for the underlying compute",
          "type": "string"
        },
        "description": {
          "description": "The description of the Machine Learning compute.",
          "type": "string"
        },
        "disableLocalAuth": {
          "description": "Opt-out of local authentication and ensure customers can use only MSI and AAD exclusively for authentication.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resourceId": {
          "description": "ARM resource id of the underlying compute",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ComputeInstanceAutologgerSettings": {
      "description": "Specifies settings for autologger.",
      "properties": {
        "mlflowAutologger": {
          "description": "Indicates whether mlflow autologger is enabled for notebooks.",
          "oneOf": [
            {
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ComputeInstanceProperties": {
      "description": "Compute Instance properties",
      "properties": {
        "applicationSharingPolicy": {
          "description": "Policy for sharing applications on this compute instance among users of parent workspace. If Personal, only the creator can access applications on this compute instance. When Shared, any workspace user can access applications on this instance depending on his/her assigned role.",
          "oneOf": [
            {
              "enum": [
                "Personal",
                "Shared"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "autologgerSettings": {
          "description": "Specifies settings for autologger.",
          "oneOf": [
            {
              "$ref": "#/definitions/ComputeInstanceAutologgerSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "computeInstanceAuthorizationType": {
          "description": "The Compute Instance Authorization type. Available values are personal (default).",
          "oneOf": [
            {
              "enum": [
                "personal"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "customServices": {
          "description": "List of Custom Services added to the compute.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/CustomService"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "enableNodePublicIp": {
          "description": "Enable or disable node public IP address provisioning. Possible values are: Possible values are: true - Indicates that the compute nodes will have public IPs provisioned. false - Indicates that the compute nodes will have a private endpoint and no public IPs.",
          "oneOf": [
            {
              "default": true,
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "idleTimeBeforeShutdown": {
          "description": "Stops compute instance after user defined period of inactivity. Time is defined in ISO8601 format. Minimum is 15 min, maximum is 3 days.",
          "type": "string"
        },
        "personalComputeInstanceSettings": {
          "description": "Settings for a personal compute instance.",
          "oneOf": [
            {
              "$ref": "#/definitions/PersonalComputeInstanceSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "schedules": {
          "description": "The list of schedules to be applied on the computes.",
          "oneOf": [
            {
              "$ref": "#/definitions/ComputeSchedules"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "setupScripts": {
          "description": "Details of customized scripts to execute for setting up the cluster.",
          "oneOf": [
            {
              "$ref": "#/definitions/SetupScripts"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "sshSettings": {
          "description": "Specifies policy and settings for SSH access.",
          "oneOf": [
            {
              "$ref": "#/definitions/ComputeInstanceSshSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "subnet": {
          "description": "Virtual network subnet resource ID the compute nodes belong to.",
          "oneOf": [
            {
              "$ref": "#/definitions/ResourceId"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "vmSize": {
          "description": "Virtual Machine Size",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ComputeInstanceSshSettings": {
      "description": "Specifies policy and settings for SSH access.",
      "properties": {
        "adminPublicKey": {
          "description": "Specifies the SSH rsa public key file as a string. Use \"ssh-keygen -t rsa -b 2048\" to generate your SSH key pairs.",
          "type": "string"
        },
        "sshPublicAccess": {
          "description": "State of the public SSH port. Possible values are: Disabled - Indicates that the public ssh port is closed on this instance. Enabled - Indicates that the public ssh port is open and accessible according to the VNet/subnet policy if applicable.",
          "oneOf": [
            {
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ComputeRuntimeDto": {
      "properties": {
        "sparkRuntimeVersion": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ComputeSchedules": {
      "description": "The list of schedules to be applied on the computes",
      "properties": {
        "computeStartStop": {
          "description": "The list of compute start stop schedules to be applied.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/ComputeStartStopSchedule"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ComputeStartStopSchedule": {
      "description": "Compute start stop schedule properties",
      "properties": {
        "action": {
          "description": "[Required] The compute power action.",
          "oneOf": [
            {
              "enum": [
                "Start",
                "Stop"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "cron": {
          "description": "Required if triggerType is Cron.",
          "oneOf": [
            {
              "$ref": "#/definitions/Cron"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "recurrence": {
          "description": "Required if triggerType is Recurrence.",
          "oneOf": [
            {
              "$ref": "#/definitions/Recurrence"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "schedule": {
          "description": "[Deprecated] Not used any more.",
          "oneOf": [
            {
              "$ref": "#/definitions/ScheduleBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "status": {
          "description": "Is the schedule enabled or disabled?",
          "oneOf": [
            {
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "triggerType": {
          "description": "[Required] The schedule trigger type.",
          "oneOf": [
            {
              "enum": [
                "Recurrence",
                "Cron"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ContainerResourceRequirements": {
      "description": "Resource requirements for each container instance within an online deployment.",
      "properties": {
        "containerResourceLimits": {
          "description": "Container resource limit info:",
          "oneOf": [
            {
              "$ref": "#/definitions/ContainerResourceSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "containerResourceRequests": {
          "description": "Container resource request info:",
          "oneOf": [
            {
              "$ref": "#/definitions/ContainerResourceSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ContainerResourceSettings": {
      "properties": {
        "cpu": {
          "description": "Number of vCPUs request/limit for container. More info:\r\nhttps://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
          "type": "string"
        },
        "gpu": {
          "description": "Number of Nvidia GPU cards request/limit for container. More info:\r\nhttps://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
          "type": "string"
        },
        "memory": {
          "description": "Memory size request/limit for container. More info:\r\nhttps://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CosmosDbSettings": {
      "properties": {
        "collectionsThroughput": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "Cron": {
      "description": "The workflow trigger cron for ComputeStartStop schedule type.",
      "properties": {
        "expression": {
          "description": "[Required] Specifies cron expression of schedule.\r\nThe expression should follow NCronTab format.",
          "type": "string"
        },
        "startTime": {
          "description": "The start time in yyyy-MM-ddTHH:mm:ss format.",
          "type": "string"
        },
        "timeZone": {
          "default": "UTC",
          "description": "Specifies time zone in which the schedule runs.\r\nTimeZone should follow Windows time zone format. Refer: https://docs.microsoft.com/en-us/windows-hardware/manufacture/desktop/default-time-zones?view=windows-11",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CustomKeys": {
      "description": "Custom Keys credential object",
      "properties": {
        "keys": {
          "description": "Dictionary of <string>",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "CustomMetricThreshold": {
      "properties": {
        "metric": {
          "description": "[Required] The user-defined metric to calculate.",
          "oneOf": [
            {
              "minLength": 1,
              "pattern": "[a-zA-Z0-9_]",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "threshold": {
          "description": "The threshold value. If null, a default value will be set depending on the selected metric.",
          "oneOf": [
            {
              "$ref": "#/definitions/MonitoringThreshold"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "metric"
      ],
      "type": "object"
    },
    "CustomService": {
      "additionalProperties": {},
      "description": "Specifies the custom service configuration",
      "properties": {
        "docker": {
          "description": "Describes the docker settings for the image",
          "oneOf": [
            {
              "$ref": "#/definitions/Docker"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "endpoints": {
          "description": "Configuring the endpoints for the container",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/Endpoint"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "environmentVariables": {
          "description": "Environment Variable for the container",
          "oneOf": [
            {
              "additionalProperties": {
                "$ref": "#/definitions/EnvironmentVariable"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "image": {
          "description": "Describes the Image Specifications",
          "oneOf": [
            {
              "$ref": "#/definitions/Image"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "name": {
          "description": "Name of the Custom Service",
          "type": "string"
        },
        "volumes": {
          "description": "Configuring the volumes for the container",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/VolumeDefinition"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "DataCollector": {
      "properties": {
        "collections": {
          "description": "[Required] The collection configuration. Each collection has it own configuration to collect model data and the name of collection can be arbitrary string.\r\nModel data collector can be used for either payload logging or custom logging or both of them. Collection request and response are reserved for payload logging, others are for custom logging.",
          "oneOf": [
            {
              "additionalProperties": {
                "$ref": "#/definitions/Collection"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "requestLogging": {
          "description": "The request logging configuration for mdc, it includes advanced logging settings for all collections. It's optional.",
          "oneOf": [
            {
              "$ref": "#/definitions/RequestLogging"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "rollingRate": {
          "description": "When model data is collected to blob storage, we need to roll the data to different path to avoid logging all of them in a single blob file.\r\nIf the rolling rate is hour, all data will be collected in the blob path /yyyy/MM/dd/HH/.\r\nIf it's day, all data will be collected in blob path /yyyy/MM/dd/.\r\nThe other benefit of rolling path is that model monitoring ui is able to select a time range of data very quickly.",
          "oneOf": [
            {
              "enum": [
                "Year",
                "Month",
                "Day",
                "Hour",
                "Minute"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "collections"
      ],
      "type": "object"
    },
    "DataContainerProperties": {
      "description": "Container for data asset versions.",
      "properties": {
        "dataType": {
          "description": "[Required] Specifies the type of data.",
          "oneOf": [
            {
              "enum": [
                "uri_file",
                "uri_folder",
                "mltable"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "description": {
          "description": "The asset description text.",
          "type": "string"
        },
        "isArchived": {
          "description": "Is the asset archived?",
          "oneOf": [
            {
              "default": false,
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The asset property dictionary.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Tag dictionary. Tags can be added, removed, and updated.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "dataType"
      ],
      "type": "object"
    },
    "DataDriftMetricThresholdBase": {
      "oneOf": [
        {
          "properties": {
            "dataType": {
              "enum": [
                "Categorical"
              ],
              "type": "string"
            },
            "metric": {
              "description": "[Required] The categorical data drift metric to calculate.",
              "oneOf": [
                {
                  "enum": [
                    "JensenShannonDistance",
                    "PopulationStabilityIndex",
                    "PearsonsChiSquaredTest"
                  ],
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "metric",
            "dataType"
          ],
          "type": "object"
        },
        {
          "properties": {
            "dataType": {
              "enum": [
                "Numerical"
              ],
              "type": "string"
            },
            "metric": {
              "description": "[Required] The numerical data drift metric to calculate.",
              "oneOf": [
                {
                  "enum": [
                    "JensenShannonDistance",
                    "PopulationStabilityIndex",
                    "NormalizedWassersteinDistance",
                    "TwoSampleKolmogorovSmirnovTest"
                  ],
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "metric",
            "dataType"
          ],
          "type": "object"
        }
      ],
      "properties": {
        "threshold": {
          "description": "The threshold value. If null, a default value will be set depending on the selected metric.",
          "oneOf": [
            {
              "$ref": "#/definitions/MonitoringThreshold"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "DataImport": {
      "properties": {
        "assetName": {
          "description": "Name of the asset for data import job to create",
          "type": "string"
        },
        "autoDeleteSetting": {
          "description": "Specifies the lifecycle setting of managed data asset.",
          "oneOf": [
            {
              "$ref": "#/definitions/AutoDeleteSetting"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "dataType": {
          "description": "[Required] Specifies the type of data.",
          "oneOf": [
            {
              "enum": [
                "uri_file",
                "uri_folder",
                "mltable"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "dataUri": {
          "description": "[Required] Uri of the data. Example: https://go.microsoft.com/fwlink/?linkid=2202330",
          "oneOf": [
            {
              "minLength": 1,
              "pattern": "[a-zA-Z0-9_]",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "description": {
          "description": "The asset description text.",
          "type": "string"
        },
        "intellectualProperty": {
          "description": "Intellectual Property details. Used if data is an Intellectual Property.",
          "oneOf": [
            {
              "$ref": "#/definitions/IntellectualProperty"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "isAnonymous": {
          "description": "If the name version are system generated (anonymous registration). For types where Stage is defined, when Stage is provided it will be used to populate IsAnonymous",
          "oneOf": [
            {
              "default": false,
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "isArchived": {
          "description": "Is the asset archived? For types where Stage is defined, when Stage is provided it will be used to populate IsArchived",
          "oneOf": [
            {
              "default": false,
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The asset property dictionary.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "source": {
          "description": "Source data of the asset to import from",
          "oneOf": [
            {
              "$ref": "#/definitions/DataImportSource"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "stage": {
          "description": "Stage in the data lifecycle assigned to this data asset",
          "type": "string"
        },
        "tags": {
          "description": "Tag dictionary. Tags can be added, removed, and updated.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "dataType",
        "dataUri"
      ],
      "type": "object"
    },
    "DataImportSource": {
      "oneOf": [
        {
          "properties": {
            "query": {
              "description": "SQL Query statement for data import Database source",
              "type": "string"
            },
            "sourceType": {
              "enum": [
                "database"
              ],
              "type": "string"
            },
            "storedProcedure": {
              "description": "SQL StoredProcedure on data import Database source",
              "type": "string"
            },
            "storedProcedureParams": {
              "description": "SQL StoredProcedure parameters",
              "oneOf": [
                {
                  "items": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "properties": {},
                    "type": "object"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "tableName": {
              "description": "Name of the table on data import Database source",
              "type": "string"
            }
          },
          "required": [
            "sourceType"
          ],
          "type": "object"
        },
        {
          "properties": {
            "path": {
              "description": "Path on data import FileSystem source",
              "type": "string"
            },
            "sourceType": {
              "enum": [
                "file_system"
              ],
              "type": "string"
            }
          },
          "required": [
            "sourceType"
          ],
          "type": "object"
        }
      ],
      "properties": {
        "connection": {
          "description": "Workspace connection for data import source storage",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DataLakeAnalyticsSchemaProperties": {
      "properties": {
        "dataLakeStoreAccountName": {
          "description": "DataLake Store Account Name",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DataQualityMetricThresholdBase": {
      "oneOf": [
        {
          "properties": {
            "dataType": {
              "enum": [
                "Categorical"
              ],
              "type": "string"
            },
            "metric": {
              "description": "[Required] The categorical data quality metric to calculate.",
              "oneOf": [
                {
                  "enum": [
                    "NullValueRate",
                    "DataTypeErrorRate",
                    "OutOfBoundsRate"
                  ],
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "metric",
            "dataType"
          ],
          "type": "object"
        },
        {
          "properties": {
            "dataType": {
              "enum": [
                "Numerical"
              ],
              "type": "string"
            },
            "metric": {
              "description": "[Required] The numerical data quality metric to calculate.",
              "oneOf": [
                {
                  "enum": [
                    "NullValueRate",
                    "DataTypeErrorRate",
                    "OutOfBoundsRate"
                  ],
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "metric",
            "dataType"
          ],
          "type": "object"
        }
      ],
      "properties": {
        "threshold": {
          "description": "The threshold value. If null, a default value will be set depending on the selected metric.",
          "oneOf": [
            {
              "$ref": "#/definitions/MonitoringThreshold"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "DataVersionBaseProperties": {
      "description": "Data version base definition",
      "oneOf": [
        {
          "description": "MLTable data definition",
          "properties": {
            "dataType": {
              "enum": [
                "mltable"
              ],
              "type": "string"
            },
            "referencedUris": {
              "description": "Uris referenced in the MLTable definition (required for lineage)",
              "oneOf": [
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "dataType"
          ],
          "type": "object"
        },
        {
          "description": "uri-file data version entity",
          "properties": {
            "dataType": {
              "enum": [
                "uri_file"
              ],
              "type": "string"
            }
          },
          "required": [
            "dataType"
          ],
          "type": "object"
        },
        {
          "description": "uri-folder data version entity",
          "properties": {
            "dataType": {
              "enum": [
                "uri_folder"
              ],
              "type": "string"
            }
          },
          "required": [
            "dataType"
          ],
          "type": "object"
        }
      ],
      "properties": {
        "autoDeleteSetting": {
          "description": "Specifies the lifecycle setting of managed data asset.",
          "oneOf": [
            {
              "$ref": "#/definitions/AutoDeleteSetting"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "dataUri": {
          "description": "[Required] Uri of the data. Example: https://go.microsoft.com/fwlink/?linkid=2202330",
          "oneOf": [
            {
              "minLength": 1,
              "pattern": "[a-zA-Z0-9_]",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "description": {
          "description": "The asset description text.",
          "type": "string"
        },
        "intellectualProperty": {
          "description": "Intellectual Property details. Used if data is an Intellectual Property.",
          "oneOf": [
            {
              "$ref": "#/definitions/IntellectualProperty"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "isAnonymous": {
          "description": "If the name version are system generated (anonymous registration). For types where Stage is defined, when Stage is provided it will be used to populate IsAnonymous",
          "oneOf": [
            {
              "default": false,
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "isArchived": {
          "description": "Is the asset archived? For types where Stage is defined, when Stage is provided it will be used to populate IsArchived",
          "oneOf": [
            {
              "default": false,
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The asset property dictionary.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "stage": {
          "description": "Stage in the data lifecycle assigned to this data asset",
          "type": "string"
        },
        "tags": {
          "description": "Tag dictionary. Tags can be added, removed, and updated.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "dataUri"
      ],
      "type": "object"
    },
    "DatabricksProperties": {
      "description": "Properties of Databricks",
      "properties": {
        "databricksAccessToken": {
          "description": "Databricks access token",
          "type": "string"
        },
        "workspaceUrl": {
          "description": "Workspace Url",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DatastoreCredentials": {
      "description": "Base definition for datastore credentials.",
      "oneOf": [
        {
          "description": "Account key datastore credentials configuration.",
          "properties": {
            "credentialsType": {
              "enum": [
                "AccountKey"
              ],
              "type": "string"
            },
            "secrets": {
              "description": "[Required] Storage account secrets.",
              "oneOf": [
                {
                  "$ref": "#/definitions/AccountKeyDatastoreSecrets"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "secrets",
            "credentialsType"
          ],
          "type": "object"
        },
        {
          "description": "Certificate datastore credentials configuration.",
          "properties": {
            "authorityUrl": {
              "description": "Authority URL used for authentication.",
              "type": "string"
            },
            "clientId": {
              "description": "[Required] Service principal client ID.",
              "oneOf": [
                {
                  "pattern": "^[0-9a-fA-F]{8}(-[0-9a-fA-F]{4}){3}-[0-9a-fA-F]{12}$",
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "credentialsType": {
              "enum": [
                "Certificate"
              ],
              "type": "string"
            },
            "resourceUrl": {
              "description": "Resource the service principal has access to.",
              "type": "string"
            },
            "secrets": {
              "description": "[Required] Service principal secrets.",
              "oneOf": [
                {
                  "$ref": "#/definitions/CertificateDatastoreSecrets"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "tenantId": {
              "description": "[Required] ID of the tenant to which the service principal belongs.",
              "oneOf": [
                {
                  "pattern": "^[0-9a-fA-F]{8}(-[0-9a-fA-F]{4}){3}-[0-9a-fA-F]{12}$",
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "thumbprint": {
              "description": "[Required] Thumbprint of the certificate used for authentication.",
              "oneOf": [
                {
                  "minLength": 1,
                  "pattern": "[a-zA-Z0-9_]",
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "clientId",
            "secrets",
            "tenantId",
            "thumbprint",
            "credentialsType"
          ],
          "type": "object"
        },
        {
          "properties": {
            "credentialsType": {
              "enum": [
                "KerberosKeytab"
              ],
              "type": "string"
            },
            "kerberosKdcAddress": {
              "description": "[Required] IP Address or DNS HostName.",
              "oneOf": [
                {
                  "minLength": 1,
                  "pattern": "[a-zA-Z0-9_]",
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "kerberosPrincipal": {
              "description": "[Required] Kerberos Username",
              "oneOf": [
                {
                  "minLength": 1,
                  "pattern": "[a-zA-Z0-9_]",
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "kerberosRealm": {
              "description": "[Required] Domain over which a Kerberos authentication server has the authority to authenticate a user, host or service.",
              "oneOf": [
                {
                  "minLength": 1,
                  "pattern": "[a-zA-Z0-9_]",
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "secrets": {
              "description": "[Required] Keytab secrets.",
              "oneOf": [
                {
                  "$ref": "#/definitions/KerberosKeytabSecrets"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "secrets",
            "kerberosKdcAddress",
            "kerberosPrincipal",
            "kerberosRealm",
            "credentialsType"
          ],
          "type": "object"
        },
        {
          "properties": {
            "credentialsType": {
              "enum": [
                "KerberosPassword"
              ],
              "type": "string"
            },
            "kerberosKdcAddress": {
              "description": "[Required] IP Address or DNS HostName.",
              "oneOf": [
                {
                  "minLength": 1,
                  "pattern": "[a-zA-Z0-9_]",
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "kerberosPrincipal": {
              "description": "[Required] Kerberos Username",
              "oneOf": [
                {
                  "minLength": 1,
                  "pattern": "[a-zA-Z0-9_]",
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "kerberosRealm": {
              "description": "[Required] Domain over which a Kerberos authentication server has the authority to authenticate a user, host or service.",
              "oneOf": [
                {
                  "minLength": 1,
                  "pattern": "[a-zA-Z0-9_]",
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "secrets": {
              "description": "[Required] Kerberos password secrets.",
              "oneOf": [
                {
                  "$ref": "#/definitions/KerberosPasswordSecrets"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "secrets",
            "kerberosKdcAddress",
            "kerberosPrincipal",
            "kerberosRealm",
            "credentialsType"
          ],
          "type": "object"
        },
        {
          "description": "Empty/none datastore credentials.",
          "properties": {
            "credentialsType": {
              "enum": [
                "None"
              ],
              "type": "string"
            }
          },
          "required": [
            "credentialsType"
          ],
          "type": "object"
        },
        {
          "description": "SAS datastore credentials configuration.",
          "properties": {
            "credentialsType": {
              "enum": [
                "Sas"
              ],
              "type": "string"
            },
            "secrets": {
              "description": "[Required] Storage container secrets.",
              "oneOf": [
                {
                  "$ref": "#/definitions/SasDatastoreSecrets"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "secrets",
            "credentialsType"
          ],
          "type": "object"
        },
        {
          "description": "Service Principal datastore credentials configuration.",
          "properties": {
            "authorityUrl": {
              "description": "Authority URL used for authentication.",
              "type": "string"
            },
            "clientId": {
              "description": "[Required] Service principal client ID.",
              "oneOf": [
                {
                  "pattern": "^[0-9a-fA-F]{8}(-[0-9a-fA-F]{4}){3}-[0-9a-fA-F]{12}$",
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "credentialsType": {
              "enum": [
                "ServicePrincipal"
              ],
              "type": "string"
            },
            "resourceUrl": {
              "description": "Resource the service principal has access to.",
              "type": "string"
            },
            "secrets": {
              "description": "[Required] Service principal secrets.",
              "oneOf": [
                {
                  "$ref": "#/definitions/ServicePrincipalDatastoreSecrets"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "tenantId": {
              "description": "[Required] ID of the tenant to which the service principal belongs.",
              "oneOf": [
                {
                  "pattern": "^[0-9a-fA-F]{8}(-[0-9a-fA-F]{4}){3}-[0-9a-fA-F]{12}$",
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "clientId",
            "secrets",
            "tenantId",
            "credentialsType"
          ],
          "type": "object"
        }
      ],
      "properties": {},
      "type": "object"
    },
    "DatastoreProperties": {
      "description": "Base definition for datastore contents configuration.",
      "oneOf": [
        {
          "description": "Azure Blob datastore configuration.",
          "properties": {
            "accountName": {
              "description": "Storage account name.",
              "type": "string"
            },
            "containerName": {
              "description": "Storage account container name.",
              "type": "string"
            },
            "datastoreType": {
              "enum": [
                "AzureBlob"
              ],
              "type": "string"
            },
            "endpoint": {
              "description": "Azure cloud endpoint for the storage account.",
              "type": "string"
            },
            "protocol": {
              "description": "Protocol used to communicate with the storage account.",
              "type": "string"
            },
            "resourceGroup": {
              "description": "Azure Resource Group name",
              "type": "string"
            },
            "serviceDataAccessAuthIdentity": {
              "description": "Indicates which identity to use to authenticate service data access to customer's storage.",
              "oneOf": [
                {
                  "enum": [
                    "None",
                    "WorkspaceSystemAssignedIdentity",
                    "WorkspaceUserAssignedIdentity"
                  ],
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "subscriptionId": {
              "description": "Azure Subscription Id",
              "type": "string"
            }
          },
          "required": [
            "datastoreType"
          ],
          "type": "object"
        },
        {
          "description": "Azure Data Lake Gen1 datastore configuration.",
          "properties": {
            "datastoreType": {
              "enum": [
                "AzureDataLakeGen1"
              ],
              "type": "string"
            },
            "resourceGroup": {
              "description": "Azure Resource Group name",
              "type": "string"
            },
            "serviceDataAccessAuthIdentity": {
              "description": "Indicates which identity to use to authenticate service data access to customer's storage.",
              "oneOf": [
                {
                  "enum": [
                    "None",
                    "WorkspaceSystemAssignedIdentity",
                    "WorkspaceUserAssignedIdentity"
                  ],
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "storeName": {
              "description": "[Required] Azure Data Lake store name.",
              "oneOf": [
                {
                  "minLength": 1,
                  "pattern": "[a-zA-Z0-9_]",
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "subscriptionId": {
              "description": "Azure Subscription Id",
              "type": "string"
            }
          },
          "required": [
            "storeName",
            "datastoreType"
          ],
          "type": "object"
        },
        {
          "description": "Azure Data Lake Gen2 datastore configuration.",
          "properties": {
            "accountName": {
              "description": "[Required] Storage account name.",
              "oneOf": [
                {
                  "minLength": 1,
                  "pattern": "[a-zA-Z0-9_]",
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "datastoreType": {
              "enum": [
                "AzureDataLakeGen2"
              ],
              "type": "string"
            },
            "endpoint": {
              "description": "Azure cloud endpoint for the storage account.",
              "type": "string"
            },
            "filesystem": {
              "description": "[Required] The name of the Data Lake Gen2 filesystem.",
              "oneOf": [
                {
                  "minLength": 1,
                  "pattern": "[a-zA-Z0-9_]",
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "protocol": {
              "description": "Protocol used to communicate with the storage account.",
              "type": "string"
            },
            "resourceGroup": {
              "description": "Azure Resource Group name",
              "type": "string"
            },
            "serviceDataAccessAuthIdentity": {
              "description": "Indicates which identity to use to authenticate service data access to customer's storage.",
              "oneOf": [
                {
                  "enum": [
                    "None",
                    "WorkspaceSystemAssignedIdentity",
                    "WorkspaceUserAssignedIdentity"
                  ],
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "subscriptionId": {
              "description": "Azure Subscription Id",
              "type": "string"
            }
          },
          "required": [
            "accountName",
            "filesystem",
            "datastoreType"
          ],
          "type": "object"
        },
        {
          "description": "Azure File datastore configuration.",
          "properties": {
            "accountName": {
              "description": "[Required] Storage account name.",
              "oneOf": [
                {
                  "minLength": 1,
                  "pattern": "[a-zA-Z0-9_]",
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "datastoreType": {
              "enum": [
                "AzureFile"
              ],
              "type": "string"
            },
            "endpoint": {
              "description": "Azure cloud endpoint for the storage account.",
              "type": "string"
            },
            "fileShareName": {
              "description": "[Required] The name of the Azure file share that the datastore points to.",
              "oneOf": [
                {
                  "minLength": 1,
                  "pattern": "[a-zA-Z0-9_]",
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "protocol": {
              "description": "Protocol used to communicate with the storage account.",
              "type": "string"
            },
            "resourceGroup": {
              "description": "Azure Resource Group name",
              "type": "string"
            },
            "serviceDataAccessAuthIdentity": {
              "description": "Indicates which identity to use to authenticate service data access to customer's storage.",
              "oneOf": [
                {
                  "enum": [
                    "None",
                    "WorkspaceSystemAssignedIdentity",
                    "WorkspaceUserAssignedIdentity"
                  ],
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "subscriptionId": {
              "description": "Azure Subscription Id",
              "type": "string"
            }
          },
          "required": [
            "accountName",
            "fileShareName",
            "datastoreType"
          ],
          "type": "object"
        },
        {
          "properties": {
            "datastoreType": {
              "enum": [
                "Hdfs"
              ],
              "type": "string"
            },
            "hdfsServerCertificate": {
              "description": "The TLS cert of the HDFS server. Needs to be a base64 encoded string. Required if \"Https\" protocol is selected.",
              "type": "string"
            },
            "nameNodeAddress": {
              "description": "[Required] IP Address or DNS HostName.",
              "oneOf": [
                {
                  "minLength": 1,
                  "pattern": "[a-zA-Z0-9_]",
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "protocol": {
              "default": "http",
              "description": "Protocol used to communicate with the storage account (Https/Http).",
              "type": "string"
            }
          },
          "required": [
            "nameNodeAddress",
            "datastoreType"
          ],
          "type": "object"
        },
        {
          "description": "OneLake (Trident) datastore configuration.",
          "properties": {
            "artifact": {
              "description": "[Required] OneLake artifact backing the datastore.",
              "oneOf": [
                {
                  "$ref": "#/definitions/OneLakeArtifact"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "datastoreType": {
              "enum": [
                "OneLake"
              ],
              "type": "string"
            },
            "endpoint": {
              "description": "OneLake endpoint to use for the datastore.",
              "type": "string"
            },
            "oneLakeWorkspaceName": {
              "description": "[Required] OneLake workspace name.",
              "oneOf": [
                {
                  "minLength": 1,
                  "pattern": "[a-zA-Z0-9_]",
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "serviceDataAccessAuthIdentity": {
              "description": "Indicates which identity to use to authenticate service data access to customer's storage.",
              "oneOf": [
                {
                  "enum": [
                    "None",
                    "WorkspaceSystemAssignedIdentity",
                    "WorkspaceUserAssignedIdentity"
                  ],
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "artifact",
            "oneLakeWorkspaceName",
            "datastoreType"
          ],
          "type": "object"
        }
      ],
      "properties": {
        "credentials": {
          "description": "[Required] Account credentials.",
          "oneOf": [
            {
              "$ref": "#/definitions/DatastoreCredentials"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "description": {
          "description": "The asset description text.",
          "type": "string"
        },
        "intellectualProperty": {
          "description": "Intellectual Property details.",
          "oneOf": [
            {
              "$ref": "#/definitions/IntellectualProperty"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The asset property dictionary.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Tag dictionary. Tags can be added, removed, and updated.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "credentials"
      ],
      "type": "object"
    },
    "DeploymentResourceConfiguration": {
      "properties": {
        "instanceCount": {
          "description": "Optional number of instances or nodes used by the compute target.",
          "oneOf": [
            {
              "default": 1,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "instanceType": {
          "description": "Optional type of VM used as supported by the compute target.",
          "type": "string"
        },
        "locations": {
          "description": "Locations where the job can run.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "maxInstanceCount": {
          "description": "Optional max allowed number of instances or nodes to be used by the compute target.\r\nFor use with elastic training, currently supported by PyTorch distribution type only.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Additional properties bag.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "object"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "DistributionConfiguration": {
      "description": "Base definition for job distribution configuration.",
      "oneOf": [
        {
          "description": "MPI distribution configuration.",
          "properties": {
            "distributionType": {
              "enum": [
                "Mpi"
              ],
              "type": "string"
            },
            "processCountPerInstance": {
              "description": "Number of processes per MPI node.",
              "oneOf": [
                {
                  "type": "integer"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "distributionType"
          ],
          "type": "object"
        },
        {
          "description": "PyTorch distribution configuration.",
          "properties": {
            "distributionType": {
              "enum": [
                "PyTorch"
              ],
              "type": "string"
            },
            "processCountPerInstance": {
              "description": "Number of processes per node.",
              "oneOf": [
                {
                  "type": "integer"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "distributionType"
          ],
          "type": "object"
        },
        {
          "description": "Ray distribution configuration.",
          "properties": {
            "address": {
              "description": "The address of Ray head node.",
              "type": "string"
            },
            "dashboardPort": {
              "description": "The port to bind the dashboard server to.",
              "oneOf": [
                {
                  "type": "integer"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "distributionType": {
              "enum": [
                "Ray"
              ],
              "type": "string"
            },
            "headNodeAdditionalArgs": {
              "description": "Additional arguments passed to ray start in head node.",
              "type": "string"
            },
            "includeDashboard": {
              "description": "Provide this argument to start the Ray dashboard GUI.",
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "port": {
              "description": "The port of the head ray process.",
              "oneOf": [
                {
                  "type": "integer"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "workerNodeAdditionalArgs": {
              "description": "Additional arguments passed to ray start in worker node.",
              "type": "string"
            }
          },
          "required": [
            "distributionType"
          ],
          "type": "object"
        },
        {
          "description": "TensorFlow distribution configuration.",
          "properties": {
            "distributionType": {
              "enum": [
                "TensorFlow"
              ],
              "type": "string"
            },
            "parameterServerCount": {
              "description": "Number of parameter server tasks.",
              "oneOf": [
                {
                  "default": 0,
                  "type": "integer"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "workerCount": {
              "description": "Number of workers. If not specified, will default to the instance count.",
              "oneOf": [
                {
                  "type": "integer"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "distributionType"
          ],
          "type": "object"
        }
      ],
      "properties": {},
      "type": "object"
    },
    "Docker": {
      "additionalProperties": {},
      "properties": {
        "privileged": {
          "description": "Indicate whether container shall run in privileged or non-privileged mode.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "EarlyTerminationPolicy": {
      "description": "Early termination policies enable canceling poor-performing runs before they complete",
      "oneOf": [
        {
          "description": "Defines an early termination policy based on slack criteria, and a frequency and delay interval for evaluation",
          "properties": {
            "policyType": {
              "enum": [
                "Bandit"
              ],
              "type": "string"
            },
            "slackAmount": {
              "description": "Absolute distance allowed from the best performing run.",
              "oneOf": [
                {
                  "default": 0,
                  "type": "number"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "slackFactor": {
              "description": "Ratio of the allowed distance from the best performing run.",
              "oneOf": [
                {
                  "default": 0,
                  "type": "number"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "policyType"
          ],
          "type": "object"
        },
        {
          "description": "Defines an early termination policy based on running averages of the primary metric of all runs",
          "properties": {
            "policyType": {
              "enum": [
                "MedianStopping"
              ],
              "type": "string"
            }
          },
          "required": [
            "policyType"
          ],
          "type": "object"
        },
        {
          "description": "Defines an early termination policy that cancels a given percentage of runs at each evaluation interval.",
          "properties": {
            "policyType": {
              "enum": [
                "TruncationSelection"
              ],
              "type": "string"
            },
            "truncationPercentage": {
              "description": "The percentage of runs to cancel at each evaluation interval.",
              "oneOf": [
                {
                  "default": 0,
                  "type": "integer"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "policyType"
          ],
          "type": "object"
        }
      ],
      "properties": {
        "delayEvaluation": {
          "description": "Number of intervals by which to delay the first evaluation.",
          "oneOf": [
            {
              "default": 0,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "evaluationInterval": {
          "description": "Interval (number of runs) between policy evaluations.",
          "oneOf": [
            {
              "default": 0,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "EncryptionProperty": {
      "properties": {
        "cosmosDbResourceId": {
          "description": "The byok cosmosdb account that customer brings to store customer's data\r\nwith encryption",
          "type": "string"
        },
        "identity": {
          "description": "Identity to be used with the keyVault",
          "oneOf": [
            {
              "$ref": "#/definitions/IdentityForCmk"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "keyVaultProperties": {
          "description": "KeyVault details to do the encryption",
          "oneOf": [
            {
              "$ref": "#/definitions/KeyVaultProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "searchAccountResourceId": {
          "description": "The byok search account that customer brings to store customer's data\r\nwith encryption",
          "type": "string"
        },
        "status": {
          "description": "Indicates whether or not the encryption is enabled for the workspace.",
          "oneOf": [
            {
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "storageAccountResourceId": {
          "description": "The byok storage account that customer brings to store customer's data\r\nwith encryption",
          "type": "string"
        }
      },
      "required": [
        "keyVaultProperties",
        "status"
      ],
      "type": "object"
    },
    "Endpoint": {
      "properties": {
        "hostIp": {
          "description": "Host IP over which the application is exposed from the container",
          "type": "string"
        },
        "name": {
          "description": "Name of the Endpoint",
          "type": "string"
        },
        "protocol": {
          "description": "Protocol over which communication will happen over this endpoint",
          "oneOf": [
            {
              "enum": [
                "tcp",
                "udp",
                "http"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "published": {
          "description": "Port over which the application is exposed from container.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "target": {
          "description": "Application port inside the container.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "EndpointAuthKeys": {
      "description": "Keys for endpoint authentication.",
      "properties": {
        "primaryKey": {
          "description": "The primary key.",
          "type": "string"
        },
        "secondaryKey": {
          "description": "The secondary key.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "EnvironmentContainerProperties": {
      "description": "Container for environment specification versions.",
      "properties": {
        "description": {
          "description": "The asset description text.",
          "type": "string"
        },
        "isArchived": {
          "description": "Is the asset archived?",
          "oneOf": [
            {
              "default": false,
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The asset property dictionary.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Tag dictionary. Tags can be added, removed, and updated.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "EnvironmentVariable": {
      "additionalProperties": {},
      "properties": {
        "type": {
          "description": "Type of the Environment Variable. Possible values are: local - For local variable",
          "oneOf": [
            {
              "enum": [
                "local"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "value": {
          "description": "Value of the Environment variable",
          "type": "string"
        }
      },
      "type": "object"
    },
    "EnvironmentVersionProperties": {
      "description": "Environment version details.",
      "properties": {
        "autoDeleteSetting": {
          "description": "Specifies the lifecycle setting of managed data asset.",
          "oneOf": [
            {
              "$ref": "#/definitions/AutoDeleteSetting"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "autoRebuild": {
          "description": "Defines if image needs to be rebuilt based on base image changes.",
          "oneOf": [
            {
              "enum": [
                "Disabled",
                "OnBaseImageUpdate"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "build": {
          "description": "Configuration settings for Docker build context.",
          "oneOf": [
            {
              "$ref": "#/definitions/BuildContext"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "condaFile": {
          "description": "Standard configuration file used by Conda that lets you install any kind of package, including Python, R, and C/C++ packages.\r\n<see href=\"https://repo2docker.readthedocs.io/en/latest/config_files.html#environment-yml-install-a-conda-environment\" />",
          "type": "string"
        },
        "description": {
          "description": "The asset description text.",
          "type": "string"
        },
        "image": {
          "description": "Name of the image that will be used for the environment.\r\n<seealso href=\"https://docs.microsoft.com/en-us/azure/machine-learning/how-to-deploy-custom-docker-image#use-a-custom-base-image\" />",
          "type": "string"
        },
        "inferenceConfig": {
          "description": "Defines configuration specific to inference.",
          "oneOf": [
            {
              "$ref": "#/definitions/InferenceContainerProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "intellectualProperty": {
          "description": "Intellectual Property details. Used if environment is an Intellectual Property.",
          "oneOf": [
            {
              "$ref": "#/definitions/IntellectualProperty"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "isAnonymous": {
          "description": "If the name version are system generated (anonymous registration). For types where Stage is defined, when Stage is provided it will be used to populate IsAnonymous",
          "oneOf": [
            {
              "default": false,
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "isArchived": {
          "description": "Is the asset archived? For types where Stage is defined, when Stage is provided it will be used to populate IsArchived",
          "oneOf": [
            {
              "default": false,
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "osType": {
          "description": "The OS type of the environment.",
          "oneOf": [
            {
              "enum": [
                "Linux",
                "Windows"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The asset property dictionary.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "stage": {
          "description": "Stage in the environment lifecycle assigned to this environment",
          "type": "string"
        },
        "tags": {
          "description": "Tag dictionary. Tags can be added, removed, and updated.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "FeatureAttributionMetricThreshold": {
      "properties": {
        "metric": {
          "description": "[Required] The feature attribution metric to calculate.",
          "oneOf": [
            {
              "enum": [
                "NormalizedDiscountedCumulativeGain"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "threshold": {
          "description": "The threshold value. If null, a default value will be set depending on the selected metric.",
          "oneOf": [
            {
              "$ref": "#/definitions/MonitoringThreshold"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "metric"
      ],
      "type": "object"
    },
    "FeatureStoreSettings": {
      "properties": {
        "computeRuntime": {
          "oneOf": [
            {
              "$ref": "#/definitions/ComputeRuntimeDto"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "offlineStoreConnectionName": {
          "type": "string"
        },
        "onlineStoreConnectionName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "FeaturesetContainerProperties": {
      "description": "Dto object representing feature set",
      "properties": {
        "description": {
          "description": "The asset description text.",
          "type": "string"
        },
        "isArchived": {
          "description": "Is the asset archived?",
          "oneOf": [
            {
              "default": false,
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The asset property dictionary.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Tag dictionary. Tags can be added, removed, and updated.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "FeaturesetSpecification": {
      "description": "Dto object representing specification",
      "properties": {
        "path": {
          "description": "Specifies the spec path",
          "type": "string"
        }
      },
      "type": "object"
    },
    "FeaturesetVersionProperties": {
      "description": "Dto object representing feature set version",
      "properties": {
        "autoDeleteSetting": {
          "description": "Specifies the lifecycle setting of managed data asset.",
          "oneOf": [
            {
              "$ref": "#/definitions/AutoDeleteSetting"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "description": {
          "description": "The asset description text.",
          "type": "string"
        },
        "entities": {
          "description": "Specifies list of entities",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "isAnonymous": {
          "description": "If the name version are system generated (anonymous registration). For types where Stage is defined, when Stage is provided it will be used to populate IsAnonymous",
          "oneOf": [
            {
              "default": false,
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "isArchived": {
          "description": "Is the asset archived? For types where Stage is defined, when Stage is provided it will be used to populate IsArchived",
          "oneOf": [
            {
              "default": false,
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "materializationSettings": {
          "description": "Specifies the materialization settings",
          "oneOf": [
            {
              "$ref": "#/definitions/MaterializationSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The asset property dictionary.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "specification": {
          "description": "Specifies the feature spec details",
          "oneOf": [
            {
              "$ref": "#/definitions/FeaturesetSpecification"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "stage": {
          "description": "Specifies the asset stage",
          "type": "string"
        },
        "tags": {
          "description": "Tag dictionary. Tags can be added, removed, and updated.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "FeaturestoreEntityContainerProperties": {
      "description": "Dto object representing feature entity",
      "properties": {
        "description": {
          "description": "The asset description text.",
          "type": "string"
        },
        "isArchived": {
          "description": "Is the asset archived?",
          "oneOf": [
            {
              "default": false,
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The asset property dictionary.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Tag dictionary. Tags can be added, removed, and updated.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "FeaturestoreEntityVersionProperties": {
      "description": "Dto object representing feature entity version",
      "properties": {
        "autoDeleteSetting": {
          "description": "Specifies the lifecycle setting of managed data asset.",
          "oneOf": [
            {
              "$ref": "#/definitions/AutoDeleteSetting"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "description": {
          "description": "The asset description text.",
          "type": "string"
        },
        "indexColumns": {
          "description": "Specifies index columns",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/IndexColumn"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "isAnonymous": {
          "description": "If the name version are system generated (anonymous registration). For types where Stage is defined, when Stage is provided it will be used to populate IsAnonymous",
          "oneOf": [
            {
              "default": false,
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "isArchived": {
          "description": "Is the asset archived? For types where Stage is defined, when Stage is provided it will be used to populate IsArchived",
          "oneOf": [
            {
              "default": false,
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The asset property dictionary.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "stage": {
          "description": "Specifies the asset stage",
          "type": "string"
        },
        "tags": {
          "description": "Tag dictionary. Tags can be added, removed, and updated.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "FlavorData": {
      "properties": {
        "data": {
          "description": "Model flavor-specific data.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ForecastHorizon": {
      "description": "The desired maximum forecast horizon in units of time-series frequency.",
      "oneOf": [
        {
          "description": "Forecast horizon determined automatically by system.",
          "properties": {
            "mode": {
              "enum": [
                "Auto"
              ],
              "type": "string"
            }
          },
          "required": [
            "mode"
          ],
          "type": "object"
        },
        {
          "description": "The desired maximum forecast horizon in units of time-series frequency.",
          "properties": {
            "mode": {
              "enum": [
                "Custom"
              ],
              "type": "string"
            },
            "value": {
              "description": "[Required] Forecast horizon value.",
              "oneOf": [
                {
                  "type": "integer"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "value",
            "mode"
          ],
          "type": "object"
        }
      ],
      "properties": {},
      "type": "object"
    },
    "ForecastingSettings": {
      "description": "Forecasting specific parameters.",
      "properties": {
        "countryOrRegionForHolidays": {
          "description": "Country or region for holidays for forecasting tasks.\r\nThese should be ISO 3166 two-letter country/region codes, for example 'US' or 'GB'.",
          "type": "string"
        },
        "cvStepSize": {
          "description": "Number of periods between the origin time of one CV fold and the next fold. For\r\nexample, if `CVStepSize` = 3 for daily data, the origin time for each fold will be\r\nthree days apart.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "featureLags": {
          "description": "Flag for generating lags for the numeric features with 'auto' or null.",
          "oneOf": [
            {
              "enum": [
                "None",
                "Auto"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "featuresUnknownAtForecastTime": {
          "description": "The feature columns that are available for training but unknown at the time of forecast/inference.\r\nIf features_unknown_at_forecast_time is not set, it is assumed that all the feature columns in the dataset are known at inference time.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "forecastHorizon": {
          "description": "The desired maximum forecast horizon in units of time-series frequency.",
          "oneOf": [
            {
              "$ref": "#/definitions/ForecastHorizon"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "frequency": {
          "description": "When forecasting, this parameter represents the period with which the forecast is desired, for example daily, weekly, yearly, etc. The forecast frequency is dataset frequency by default.",
          "type": "string"
        },
        "seasonality": {
          "description": "Set time series seasonality as an integer multiple of the series frequency.\r\nIf seasonality is set to 'auto', it will be inferred.",
          "oneOf": [
            {
              "$ref": "#/definitions/Seasonality"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "shortSeriesHandlingConfig": {
          "description": "The parameter defining how if AutoML should handle short time series.",
          "oneOf": [
            {
              "enum": [
                "None",
                "Auto",
                "Pad",
                "Drop"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "targetAggregateFunction": {
          "description": "The function to be used to aggregate the time series target column to conform to a user specified frequency.\r\nIf the TargetAggregateFunction is set i.e. not 'None', but the freq parameter is not set, the error is raised. The possible target aggregation functions are: \"sum\", \"max\", \"min\" and \"mean\".",
          "oneOf": [
            {
              "enum": [
                "None",
                "Sum",
                "Max",
                "Min",
                "Mean"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "targetLags": {
          "description": "The number of past periods to lag from the target column.",
          "oneOf": [
            {
              "$ref": "#/definitions/TargetLags"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "targetRollingWindowSize": {
          "description": "The number of past periods used to create a rolling window average of the target column.",
          "oneOf": [
            {
              "$ref": "#/definitions/TargetRollingWindowSize"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "timeColumnName": {
          "description": "The name of the time column. This parameter is required when forecasting to specify the datetime column in the input data used for building the time series and inferring its frequency.",
          "type": "string"
        },
        "timeSeriesIdColumnNames": {
          "description": "The names of columns used to group a timeseries. It can be used to create multiple series.\r\nIf grain is not defined, the data set is assumed to be one time-series. This parameter is used with task type forecasting.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "useStl": {
          "description": "Configure STL Decomposition of the time-series target column.",
          "oneOf": [
            {
              "enum": [
                "None",
                "Season",
                "SeasonTrend"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ForecastingTrainingSettings": {
      "description": "Forecasting Training related configuration.",
      "properties": {
        "allowedTrainingAlgorithms": {
          "description": "Allowed models for forecasting task.",
          "oneOf": [
            {
              "items": {
                "enum": [
                  "AutoArima",
                  "Prophet",
                  "Naive",
                  "SeasonalNaive",
                  "Average",
                  "SeasonalAverage",
                  "ExponentialSmoothing",
                  "Arimax",
                  "TCNForecaster",
                  "ElasticNet",
                  "GradientBoosting",
                  "DecisionTree",
                  "KNN",
                  "LassoLars",
                  "SGD",
                  "RandomForest",
                  "ExtremeRandomTrees",
                  "LightGBM",
                  "XGBoostRegressor"
                ],
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "blockedTrainingAlgorithms": {
          "description": "Blocked models for forecasting task.",
          "oneOf": [
            {
              "items": {
                "enum": [
                  "AutoArima",
                  "Prophet",
                  "Naive",
                  "SeasonalNaive",
                  "Average",
                  "SeasonalAverage",
                  "ExponentialSmoothing",
                  "Arimax",
                  "TCNForecaster",
                  "ElasticNet",
                  "GradientBoosting",
                  "DecisionTree",
                  "KNN",
                  "LassoLars",
                  "SGD",
                  "RandomForest",
                  "ExtremeRandomTrees",
                  "LightGBM",
                  "XGBoostRegressor"
                ],
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "enableDnnTraining": {
          "description": "Enable recommendation of DNN models.",
          "oneOf": [
            {
              "default": false,
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "enableModelExplainability": {
          "description": "Flag to turn on explainability on best model.",
          "oneOf": [
            {
              "default": true,
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "enableOnnxCompatibleModels": {
          "description": "Flag for enabling onnx compatible models.",
          "oneOf": [
            {
              "default": false,
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "enableStackEnsemble": {
          "description": "Enable stack ensemble run.",
          "oneOf": [
            {
              "default": true,
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "enableVoteEnsemble": {
          "description": "Enable voting ensemble run.",
          "oneOf": [
            {
              "default": true,
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "ensembleModelDownloadTimeout": {
          "default": "PT5M",
          "description": "During VotingEnsemble and StackEnsemble model generation, multiple fitted models from the previous child runs are downloaded.\r\nConfigure this parameter with a higher value than 300 secs, if more time is needed.",
          "type": "string"
        },
        "stackEnsembleSettings": {
          "description": "Stack ensemble settings for stack ensemble run.",
          "oneOf": [
            {
              "$ref": "#/definitions/StackEnsembleSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "trainingMode": {
          "description": "TrainingMode mode - Setting to 'auto' is same as setting it to 'non-distributed' for now, however in the future may result in mixed mode or heuristics based mode selection. Default is 'auto'.\r\nIf 'Distributed' then only distributed featurization is used and distributed algorithms are chosen.\r\nIf 'NonDistributed' then only non distributed algorithms are chosen.",
          "oneOf": [
            {
              "enum": [
                "Auto",
                "Distributed",
                "NonDistributed"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "GenerationSafetyQualityMetricThreshold": {
      "description": "Generation safety quality metric threshold definition.",
      "properties": {
        "metric": {
          "description": "[Required] Gets or sets the feature attribution metric to calculate.",
          "oneOf": [
            {
              "enum": [
                "AcceptableGroundednessScorePerInstance",
                "AggregatedGroundednessPassRate",
                "AcceptableCoherenceScorePerInstance",
                "AggregatedCoherencePassRate",
                "AcceptableFluencyScorePerInstance",
                "AggregatedFluencyPassRate",
                "AcceptableSimilarityScorePerInstance",
                "AggregatedSimilarityPassRate",
                "AcceptableRelevanceScorePerInstance",
                "AggregatedRelevancePassRate"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "threshold": {
          "description": "Gets or sets the threshold value.\r\nIf null, a default value will be set depending on the selected metric.",
          "oneOf": [
            {
              "$ref": "#/definitions/MonitoringThreshold"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "metric"
      ],
      "type": "object"
    },
    "GenerationTokenStatisticsMetricThreshold": {
      "description": "Generation token statistics metric threshold definition.",
      "properties": {
        "metric": {
          "description": "[Required] Gets or sets the feature attribution metric to calculate.",
          "oneOf": [
            {
              "enum": [
                "TotalTokenCount",
                "TotalTokenCountPerGroup"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "threshold": {
          "description": "Gets or sets the threshold value.\r\nIf null, a default value will be set depending on the selected metric.",
          "oneOf": [
            {
              "$ref": "#/definitions/MonitoringThreshold"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "metric"
      ],
      "type": "object"
    },
    "HDInsightProperties": {
      "description": "HDInsight compute properties",
      "properties": {
        "address": {
          "description": "Public IP address of the master node of the cluster.",
          "type": "string"
        },
        "administratorAccount": {
          "description": "Admin credentials for master node of the cluster",
          "oneOf": [
            {
              "$ref": "#/definitions/VirtualMachineSshCredentials"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "sshPort": {
          "description": "Port open for ssh connections on the master node of the cluster.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "IdAssetReference": {
      "description": "Reference to an asset via its ARM resource ID.",
      "properties": {
        "assetId": {
          "description": "[Required] ARM resource ID of the asset.",
          "oneOf": [
            {
              "minLength": 1,
              "pattern": "[a-zA-Z0-9_]",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "referenceType": {
          "description": "[Required] Specifies the type of asset reference.",
          "oneOf": [
            {
              "enum": [
                "Id",
                "DataPath",
                "OutputPath"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "assetId",
        "referenceType"
      ],
      "type": "object"
    },
    "IdentityConfiguration": {
      "description": "Base definition for identity configuration.",
      "oneOf": [
        {
          "description": "AML Token identity configuration.",
          "properties": {
            "identityType": {
              "enum": [
                "AMLToken"
              ],
              "type": "string"
            }
          },
          "required": [
            "identityType"
          ],
          "type": "object"
        },
        {
          "description": "Managed identity configuration.",
          "properties": {
            "clientId": {
              "description": "Specifies a user-assigned identity by client ID. For system-assigned, do not set this field.",
              "oneOf": [
                {
                  "pattern": "^[0-9a-fA-F]{8}(-[0-9a-fA-F]{4}){3}-[0-9a-fA-F]{12}$",
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "identityType": {
              "enum": [
                "Managed"
              ],
              "type": "string"
            },
            "objectId": {
              "description": "Specifies a user-assigned identity by object ID. For system-assigned, do not set this field.",
              "oneOf": [
                {
                  "pattern": "^[0-9a-fA-F]{8}(-[0-9a-fA-F]{4}){3}-[0-9a-fA-F]{12}$",
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "resourceId": {
              "description": "Specifies a user-assigned identity by ARM resource ID. For system-assigned, do not set this field.",
              "type": "string"
            }
          },
          "required": [
            "identityType"
          ],
          "type": "object"
        },
        {
          "description": "User identity configuration.",
          "properties": {
            "identityType": {
              "enum": [
                "UserIdentity"
              ],
              "type": "string"
            }
          },
          "required": [
            "identityType"
          ],
          "type": "object"
        }
      ],
      "properties": {},
      "type": "object"
    },
    "IdentityForCmk": {
      "description": "Identity object used for encryption.",
      "properties": {
        "userAssignedIdentity": {
          "description": "UserAssignedIdentity to be used to fetch the encryption key from keyVault",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Image": {
      "additionalProperties": {},
      "properties": {
        "reference": {
          "description": "Image reference URL",
          "type": "string"
        },
        "type": {
          "description": "Type of the image. Possible values are: docker - For docker images. azureml - For AzureML images",
          "oneOf": [
            {
              "enum": [
                "docker",
                "azureml"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ImageLimitSettings": {
      "description": "Limit settings for the AutoML job.",
      "properties": {
        "maxConcurrentTrials": {
          "description": "Maximum number of concurrent AutoML iterations.",
          "oneOf": [
            {
              "default": 1,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "maxTrials": {
          "description": "Maximum number of AutoML iterations.",
          "oneOf": [
            {
              "default": 1,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "timeout": {
          "default": "P7D",
          "description": "AutoML job timeout.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ImageModelDistributionSettingsClassification": {
      "description": "Distribution expressions to sweep over values of model settings.\r\n<example>\r\nSome examples are:\r\n```\r\nModelName = \"choice('seresnext', 'resnest50')\";\r\nLearningRate = \"uniform(0.001, 0.01)\";\r\nLayersToFreeze = \"choice(0, 2)\";\r\n```</example>\r\nFor more details on how to compose distribution expressions please check the documentation:\r\nhttps://docs.microsoft.com/en-us/azure/machine-learning/how-to-tune-hyperparameters\r\nFor more information on the available settings please visit the official documentation:\r\nhttps://docs.microsoft.com/en-us/azure/machine-learning/how-to-auto-train-image-models.",
      "properties": {
        "amsGradient": {
          "description": "Enable AMSGrad when optimizer is 'adam' or 'adamw'.",
          "type": "string"
        },
        "augmentations": {
          "description": "Settings for using Augmentations.",
          "type": "string"
        },
        "beta1": {
          "description": "Value of 'beta1' when optimizer is 'adam' or 'adamw'. Must be a float in the range [0, 1].",
          "type": "string"
        },
        "beta2": {
          "description": "Value of 'beta2' when optimizer is 'adam' or 'adamw'. Must be a float in the range [0, 1].",
          "type": "string"
        },
        "distributed": {
          "description": "Whether to use distributer training.",
          "type": "string"
        },
        "earlyStopping": {
          "description": "Enable early stopping logic during training.",
          "type": "string"
        },
        "earlyStoppingDelay": {
          "description": "Minimum number of epochs or validation evaluations to wait before primary metric improvement\r\nis tracked for early stopping. Must be a positive integer.",
          "type": "string"
        },
        "earlyStoppingPatience": {
          "description": "Minimum number of epochs or validation evaluations with no primary metric improvement before\r\nthe run is stopped. Must be a positive integer.",
          "type": "string"
        },
        "enableOnnxNormalization": {
          "description": "Enable normalization when exporting ONNX model.",
          "type": "string"
        },
        "evaluationFrequency": {
          "description": "Frequency to evaluate validation dataset to get metric scores. Must be a positive integer.",
          "type": "string"
        },
        "gradientAccumulationStep": {
          "description": "Gradient accumulation means running a configured number of \"GradAccumulationStep\" steps without\r\nupdating the model weights while accumulating the gradients of those steps, and then using\r\nthe accumulated gradients to compute the weight updates. Must be a positive integer.",
          "type": "string"
        },
        "layersToFreeze": {
          "description": "Number of layers to freeze for the model. Must be a positive integer.\r\nFor instance, passing 2 as value for 'seresnext' means\r\nfreezing layer0 and layer1. For a full list of models supported and details on layer freeze, please\r\nsee: https://docs.microsoft.com/en-us/azure/machine-learning/how-to-auto-train-image-models.",
          "type": "string"
        },
        "learningRate": {
          "description": "Initial learning rate. Must be a float in the range [0, 1].",
          "type": "string"
        },
        "learningRateScheduler": {
          "description": "Type of learning rate scheduler. Must be 'warmup_cosine' or 'step'.",
          "type": "string"
        },
        "modelName": {
          "description": "Name of the model to use for training.\r\nFor more information on the available models please visit the official documentation:\r\nhttps://docs.microsoft.com/en-us/azure/machine-learning/how-to-auto-train-image-models.",
          "type": "string"
        },
        "momentum": {
          "description": "Value of momentum when optimizer is 'sgd'. Must be a float in the range [0, 1].",
          "type": "string"
        },
        "nesterov": {
          "description": "Enable nesterov when optimizer is 'sgd'.",
          "type": "string"
        },
        "numberOfEpochs": {
          "description": "Number of training epochs. Must be a positive integer.",
          "type": "string"
        },
        "numberOfWorkers": {
          "description": "Number of data loader workers. Must be a non-negative integer.",
          "type": "string"
        },
        "optimizer": {
          "description": "Type of optimizer. Must be either 'sgd', 'adam', or 'adamw'.",
          "type": "string"
        },
        "randomSeed": {
          "description": "Random seed to be used when using deterministic training.",
          "type": "string"
        },
        "stepLRGamma": {
          "description": "Value of gamma when learning rate scheduler is 'step'. Must be a float in the range [0, 1].",
          "type": "string"
        },
        "stepLRStepSize": {
          "description": "Value of step size when learning rate scheduler is 'step'. Must be a positive integer.",
          "type": "string"
        },
        "trainingBatchSize": {
          "description": "Training batch size. Must be a positive integer.",
          "type": "string"
        },
        "trainingCropSize": {
          "description": "Image crop size that is input to the neural network for the training dataset. Must be a positive integer.",
          "type": "string"
        },
        "validationBatchSize": {
          "description": "Validation batch size. Must be a positive integer.",
          "type": "string"
        },
        "validationCropSize": {
          "description": "Image crop size that is input to the neural network for the validation dataset. Must be a positive integer.",
          "type": "string"
        },
        "validationResizeSize": {
          "description": "Image size to which to resize before cropping for validation dataset. Must be a positive integer.",
          "type": "string"
        },
        "warmupCosineLRCycles": {
          "description": "Value of cosine cycle when learning rate scheduler is 'warmup_cosine'. Must be a float in the range [0, 1].",
          "type": "string"
        },
        "warmupCosineLRWarmupEpochs": {
          "description": "Value of warmup epochs when learning rate scheduler is 'warmup_cosine'. Must be a positive integer.",
          "type": "string"
        },
        "weightDecay": {
          "description": "Value of weight decay when optimizer is 'sgd', 'adam', or 'adamw'. Must be a float in the range[0, 1].",
          "type": "string"
        },
        "weightedLoss": {
          "description": "Weighted loss. The accepted values are 0 for no weighted loss.\r\n1 for weighted loss with sqrt.(class_weights). 2 for weighted loss with class_weights. Must be 0 or 1 or 2.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ImageModelDistributionSettingsObjectDetection": {
      "description": "Distribution expressions to sweep over values of model settings.\r\n<example>\r\nSome examples are:\r\n```\r\nModelName = \"choice('seresnext', 'resnest50')\";\r\nLearningRate = \"uniform(0.001, 0.01)\";\r\nLayersToFreeze = \"choice(0, 2)\";\r\n```</example>\r\nFor more details on how to compose distribution expressions please check the documentation:\r\nhttps://docs.microsoft.com/en-us/azure/machine-learning/how-to-tune-hyperparameters\r\nFor more information on the available settings please visit the official documentation:\r\nhttps://docs.microsoft.com/en-us/azure/machine-learning/how-to-auto-train-image-models.",
      "properties": {
        "amsGradient": {
          "description": "Enable AMSGrad when optimizer is 'adam' or 'adamw'.",
          "type": "string"
        },
        "augmentations": {
          "description": "Settings for using Augmentations.",
          "type": "string"
        },
        "beta1": {
          "description": "Value of 'beta1' when optimizer is 'adam' or 'adamw'. Must be a float in the range [0, 1].",
          "type": "string"
        },
        "beta2": {
          "description": "Value of 'beta2' when optimizer is 'adam' or 'adamw'. Must be a float in the range [0, 1].",
          "type": "string"
        },
        "boxDetectionsPerImage": {
          "description": "Maximum number of detections per image, for all classes. Must be a positive integer.\r\nNote: This settings is not supported for the 'yolov5' algorithm.",
          "type": "string"
        },
        "boxScoreThreshold": {
          "description": "During inference, only return proposals with a classification score greater than\r\nBoxScoreThreshold. Must be a float in the range[0, 1].",
          "type": "string"
        },
        "distributed": {
          "description": "Whether to use distributer training.",
          "type": "string"
        },
        "earlyStopping": {
          "description": "Enable early stopping logic during training.",
          "type": "string"
        },
        "earlyStoppingDelay": {
          "description": "Minimum number of epochs or validation evaluations to wait before primary metric improvement\r\nis tracked for early stopping. Must be a positive integer.",
          "type": "string"
        },
        "earlyStoppingPatience": {
          "description": "Minimum number of epochs or validation evaluations with no primary metric improvement before\r\nthe run is stopped. Must be a positive integer.",
          "type": "string"
        },
        "enableOnnxNormalization": {
          "description": "Enable normalization when exporting ONNX model.",
          "type": "string"
        },
        "evaluationFrequency": {
          "description": "Frequency to evaluate validation dataset to get metric scores. Must be a positive integer.",
          "type": "string"
        },
        "gradientAccumulationStep": {
          "description": "Gradient accumulation means running a configured number of \"GradAccumulationStep\" steps without\r\nupdating the model weights while accumulating the gradients of those steps, and then using\r\nthe accumulated gradients to compute the weight updates. Must be a positive integer.",
          "type": "string"
        },
        "imageSize": {
          "description": "Image size for train and validation. Must be a positive integer.\r\nNote: The training run may get into CUDA OOM if the size is too big.\r\nNote: This settings is only supported for the 'yolov5' algorithm.",
          "type": "string"
        },
        "layersToFreeze": {
          "description": "Number of layers to freeze for the model. Must be a positive integer.\r\nFor instance, passing 2 as value for 'seresnext' means\r\nfreezing layer0 and layer1. For a full list of models supported and details on layer freeze, please\r\nsee: https://docs.microsoft.com/en-us/azure/machine-learning/how-to-auto-train-image-models.",
          "type": "string"
        },
        "learningRate": {
          "description": "Initial learning rate. Must be a float in the range [0, 1].",
          "type": "string"
        },
        "learningRateScheduler": {
          "description": "Type of learning rate scheduler. Must be 'warmup_cosine' or 'step'.",
          "type": "string"
        },
        "maxSize": {
          "description": "Maximum size of the image to be rescaled before feeding it to the backbone.\r\nMust be a positive integer. Note: training run may get into CUDA OOM if the size is too big.\r\nNote: This settings is not supported for the 'yolov5' algorithm.",
          "type": "string"
        },
        "minSize": {
          "description": "Minimum size of the image to be rescaled before feeding it to the backbone.\r\nMust be a positive integer. Note: training run may get into CUDA OOM if the size is too big.\r\nNote: This settings is not supported for the 'yolov5' algorithm.",
          "type": "string"
        },
        "modelName": {
          "description": "Name of the model to use for training.\r\nFor more information on the available models please visit the official documentation:\r\nhttps://docs.microsoft.com/en-us/azure/machine-learning/how-to-auto-train-image-models.",
          "type": "string"
        },
        "modelSize": {
          "description": "Model size. Must be 'small', 'medium', 'large', or 'xlarge'.\r\nNote: training run may get into CUDA OOM if the model size is too big.\r\nNote: This settings is only supported for the 'yolov5' algorithm.",
          "type": "string"
        },
        "momentum": {
          "description": "Value of momentum when optimizer is 'sgd'. Must be a float in the range [0, 1].",
          "type": "string"
        },
        "multiScale": {
          "description": "Enable multi-scale image by varying image size by +/- 50%.\r\nNote: training run may get into CUDA OOM if no sufficient GPU memory.\r\nNote: This settings is only supported for the 'yolov5' algorithm.",
          "type": "string"
        },
        "nesterov": {
          "description": "Enable nesterov when optimizer is 'sgd'.",
          "type": "string"
        },
        "nmsIouThreshold": {
          "description": "IOU threshold used during inference in NMS post processing. Must be float in the range [0, 1].",
          "type": "string"
        },
        "numberOfEpochs": {
          "description": "Number of training epochs. Must be a positive integer.",
          "type": "string"
        },
        "numberOfWorkers": {
          "description": "Number of data loader workers. Must be a non-negative integer.",
          "type": "string"
        },
        "optimizer": {
          "description": "Type of optimizer. Must be either 'sgd', 'adam', or 'adamw'.",
          "type": "string"
        },
        "randomSeed": {
          "description": "Random seed to be used when using deterministic training.",
          "type": "string"
        },
        "stepLRGamma": {
          "description": "Value of gamma when learning rate scheduler is 'step'. Must be a float in the range [0, 1].",
          "type": "string"
        },
        "stepLRStepSize": {
          "description": "Value of step size when learning rate scheduler is 'step'. Must be a positive integer.",
          "type": "string"
        },
        "tileGridSize": {
          "description": "The grid size to use for tiling each image. Note: TileGridSize must not be\r\nNone to enable small object detection logic. A string containing two integers in mxn format.\r\nNote: This settings is not supported for the 'yolov5' algorithm.",
          "type": "string"
        },
        "tileOverlapRatio": {
          "description": "Overlap ratio between adjacent tiles in each dimension. Must be float in the range [0, 1).\r\nNote: This settings is not supported for the 'yolov5' algorithm.",
          "type": "string"
        },
        "tilePredictionsNmsThreshold": {
          "description": "The IOU threshold to use to perform NMS while merging predictions from tiles and image.\r\nUsed in validation/ inference. Must be float in the range [0, 1].\r\nNote: This settings is not supported for the 'yolov5' algorithm.\r\nNMS: Non-maximum suppression",
          "type": "string"
        },
        "trainingBatchSize": {
          "description": "Training batch size. Must be a positive integer.",
          "type": "string"
        },
        "validationBatchSize": {
          "description": "Validation batch size. Must be a positive integer.",
          "type": "string"
        },
        "validationIouThreshold": {
          "description": "IOU threshold to use when computing validation metric. Must be float in the range [0, 1].",
          "type": "string"
        },
        "validationMetricType": {
          "description": "Metric computation method to use for validation metrics. Must be 'none', 'coco', 'voc', or 'coco_voc'.",
          "type": "string"
        },
        "warmupCosineLRCycles": {
          "description": "Value of cosine cycle when learning rate scheduler is 'warmup_cosine'. Must be a float in the range [0, 1].",
          "type": "string"
        },
        "warmupCosineLRWarmupEpochs": {
          "description": "Value of warmup epochs when learning rate scheduler is 'warmup_cosine'. Must be a positive integer.",
          "type": "string"
        },
        "weightDecay": {
          "description": "Value of weight decay when optimizer is 'sgd', 'adam', or 'adamw'. Must be a float in the range[0, 1].",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ImageModelSettingsClassification": {
      "description": "Settings used for training the model.\r\nFor more information on the available settings please visit the official documentation:\r\nhttps://docs.microsoft.com/en-us/azure/machine-learning/how-to-auto-train-image-models.",
      "properties": {
        "advancedSettings": {
          "description": "Settings for advanced scenarios.",
          "type": "string"
        },
        "amsGradient": {
          "description": "Enable AMSGrad when optimizer is 'adam' or 'adamw'.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "augmentations": {
          "description": "Settings for using Augmentations.",
          "type": "string"
        },
        "beta1": {
          "description": "Value of 'beta1' when optimizer is 'adam' or 'adamw'. Must be a float in the range [0, 1].",
          "oneOf": [
            {
              "type": "number"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "beta2": {
          "description": "Value of 'beta2' when optimizer is 'adam' or 'adamw'. Must be a float in the range [0, 1].",
          "oneOf": [
            {
              "type": "number"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "checkpointFrequency": {
          "description": "Frequency to store model checkpoints. Must be a positive integer.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "checkpointModel": {
          "description": "The pretrained checkpoint model for incremental training.",
          "oneOf": [
            {
              "$ref": "#/definitions/MLFlowModelJobInput"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "checkpointRunId": {
          "description": "The id of a previous run that has a pretrained checkpoint for incremental training.",
          "type": "string"
        },
        "distributed": {
          "description": "Whether to use distributed training.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "earlyStopping": {
          "description": "Enable early stopping logic during training.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "earlyStoppingDelay": {
          "description": "Minimum number of epochs or validation evaluations to wait before primary metric improvement\r\nis tracked for early stopping. Must be a positive integer.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "earlyStoppingPatience": {
          "description": "Minimum number of epochs or validation evaluations with no primary metric improvement before\r\nthe run is stopped. Must be a positive integer.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "enableOnnxNormalization": {
          "description": "Enable normalization when exporting ONNX model.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "evaluationFrequency": {
          "description": "Frequency to evaluate validation dataset to get metric scores. Must be a positive integer.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "gradientAccumulationStep": {
          "description": "Gradient accumulation means running a configured number of \"GradAccumulationStep\" steps without\r\nupdating the model weights while accumulating the gradients of those steps, and then using\r\nthe accumulated gradients to compute the weight updates. Must be a positive integer.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "layersToFreeze": {
          "description": "Number of layers to freeze for the model. Must be a positive integer.\r\nFor instance, passing 2 as value for 'seresnext' means\r\nfreezing layer0 and layer1. For a full list of models supported and details on layer freeze, please\r\nsee: https://docs.microsoft.com/en-us/azure/machine-learning/how-to-auto-train-image-models.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "learningRate": {
          "description": "Initial learning rate. Must be a float in the range [0, 1].",
          "oneOf": [
            {
              "type": "number"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "learningRateScheduler": {
          "description": "Type of learning rate scheduler. Must be 'warmup_cosine' or 'step'.",
          "oneOf": [
            {
              "enum": [
                "None",
                "WarmupCosine",
                "Step"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "modelName": {
          "description": "Name of the model to use for training.\r\nFor more information on the available models please visit the official documentation:\r\nhttps://docs.microsoft.com/en-us/azure/machine-learning/how-to-auto-train-image-models.",
          "type": "string"
        },
        "momentum": {
          "description": "Value of momentum when optimizer is 'sgd'. Must be a float in the range [0, 1].",
          "oneOf": [
            {
              "type": "number"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "nesterov": {
          "description": "Enable nesterov when optimizer is 'sgd'.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "numberOfEpochs": {
          "description": "Number of training epochs. Must be a positive integer.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "numberOfWorkers": {
          "description": "Number of data loader workers. Must be a non-negative integer.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "optimizer": {
          "description": "Type of optimizer.",
          "oneOf": [
            {
              "enum": [
                "None",
                "Sgd",
                "Adam",
                "Adamw"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "randomSeed": {
          "description": "Random seed to be used when using deterministic training.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "stepLRGamma": {
          "description": "Value of gamma when learning rate scheduler is 'step'. Must be a float in the range [0, 1].",
          "oneOf": [
            {
              "type": "number"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "stepLRStepSize": {
          "description": "Value of step size when learning rate scheduler is 'step'. Must be a positive integer.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "trainingBatchSize": {
          "description": "Training batch size. Must be a positive integer.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "trainingCropSize": {
          "description": "Image crop size that is input to the neural network for the training dataset. Must be a positive integer.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "validationBatchSize": {
          "description": "Validation batch size. Must be a positive integer.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "validationCropSize": {
          "description": "Image crop size that is input to the neural network for the validation dataset. Must be a positive integer.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "validationResizeSize": {
          "description": "Image size to which to resize before cropping for validation dataset. Must be a positive integer.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "warmupCosineLRCycles": {
          "description": "Value of cosine cycle when learning rate scheduler is 'warmup_cosine'. Must be a float in the range [0, 1].",
          "oneOf": [
            {
              "type": "number"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "warmupCosineLRWarmupEpochs": {
          "description": "Value of warmup epochs when learning rate scheduler is 'warmup_cosine'. Must be a positive integer.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "weightDecay": {
          "description": "Value of weight decay when optimizer is 'sgd', 'adam', or 'adamw'. Must be a float in the range[0, 1].",
          "oneOf": [
            {
              "type": "number"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "weightedLoss": {
          "description": "Weighted loss. The accepted values are 0 for no weighted loss.\r\n1 for weighted loss with sqrt.(class_weights). 2 for weighted loss with class_weights. Must be 0 or 1 or 2.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ImageModelSettingsObjectDetection": {
      "description": "Settings used for training the model.\r\nFor more information on the available settings please visit the official documentation:\r\nhttps://docs.microsoft.com/en-us/azure/machine-learning/how-to-auto-train-image-models.",
      "properties": {
        "advancedSettings": {
          "description": "Settings for advanced scenarios.",
          "type": "string"
        },
        "amsGradient": {
          "description": "Enable AMSGrad when optimizer is 'adam' or 'adamw'.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "augmentations": {
          "description": "Settings for using Augmentations.",
          "type": "string"
        },
        "beta1": {
          "description": "Value of 'beta1' when optimizer is 'adam' or 'adamw'. Must be a float in the range [0, 1].",
          "oneOf": [
            {
              "type": "number"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "beta2": {
          "description": "Value of 'beta2' when optimizer is 'adam' or 'adamw'. Must be a float in the range [0, 1].",
          "oneOf": [
            {
              "type": "number"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "boxDetectionsPerImage": {
          "description": "Maximum number of detections per image, for all classes. Must be a positive integer.\r\nNote: This settings is not supported for the 'yolov5' algorithm.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "boxScoreThreshold": {
          "description": "During inference, only return proposals with a classification score greater than\r\nBoxScoreThreshold. Must be a float in the range[0, 1].",
          "oneOf": [
            {
              "type": "number"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "checkpointFrequency": {
          "description": "Frequency to store model checkpoints. Must be a positive integer.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "checkpointModel": {
          "description": "The pretrained checkpoint model for incremental training.",
          "oneOf": [
            {
              "$ref": "#/definitions/MLFlowModelJobInput"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "checkpointRunId": {
          "description": "The id of a previous run that has a pretrained checkpoint for incremental training.",
          "type": "string"
        },
        "distributed": {
          "description": "Whether to use distributed training.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "earlyStopping": {
          "description": "Enable early stopping logic during training.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "earlyStoppingDelay": {
          "description": "Minimum number of epochs or validation evaluations to wait before primary metric improvement\r\nis tracked for early stopping. Must be a positive integer.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "earlyStoppingPatience": {
          "description": "Minimum number of epochs or validation evaluations with no primary metric improvement before\r\nthe run is stopped. Must be a positive integer.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "enableOnnxNormalization": {
          "description": "Enable normalization when exporting ONNX model.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "evaluationFrequency": {
          "description": "Frequency to evaluate validation dataset to get metric scores. Must be a positive integer.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "gradientAccumulationStep": {
          "description": "Gradient accumulation means running a configured number of \"GradAccumulationStep\" steps without\r\nupdating the model weights while accumulating the gradients of those steps, and then using\r\nthe accumulated gradients to compute the weight updates. Must be a positive integer.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "imageSize": {
          "description": "Image size for train and validation. Must be a positive integer.\r\nNote: The training run may get into CUDA OOM if the size is too big.\r\nNote: This settings is only supported for the 'yolov5' algorithm.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "layersToFreeze": {
          "description": "Number of layers to freeze for the model. Must be a positive integer.\r\nFor instance, passing 2 as value for 'seresnext' means\r\nfreezing layer0 and layer1. For a full list of models supported and details on layer freeze, please\r\nsee: https://docs.microsoft.com/en-us/azure/machine-learning/how-to-auto-train-image-models.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "learningRate": {
          "description": "Initial learning rate. Must be a float in the range [0, 1].",
          "oneOf": [
            {
              "type": "number"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "learningRateScheduler": {
          "description": "Type of learning rate scheduler. Must be 'warmup_cosine' or 'step'.",
          "oneOf": [
            {
              "enum": [
                "None",
                "WarmupCosine",
                "Step"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "logTrainingMetrics": {
          "description": "Enable computing and logging training metrics.",
          "oneOf": [
            {
              "enum": [
                "Enable",
                "Disable"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "logValidationLoss": {
          "description": "Enable computing and logging validation loss.",
          "oneOf": [
            {
              "enum": [
                "Enable",
                "Disable"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "maxSize": {
          "description": "Maximum size of the image to be rescaled before feeding it to the backbone.\r\nMust be a positive integer. Note: training run may get into CUDA OOM if the size is too big.\r\nNote: This settings is not supported for the 'yolov5' algorithm.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "minSize": {
          "description": "Minimum size of the image to be rescaled before feeding it to the backbone.\r\nMust be a positive integer. Note: training run may get into CUDA OOM if the size is too big.\r\nNote: This settings is not supported for the 'yolov5' algorithm.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "modelName": {
          "description": "Name of the model to use for training.\r\nFor more information on the available models please visit the official documentation:\r\nhttps://docs.microsoft.com/en-us/azure/machine-learning/how-to-auto-train-image-models.",
          "type": "string"
        },
        "modelSize": {
          "description": "Model size. Must be 'small', 'medium', 'large', or 'xlarge'.\r\nNote: training run may get into CUDA OOM if the model size is too big.\r\nNote: This settings is only supported for the 'yolov5' algorithm.",
          "oneOf": [
            {
              "enum": [
                "None",
                "Small",
                "Medium",
                "Large",
                "ExtraLarge"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "momentum": {
          "description": "Value of momentum when optimizer is 'sgd'. Must be a float in the range [0, 1].",
          "oneOf": [
            {
              "type": "number"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "multiScale": {
          "description": "Enable multi-scale image by varying image size by +/- 50%.\r\nNote: training run may get into CUDA OOM if no sufficient GPU memory.\r\nNote: This settings is only supported for the 'yolov5' algorithm.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "nesterov": {
          "description": "Enable nesterov when optimizer is 'sgd'.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "nmsIouThreshold": {
          "description": "IOU threshold used during inference in NMS post processing. Must be a float in the range [0, 1].",
          "oneOf": [
            {
              "type": "number"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "numberOfEpochs": {
          "description": "Number of training epochs. Must be a positive integer.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "numberOfWorkers": {
          "description": "Number of data loader workers. Must be a non-negative integer.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "optimizer": {
          "description": "Type of optimizer.",
          "oneOf": [
            {
              "enum": [
                "None",
                "Sgd",
                "Adam",
                "Adamw"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "randomSeed": {
          "description": "Random seed to be used when using deterministic training.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "stepLRGamma": {
          "description": "Value of gamma when learning rate scheduler is 'step'. Must be a float in the range [0, 1].",
          "oneOf": [
            {
              "type": "number"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "stepLRStepSize": {
          "description": "Value of step size when learning rate scheduler is 'step'. Must be a positive integer.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tileGridSize": {
          "description": "The grid size to use for tiling each image. Note: TileGridSize must not be\r\nNone to enable small object detection logic. A string containing two integers in mxn format.\r\nNote: This settings is not supported for the 'yolov5' algorithm.",
          "type": "string"
        },
        "tileOverlapRatio": {
          "description": "Overlap ratio between adjacent tiles in each dimension. Must be float in the range [0, 1).\r\nNote: This settings is not supported for the 'yolov5' algorithm.",
          "oneOf": [
            {
              "type": "number"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tilePredictionsNmsThreshold": {
          "description": "The IOU threshold to use to perform NMS while merging predictions from tiles and image.\r\nUsed in validation/ inference. Must be float in the range [0, 1].\r\nNote: This settings is not supported for the 'yolov5' algorithm.",
          "oneOf": [
            {
              "type": "number"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "trainingBatchSize": {
          "description": "Training batch size. Must be a positive integer.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "validationBatchSize": {
          "description": "Validation batch size. Must be a positive integer.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "validationIouThreshold": {
          "description": "IOU threshold to use when computing validation metric. Must be float in the range [0, 1].",
          "oneOf": [
            {
              "type": "number"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "validationMetricType": {
          "description": "Metric computation method to use for validation metrics.",
          "oneOf": [
            {
              "enum": [
                "None",
                "Coco",
                "Voc",
                "CocoVoc"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "warmupCosineLRCycles": {
          "description": "Value of cosine cycle when learning rate scheduler is 'warmup_cosine'. Must be a float in the range [0, 1].",
          "oneOf": [
            {
              "type": "number"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "warmupCosineLRWarmupEpochs": {
          "description": "Value of warmup epochs when learning rate scheduler is 'warmup_cosine'. Must be a positive integer.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "weightDecay": {
          "description": "Value of weight decay when optimizer is 'sgd', 'adam', or 'adamw'. Must be a float in the range[0, 1].",
          "oneOf": [
            {
              "type": "number"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ImageSweepSettings": {
      "description": "Model sweeping and hyperparameter sweeping related settings.",
      "properties": {
        "earlyTermination": {
          "description": "Type of early termination policy.",
          "oneOf": [
            {
              "$ref": "#/definitions/EarlyTerminationPolicy"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "samplingAlgorithm": {
          "description": "[Required] Type of the hyperparameter sampling algorithms.",
          "oneOf": [
            {
              "enum": [
                "Grid",
                "Random",
                "Bayesian"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "samplingAlgorithm"
      ],
      "type": "object"
    },
    "IndexColumn": {
      "description": "Dto object representing index column",
      "properties": {
        "columnName": {
          "description": "Specifies the column name",
          "type": "string"
        },
        "dataType": {
          "description": "Specifies the data type",
          "oneOf": [
            {
              "enum": [
                "String",
                "Integer",
                "Long",
                "Float",
                "Double",
                "Binary",
                "Datetime",
                "Boolean"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "InferenceContainerProperties": {
      "properties": {
        "livenessRoute": {
          "description": "The route to check the liveness of the inference server container.",
          "oneOf": [
            {
              "$ref": "#/definitions/Route"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "readinessRoute": {
          "description": "The route to check the readiness of the inference server container.",
          "oneOf": [
            {
              "$ref": "#/definitions/Route"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "scoringRoute": {
          "description": "The port to send the scoring requests to, within the inference server container.",
          "oneOf": [
            {
              "$ref": "#/definitions/Route"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "InstanceTypeSchema": {
      "description": "Instance type schema.",
      "properties": {
        "nodeSelector": {
          "description": "Node Selector",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "description": "Resource requests/limits for this instance type",
          "oneOf": [
            {
              "$ref": "#/definitions/InstanceTypeSchemaResources"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "InstanceTypeSchemaResources": {
      "description": "Resource requests/limits for this instance type",
      "properties": {
        "limits": {
          "description": "Resource limits for this instance type",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "requests": {
          "description": "Resource requests for this instance type",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "IntellectualProperty": {
      "description": "Intellectual Property details for a resource.",
      "properties": {
        "protectionLevel": {
          "description": "Protection level of the Intellectual Property.",
          "oneOf": [
            {
              "enum": [
                "All",
                "None"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "publisher": {
          "description": "[Required] Publisher of the Intellectual Property. Must be the same as Registry publisher name.",
          "oneOf": [
            {
              "minLength": 1,
              "pattern": "[a-zA-Z0-9_]",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "publisher"
      ],
      "type": "object"
    },
    "JobBaseProperties": {
      "description": "Base definition for a job.",
      "oneOf": [
        {
          "description": "AutoMLJob class.\r\nUse this class for executing AutoML tasks like Classification/Regression etc.\r\nSee TaskType enum for all the tasks supported.",
          "properties": {
            "environmentId": {
              "description": "The ARM resource ID of the Environment specification for the job.\r\nThis is optional value to provide, if not provided, AutoML will default this to Production AutoML curated environment version when running the job.",
              "type": "string"
            },
            "environmentVariables": {
              "description": "Environment variables included in the job.",
              "oneOf": [
                {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "properties": {},
                  "type": "object"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "jobType": {
              "enum": [
                "AutoML"
              ],
              "type": "string"
            },
            "outputs": {
              "description": "Mapping of output data bindings used in the job.",
              "oneOf": [
                {
                  "additionalProperties": {
                    "$ref": "#/definitions/JobOutput"
                  },
                  "properties": {},
                  "type": "object"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "queueSettings": {
              "description": "Queue settings for the job",
              "oneOf": [
                {
                  "$ref": "#/definitions/QueueSettings"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "resources": {
              "description": "Compute Resource configuration for the job.",
              "oneOf": [
                {
                  "$ref": "#/definitions/JobResourceConfiguration"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "taskDetails": {
              "description": "[Required] This represents scenario which can be one of Tables/NLP/Image",
              "oneOf": [
                {
                  "$ref": "#/definitions/AutoMLVertical"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "taskDetails",
            "jobType"
          ],
          "type": "object"
        },
        {
          "description": "Command job definition.",
          "properties": {
            "autologgerSettings": {
              "description": "Distribution configuration of the job. If set, this should be one of Mpi, Tensorflow, PyTorch, or null.",
              "oneOf": [
                {
                  "$ref": "#/definitions/AutologgerSettings"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "codeId": {
              "description": "ARM resource ID of the code asset.",
              "type": "string"
            },
            "command": {
              "description": "[Required] The command to execute on startup of the job. eg. \"python train.py\"",
              "oneOf": [
                {
                  "minLength": 1,
                  "pattern": "[a-zA-Z0-9_]",
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "distribution": {
              "description": "Distribution configuration of the job. If set, this should be one of Mpi, Tensorflow, PyTorch, Ray, or null.",
              "oneOf": [
                {
                  "$ref": "#/definitions/DistributionConfiguration"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "environmentId": {
              "description": "[Required] The ARM resource ID of the Environment specification for the job.",
              "oneOf": [
                {
                  "minLength": 1,
                  "pattern": "[a-zA-Z0-9_]",
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "environmentVariables": {
              "description": "Environment variables included in the job.",
              "oneOf": [
                {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "properties": {},
                  "type": "object"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "inputs": {
              "description": "Mapping of input data bindings used in the job.",
              "oneOf": [
                {
                  "additionalProperties": {
                    "$ref": "#/definitions/JobInput"
                  },
                  "properties": {},
                  "type": "object"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "jobType": {
              "enum": [
                "Command"
              ],
              "type": "string"
            },
            "limits": {
              "description": "Command Job limit.",
              "oneOf": [
                {
                  "$ref": "#/definitions/CommandJobLimits"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "outputs": {
              "description": "Mapping of output data bindings used in the job.",
              "oneOf": [
                {
                  "additionalProperties": {
                    "$ref": "#/definitions/JobOutput"
                  },
                  "properties": {},
                  "type": "object"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "queueSettings": {
              "description": "Queue settings for the job",
              "oneOf": [
                {
                  "$ref": "#/definitions/QueueSettings"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "resources": {
              "description": "Compute Resource configuration for the job.",
              "oneOf": [
                {
                  "$ref": "#/definitions/JobResourceConfiguration"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "command",
            "environmentId",
            "jobType"
          ],
          "type": "object"
        },
        {
          "description": "Labeling job definition",
          "properties": {
            "dataConfiguration": {
              "description": "Configuration of data used in the job.",
              "oneOf": [
                {
                  "$ref": "#/definitions/LabelingDataConfiguration"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "jobInstructions": {
              "description": "Labeling instructions of the job.",
              "oneOf": [
                {
                  "$ref": "#/definitions/LabelingJobInstructions"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "jobType": {
              "enum": [
                "Labeling"
              ],
              "type": "string"
            },
            "labelCategories": {
              "description": "Label categories of the job.",
              "oneOf": [
                {
                  "additionalProperties": {
                    "$ref": "#/definitions/LabelCategory"
                  },
                  "properties": {},
                  "type": "object"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "labelingJobMediaProperties": {
              "description": "Media type specific properties in the job.",
              "oneOf": [
                {
                  "$ref": "#/definitions/LabelingJobMediaProperties"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "mlAssistConfiguration": {
              "description": "Configuration of MLAssist feature in the job.",
              "oneOf": [
                {
                  "$ref": "#/definitions/MLAssistConfiguration"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "jobType"
          ],
          "type": "object"
        },
        {
          "description": "Pipeline Job definition: defines generic to MFE attributes.",
          "properties": {
            "inputs": {
              "description": "Inputs for the pipeline job.",
              "oneOf": [
                {
                  "additionalProperties": {
                    "$ref": "#/definitions/JobInput"
                  },
                  "properties": {},
                  "type": "object"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "jobType": {
              "enum": [
                "Pipeline"
              ],
              "type": "string"
            },
            "jobs": {
              "description": "Jobs construct the Pipeline Job.",
              "oneOf": [
                {
                  "additionalProperties": {
                    "type": "object"
                  },
                  "properties": {},
                  "type": "object"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "outputs": {
              "description": "Outputs for the pipeline job",
              "oneOf": [
                {
                  "additionalProperties": {
                    "$ref": "#/definitions/JobOutput"
                  },
                  "properties": {},
                  "type": "object"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "settings": {
              "description": "Pipeline settings, for things like ContinueRunOnStepFailure etc.",
              "oneOf": [
                {
                  "type": "object"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "sourceJobId": {
              "description": "ARM resource ID of source job.",
              "type": "string"
            }
          },
          "required": [
            "jobType"
          ],
          "type": "object"
        },
        {
          "description": "Spark job definition.",
          "properties": {
            "archives": {
              "description": "Archive files used in the job.",
              "oneOf": [
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "args": {
              "description": "Arguments for the job.",
              "type": "string"
            },
            "codeId": {
              "description": "[Required] ARM resource ID of the code asset.",
              "oneOf": [
                {
                  "minLength": 1,
                  "pattern": "[a-zA-Z0-9_]",
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "conf": {
              "description": "Spark configured properties.",
              "oneOf": [
                {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "properties": {},
                  "type": "object"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "entry": {
              "description": "[Required] The entry to execute on startup of the job.",
              "oneOf": [
                {
                  "$ref": "#/definitions/SparkJobEntry"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "environmentId": {
              "description": "The ARM resource ID of the Environment specification for the job.",
              "type": "string"
            },
            "files": {
              "description": "Files used in the job.",
              "oneOf": [
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "inputs": {
              "description": "Mapping of input data bindings used in the job.",
              "oneOf": [
                {
                  "additionalProperties": {
                    "$ref": "#/definitions/JobInput"
                  },
                  "properties": {},
                  "type": "object"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "jars": {
              "description": "Jar files used in the job.",
              "oneOf": [
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "jobType": {
              "enum": [
                "Spark"
              ],
              "type": "string"
            },
            "outputs": {
              "description": "Mapping of output data bindings used in the job.",
              "oneOf": [
                {
                  "additionalProperties": {
                    "$ref": "#/definitions/JobOutput"
                  },
                  "properties": {},
                  "type": "object"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "pyFiles": {
              "description": "Python files used in the job.",
              "oneOf": [
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "queueSettings": {
              "description": "Queue settings for the job",
              "oneOf": [
                {
                  "$ref": "#/definitions/QueueSettings"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "resources": {
              "description": "Compute Resource configuration for the job.",
              "oneOf": [
                {
                  "$ref": "#/definitions/SparkResourceConfiguration"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "codeId",
            "entry",
            "jobType"
          ],
          "type": "object"
        },
        {
          "description": "Sweep job definition.",
          "properties": {
            "earlyTermination": {
              "description": "Early termination policies enable canceling poor-performing runs before they complete",
              "oneOf": [
                {
                  "$ref": "#/definitions/EarlyTerminationPolicy"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "inputs": {
              "description": "Mapping of input data bindings used in the job.",
              "oneOf": [
                {
                  "additionalProperties": {
                    "$ref": "#/definitions/JobInput"
                  },
                  "properties": {},
                  "type": "object"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "jobType": {
              "enum": [
                "Sweep"
              ],
              "type": "string"
            },
            "limits": {
              "description": "Sweep Job limit.",
              "oneOf": [
                {
                  "$ref": "#/definitions/SweepJobLimits"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "objective": {
              "description": "[Required] Optimization objective.",
              "oneOf": [
                {
                  "$ref": "#/definitions/Objective"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "outputs": {
              "description": "Mapping of output data bindings used in the job.",
              "oneOf": [
                {
                  "additionalProperties": {
                    "$ref": "#/definitions/JobOutput"
                  },
                  "properties": {},
                  "type": "object"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "queueSettings": {
              "description": "Queue settings for the job",
              "oneOf": [
                {
                  "$ref": "#/definitions/QueueSettings"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "samplingAlgorithm": {
              "description": "[Required] The hyperparameter sampling algorithm",
              "oneOf": [
                {
                  "$ref": "#/definitions/SamplingAlgorithm"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "searchSpace": {
              "description": "[Required] A dictionary containing each parameter and its distribution. The dictionary key is the name of the parameter",
              "oneOf": [
                {
                  "type": "object"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "trial": {
              "description": "[Required] Trial component definition.",
              "oneOf": [
                {
                  "$ref": "#/definitions/TrialComponent"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "objective",
            "samplingAlgorithm",
            "searchSpace",
            "trial",
            "jobType"
          ],
          "type": "object"
        }
      ],
      "properties": {
        "componentId": {
          "description": "ARM resource ID of the component resource.",
          "type": "string"
        },
        "computeId": {
          "description": "ARM resource ID of the compute resource.",
          "type": "string"
        },
        "description": {
          "description": "The asset description text.",
          "type": "string"
        },
        "displayName": {
          "description": "Display name of job.",
          "type": "string"
        },
        "experimentName": {
          "default": "Default",
          "description": "The name of the experiment the job belongs to. If not set, the job is placed in the \"Default\" experiment.",
          "type": "string"
        },
        "identity": {
          "description": "Identity configuration. If set, this should be one of AmlToken, ManagedIdentity, UserIdentity or null.\r\nDefaults to AmlToken if null.",
          "oneOf": [
            {
              "$ref": "#/definitions/IdentityConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "isArchived": {
          "description": "Is the asset archived?",
          "oneOf": [
            {
              "default": false,
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "notificationSetting": {
          "description": "Notification setting for the job",
          "oneOf": [
            {
              "$ref": "#/definitions/NotificationSetting"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The asset property dictionary.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "secretsConfiguration": {
          "description": "Configuration for secrets to be made available during runtime.",
          "oneOf": [
            {
              "additionalProperties": {
                "$ref": "#/definitions/SecretConfiguration"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "services": {
          "description": "List of JobEndpoints.\r\nFor local jobs, a job endpoint will have an endpoint value of FileStreamObject.",
          "oneOf": [
            {
              "additionalProperties": {
                "$ref": "#/definitions/JobService"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Tag dictionary. Tags can be added, removed, and updated.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "JobInput": {
      "description": "Command job definition.",
      "oneOf": [
        {
          "properties": {
            "jobInputType": {
              "enum": [
                "custom_model"
              ],
              "type": "string"
            },
            "mode": {
              "description": "Input Asset Delivery Mode.",
              "oneOf": [
                {
                  "enum": [
                    "ReadOnlyMount",
                    "ReadWriteMount",
                    "Download",
                    "Direct",
                    "EvalMount",
                    "EvalDownload"
                  ],
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "uri": {
              "description": "[Required] Input Asset URI.",
              "oneOf": [
                {
                  "minLength": 1,
                  "pattern": "[a-zA-Z0-9_]",
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "uri",
            "jobInputType"
          ],
          "type": "object"
        },
        {
          "description": "Literal input type.",
          "properties": {
            "jobInputType": {
              "enum": [
                "literal"
              ],
              "type": "string"
            },
            "value": {
              "description": "[Required] Literal value for the input.",
              "oneOf": [
                {
                  "minLength": 1,
                  "pattern": "[a-zA-Z0-9_]",
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "value",
            "jobInputType"
          ],
          "type": "object"
        },
        {
          "properties": {
            "jobInputType": {
              "enum": [
                "mlflow_model"
              ],
              "type": "string"
            },
            "mode": {
              "description": "Input Asset Delivery Mode.",
              "oneOf": [
                {
                  "enum": [
                    "ReadOnlyMount",
                    "ReadWriteMount",
                    "Download",
                    "Direct",
                    "EvalMount",
                    "EvalDownload"
                  ],
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "uri": {
              "description": "[Required] Input Asset URI.",
              "oneOf": [
                {
                  "minLength": 1,
                  "pattern": "[a-zA-Z0-9_]",
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "uri",
            "jobInputType"
          ],
          "type": "object"
        },
        {
          "properties": {
            "jobInputType": {
              "enum": [
                "mltable"
              ],
              "type": "string"
            },
            "mode": {
              "description": "Input Asset Delivery Mode.",
              "oneOf": [
                {
                  "enum": [
                    "ReadOnlyMount",
                    "ReadWriteMount",
                    "Download",
                    "Direct",
                    "EvalMount",
                    "EvalDownload"
                  ],
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "uri": {
              "description": "[Required] Input Asset URI.",
              "oneOf": [
                {
                  "minLength": 1,
                  "pattern": "[a-zA-Z0-9_]",
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "uri",
            "jobInputType"
          ],
          "type": "object"
        },
        {
          "properties": {
            "jobInputType": {
              "enum": [
                "triton_model"
              ],
              "type": "string"
            },
            "mode": {
              "description": "Input Asset Delivery Mode.",
              "oneOf": [
                {
                  "enum": [
                    "ReadOnlyMount",
                    "ReadWriteMount",
                    "Download",
                    "Direct",
                    "EvalMount",
                    "EvalDownload"
                  ],
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "uri": {
              "description": "[Required] Input Asset URI.",
              "oneOf": [
                {
                  "minLength": 1,
                  "pattern": "[a-zA-Z0-9_]",
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "uri",
            "jobInputType"
          ],
          "type": "object"
        },
        {
          "properties": {
            "jobInputType": {
              "enum": [
                "uri_file"
              ],
              "type": "string"
            },
            "mode": {
              "description": "Input Asset Delivery Mode.",
              "oneOf": [
                {
                  "enum": [
                    "ReadOnlyMount",
                    "ReadWriteMount",
                    "Download",
                    "Direct",
                    "EvalMount",
                    "EvalDownload"
                  ],
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "uri": {
              "description": "[Required] Input Asset URI.",
              "oneOf": [
                {
                  "minLength": 1,
                  "pattern": "[a-zA-Z0-9_]",
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "uri",
            "jobInputType"
          ],
          "type": "object"
        },
        {
          "properties": {
            "jobInputType": {
              "enum": [
                "uri_folder"
              ],
              "type": "string"
            },
            "mode": {
              "description": "Input Asset Delivery Mode.",
              "oneOf": [
                {
                  "enum": [
                    "ReadOnlyMount",
                    "ReadWriteMount",
                    "Download",
                    "Direct",
                    "EvalMount",
                    "EvalDownload"
                  ],
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "uri": {
              "description": "[Required] Input Asset URI.",
              "oneOf": [
                {
                  "minLength": 1,
                  "pattern": "[a-zA-Z0-9_]",
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "uri",
            "jobInputType"
          ],
          "type": "object"
        }
      ],
      "properties": {
        "description": {
          "description": "Description for the input.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "JobOutput": {
      "description": "Job output definition container information on where to find job output/logs.",
      "oneOf": [
        {
          "properties": {
            "assetName": {
              "description": "Output Asset Name.",
              "type": "string"
            },
            "assetVersion": {
              "description": "Output Asset Version.",
              "type": "string"
            },
            "autoDeleteSetting": {
              "description": "Auto delete setting of output data asset.",
              "oneOf": [
                {
                  "$ref": "#/definitions/AutoDeleteSetting"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "jobOutputType": {
              "enum": [
                "custom_model"
              ],
              "type": "string"
            },
            "mode": {
              "description": "Output Asset Delivery Mode.",
              "oneOf": [
                {
                  "enum": [
                    "ReadWriteMount",
                    "Upload",
                    "Direct"
                  ],
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "uri": {
              "description": "Output Asset URI.",
              "type": "string"
            }
          },
          "required": [
            "jobOutputType"
          ],
          "type": "object"
        },
        {
          "properties": {
            "assetName": {
              "description": "Output Asset Name.",
              "type": "string"
            },
            "assetVersion": {
              "description": "Output Asset Version.",
              "type": "string"
            },
            "autoDeleteSetting": {
              "description": "Auto delete setting of output data asset.",
              "oneOf": [
                {
                  "$ref": "#/definitions/AutoDeleteSetting"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "jobOutputType": {
              "enum": [
                "mlflow_model"
              ],
              "type": "string"
            },
            "mode": {
              "description": "Output Asset Delivery Mode.",
              "oneOf": [
                {
                  "enum": [
                    "ReadWriteMount",
                    "Upload",
                    "Direct"
                  ],
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "uri": {
              "description": "Output Asset URI.",
              "type": "string"
            }
          },
          "required": [
            "jobOutputType"
          ],
          "type": "object"
        },
        {
          "properties": {
            "assetName": {
              "description": "Output Asset Name.",
              "type": "string"
            },
            "assetVersion": {
              "description": "Output Asset Version.",
              "type": "string"
            },
            "autoDeleteSetting": {
              "description": "Auto delete setting of output data asset.",
              "oneOf": [
                {
                  "$ref": "#/definitions/AutoDeleteSetting"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "jobOutputType": {
              "enum": [
                "mltable"
              ],
              "type": "string"
            },
            "mode": {
              "description": "Output Asset Delivery Mode.",
              "oneOf": [
                {
                  "enum": [
                    "ReadWriteMount",
                    "Upload",
                    "Direct"
                  ],
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "uri": {
              "description": "Output Asset URI.",
              "type": "string"
            }
          },
          "required": [
            "jobOutputType"
          ],
          "type": "object"
        },
        {
          "properties": {
            "assetName": {
              "description": "Output Asset Name.",
              "type": "string"
            },
            "assetVersion": {
              "description": "Output Asset Version.",
              "type": "string"
            },
            "autoDeleteSetting": {
              "description": "Auto delete setting of output data asset.",
              "oneOf": [
                {
                  "$ref": "#/definitions/AutoDeleteSetting"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "jobOutputType": {
              "enum": [
                "triton_model"
              ],
              "type": "string"
            },
            "mode": {
              "description": "Output Asset Delivery Mode.",
              "oneOf": [
                {
                  "enum": [
                    "ReadWriteMount",
                    "Upload",
                    "Direct"
                  ],
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "uri": {
              "description": "Output Asset URI.",
              "type": "string"
            }
          },
          "required": [
            "jobOutputType"
          ],
          "type": "object"
        },
        {
          "properties": {
            "assetName": {
              "description": "Output Asset Name.",
              "type": "string"
            },
            "assetVersion": {
              "description": "Output Asset Version.",
              "type": "string"
            },
            "autoDeleteSetting": {
              "description": "Auto delete setting of output data asset.",
              "oneOf": [
                {
                  "$ref": "#/definitions/AutoDeleteSetting"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "jobOutputType": {
              "enum": [
                "uri_file"
              ],
              "type": "string"
            },
            "mode": {
              "description": "Output Asset Delivery Mode.",
              "oneOf": [
                {
                  "enum": [
                    "ReadWriteMount",
                    "Upload",
                    "Direct"
                  ],
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "uri": {
              "description": "Output Asset URI.",
              "type": "string"
            }
          },
          "required": [
            "jobOutputType"
          ],
          "type": "object"
        },
        {
          "properties": {
            "assetName": {
              "description": "Output Asset Name.",
              "type": "string"
            },
            "assetVersion": {
              "description": "Output Asset Version.",
              "type": "string"
            },
            "autoDeleteSetting": {
              "description": "Auto delete setting of output data asset.",
              "oneOf": [
                {
                  "$ref": "#/definitions/AutoDeleteSetting"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "jobOutputType": {
              "enum": [
                "uri_folder"
              ],
              "type": "string"
            },
            "mode": {
              "description": "Output Asset Delivery Mode.",
              "oneOf": [
                {
                  "enum": [
                    "ReadWriteMount",
                    "Upload",
                    "Direct"
                  ],
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "uri": {
              "description": "Output Asset URI.",
              "type": "string"
            }
          },
          "required": [
            "jobOutputType"
          ],
          "type": "object"
        }
      ],
      "properties": {
        "description": {
          "description": "Description for the output.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "JobResourceConfiguration": {
      "properties": {
        "dockerArgs": {
          "description": "Extra arguments to pass to the Docker run command. This would override any parameters that have already been set by the system, or in this section. This parameter is only supported for Azure ML compute types.",
          "type": "string"
        },
        "instanceCount": {
          "description": "Optional number of instances or nodes used by the compute target.",
          "oneOf": [
            {
              "default": 1,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "instanceType": {
          "description": "Optional type of VM used as supported by the compute target.",
          "type": "string"
        },
        "locations": {
          "description": "Locations where the job can run.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "maxInstanceCount": {
          "description": "Optional max allowed number of instances or nodes to be used by the compute target.\r\nFor use with elastic training, currently supported by PyTorch distribution type only.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Additional properties bag.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "object"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "shmSize": {
          "description": "Size of the docker container's shared memory block. This should be in the format of (number)(unit) where number as to be greater than 0 and the unit can be one of b(bytes), k(kilobytes), m(megabytes), or g(gigabytes).",
          "oneOf": [
            {
              "default": "2g",
              "pattern": "\\d+[bBkKmMgG]",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "JobService": {
      "description": "Job endpoint definition",
      "properties": {
        "endpoint": {
          "description": "Url for endpoint.",
          "type": "string"
        },
        "jobServiceType": {
          "description": "Endpoint type.",
          "type": "string"
        },
        "nodes": {
          "description": "Nodes that user would like to start the service on.\r\nIf Nodes is not set or set to null, the service will only be started on leader node.",
          "oneOf": [
            {
              "$ref": "#/definitions/Nodes"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "port": {
          "description": "Port for endpoint set by user.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Additional properties to set on the endpoint.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "KerberosKeytabSecrets": {
      "properties": {
        "kerberosKeytab": {
          "description": "Kerberos keytab secret.",
          "type": "string"
        },
        "secretsType": {
          "description": "[Required] Credential type used to authentication with storage.",
          "oneOf": [
            {
              "enum": [
                "AccountKey",
                "Certificate",
                "Sas",
                "ServicePrincipal",
                "KerberosPassword",
                "KerberosKeytab"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "secretsType"
      ],
      "type": "object"
    },
    "KerberosPasswordSecrets": {
      "properties": {
        "kerberosPassword": {
          "description": "Kerberos password secret.",
          "type": "string"
        },
        "secretsType": {
          "description": "[Required] Credential type used to authentication with storage.",
          "oneOf": [
            {
              "enum": [
                "AccountKey",
                "Certificate",
                "Sas",
                "ServicePrincipal",
                "KerberosPassword",
                "KerberosKeytab"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "secretsType"
      ],
      "type": "object"
    },
    "KeyVaultProperties": {
      "description": "Customer Key vault properties.",
      "properties": {
        "identityClientId": {
          "description": "Currently, we support only SystemAssigned MSI.\r\nWe need this when we support UserAssignedIdentities",
          "type": "string"
        },
        "keyIdentifier": {
          "description": "KeyVault key identifier to encrypt the data",
          "oneOf": [
            {
              "minLength": 1,
              "pattern": "[a-zA-Z0-9_]",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "keyVaultArmId": {
          "description": "KeyVault Arm Id that contains the data encryption key",
          "oneOf": [
            {
              "minLength": 1,
              "pattern": "[a-zA-Z0-9_]",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "keyIdentifier",
        "keyVaultArmId"
      ],
      "type": "object"
    },
    "KubernetesProperties": {
      "description": "Kubernetes properties",
      "properties": {
        "defaultInstanceType": {
          "description": "Default instance type",
          "type": "string"
        },
        "extensionInstanceReleaseTrain": {
          "description": "Extension instance release train.",
          "type": "string"
        },
        "extensionPrincipalId": {
          "description": "Extension principal-id.",
          "type": "string"
        },
        "instanceTypes": {
          "description": "Instance Type Schema",
          "oneOf": [
            {
              "additionalProperties": {
                "$ref": "#/definitions/InstanceTypeSchema"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "namespace": {
          "default": "default",
          "description": "Compute namespace",
          "type": "string"
        },
        "relayConnectionString": {
          "description": "Relay connection string.",
          "type": "string"
        },
        "serviceBusConnectionString": {
          "description": "ServiceBus connection string.",
          "type": "string"
        },
        "vcName": {
          "description": "VC name.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "LabelCategory": {
      "description": "Label category definition",
      "properties": {
        "classes": {
          "description": "Dictionary of label classes in this category.",
          "oneOf": [
            {
              "additionalProperties": {
                "$ref": "#/definitions/LabelClass"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "displayName": {
          "description": "Display name of the label category.",
          "type": "string"
        },
        "multiSelect": {
          "description": "Indicates whether it is allowed to select multiple classes in this category.",
          "oneOf": [
            {
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "LabelClass": {
      "description": "Label class definition",
      "properties": {
        "displayName": {
          "description": "Display name of the label class.",
          "type": "string"
        },
        "subclasses": {
          "description": "Dictionary of subclasses of the label class.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "object"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "LabelingDataConfiguration": {
      "description": "Labeling data configuration definition",
      "properties": {
        "dataId": {
          "description": "Resource Id of the data asset to perform labeling.",
          "type": "string"
        },
        "incrementalDataRefresh": {
          "description": "Indicates whether to enable incremental data refresh.",
          "oneOf": [
            {
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "LabelingJobInstructions": {
      "description": "Instructions for labeling job",
      "properties": {
        "uri": {
          "description": "The link to a page with detailed labeling instructions for labelers.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "LabelingJobMediaProperties": {
      "description": "Properties of a labeling job",
      "oneOf": [
        {
          "description": "Properties of a labeling job for image data",
          "properties": {
            "annotationType": {
              "description": "Annotation type of image labeling job.",
              "oneOf": [
                {
                  "enum": [
                    "Classification",
                    "BoundingBox",
                    "InstanceSegmentation"
                  ],
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "mediaType": {
              "enum": [
                "Image"
              ],
              "type": "string"
            }
          },
          "required": [
            "mediaType"
          ],
          "type": "object"
        },
        {
          "description": "Properties of a labeling job for text data",
          "properties": {
            "annotationType": {
              "description": "Annotation type of text labeling job.",
              "oneOf": [
                {
                  "enum": [
                    "Classification",
                    "NamedEntityRecognition"
                  ],
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "mediaType": {
              "enum": [
                "Text"
              ],
              "type": "string"
            }
          },
          "required": [
            "mediaType"
          ],
          "type": "object"
        }
      ],
      "properties": {},
      "type": "object"
    },
    "LabelingJobProperties": {
      "description": "Labeling job definition",
      "properties": {
        "componentId": {
          "description": "ARM resource ID of the component resource.",
          "type": "string"
        },
        "computeId": {
          "description": "ARM resource ID of the compute resource.",
          "type": "string"
        },
        "dataConfiguration": {
          "description": "Configuration of data used in the job.",
          "oneOf": [
            {
              "$ref": "#/definitions/LabelingDataConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "description": {
          "description": "The asset description text.",
          "type": "string"
        },
        "displayName": {
          "description": "Display name of job.",
          "type": "string"
        },
        "experimentName": {
          "default": "Default",
          "description": "The name of the experiment the job belongs to. If not set, the job is placed in the \"Default\" experiment.",
          "type": "string"
        },
        "identity": {
          "description": "Identity configuration. If set, this should be one of AmlToken, ManagedIdentity, UserIdentity or null.\r\nDefaults to AmlToken if null.",
          "oneOf": [
            {
              "$ref": "#/definitions/IdentityConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "isArchived": {
          "description": "Is the asset archived?",
          "oneOf": [
            {
              "default": false,
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "jobInstructions": {
          "description": "Labeling instructions of the job.",
          "oneOf": [
            {
              "$ref": "#/definitions/LabelingJobInstructions"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "jobType": {
          "description": "[Required] Specifies the type of job.",
          "oneOf": [
            {
              "enum": [
                "AutoML",
                "Command",
                "Labeling",
                "Sweep",
                "Pipeline",
                "Spark"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "labelCategories": {
          "description": "Label categories of the job.",
          "oneOf": [
            {
              "additionalProperties": {
                "$ref": "#/definitions/LabelCategory"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "labelingJobMediaProperties": {
          "description": "Media type specific properties in the job.",
          "oneOf": [
            {
              "$ref": "#/definitions/LabelingJobMediaProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "mlAssistConfiguration": {
          "description": "Configuration of MLAssist feature in the job.",
          "oneOf": [
            {
              "$ref": "#/definitions/MLAssistConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "notificationSetting": {
          "description": "Notification setting for the job",
          "oneOf": [
            {
              "$ref": "#/definitions/NotificationSetting"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The asset property dictionary.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "secretsConfiguration": {
          "description": "Configuration for secrets to be made available during runtime.",
          "oneOf": [
            {
              "additionalProperties": {
                "$ref": "#/definitions/SecretConfiguration"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "services": {
          "description": "List of JobEndpoints.\r\nFor local jobs, a job endpoint will have an endpoint value of FileStreamObject.",
          "oneOf": [
            {
              "additionalProperties": {
                "$ref": "#/definitions/JobService"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Tag dictionary. Tags can be added, removed, and updated.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "jobType"
      ],
      "type": "object"
    },
    "MLAssistConfiguration": {
      "description": "Labeling MLAssist configuration definition",
      "oneOf": [
        {
          "description": "Labeling MLAssist configuration definition when MLAssist is disabled",
          "properties": {
            "mlAssist": {
              "enum": [
                "Disabled"
              ],
              "type": "string"
            }
          },
          "required": [
            "mlAssist"
          ],
          "type": "object"
        },
        {
          "description": "Labeling MLAssist configuration definition when MLAssist is enabled",
          "properties": {
            "inferencingComputeBinding": {
              "description": "[Required] AML compute binding used in inferencing.",
              "oneOf": [
                {
                  "minLength": 1,
                  "pattern": "[a-zA-Z0-9_]",
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "mlAssist": {
              "enum": [
                "Enabled"
              ],
              "type": "string"
            },
            "trainingComputeBinding": {
              "description": "[Required] AML compute binding used in training.",
              "oneOf": [
                {
                  "minLength": 1,
                  "pattern": "[a-zA-Z0-9_]",
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "inferencingComputeBinding",
            "trainingComputeBinding",
            "mlAssist"
          ],
          "type": "object"
        }
      ],
      "properties": {},
      "type": "object"
    },
    "MLFlowModelJobInput": {
      "properties": {
        "description": {
          "description": "Description for the input.",
          "type": "string"
        },
        "jobInputType": {
          "description": "[Required] Specifies the type of job.",
          "oneOf": [
            {
              "enum": [
                "literal",
                "uri_file",
                "uri_folder",
                "mltable",
                "custom_model",
                "mlflow_model",
                "triton_model"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "mode": {
          "description": "Input Asset Delivery Mode.",
          "oneOf": [
            {
              "enum": [
                "ReadOnlyMount",
                "ReadWriteMount",
                "Download",
                "Direct",
                "EvalMount",
                "EvalDownload"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "uri": {
          "description": "[Required] Input Asset URI.",
          "oneOf": [
            {
              "minLength": 1,
              "pattern": "[a-zA-Z0-9_]",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "uri",
        "jobInputType"
      ],
      "type": "object"
    },
    "MLTableJobInput": {
      "properties": {
        "description": {
          "description": "Description for the input.",
          "type": "string"
        },
        "jobInputType": {
          "description": "[Required] Specifies the type of job.",
          "oneOf": [
            {
              "enum": [
                "literal",
                "uri_file",
                "uri_folder",
                "mltable",
                "custom_model",
                "mlflow_model",
                "triton_model"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "mode": {
          "description": "Input Asset Delivery Mode.",
          "oneOf": [
            {
              "enum": [
                "ReadOnlyMount",
                "ReadWriteMount",
                "Download",
                "Direct",
                "EvalMount",
                "EvalDownload"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "uri": {
          "description": "[Required] Input Asset URI.",
          "oneOf": [
            {
              "minLength": 1,
              "pattern": "[a-zA-Z0-9_]",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "uri",
        "jobInputType"
      ],
      "type": "object"
    },
    "ManagedNetworkProvisionStatus": {
      "description": "Status of the Provisioning for the managed network of a machine learning workspace.",
      "properties": {
        "sparkReady": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "status": {
          "description": "Status for the managed network of a machine learning workspace.",
          "oneOf": [
            {
              "enum": [
                "Inactive",
                "Active"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ManagedNetworkSettings": {
      "description": "Managed Network settings for a machine learning workspace.",
      "properties": {
        "isolationMode": {
          "description": "Isolation mode for the managed network of a machine learning workspace.",
          "oneOf": [
            {
              "enum": [
                "Disabled",
                "AllowInternetOutbound",
                "AllowOnlyApprovedOutbound"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "outboundRules": {
          "description": "Dictionary of <OutboundRule>",
          "oneOf": [
            {
              "additionalProperties": {
                "$ref": "#/definitions/OutboundRule"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "status": {
          "description": "Status of the Provisioning for the managed network of a machine learning workspace.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedNetworkProvisionStatus"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ManagedServiceIdentity": {
      "description": "Managed service identity (system assigned and/or user assigned identities)",
      "properties": {
        "type": {
          "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
          "oneOf": [
            {
              "enum": [
                "None",
                "SystemAssigned",
                "UserAssigned",
                "SystemAssigned,UserAssigned"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "userAssignedIdentities": {
          "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
          "oneOf": [
            {
              "additionalProperties": {
                "$ref": "#/definitions/UserAssignedIdentity"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "type"
      ],
      "type": "object"
    },
    "MaterializationComputeResource": {
      "description": "Dto object representing compute resource",
      "properties": {
        "instanceType": {
          "description": "Specifies the instance type",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MaterializationSettings": {
      "properties": {
        "notification": {
          "description": "Specifies the notification details",
          "oneOf": [
            {
              "$ref": "#/definitions/NotificationSetting"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resource": {
          "description": "Specifies the compute resource settings",
          "oneOf": [
            {
              "$ref": "#/definitions/MaterializationComputeResource"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "schedule": {
          "description": "Specifies the schedule details",
          "oneOf": [
            {
              "$ref": "#/definitions/RecurrenceTrigger"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "sparkConfiguration": {
          "description": "Specifies the spark compute settings",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "storeType": {
          "description": "Specifies the stores to which materialization should happen",
          "oneOf": [
            {
              "enum": [
                "None",
                "Online",
                "Offline",
                "OnlineAndOffline"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ModelContainerProperties": {
      "properties": {
        "description": {
          "description": "The asset description text.",
          "type": "string"
        },
        "isArchived": {
          "description": "Is the asset archived?",
          "oneOf": [
            {
              "default": false,
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The asset property dictionary.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Tag dictionary. Tags can be added, removed, and updated.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ModelPerformanceMetricThresholdBase": {
      "oneOf": [
        {
          "properties": {
            "metric": {
              "description": "[Required] The classification model performance to calculate.",
              "oneOf": [
                {
                  "enum": [
                    "Accuracy",
                    "Precision",
                    "Recall"
                  ],
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "modelType": {
              "enum": [
                "Classification"
              ],
              "type": "string"
            }
          },
          "required": [
            "metric",
            "modelType"
          ],
          "type": "object"
        },
        {
          "properties": {
            "metric": {
              "description": "[Required] The regression model performance metric to calculate.",
              "oneOf": [
                {
                  "enum": [
                    "MeanAbsoluteError",
                    "RootMeanSquaredError",
                    "MeanSquaredError"
                  ],
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "modelType": {
              "enum": [
                "Regression"
              ],
              "type": "string"
            }
          },
          "required": [
            "metric",
            "modelType"
          ],
          "type": "object"
        }
      ],
      "properties": {
        "threshold": {
          "description": "The threshold value. If null, a default value will be set depending on the selected metric.",
          "oneOf": [
            {
              "$ref": "#/definitions/MonitoringThreshold"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ModelVersionProperties": {
      "description": "Model asset version details.",
      "properties": {
        "autoDeleteSetting": {
          "description": "Specifies the lifecycle setting of managed data asset.",
          "oneOf": [
            {
              "$ref": "#/definitions/AutoDeleteSetting"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "description": {
          "description": "The asset description text.",
          "type": "string"
        },
        "flavors": {
          "description": "Mapping of model flavors to their properties.",
          "oneOf": [
            {
              "additionalProperties": {
                "$ref": "#/definitions/FlavorData"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "intellectualProperty": {
          "description": "Intellectual Property details. Used if model is an Intellectual Property.",
          "oneOf": [
            {
              "$ref": "#/definitions/IntellectualProperty"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "isAnonymous": {
          "description": "If the name version are system generated (anonymous registration). For types where Stage is defined, when Stage is provided it will be used to populate IsAnonymous",
          "oneOf": [
            {
              "default": false,
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "isArchived": {
          "description": "Is the asset archived? For types where Stage is defined, when Stage is provided it will be used to populate IsArchived",
          "oneOf": [
            {
              "default": false,
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "jobName": {
          "description": "Name of the training job which produced this model",
          "type": "string"
        },
        "modelType": {
          "description": "The storage format for this entity. Used for NCD.",
          "type": "string"
        },
        "modelUri": {
          "description": "The URI path to the model contents.",
          "type": "string"
        },
        "properties": {
          "description": "The asset property dictionary.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "stage": {
          "description": "Stage in the model lifecycle assigned to this model",
          "type": "string"
        },
        "tags": {
          "description": "Tag dictionary. Tags can be added, removed, and updated.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "MonitorComputeConfigurationBase": {
      "description": "Monitor compute configuration base definition.",
      "oneOf": [
        {
          "description": "Monitor serverless spark compute definition.",
          "properties": {
            "computeIdentity": {
              "description": "[Required] The identity scheme leveraged to by the spark jobs running on serverless Spark.",
              "oneOf": [
                {
                  "$ref": "#/definitions/MonitorComputeIdentityBase"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "computeType": {
              "enum": [
                "ServerlessSpark"
              ],
              "type": "string"
            },
            "instanceType": {
              "description": "[Required] The instance type running the Spark job.",
              "oneOf": [
                {
                  "minLength": 1,
                  "pattern": "[a-zA-Z0-9_]",
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "runtimeVersion": {
              "description": "[Required] The Spark runtime version.",
              "oneOf": [
                {
                  "minLength": 1,
                  "pattern": "[a-zA-Z0-9_]",
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "computeIdentity",
            "instanceType",
            "runtimeVersion",
            "computeType"
          ],
          "type": "object"
        }
      ],
      "properties": {},
      "type": "object"
    },
    "MonitorComputeIdentityBase": {
      "description": "Monitor compute identity base definition.",
      "oneOf": [
        {
          "description": "AML token compute identity definition.",
          "properties": {
            "computeIdentityType": {
              "enum": [
                "AmlToken"
              ],
              "type": "string"
            }
          },
          "required": [
            "computeIdentityType"
          ],
          "type": "object"
        },
        {
          "description": "Managed compute identity definition.",
          "properties": {
            "computeIdentityType": {
              "enum": [
                "ManagedIdentity"
              ],
              "type": "string"
            },
            "identity": {
              "description": "Managed service identity (system assigned and/or user assigned identities)",
              "oneOf": [
                {
                  "$ref": "#/definitions/ManagedServiceIdentity"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "computeIdentityType"
          ],
          "type": "object"
        }
      ],
      "properties": {},
      "type": "object"
    },
    "MonitorDefinition": {
      "properties": {
        "alertNotificationSetting": {
          "description": "The monitor's notification settings.",
          "oneOf": [
            {
              "$ref": "#/definitions/MonitoringAlertNotificationSettingsBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "computeConfiguration": {
          "description": "[Required] The ARM resource ID of the compute resource to run the monitoring job on.",
          "oneOf": [
            {
              "$ref": "#/definitions/MonitorComputeConfigurationBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "monitoringTarget": {
          "description": "The ARM resource ID of either the model or deployment targeted by this monitor.",
          "oneOf": [
            {
              "$ref": "#/definitions/MonitoringTarget"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "signals": {
          "description": "[Required] The signals to monitor.",
          "oneOf": [
            {
              "additionalProperties": {
                "$ref": "#/definitions/MonitoringSignalBase"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "computeConfiguration",
        "signals"
      ],
      "type": "object"
    },
    "MonitoringAlertNotificationSettingsBase": {
      "oneOf": [
        {
          "properties": {
            "alertNotificationType": {
              "enum": [
                "AzureMonitor"
              ],
              "type": "string"
            }
          },
          "required": [
            "alertNotificationType"
          ],
          "type": "object"
        },
        {
          "properties": {
            "alertNotificationType": {
              "enum": [
                "Email"
              ],
              "type": "string"
            },
            "emailNotificationSetting": {
              "description": "Configuration for notification.",
              "oneOf": [
                {
                  "$ref": "#/definitions/NotificationSetting"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "alertNotificationType"
          ],
          "type": "object"
        }
      ],
      "properties": {},
      "type": "object"
    },
    "MonitoringDataSegment": {
      "properties": {
        "feature": {
          "description": "The feature to segment the data on.",
          "type": "string"
        },
        "values": {
          "description": "Filters for only the specified values of the given segmented feature.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "MonitoringFeatureFilterBase": {
      "oneOf": [
        {
          "properties": {
            "filterType": {
              "enum": [
                "AllFeatures"
              ],
              "type": "string"
            }
          },
          "required": [
            "filterType"
          ],
          "type": "object"
        },
        {
          "properties": {
            "features": {
              "description": "[Required] The list of features to include.",
              "oneOf": [
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "filterType": {
              "enum": [
                "FeatureSubset"
              ],
              "type": "string"
            }
          },
          "required": [
            "features",
            "filterType"
          ],
          "type": "object"
        },
        {
          "properties": {
            "filterType": {
              "enum": [
                "TopNByAttribution"
              ],
              "type": "string"
            },
            "top": {
              "description": "The number of top features to include.",
              "oneOf": [
                {
                  "default": 10,
                  "type": "integer"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "filterType"
          ],
          "type": "object"
        }
      ],
      "properties": {},
      "type": "object"
    },
    "MonitoringInputDataBase": {
      "description": "Monitoring input data base definition.",
      "oneOf": [
        {
          "description": "Fixed input data definition.",
          "properties": {
            "inputDataType": {
              "enum": [
                "Fixed"
              ],
              "type": "string"
            }
          },
          "required": [
            "inputDataType"
          ],
          "type": "object"
        },
        {
          "description": "Static input data definition.",
          "properties": {
            "inputDataType": {
              "enum": [
                "Static"
              ],
              "type": "string"
            },
            "preprocessingComponentId": {
              "description": "The ARM resource ID of the component resource used to preprocess the data.",
              "type": "string"
            },
            "windowEnd": {
              "description": "[Required] The end date of the data window.",
              "format": "date-time",
              "type": "string"
            },
            "windowStart": {
              "description": "[Required] The start date of the data window.",
              "format": "date-time",
              "type": "string"
            }
          },
          "required": [
            "windowEnd",
            "windowStart",
            "inputDataType"
          ],
          "type": "object"
        },
        {
          "description": "Trailing input data definition.",
          "properties": {
            "inputDataType": {
              "enum": [
                "Trailing"
              ],
              "type": "string"
            },
            "preprocessingComponentId": {
              "description": "The ARM resource ID of the component resource used to preprocess the data.",
              "type": "string"
            },
            "windowOffset": {
              "description": "[Required] The time offset between the end of the data window and the monitor's current run time.",
              "type": "string"
            },
            "windowSize": {
              "description": "[Required] The size of the trailing data window.",
              "type": "string"
            }
          },
          "required": [
            "windowOffset",
            "windowSize",
            "inputDataType"
          ],
          "type": "object"
        }
      ],
      "properties": {
        "columns": {
          "description": "Mapping of column names to special uses.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "dataContext": {
          "description": "The context metadata of the data source.",
          "type": "string"
        },
        "jobInputType": {
          "description": "[Required] Specifies the type of job.",
          "oneOf": [
            {
              "enum": [
                "literal",
                "uri_file",
                "uri_folder",
                "mltable",
                "custom_model",
                "mlflow_model",
                "triton_model"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "uri": {
          "description": "[Required] Input Asset URI.",
          "oneOf": [
            {
              "minLength": 1,
              "pattern": "[a-zA-Z0-9_]",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "jobInputType",
        "uri"
      ],
      "type": "object"
    },
    "MonitoringSignalBase": {
      "oneOf": [
        {
          "properties": {
            "componentId": {
              "description": "[Required] ARM resource ID of the component resource used to calculate the custom metrics.",
              "oneOf": [
                {
                  "minLength": 1,
                  "pattern": "[a-zA-Z0-9_]",
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "inputAssets": {
              "description": "Monitoring assets to take as input. Key is the component input port name, value is the data asset.",
              "oneOf": [
                {
                  "additionalProperties": {
                    "$ref": "#/definitions/MonitoringInputDataBase"
                  },
                  "properties": {},
                  "type": "object"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "inputs": {
              "description": "Extra component parameters to take as input. Key is the component literal input port name, value is the parameter value.",
              "oneOf": [
                {
                  "additionalProperties": {
                    "$ref": "#/definitions/JobInput"
                  },
                  "properties": {},
                  "type": "object"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "metricThresholds": {
              "description": "[Required] A list of metrics to calculate and their associated thresholds.",
              "oneOf": [
                {
                  "items": {
                    "$ref": "#/definitions/CustomMetricThreshold"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "signalType": {
              "enum": [
                "Custom"
              ],
              "type": "string"
            },
            "workspaceConnection": {
              "description": "[Required] A list of metrics to calculate and their associated thresholds.",
              "oneOf": [
                {
                  "$ref": "#/definitions/MonitoringWorkspaceConnection"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "componentId",
            "metricThresholds",
            "workspaceConnection",
            "signalType"
          ],
          "type": "object"
        },
        {
          "properties": {
            "dataSegment": {
              "description": "The data segment used for scoping on a subset of the data population.",
              "oneOf": [
                {
                  "$ref": "#/definitions/MonitoringDataSegment"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "featureDataTypeOverride": {
              "description": "A dictionary that maps feature names to their respective data types.",
              "oneOf": [
                {
                  "additionalProperties": {
                    "enum": [
                      "Numerical",
                      "Categorical"
                    ],
                    "type": "string"
                  },
                  "properties": {},
                  "type": "object"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "features": {
              "description": "The feature filter which identifies which feature to calculate drift over.",
              "oneOf": [
                {
                  "$ref": "#/definitions/MonitoringFeatureFilterBase"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "metricThresholds": {
              "description": "[Required] A list of metrics to calculate and their associated thresholds.",
              "oneOf": [
                {
                  "items": {
                    "$ref": "#/definitions/DataDriftMetricThresholdBase"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "productionData": {
              "description": "[Required] The data which drift will be calculated for.",
              "oneOf": [
                {
                  "$ref": "#/definitions/MonitoringInputDataBase"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "referenceData": {
              "description": "[Required] The data to calculate drift against.",
              "oneOf": [
                {
                  "$ref": "#/definitions/MonitoringInputDataBase"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "signalType": {
              "enum": [
                "DataDrift"
              ],
              "type": "string"
            }
          },
          "required": [
            "metricThresholds",
            "productionData",
            "referenceData",
            "signalType"
          ],
          "type": "object"
        },
        {
          "properties": {
            "featureDataTypeOverride": {
              "description": "A dictionary that maps feature names to their respective data types.",
              "oneOf": [
                {
                  "additionalProperties": {
                    "enum": [
                      "Numerical",
                      "Categorical"
                    ],
                    "type": "string"
                  },
                  "properties": {},
                  "type": "object"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "features": {
              "description": "The features to calculate drift over.",
              "oneOf": [
                {
                  "$ref": "#/definitions/MonitoringFeatureFilterBase"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "metricThresholds": {
              "description": "[Required] A list of metrics to calculate and their associated thresholds.",
              "oneOf": [
                {
                  "items": {
                    "$ref": "#/definitions/DataQualityMetricThresholdBase"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "productionData": {
              "description": "[Required] The data produced by the production service which drift will be calculated for.",
              "oneOf": [
                {
                  "$ref": "#/definitions/MonitoringInputDataBase"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "referenceData": {
              "description": "[Required] The data to calculate drift against.",
              "oneOf": [
                {
                  "$ref": "#/definitions/MonitoringInputDataBase"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "signalType": {
              "enum": [
                "DataQuality"
              ],
              "type": "string"
            }
          },
          "required": [
            "metricThresholds",
            "productionData",
            "referenceData",
            "signalType"
          ],
          "type": "object"
        },
        {
          "properties": {
            "metricThreshold": {
              "description": "[Required] A list of metrics to calculate and their associated thresholds.",
              "oneOf": [
                {
                  "$ref": "#/definitions/FeatureAttributionMetricThreshold"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "productionData": {
              "description": "[Required] The data which drift will be calculated for.",
              "oneOf": [
                {
                  "items": {
                    "$ref": "#/definitions/MonitoringInputDataBase"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "referenceData": {
              "description": "[Required] The data to calculate drift against.",
              "oneOf": [
                {
                  "$ref": "#/definitions/MonitoringInputDataBase"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "signalType": {
              "enum": [
                "FeatureAttributionDrift"
              ],
              "type": "string"
            }
          },
          "required": [
            "metricThreshold",
            "productionData",
            "referenceData",
            "signalType"
          ],
          "type": "object"
        },
        {
          "description": "Generation safety quality monitoring signal definition.",
          "properties": {
            "metricThresholds": {
              "description": "[Required] Gets or sets the metrics to calculate and the corresponding thresholds.",
              "oneOf": [
                {
                  "items": {
                    "$ref": "#/definitions/GenerationSafetyQualityMetricThreshold"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "productionData": {
              "description": "Gets or sets the target data for computing metrics.",
              "oneOf": [
                {
                  "items": {
                    "$ref": "#/definitions/MonitoringInputDataBase"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "samplingRate": {
              "description": "[Required] The sample rate of the target data, should be greater than 0 and at most 1.",
              "oneOf": [
                {
                  "type": "number"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "signalType": {
              "enum": [
                "GenerationSafetyQuality"
              ],
              "type": "string"
            },
            "workspaceConnectionId": {
              "description": "Gets or sets the workspace connection ID used to connect to the content generation endpoint.",
              "type": "string"
            }
          },
          "required": [
            "metricThresholds",
            "samplingRate",
            "signalType"
          ],
          "type": "object"
        },
        {
          "description": "Generation token statistics signal definition.",
          "properties": {
            "metricThresholds": {
              "description": "[Required] Gets or sets the metrics to calculate and the corresponding thresholds.",
              "oneOf": [
                {
                  "items": {
                    "$ref": "#/definitions/GenerationTokenStatisticsMetricThreshold"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "productionData": {
              "description": "Gets or sets the target data for computing metrics.",
              "oneOf": [
                {
                  "$ref": "#/definitions/MonitoringInputDataBase"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "samplingRate": {
              "description": "[Required] The sample rate of the target data, should be greater than 0 and at most 1.",
              "oneOf": [
                {
                  "type": "number"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "signalType": {
              "enum": [
                "GenerationTokenStatistics"
              ],
              "type": "string"
            }
          },
          "required": [
            "metricThresholds",
            "samplingRate",
            "signalType"
          ],
          "type": "object"
        },
        {
          "description": "Model performance signal definition.",
          "properties": {
            "dataSegment": {
              "description": "The data segment.",
              "oneOf": [
                {
                  "$ref": "#/definitions/MonitoringDataSegment"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "metricThreshold": {
              "description": "[Required] A list of metrics to calculate and their associated thresholds.",
              "oneOf": [
                {
                  "$ref": "#/definitions/ModelPerformanceMetricThresholdBase"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "productionData": {
              "description": "[Required] The data produced by the production service which drift will be calculated for.",
              "oneOf": [
                {
                  "items": {
                    "$ref": "#/definitions/MonitoringInputDataBase"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "referenceData": {
              "description": "[Required] The data to calculate drift against.",
              "oneOf": [
                {
                  "$ref": "#/definitions/MonitoringInputDataBase"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "signalType": {
              "enum": [
                "ModelPerformance"
              ],
              "type": "string"
            }
          },
          "required": [
            "metricThreshold",
            "productionData",
            "referenceData",
            "signalType"
          ],
          "type": "object"
        },
        {
          "properties": {
            "metricThresholds": {
              "description": "[Required] A list of metrics to calculate and their associated thresholds.",
              "oneOf": [
                {
                  "items": {
                    "$ref": "#/definitions/PredictionDriftMetricThresholdBase"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "modelType": {
              "description": "[Required] The type of the model monitored.",
              "oneOf": [
                {
                  "enum": [
                    "Classification",
                    "Regression"
                  ],
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "productionData": {
              "description": "[Required] The data which drift will be calculated for.",
              "oneOf": [
                {
                  "$ref": "#/definitions/MonitoringInputDataBase"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "referenceData": {
              "description": "[Required] The data to calculate drift against.",
              "oneOf": [
                {
                  "$ref": "#/definitions/MonitoringInputDataBase"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "signalType": {
              "enum": [
                "PredictionDrift"
              ],
              "type": "string"
            }
          },
          "required": [
            "metricThresholds",
            "modelType",
            "productionData",
            "referenceData",
            "signalType"
          ],
          "type": "object"
        }
      ],
      "properties": {
        "mode": {
          "description": "The current notification mode for this signal.",
          "oneOf": [
            {
              "enum": [
                "Disabled",
                "Enabled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Property dictionary. Properties can be added, but not removed or altered.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "MonitoringTarget": {
      "description": "Monitoring target definition.",
      "properties": {
        "deploymentId": {
          "description": "The ARM resource ID of either the deployment targeted by this monitor.",
          "type": "string"
        },
        "modelId": {
          "description": "The ARM resource ID of either the model targeted by this monitor.",
          "type": "string"
        },
        "taskType": {
          "description": "[Required] The machine learning task type of the model.",
          "oneOf": [
            {
              "enum": [
                "Classification",
                "Regression",
                "QuestionAnswering"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "taskType"
      ],
      "type": "object"
    },
    "MonitoringThreshold": {
      "properties": {
        "value": {
          "description": "The threshold value. If null, the set default is dependent on the metric type.",
          "oneOf": [
            {
              "type": "number"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "MonitoringWorkspaceConnection": {
      "description": "Monitoring workspace connection definition.",
      "properties": {
        "environmentVariables": {
          "description": "The properties of a workspace service connection to store as environment variables in the submitted jobs.\r\nKey is workspace connection property path, name is environment variable key.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "secrets": {
          "description": "The properties of a workspace service connection to store as secrets in the submitted jobs.\r\nKey is workspace connection property path, name is secret key.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "NCrossValidations": {
      "description": "N-Cross validations value.",
      "oneOf": [
        {
          "description": "N-Cross validations determined automatically.",
          "properties": {
            "mode": {
              "enum": [
                "Auto"
              ],
              "type": "string"
            }
          },
          "required": [
            "mode"
          ],
          "type": "object"
        },
        {
          "description": "N-Cross validations are specified by user.",
          "properties": {
            "mode": {
              "enum": [
                "Custom"
              ],
              "type": "string"
            },
            "value": {
              "description": "[Required] N-Cross validations value.",
              "oneOf": [
                {
                  "type": "integer"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "value",
            "mode"
          ],
          "type": "object"
        }
      ],
      "properties": {},
      "type": "object"
    },
    "NlpFixedParameters": {
      "description": "Fixed training parameters that won't be swept over during AutoML NLP training.",
      "properties": {
        "gradientAccumulationSteps": {
          "description": "Number of steps to accumulate gradients over before running a backward pass.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "learningRate": {
          "description": "The learning rate for the training procedure.",
          "oneOf": [
            {
              "type": "number"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "learningRateScheduler": {
          "description": "The type of learning rate schedule to use during the training procedure.",
          "oneOf": [
            {
              "enum": [
                "None",
                "Linear",
                "Cosine",
                "CosineWithRestarts",
                "Polynomial",
                "Constant",
                "ConstantWithWarmup"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "modelName": {
          "description": "The name of the model to train.",
          "type": "string"
        },
        "numberOfEpochs": {
          "description": "Number of training epochs.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "trainingBatchSize": {
          "description": "The batch size for the training procedure.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "validationBatchSize": {
          "description": "The batch size to be used during evaluation.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "warmupRatio": {
          "description": "The warmup ratio, used alongside LrSchedulerType.",
          "oneOf": [
            {
              "type": "number"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "weightDecay": {
          "description": "The weight decay for the training procedure.",
          "oneOf": [
            {
              "type": "number"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "NlpParameterSubspace": {
      "description": "Stringified search spaces for each parameter. See below examples.",
      "properties": {
        "gradientAccumulationSteps": {
          "description": "Number of steps to accumulate gradients over before running a backward pass.",
          "type": "string"
        },
        "learningRate": {
          "description": "The learning rate for the training procedure.",
          "type": "string"
        },
        "learningRateScheduler": {
          "description": "The type of learning rate schedule to use during the training procedure.",
          "type": "string"
        },
        "modelName": {
          "description": "The name of the model to train.",
          "type": "string"
        },
        "numberOfEpochs": {
          "description": "Number of training epochs.",
          "type": "string"
        },
        "trainingBatchSize": {
          "description": "The batch size for the training procedure.",
          "type": "string"
        },
        "validationBatchSize": {
          "description": "The batch size to be used during evaluation.",
          "type": "string"
        },
        "warmupRatio": {
          "description": "The warmup ratio, used alongside LrSchedulerType.",
          "type": "string"
        },
        "weightDecay": {
          "description": "The weight decay for the training procedure.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "NlpSweepSettings": {
      "description": "Model sweeping and hyperparameter tuning related settings.",
      "properties": {
        "earlyTermination": {
          "description": "Type of early termination policy for the sweeping job.",
          "oneOf": [
            {
              "$ref": "#/definitions/EarlyTerminationPolicy"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "samplingAlgorithm": {
          "description": "[Required] Type of sampling algorithm.",
          "oneOf": [
            {
              "enum": [
                "Grid",
                "Random",
                "Bayesian"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "samplingAlgorithm"
      ],
      "type": "object"
    },
    "NlpVerticalFeaturizationSettings": {
      "properties": {
        "datasetLanguage": {
          "description": "Dataset language, useful for the text data.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "NlpVerticalLimitSettings": {
      "description": "Job execution constraints.",
      "properties": {
        "maxConcurrentTrials": {
          "description": "Maximum Concurrent AutoML iterations.",
          "oneOf": [
            {
              "default": 1,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "maxNodes": {
          "description": "Maximum nodes to use for the experiment.",
          "oneOf": [
            {
              "default": 1,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "maxTrials": {
          "description": "Number of AutoML iterations.",
          "oneOf": [
            {
              "default": 1,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "timeout": {
          "default": "P7D",
          "description": "AutoML job timeout.",
          "type": "string"
        },
        "trialTimeout": {
          "description": "Timeout for individual HD trials.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Nodes": {
      "description": "Abstract Nodes definition",
      "oneOf": [
        {
          "description": "All nodes means the service will be running on all of the nodes of the job",
          "properties": {
            "nodesValueType": {
              "enum": [
                "All"
              ],
              "type": "string"
            }
          },
          "required": [
            "nodesValueType"
          ],
          "type": "object"
        }
      ],
      "properties": {},
      "type": "object"
    },
    "NotificationSetting": {
      "description": "Configuration for notification.",
      "properties": {
        "emailOn": {
          "description": "Send email notification to user on specified notification type",
          "oneOf": [
            {
              "items": {
                "enum": [
                  "JobCompleted",
                  "JobFailed",
                  "JobCancelled"
                ],
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "emails": {
          "description": "This is the email recipient list which has a limitation of 499 characters in total concat with comma separator",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "webhooks": {
          "description": "Send webhook callback to a service. Key is a user-provided name for the webhook.",
          "oneOf": [
            {
              "additionalProperties": {
                "$ref": "#/definitions/Webhook"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "Objective": {
      "description": "Optimization objective.",
      "properties": {
        "goal": {
          "description": "[Required] Defines supported metric goals for hyperparameter tuning",
          "oneOf": [
            {
              "enum": [
                "Minimize",
                "Maximize"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "primaryMetric": {
          "description": "[Required] Name of the metric to optimize.",
          "oneOf": [
            {
              "minLength": 1,
              "pattern": "[a-zA-Z0-9_]",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "goal",
        "primaryMetric"
      ],
      "type": "object"
    },
    "OneLakeArtifact": {
      "description": "OneLake artifact (data source) configuration.",
      "oneOf": [
        {
          "properties": {
            "artifactType": {
              "enum": [
                "LakeHouse"
              ],
              "type": "string"
            }
          },
          "required": [
            "artifactType"
          ],
          "type": "object"
        }
      ],
      "properties": {
        "artifactName": {
          "description": "[Required] OneLake artifact name",
          "oneOf": [
            {
              "minLength": 1,
              "pattern": "[a-zA-Z0-9_]",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "artifactName"
      ],
      "type": "object"
    },
    "OnlineDeploymentProperties": {
      "oneOf": [
        {
          "description": "Properties specific to a KubernetesOnlineDeployment.",
          "properties": {
            "containerResourceRequirements": {
              "description": "The resource requirements for the container (cpu and memory).",
              "oneOf": [
                {
                  "$ref": "#/definitions/ContainerResourceRequirements"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "endpointComputeType": {
              "enum": [
                "Kubernetes"
              ],
              "type": "string"
            }
          },
          "required": [
            "endpointComputeType"
          ],
          "type": "object"
        },
        {
          "description": "Properties specific to a ManagedOnlineDeployment.",
          "properties": {
            "endpointComputeType": {
              "enum": [
                "Managed"
              ],
              "type": "string"
            }
          },
          "required": [
            "endpointComputeType"
          ],
          "type": "object"
        }
      ],
      "properties": {
        "appInsightsEnabled": {
          "description": "If true, enables Application Insights logging.",
          "oneOf": [
            {
              "default": false,
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "codeConfiguration": {
          "description": "Code configuration for the endpoint deployment.",
          "oneOf": [
            {
              "$ref": "#/definitions/CodeConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "dataCollector": {
          "description": "The mdc configuration, we disable mdc when it's null.",
          "oneOf": [
            {
              "$ref": "#/definitions/DataCollector"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "description": {
          "description": "Description of the endpoint deployment.",
          "type": "string"
        },
        "egressPublicNetworkAccess": {
          "description": "If Enabled, allow egress public network access. If Disabled, this will create secure egress. Default: Enabled.",
          "oneOf": [
            {
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "environmentId": {
          "description": "ARM resource ID of the environment specification for the endpoint deployment.",
          "type": "string"
        },
        "environmentVariables": {
          "description": "Environment variables configuration for the deployment.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "instanceType": {
          "description": "Compute instance type.",
          "type": "string"
        },
        "livenessProbe": {
          "description": "Liveness probe monitors the health of the container regularly.",
          "oneOf": [
            {
              "$ref": "#/definitions/ProbeSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "model": {
          "description": "The URI path to the model.",
          "type": "string"
        },
        "modelMountPath": {
          "description": "The path to mount the model in custom container.",
          "type": "string"
        },
        "properties": {
          "description": "Property dictionary. Properties can be added, but not removed or altered.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "readinessProbe": {
          "description": "Readiness probe validates if the container is ready to serve traffic. The properties and defaults are the same as liveness probe.",
          "oneOf": [
            {
              "$ref": "#/definitions/ProbeSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "requestSettings": {
          "description": "Request settings for the deployment.",
          "oneOf": [
            {
              "$ref": "#/definitions/OnlineRequestSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "scaleSettings": {
          "description": "Scale settings for the deployment.\r\nIf it is null or not provided,\r\nit defaults to TargetUtilizationScaleSettings for KubernetesOnlineDeployment\r\nand to DefaultScaleSettings for ManagedOnlineDeployment.",
          "oneOf": [
            {
              "$ref": "#/definitions/OnlineScaleSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "OnlineEndpointProperties": {
      "description": "Online endpoint configuration",
      "properties": {
        "authMode": {
          "description": "[Required] Use 'Key' for key based authentication and 'AMLToken' for Azure Machine Learning token-based authentication. 'Key' doesn't expire but 'AMLToken' does.",
          "oneOf": [
            {
              "enum": [
                "AMLToken",
                "Key",
                "AADToken"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "compute": {
          "description": "ARM resource ID of the compute if it exists.\r\noptional",
          "type": "string"
        },
        "description": {
          "description": "Description of the inference endpoint.",
          "type": "string"
        },
        "keys": {
          "description": "EndpointAuthKeys to set initially on an Endpoint.\r\nThis property will always be returned as null. AuthKey values must be retrieved using the ListKeys API.",
          "oneOf": [
            {
              "$ref": "#/definitions/EndpointAuthKeys"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "mirrorTraffic": {
          "description": "Percentage of traffic to be mirrored to each deployment without using returned scoring. Traffic values need to sum to utmost 50.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "integer"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Property dictionary. Properties can be added, but not removed or altered.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "publicNetworkAccess": {
          "description": "Set to \"Enabled\" for endpoints that should allow public access when Private Link is enabled.",
          "oneOf": [
            {
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "traffic": {
          "description": "Percentage of traffic from endpoint to divert to each deployment. Traffic values need to sum to 100.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "integer"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "authMode"
      ],
      "type": "object"
    },
    "OnlineRequestSettings": {
      "description": "Online deployment scoring requests configuration.",
      "properties": {
        "maxConcurrentRequestsPerInstance": {
          "description": "The number of maximum concurrent requests per node allowed per deployment. Defaults to 1.",
          "oneOf": [
            {
              "default": 1,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "maxQueueWait": {
          "default": "PT0.5S",
          "description": "The maximum amount of time a request will stay in the queue in ISO 8601 format.\r\nDefaults to 500ms.",
          "type": "string"
        },
        "requestTimeout": {
          "default": "PT5S",
          "description": "The scoring timeout in ISO 8601 format.\r\nDefaults to 5000ms.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "OnlineScaleSettings": {
      "description": "Online deployment scaling configuration.",
      "oneOf": [
        {
          "properties": {
            "scaleType": {
              "enum": [
                "Default"
              ],
              "type": "string"
            }
          },
          "required": [
            "scaleType"
          ],
          "type": "object"
        },
        {
          "properties": {
            "maxInstances": {
              "description": "The maximum number of instances that the deployment can scale to. The quota will be reserved for max_instances.",
              "oneOf": [
                {
                  "default": 1,
                  "type": "integer"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "minInstances": {
              "description": "The minimum number of instances to always be present.",
              "oneOf": [
                {
                  "default": 1,
                  "type": "integer"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "pollingInterval": {
              "default": "PT1S",
              "description": "The polling interval in ISO 8691 format. Only supports duration with precision as low as Seconds.",
              "type": "string"
            },
            "scaleType": {
              "enum": [
                "TargetUtilization"
              ],
              "type": "string"
            },
            "targetUtilizationPercentage": {
              "description": "Target CPU usage for the autoscaler.",
              "oneOf": [
                {
                  "default": 70,
                  "type": "integer"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "scaleType"
          ],
          "type": "object"
        }
      ],
      "properties": {},
      "type": "object"
    },
    "OutboundRule": {
      "description": "Outbound Rule for the managed network of a machine learning workspace.",
      "oneOf": [
        {
          "description": "FQDN Outbound Rule for the managed network of a machine learning workspace.",
          "properties": {
            "destination": {
              "type": "string"
            },
            "type": {
              "enum": [
                "FQDN"
              ],
              "type": "string"
            }
          },
          "required": [
            "type"
          ],
          "type": "object"
        },
        {
          "description": "Private Endpoint Outbound Rule for the managed network of a machine learning workspace.",
          "properties": {
            "destination": {
              "description": "Private Endpoint destination for a Private Endpoint Outbound Rule for the managed network of a machine learning workspace.",
              "oneOf": [
                {
                  "$ref": "#/definitions/PrivateEndpointDestination"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "type": {
              "enum": [
                "PrivateEndpoint"
              ],
              "type": "string"
            }
          },
          "required": [
            "type"
          ],
          "type": "object"
        },
        {
          "description": "Service Tag Outbound Rule for the managed network of a machine learning workspace.",
          "properties": {
            "destination": {
              "description": "Service Tag destination for a Service Tag Outbound Rule for the managed network of a machine learning workspace.",
              "oneOf": [
                {
                  "$ref": "#/definitions/ServiceTagDestination"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "type": {
              "enum": [
                "ServiceTag"
              ],
              "type": "string"
            }
          },
          "required": [
            "type"
          ],
          "type": "object"
        }
      ],
      "properties": {
        "category": {
          "description": "Category of a managed network Outbound Rule of a machine learning workspace.",
          "oneOf": [
            {
              "enum": [
                "Required",
                "Recommended",
                "UserDefined"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "status": {
          "description": "Type of a managed network Outbound Rule of a machine learning workspace.",
          "oneOf": [
            {
              "enum": [
                "Inactive",
                "Active"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "PersonalComputeInstanceSettings": {
      "description": "Settings for a personal compute instance.",
      "properties": {
        "assignedUser": {
          "description": "A user explicitly assigned to a personal compute instance.",
          "oneOf": [
            {
              "$ref": "#/definitions/AssignedUser"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "PredictionDriftMetricThresholdBase": {
      "oneOf": [
        {
          "properties": {
            "dataType": {
              "enum": [
                "Categorical"
              ],
              "type": "string"
            },
            "metric": {
              "description": "[Required] The categorical prediction drift metric to calculate.",
              "oneOf": [
                {
                  "enum": [
                    "JensenShannonDistance",
                    "PopulationStabilityIndex",
                    "PearsonsChiSquaredTest"
                  ],
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "metric",
            "dataType"
          ],
          "type": "object"
        },
        {
          "properties": {
            "dataType": {
              "enum": [
                "Numerical"
              ],
              "type": "string"
            },
            "metric": {
              "description": "[Required] The numerical prediction drift metric to calculate.",
              "oneOf": [
                {
                  "enum": [
                    "JensenShannonDistance",
                    "PopulationStabilityIndex",
                    "NormalizedWassersteinDistance",
                    "TwoSampleKolmogorovSmirnovTest"
                  ],
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "metric",
            "dataType"
          ],
          "type": "object"
        }
      ],
      "properties": {
        "threshold": {
          "description": "The threshold value. If null, a default value will be set depending on the selected metric.",
          "oneOf": [
            {
              "$ref": "#/definitions/MonitoringThreshold"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "PrivateEndpointConnectionProperties": {
      "description": "Private endpoint connection properties.",
      "properties": {
        "privateEndpoint": {
          "description": "The Private Endpoint resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/WorkspacePrivateEndpointResource"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "privateLinkServiceConnectionState": {
          "description": "The connection state.",
          "oneOf": [
            {
              "$ref": "#/definitions/PrivateLinkServiceConnectionState"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "PrivateEndpointDestination": {
      "description": "Private Endpoint destination for a Private Endpoint Outbound Rule for the managed network of a machine learning workspace.",
      "properties": {
        "serviceResourceId": {
          "type": "string"
        },
        "sparkEnabled": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "sparkStatus": {
          "description": "Type of a managed network Outbound Rule of a machine learning workspace.",
          "oneOf": [
            {
              "enum": [
                "Inactive",
                "Active"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "subresourceTarget": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PrivateEndpointResource": {
      "description": "The PE network resource that is linked to this PE connection.",
      "properties": {
        "subnetArmId": {
          "description": "The subnetId that the private endpoint is connected to.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PrivateLinkServiceConnectionState": {
      "description": "A collection of information about the state of the connection between service consumer and provider.",
      "properties": {
        "actionsRequired": {
          "description": "Some RP chose \"None\". Other RPs use this for region expansion.",
          "type": "string"
        },
        "description": {
          "description": "User-defined message that, per NRP doc, may be used for approval-related message.",
          "type": "string"
        },
        "status": {
          "description": "Connection status of the service consumer with the service provider",
          "oneOf": [
            {
              "enum": [
                "Approved",
                "Pending",
                "Rejected",
                "Disconnected",
                "Timeout"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ProbeSettings": {
      "description": "Deployment container liveness/readiness probe configuration.",
      "properties": {
        "failureThreshold": {
          "description": "The number of failures to allow before returning an unhealthy status.",
          "oneOf": [
            {
              "default": 30,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "initialDelay": {
          "description": "The delay before the first probe in ISO 8601 format.",
          "type": "string"
        },
        "period": {
          "default": "PT10S",
          "description": "The length of time between probes in ISO 8601 format.",
          "type": "string"
        },
        "successThreshold": {
          "description": "The number of successful probes before returning a healthy status.",
          "oneOf": [
            {
              "default": 1,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "timeout": {
          "default": "PT2S",
          "description": "The probe timeout in ISO 8601 format.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "QueueSettings": {
      "properties": {
        "jobTier": {
          "description": "Controls the compute job tier",
          "oneOf": [
            {
              "enum": [
                "Null",
                "Spot",
                "Basic",
                "Standard",
                "Premium"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "priority": {
          "description": "Controls the priority of the job on a compute.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "Recurrence": {
      "description": "The workflow trigger recurrence for ComputeStartStop schedule type.",
      "properties": {
        "frequency": {
          "description": "[Required] The frequency to trigger schedule.",
          "oneOf": [
            {
              "enum": [
                "Minute",
                "Hour",
                "Day",
                "Week",
                "Month"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "interval": {
          "description": "[Required] Specifies schedule interval in conjunction with frequency",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "schedule": {
          "description": "[Required] The recurrence schedule.",
          "oneOf": [
            {
              "$ref": "#/definitions/RecurrenceSchedule"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "startTime": {
          "description": "The start time in yyyy-MM-ddTHH:mm:ss format.",
          "type": "string"
        },
        "timeZone": {
          "default": "UTC",
          "description": "Specifies time zone in which the schedule runs.\r\nTimeZone should follow Windows time zone format. Refer: https://docs.microsoft.com/en-us/windows-hardware/manufacture/desktop/default-time-zones?view=windows-11",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RecurrenceSchedule": {
      "properties": {
        "hours": {
          "description": "[Required] List of hours for the schedule.",
          "oneOf": [
            {
              "items": {
                "type": "integer"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "minutes": {
          "description": "[Required] List of minutes for the schedule.",
          "oneOf": [
            {
              "items": {
                "type": "integer"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "monthDays": {
          "description": "List of month days for the schedule",
          "oneOf": [
            {
              "items": {
                "type": "integer"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "weekDays": {
          "description": "List of days for the schedule.",
          "oneOf": [
            {
              "items": {
                "enum": [
                  "Monday",
                  "Tuesday",
                  "Wednesday",
                  "Thursday",
                  "Friday",
                  "Saturday",
                  "Sunday"
                ],
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "hours",
        "minutes"
      ],
      "type": "object"
    },
    "RecurrenceTrigger": {
      "properties": {
        "endTime": {
          "description": "Specifies end time of schedule in ISO 8601, but without a UTC offset. Refer https://en.wikipedia.org/wiki/ISO_8601.\r\nRecommented format would be \"2022-06-01T00:00:01\"\r\nIf not present, the schedule will run indefinitely",
          "type": "string"
        },
        "frequency": {
          "description": "[Required] The frequency to trigger schedule.",
          "oneOf": [
            {
              "enum": [
                "Minute",
                "Hour",
                "Day",
                "Week",
                "Month"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "interval": {
          "description": "[Required] Specifies schedule interval in conjunction with frequency",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "schedule": {
          "description": "The recurrence schedule.",
          "oneOf": [
            {
              "$ref": "#/definitions/RecurrenceSchedule"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "startTime": {
          "description": "Specifies start time of schedule in ISO 8601 format, but without a UTC offset.",
          "type": "string"
        },
        "timeZone": {
          "default": "UTC",
          "description": "Specifies time zone in which the schedule runs.\r\nTimeZone should follow Windows time zone format. Refer: https://docs.microsoft.com/en-us/windows-hardware/manufacture/desktop/default-time-zones?view=windows-11",
          "type": "string"
        },
        "triggerType": {
          "description": "[Required] ",
          "oneOf": [
            {
              "enum": [
                "Recurrence",
                "Cron"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "frequency",
        "interval",
        "triggerType"
      ],
      "type": "object"
    },
    "RegistryPrivateEndpointConnection": {
      "description": "Private endpoint connection definition.",
      "properties": {
        "id": {
          "description": "This is the private endpoint connection name created on SRP\r\nFull resource id: /subscriptions/{subId}/resourceGroups/{rgName}/providers/Microsoft.MachineLearningServices/{resourceType}/{resourceName}/privateEndpointConnections/{peConnectionName}",
          "type": "string"
        },
        "location": {
          "description": "Same as workspace location.",
          "type": "string"
        },
        "properties": {
          "description": "Properties of the Private Endpoint Connection",
          "oneOf": [
            {
              "$ref": "#/definitions/RegistryPrivateEndpointConnectionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "RegistryPrivateEndpointConnectionProperties": {
      "description": "Properties of the Private Endpoint Connection",
      "properties": {
        "groupIds": {
          "description": "The group ids",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "privateEndpoint": {
          "description": "The PE network resource that is linked to this PE connection.",
          "oneOf": [
            {
              "$ref": "#/definitions/PrivateEndpointResource"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "privateLinkServiceConnectionState": {
          "description": "The connection state.",
          "oneOf": [
            {
              "$ref": "#/definitions/RegistryPrivateLinkServiceConnectionState"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "provisioningState": {
          "description": "One of null, \"Succeeded\", \"Provisioning\", \"Failed\". While not approved, it's null.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RegistryPrivateLinkServiceConnectionState": {
      "description": "The connection state.",
      "properties": {
        "actionsRequired": {
          "description": "Some RP chose \"None\". Other RPs use this for region expansion.",
          "type": "string"
        },
        "description": {
          "description": "User-defined message that, per NRP doc, may be used for approval-related message.",
          "type": "string"
        },
        "status": {
          "description": "Connection status of the service consumer with the service provider",
          "oneOf": [
            {
              "enum": [
                "Approved",
                "Pending",
                "Rejected",
                "Disconnected",
                "Timeout"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "RegistryProperties": {
      "description": "Details of the Registry",
      "properties": {
        "discoveryUrl": {
          "description": "Discovery URL for the Registry",
          "type": "string"
        },
        "intellectualPropertyPublisher": {
          "description": "IntellectualPropertyPublisher for the registry",
          "type": "string"
        },
        "managedResourceGroup": {
          "description": "ResourceId of the managed RG if the registry has system created resources",
          "oneOf": [
            {
              "$ref": "#/definitions/ArmResourceId"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "mlFlowRegistryUri": {
          "description": "MLFlow Registry URI for the Registry",
          "type": "string"
        },
        "privateEndpointConnections": {
          "description": "Private endpoint connections info used for pending connections in private link portal",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/RegistryPrivateEndpointConnection"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "publicNetworkAccess": {
          "description": "Is the Registry accessible from the internet?\r\nPossible values: \"Enabled\" or \"Disabled\"",
          "type": "string"
        },
        "regionDetails": {
          "description": "Details of each region the registry is in",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/RegistryRegionArmDetails"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "RegistryRegionArmDetails": {
      "description": "Details for each region the registry is in",
      "properties": {
        "acrDetails": {
          "description": "List of ACR accounts",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/AcrDetails"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "location": {
          "description": "The location where the registry exists",
          "type": "string"
        },
        "storageAccountDetails": {
          "description": "List of storage accounts",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/StorageAccountDetails"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "RegressionTrainingSettings": {
      "description": "Regression Training related configuration.",
      "properties": {
        "allowedTrainingAlgorithms": {
          "description": "Allowed models for regression task.",
          "oneOf": [
            {
              "items": {
                "enum": [
                  "ElasticNet",
                  "GradientBoosting",
                  "DecisionTree",
                  "KNN",
                  "LassoLars",
                  "SGD",
                  "RandomForest",
                  "ExtremeRandomTrees",
                  "LightGBM",
                  "XGBoostRegressor"
                ],
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "blockedTrainingAlgorithms": {
          "description": "Blocked models for regression task.",
          "oneOf": [
            {
              "items": {
                "enum": [
                  "ElasticNet",
                  "GradientBoosting",
                  "DecisionTree",
                  "KNN",
                  "LassoLars",
                  "SGD",
                  "RandomForest",
                  "ExtremeRandomTrees",
                  "LightGBM",
                  "XGBoostRegressor"
                ],
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "enableDnnTraining": {
          "description": "Enable recommendation of DNN models.",
          "oneOf": [
            {
              "default": false,
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "enableModelExplainability": {
          "description": "Flag to turn on explainability on best model.",
          "oneOf": [
            {
              "default": true,
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "enableOnnxCompatibleModels": {
          "description": "Flag for enabling onnx compatible models.",
          "oneOf": [
            {
              "default": false,
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "enableStackEnsemble": {
          "description": "Enable stack ensemble run.",
          "oneOf": [
            {
              "default": true,
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "enableVoteEnsemble": {
          "description": "Enable voting ensemble run.",
          "oneOf": [
            {
              "default": true,
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "ensembleModelDownloadTimeout": {
          "default": "PT5M",
          "description": "During VotingEnsemble and StackEnsemble model generation, multiple fitted models from the previous child runs are downloaded.\r\nConfigure this parameter with a higher value than 300 secs, if more time is needed.",
          "type": "string"
        },
        "stackEnsembleSettings": {
          "description": "Stack ensemble settings for stack ensemble run.",
          "oneOf": [
            {
              "$ref": "#/definitions/StackEnsembleSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "trainingMode": {
          "description": "TrainingMode mode - Setting to 'auto' is same as setting it to 'non-distributed' for now, however in the future may result in mixed mode or heuristics based mode selection. Default is 'auto'.\r\nIf 'Distributed' then only distributed featurization is used and distributed algorithms are chosen.\r\nIf 'NonDistributed' then only non distributed algorithms are chosen.",
          "oneOf": [
            {
              "enum": [
                "Auto",
                "Distributed",
                "NonDistributed"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "RequestLogging": {
      "properties": {
        "captureHeaders": {
          "description": "For payload logging, we only collect payload by default. If customers also want to collect the specified headers, they can set them in captureHeaders so that backend will collect those headers along with payload.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ResourceId": {
      "description": "Represents a resource ID. For example, for a subnet, it is the resource URL for the subnet.",
      "properties": {
        "id": {
          "description": "The ID of the resource",
          "type": "string"
        }
      },
      "required": [
        "id"
      ],
      "type": "object"
    },
    "Route": {
      "properties": {
        "path": {
          "description": "[Required] The path for the route.",
          "oneOf": [
            {
              "minLength": 1,
              "pattern": "[a-zA-Z0-9_]",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "port": {
          "description": "[Required] The port for the route.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "path",
        "port"
      ],
      "type": "object"
    },
    "SamplingAlgorithm": {
      "description": "The Sampling Algorithm used to generate hyperparameter values, along with properties to\r\nconfigure the algorithm",
      "oneOf": [
        {
          "description": "Defines a Sampling Algorithm that generates values based on previous values",
          "properties": {
            "samplingAlgorithmType": {
              "enum": [
                "Bayesian"
              ],
              "type": "string"
            }
          },
          "required": [
            "samplingAlgorithmType"
          ],
          "type": "object"
        },
        {
          "description": "Defines a Sampling Algorithm that exhaustively generates every value combination in the space",
          "properties": {
            "samplingAlgorithmType": {
              "enum": [
                "Grid"
              ],
              "type": "string"
            }
          },
          "required": [
            "samplingAlgorithmType"
          ],
          "type": "object"
        },
        {
          "description": "Defines a Sampling Algorithm that generates values randomly",
          "properties": {
            "logbase": {
              "description": "An optional positive number or e in string format to be used as base for log based random sampling",
              "type": "string"
            },
            "rule": {
              "description": "The specific type of random algorithm",
              "oneOf": [
                {
                  "enum": [
                    "Random",
                    "Sobol"
                  ],
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "samplingAlgorithmType": {
              "enum": [
                "Random"
              ],
              "type": "string"
            },
            "seed": {
              "description": "An optional integer to use as the seed for random number generation",
              "oneOf": [
                {
                  "type": "integer"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "samplingAlgorithmType"
          ],
          "type": "object"
        }
      ],
      "properties": {},
      "type": "object"
    },
    "SasDatastoreSecrets": {
      "description": "Datastore SAS secrets.",
      "properties": {
        "sasToken": {
          "description": "Storage container SAS token.",
          "type": "string"
        },
        "secretsType": {
          "description": "[Required] Credential type used to authentication with storage.",
          "oneOf": [
            {
              "enum": [
                "AccountKey",
                "Certificate",
                "Sas",
                "ServicePrincipal",
                "KerberosPassword",
                "KerberosKeytab"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "secretsType"
      ],
      "type": "object"
    },
    "ScaleSettings": {
      "description": "scale settings for AML Compute",
      "properties": {
        "maxNodeCount": {
          "description": "Max number of nodes to use",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "minNodeCount": {
          "description": "Min number of nodes to use",
          "oneOf": [
            {
              "default": 0,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "nodeIdleTimeBeforeScaleDown": {
          "description": "Node Idle Time before scaling down amlCompute. This string needs to be in the RFC Format.",
          "type": "string"
        }
      },
      "required": [
        "maxNodeCount"
      ],
      "type": "object"
    },
    "ScheduleActionBase": {
      "oneOf": [
        {
          "properties": {
            "actionType": {
              "enum": [
                "CreateJob"
              ],
              "type": "string"
            },
            "jobDefinition": {
              "description": "[Required] Defines Schedule action definition details.",
              "oneOf": [
                {
                  "$ref": "#/definitions/JobBaseProperties"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "jobDefinition",
            "actionType"
          ],
          "type": "object"
        },
        {
          "properties": {
            "actionType": {
              "enum": [
                "CreateMonitor"
              ],
              "type": "string"
            },
            "monitorDefinition": {
              "description": "[Required] Defines the monitor.",
              "oneOf": [
                {
                  "$ref": "#/definitions/MonitorDefinition"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "monitorDefinition",
            "actionType"
          ],
          "type": "object"
        },
        {
          "properties": {
            "actionType": {
              "enum": [
                "ImportData"
              ],
              "type": "string"
            },
            "dataImportDefinition": {
              "description": "[Required] Defines Schedule action definition details.",
              "oneOf": [
                {
                  "$ref": "#/definitions/DataImport"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "dataImportDefinition",
            "actionType"
          ],
          "type": "object"
        },
        {
          "properties": {
            "actionType": {
              "enum": [
                "InvokeBatchEndpoint"
              ],
              "type": "string"
            },
            "endpointInvocationDefinition": {
              "description": "[Required] Defines Schedule action definition details.\r\n<see href=\"TBD\" />",
              "oneOf": [
                {
                  "type": "object"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "endpointInvocationDefinition",
            "actionType"
          ],
          "type": "object"
        }
      ],
      "properties": {},
      "type": "object"
    },
    "ScheduleBase": {
      "properties": {
        "id": {
          "description": "A system assigned id for the schedule.",
          "type": "string"
        },
        "provisioningStatus": {
          "description": "The current deployment state of schedule.",
          "oneOf": [
            {
              "enum": [
                "Completed",
                "Provisioning",
                "Failed"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "status": {
          "description": "Is the schedule enabled or disabled?",
          "oneOf": [
            {
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ScheduleProperties": {
      "description": "Base definition of a schedule",
      "properties": {
        "action": {
          "description": "[Required] Specifies the action of the schedule",
          "oneOf": [
            {
              "$ref": "#/definitions/ScheduleActionBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "description": {
          "description": "The asset description text.",
          "type": "string"
        },
        "displayName": {
          "description": "Display name of schedule.",
          "type": "string"
        },
        "isEnabled": {
          "description": "Is the schedule enabled?",
          "oneOf": [
            {
              "default": true,
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The asset property dictionary.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Tag dictionary. Tags can be added, removed, and updated.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "trigger": {
          "description": "[Required] Specifies the trigger details",
          "oneOf": [
            {
              "$ref": "#/definitions/TriggerBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "action",
        "trigger"
      ],
      "type": "object"
    },
    "ScriptReference": {
      "description": "Script reference",
      "properties": {
        "scriptArguments": {
          "description": "Optional command line arguments passed to the script to run.",
          "type": "string"
        },
        "scriptData": {
          "description": "The location of scripts in the mounted volume.",
          "type": "string"
        },
        "scriptSource": {
          "description": "The storage source of the script: inline, workspace.",
          "type": "string"
        },
        "timeout": {
          "description": "Optional time period passed to timeout command.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ScriptsToExecute": {
      "description": "Customized setup scripts",
      "properties": {
        "creationScript": {
          "description": "Script that's run only once during provision of the compute.",
          "oneOf": [
            {
              "$ref": "#/definitions/ScriptReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "startupScript": {
          "description": "Script that's run every time the machine starts.",
          "oneOf": [
            {
              "$ref": "#/definitions/ScriptReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "Seasonality": {
      "description": "Forecasting seasonality.",
      "oneOf": [
        {
          "properties": {
            "mode": {
              "enum": [
                "Auto"
              ],
              "type": "string"
            }
          },
          "required": [
            "mode"
          ],
          "type": "object"
        },
        {
          "properties": {
            "mode": {
              "enum": [
                "Custom"
              ],
              "type": "string"
            },
            "value": {
              "description": "[Required] Seasonality value.",
              "oneOf": [
                {
                  "type": "integer"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "value",
            "mode"
          ],
          "type": "object"
        }
      ],
      "properties": {},
      "type": "object"
    },
    "SecretConfiguration": {
      "description": "Secret Configuration definition.",
      "properties": {
        "uri": {
          "description": "Secret Uri.\r\nSample Uri : https://myvault.vault.azure.net/secrets/mysecretname/secretversion",
          "type": "string"
        },
        "workspaceSecretName": {
          "description": "Name of secret in workspace key vault.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ServiceManagedResourcesSettings": {
      "properties": {
        "cosmosDb": {
          "oneOf": [
            {
              "$ref": "#/definitions/CosmosDbSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ServicePrincipalDatastoreSecrets": {
      "description": "Datastore Service Principal secrets.",
      "properties": {
        "clientSecret": {
          "description": "Service principal secret.",
          "type": "string"
        },
        "secretsType": {
          "description": "[Required] Credential type used to authentication with storage.",
          "oneOf": [
            {
              "enum": [
                "AccountKey",
                "Certificate",
                "Sas",
                "ServicePrincipal",
                "KerberosPassword",
                "KerberosKeytab"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "secretsType"
      ],
      "type": "object"
    },
    "ServiceTagDestination": {
      "description": "Service Tag destination for a Service Tag Outbound Rule for the managed network of a machine learning workspace.",
      "properties": {
        "action": {
          "description": "The action enum for networking rule.",
          "oneOf": [
            {
              "enum": [
                "Allow",
                "Deny"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "portRanges": {
          "type": "string"
        },
        "protocol": {
          "type": "string"
        },
        "serviceTag": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "SetupScripts": {
      "description": "Details of customized scripts to execute for setting up the cluster.",
      "properties": {
        "scripts": {
          "description": "Customized setup scripts",
          "oneOf": [
            {
              "$ref": "#/definitions/ScriptsToExecute"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "SharedPrivateLinkResource": {
      "properties": {
        "name": {
          "description": "Unique name of the private link",
          "type": "string"
        },
        "properties": {
          "description": "Properties of a shared private link resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/SharedPrivateLinkResourceProperty"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "SharedPrivateLinkResourceProperty": {
      "description": "Properties of a shared private link resource.",
      "properties": {
        "groupId": {
          "description": "group id of the private link",
          "type": "string"
        },
        "privateLinkResourceId": {
          "description": "the resource id that private link links to",
          "type": "string"
        },
        "requestMessage": {
          "description": "Request message",
          "type": "string"
        },
        "status": {
          "description": "Connection status of the service consumer with the service provider",
          "oneOf": [
            {
              "enum": [
                "Approved",
                "Pending",
                "Rejected",
                "Disconnected",
                "Timeout"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "Sku": {
      "description": "The resource model definition representing SKU",
      "properties": {
        "capacity": {
          "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "family": {
          "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here.",
          "type": "string"
        },
        "name": {
          "description": "The name of the SKU. Ex - P3. It is typically a letter+number code",
          "type": "string"
        },
        "size": {
          "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. ",
          "type": "string"
        },
        "tier": {
          "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.",
          "oneOf": [
            {
              "enum": [
                "Free",
                "Basic",
                "Standard",
                "Premium"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "SparkJobEntry": {
      "description": "Spark job entry point definition.",
      "oneOf": [
        {
          "properties": {
            "file": {
              "description": "[Required] Relative python file path for job entry point.",
              "oneOf": [
                {
                  "minLength": 1,
                  "pattern": "[a-zA-Z0-9_]",
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "sparkJobEntryType": {
              "enum": [
                "SparkJobPythonEntry"
              ],
              "type": "string"
            }
          },
          "required": [
            "file",
            "sparkJobEntryType"
          ],
          "type": "object"
        },
        {
          "properties": {
            "className": {
              "description": "[Required] Scala class name used as entry point.",
              "oneOf": [
                {
                  "minLength": 1,
                  "pattern": "[a-zA-Z0-9_]",
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "sparkJobEntryType": {
              "enum": [
                "SparkJobScalaEntry"
              ],
              "type": "string"
            }
          },
          "required": [
            "className",
            "sparkJobEntryType"
          ],
          "type": "object"
        }
      ],
      "properties": {},
      "type": "object"
    },
    "SparkResourceConfiguration": {
      "properties": {
        "instanceType": {
          "description": "Optional type of VM used as supported by the compute target.",
          "type": "string"
        },
        "runtimeVersion": {
          "default": "3.1",
          "description": "Version of spark runtime used for the job.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "SslConfiguration": {
      "description": "The ssl configuration for scoring",
      "properties": {
        "cert": {
          "description": "Cert data",
          "type": "string"
        },
        "cname": {
          "description": "CNAME of the cert",
          "type": "string"
        },
        "key": {
          "description": "Key data",
          "type": "string"
        },
        "leafDomainLabel": {
          "description": "Leaf domain label of public endpoint",
          "type": "string"
        },
        "overwriteExistingDomain": {
          "description": "Indicates whether to overwrite existing domain label.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "status": {
          "description": "Enable or disable ssl for scoring",
          "oneOf": [
            {
              "enum": [
                "Disabled",
                "Enabled",
                "Auto"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "StackEnsembleSettings": {
      "description": "Advances setting to customize StackEnsemble run.",
      "properties": {
        "stackMetaLearnerKWargs": {
          "description": "Optional parameters to pass to the initializer of the meta-learner.",
          "oneOf": [
            {
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "stackMetaLearnerTrainPercentage": {
          "description": "Specifies the proportion of the training set (when choosing train and validation type of training) to be reserved for training the meta-learner. Default value is 0.2.",
          "oneOf": [
            {
              "default": 0.2,
              "type": "number"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "stackMetaLearnerType": {
          "description": "The meta-learner is a model trained on the output of the individual heterogeneous models.",
          "oneOf": [
            {
              "enum": [
                "None",
                "LogisticRegression",
                "LogisticRegressionCV",
                "LightGBMClassifier",
                "ElasticNet",
                "ElasticNetCV",
                "LightGBMRegressor",
                "LinearRegression"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "StorageAccountDetails": {
      "description": "Details of storage account to be used for the Registry",
      "properties": {
        "systemCreatedStorageAccount": {
          "description": "Details of system created storage account to be used for the registry",
          "oneOf": [
            {
              "$ref": "#/definitions/SystemCreatedStorageAccount"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "userCreatedStorageAccount": {
          "description": "Details of user created storage account to be used for the registry.  Not supported in most cases and will throw 400 error if provided.",
          "oneOf": [
            {
              "$ref": "#/definitions/UserCreatedStorageAccount"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "SweepJobLimits": {
      "description": "Sweep Job limit class.",
      "properties": {
        "jobLimitsType": {
          "description": "[Required] JobLimit type.",
          "oneOf": [
            {
              "enum": [
                "Command",
                "Sweep"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "maxConcurrentTrials": {
          "description": "Sweep Job max concurrent trials.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "maxTotalTrials": {
          "description": "Sweep Job max total trials.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "timeout": {
          "description": "The max run duration in ISO 8601 format, after which the job will be cancelled. Only supports duration with precision as low as Seconds.",
          "type": "string"
        },
        "trialTimeout": {
          "description": "Sweep Job Trial timeout value.",
          "type": "string"
        }
      },
      "required": [
        "jobLimitsType"
      ],
      "type": "object"
    },
    "SynapseSparkProperties": {
      "properties": {
        "autoPauseProperties": {
          "description": "Auto pause properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/AutoPauseProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "autoScaleProperties": {
          "description": "Auto scale properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/AutoScaleProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "nodeCount": {
          "description": "The number of compute nodes currently assigned to the compute.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "nodeSize": {
          "description": "Node size.",
          "type": "string"
        },
        "nodeSizeFamily": {
          "description": "Node size family.",
          "type": "string"
        },
        "poolName": {
          "description": "Pool name.",
          "type": "string"
        },
        "resourceGroup": {
          "description": "Name of the resource group in which workspace is located.",
          "type": "string"
        },
        "sparkVersion": {
          "description": "Spark version.",
          "type": "string"
        },
        "subscriptionId": {
          "description": "Azure subscription identifier.",
          "type": "string"
        },
        "workspaceName": {
          "description": "Name of Azure Machine Learning workspace.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "SystemCreatedAcrAccount": {
      "properties": {
        "acrAccountName": {
          "description": "Name of the ACR account",
          "type": "string"
        },
        "acrAccountSku": {
          "description": "SKU of the ACR account",
          "type": "string"
        },
        "armResourceId": {
          "description": "This is populated once the ACR account is created.",
          "oneOf": [
            {
              "$ref": "#/definitions/ArmResourceId"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "SystemCreatedStorageAccount": {
      "properties": {
        "allowBlobPublicAccess": {
          "description": "Public blob access allowed",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "armResourceId": {
          "description": "This is populated once the storage account is created.",
          "oneOf": [
            {
              "$ref": "#/definitions/ArmResourceId"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "storageAccountHnsEnabled": {
          "description": "HNS enabled for storage account",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "storageAccountName": {
          "description": "Name of the storage account",
          "type": "string"
        },
        "storageAccountType": {
          "description": "Allowed values:\r\n\"Standard_LRS\",\r\n\"Standard_GRS\",\r\n\"Standard_RAGRS\",\r\n\"Standard_ZRS\",\r\n\"Standard_GZRS\",\r\n\"Standard_RAGZRS\",\r\n\"Premium_LRS\",\r\n\"Premium_ZRS\"",
          "type": "string"
        }
      },
      "type": "object"
    },
    "TableFixedParameters": {
      "description": "Fixed training parameters that won't be swept over during AutoML Table training.",
      "properties": {
        "booster": {
          "description": "Specify the boosting type, e.g gbdt for XGBoost.",
          "type": "string"
        },
        "boostingType": {
          "description": "Specify the boosting type, e.g gbdt for LightGBM.",
          "type": "string"
        },
        "growPolicy": {
          "description": "Specify the grow policy, which controls the way new nodes are added to the tree.",
          "type": "string"
        },
        "learningRate": {
          "description": "The learning rate for the training procedure.",
          "oneOf": [
            {
              "type": "number"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "maxBin": {
          "description": "Specify the Maximum number of discrete bins to bucket continuous features .",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "maxDepth": {
          "description": "Specify the max depth to limit the tree depth explicitly.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "maxLeaves": {
          "description": "Specify the max leaves to limit the tree leaves explicitly.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "minDataInLeaf": {
          "description": "The minimum number of data per leaf.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "minSplitGain": {
          "description": "Minimum loss reduction required to make a further partition on a leaf node of the tree.",
          "oneOf": [
            {
              "type": "number"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "modelName": {
          "description": "The name of the model to train.",
          "type": "string"
        },
        "nEstimators": {
          "description": "Specify the number of trees (or rounds) in an model.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "numLeaves": {
          "description": "Specify the number of leaves.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "preprocessorName": {
          "description": "The name of the preprocessor to use.",
          "type": "string"
        },
        "regAlpha": {
          "description": "L1 regularization term on weights.",
          "oneOf": [
            {
              "type": "number"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "regLambda": {
          "description": "L2 regularization term on weights.",
          "oneOf": [
            {
              "type": "number"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "subsample": {
          "description": "Subsample ratio of the training instance.",
          "oneOf": [
            {
              "type": "number"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "subsampleFreq": {
          "description": "Frequency of subsample.",
          "oneOf": [
            {
              "type": "number"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "treeMethod": {
          "description": "Specify the tree method.",
          "type": "string"
        },
        "withMean": {
          "description": "If true, center before scaling the data with StandardScalar.",
          "oneOf": [
            {
              "default": false,
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "withStd": {
          "description": "If true, scaling the data with Unit Variance with StandardScalar.",
          "oneOf": [
            {
              "default": false,
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "TableParameterSubspace": {
      "properties": {
        "booster": {
          "description": "Specify the boosting type, e.g gbdt for XGBoost.",
          "type": "string"
        },
        "boostingType": {
          "description": "Specify the boosting type, e.g gbdt for LightGBM.",
          "type": "string"
        },
        "growPolicy": {
          "description": "Specify the grow policy, which controls the way new nodes are added to the tree.",
          "type": "string"
        },
        "learningRate": {
          "description": "The learning rate for the training procedure.",
          "type": "string"
        },
        "maxBin": {
          "description": "Specify the Maximum number of discrete bins to bucket continuous features .",
          "type": "string"
        },
        "maxDepth": {
          "description": "Specify the max depth to limit the tree depth explicitly.",
          "type": "string"
        },
        "maxLeaves": {
          "description": "Specify the max leaves to limit the tree leaves explicitly.",
          "type": "string"
        },
        "minDataInLeaf": {
          "description": "The minimum number of data per leaf.",
          "type": "string"
        },
        "minSplitGain": {
          "description": "Minimum loss reduction required to make a further partition on a leaf node of the tree.",
          "type": "string"
        },
        "modelName": {
          "description": "The name of the model to train.",
          "type": "string"
        },
        "nEstimators": {
          "description": "Specify the number of trees (or rounds) in an model.",
          "type": "string"
        },
        "numLeaves": {
          "description": "Specify the number of leaves.",
          "type": "string"
        },
        "preprocessorName": {
          "description": "The name of the preprocessor to use.",
          "type": "string"
        },
        "regAlpha": {
          "description": "L1 regularization term on weights.",
          "type": "string"
        },
        "regLambda": {
          "description": "L2 regularization term on weights.",
          "type": "string"
        },
        "subsample": {
          "description": "Subsample ratio of the training instance.",
          "type": "string"
        },
        "subsampleFreq": {
          "description": "Frequency of subsample",
          "type": "string"
        },
        "treeMethod": {
          "description": "Specify the tree method.",
          "type": "string"
        },
        "withMean": {
          "description": "If true, center before scaling the data with StandardScalar.",
          "type": "string"
        },
        "withStd": {
          "description": "If true, scaling the data with Unit Variance with StandardScalar.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "TableSweepSettings": {
      "properties": {
        "earlyTermination": {
          "description": "Type of early termination policy for the sweeping job.",
          "oneOf": [
            {
              "$ref": "#/definitions/EarlyTerminationPolicy"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "samplingAlgorithm": {
          "description": "[Required] Type of sampling algorithm.",
          "oneOf": [
            {
              "enum": [
                "Grid",
                "Random",
                "Bayesian"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "samplingAlgorithm"
      ],
      "type": "object"
    },
    "TableVerticalFeaturizationSettings": {
      "description": "Featurization Configuration.",
      "properties": {
        "blockedTransformers": {
          "description": "These transformers shall not be used in featurization.",
          "oneOf": [
            {
              "items": {
                "enum": [
                  "TextTargetEncoder",
                  "OneHotEncoder",
                  "CatTargetEncoder",
                  "TfIdf",
                  "WoETargetEncoder",
                  "LabelEncoder",
                  "WordEmbedding",
                  "NaiveBayes",
                  "CountVectorizer",
                  "HashOneHotEncoder"
                ],
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "columnNameAndTypes": {
          "description": "Dictionary of column name and its type (int, float, string, datetime etc).",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "datasetLanguage": {
          "description": "Dataset language, useful for the text data.",
          "type": "string"
        },
        "enableDnnFeaturization": {
          "description": "Determines whether to use Dnn based featurizers for data featurization.",
          "oneOf": [
            {
              "default": false,
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "mode": {
          "description": "Featurization mode - User can keep the default 'Auto' mode and AutoML will take care of necessary transformation of the data in featurization phase.\r\nIf 'Off' is selected then no featurization is done.\r\nIf 'Custom' is selected then user can specify additional inputs to customize how featurization is done.",
          "oneOf": [
            {
              "enum": [
                "Auto",
                "Custom",
                "Off"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "transformerParams": {
          "description": "User can specify additional transformers to be used along with the columns to which it would be applied and parameters for the transformer constructor.",
          "oneOf": [
            {
              "additionalProperties": {
                "items": {
                  "$ref": "#/definitions/ColumnTransformer"
                },
                "type": "array"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "TableVerticalLimitSettings": {
      "description": "Job execution constraints.",
      "properties": {
        "enableEarlyTermination": {
          "description": "Enable early termination, determines whether or not if AutoMLJob will terminate early if there is no score improvement in last 20 iterations.",
          "oneOf": [
            {
              "default": true,
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "exitScore": {
          "description": "Exit score for the AutoML job.",
          "oneOf": [
            {
              "type": "number"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "maxConcurrentTrials": {
          "description": "Maximum Concurrent iterations.",
          "oneOf": [
            {
              "default": 1,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "maxCoresPerTrial": {
          "description": "Max cores per iteration.",
          "oneOf": [
            {
              "default": -1,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "maxNodes": {
          "description": "Maximum nodes to use for the experiment.",
          "oneOf": [
            {
              "default": 1,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "maxTrials": {
          "description": "Number of iterations.",
          "oneOf": [
            {
              "default": 1000,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "sweepConcurrentTrials": {
          "description": "Number of concurrent sweeping runs that user wants to trigger.",
          "oneOf": [
            {
              "default": 0,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "sweepTrials": {
          "description": "Number of sweeping runs that user wants to trigger.",
          "oneOf": [
            {
              "default": 0,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "timeout": {
          "default": "PT6H",
          "description": "AutoML job timeout.",
          "type": "string"
        },
        "trialTimeout": {
          "default": "PT30M",
          "description": "Iteration timeout.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "TargetLags": {
      "description": "The number of past periods to lag from the target column.",
      "oneOf": [
        {
          "properties": {
            "mode": {
              "enum": [
                "Auto"
              ],
              "type": "string"
            }
          },
          "required": [
            "mode"
          ],
          "type": "object"
        },
        {
          "properties": {
            "mode": {
              "enum": [
                "Custom"
              ],
              "type": "string"
            },
            "values": {
              "description": "[Required] Set target lags values.",
              "oneOf": [
                {
                  "items": {
                    "type": "integer"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "values",
            "mode"
          ],
          "type": "object"
        }
      ],
      "properties": {},
      "type": "object"
    },
    "TargetRollingWindowSize": {
      "description": "Forecasting target rolling window size.",
      "oneOf": [
        {
          "description": "Target lags rolling window determined automatically.",
          "properties": {
            "mode": {
              "enum": [
                "Auto"
              ],
              "type": "string"
            }
          },
          "required": [
            "mode"
          ],
          "type": "object"
        },
        {
          "properties": {
            "mode": {
              "enum": [
                "Custom"
              ],
              "type": "string"
            },
            "value": {
              "description": "[Required] TargetRollingWindowSize value.",
              "oneOf": [
                {
                  "type": "integer"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "value",
            "mode"
          ],
          "type": "object"
        }
      ],
      "properties": {},
      "type": "object"
    },
    "TmpfsOptions": {
      "properties": {
        "size": {
          "description": "Mention the Tmpfs size",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "TrialComponent": {
      "description": "Trial component definition.",
      "properties": {
        "codeId": {
          "description": "ARM resource ID of the code asset.",
          "type": "string"
        },
        "command": {
          "description": "[Required] The command to execute on startup of the job. eg. \"python train.py\"",
          "oneOf": [
            {
              "minLength": 1,
              "pattern": "[a-zA-Z0-9_]",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "distribution": {
          "description": "Distribution configuration of the job. If set, this should be one of Mpi, Tensorflow, PyTorch, or null.",
          "oneOf": [
            {
              "$ref": "#/definitions/DistributionConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "environmentId": {
          "description": "[Required] The ARM resource ID of the Environment specification for the job.",
          "oneOf": [
            {
              "minLength": 1,
              "pattern": "[a-zA-Z0-9_]",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "environmentVariables": {
          "description": "Environment variables included in the job.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "description": "Compute Resource configuration for the job.",
          "oneOf": [
            {
              "$ref": "#/definitions/JobResourceConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "command",
        "environmentId"
      ],
      "type": "object"
    },
    "TriggerBase": {
      "oneOf": [
        {
          "properties": {
            "expression": {
              "description": "[Required] Specifies cron expression of schedule.\r\nThe expression should follow NCronTab format.",
              "oneOf": [
                {
                  "minLength": 1,
                  "pattern": "[a-zA-Z0-9_]",
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "triggerType": {
              "enum": [
                "Cron"
              ],
              "type": "string"
            }
          },
          "required": [
            "expression",
            "triggerType"
          ],
          "type": "object"
        },
        {
          "properties": {
            "frequency": {
              "description": "[Required] The frequency to trigger schedule.",
              "oneOf": [
                {
                  "enum": [
                    "Minute",
                    "Hour",
                    "Day",
                    "Week",
                    "Month"
                  ],
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "interval": {
              "description": "[Required] Specifies schedule interval in conjunction with frequency",
              "oneOf": [
                {
                  "type": "integer"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "schedule": {
              "description": "The recurrence schedule.",
              "oneOf": [
                {
                  "$ref": "#/definitions/RecurrenceSchedule"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "triggerType": {
              "enum": [
                "Recurrence"
              ],
              "type": "string"
            }
          },
          "required": [
            "frequency",
            "interval",
            "triggerType"
          ],
          "type": "object"
        }
      ],
      "properties": {
        "endTime": {
          "description": "Specifies end time of schedule in ISO 8601, but without a UTC offset. Refer https://en.wikipedia.org/wiki/ISO_8601.\r\nRecommented format would be \"2022-06-01T00:00:01\"\r\nIf not present, the schedule will run indefinitely",
          "type": "string"
        },
        "startTime": {
          "description": "Specifies start time of schedule in ISO 8601 format, but without a UTC offset.",
          "type": "string"
        },
        "timeZone": {
          "default": "UTC",
          "description": "Specifies time zone in which the schedule runs.\r\nTimeZone should follow Windows time zone format. Refer: https://docs.microsoft.com/en-us/windows-hardware/manufacture/desktop/default-time-zones?view=windows-11",
          "type": "string"
        }
      },
      "type": "object"
    },
    "UserAccountCredentials": {
      "description": "Settings for user account that gets created on each on the nodes of a compute.",
      "properties": {
        "adminUserName": {
          "description": "Name of the administrator user account which can be used to SSH to nodes.",
          "type": "string"
        },
        "adminUserPassword": {
          "description": "Password of the administrator user account.",
          "type": "string"
        },
        "adminUserSshPublicKey": {
          "description": "SSH public key of the administrator user account.",
          "type": "string"
        }
      },
      "required": [
        "adminUserName"
      ],
      "type": "object"
    },
    "UserAssignedIdentity": {
      "description": "User assigned identity properties",
      "properties": {},
      "type": "object"
    },
    "UserCreatedAcrAccount": {
      "properties": {
        "armResourceId": {
          "description": "ARM ResourceId of a resource",
          "oneOf": [
            {
              "$ref": "#/definitions/ArmResourceId"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "UserCreatedStorageAccount": {
      "properties": {
        "armResourceId": {
          "description": "ARM ResourceId of a resource",
          "oneOf": [
            {
              "$ref": "#/definitions/ArmResourceId"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "VirtualMachineImage": {
      "description": "Virtual Machine image for Windows AML Compute",
      "properties": {
        "id": {
          "description": "Virtual Machine image path",
          "type": "string"
        }
      },
      "required": [
        "id"
      ],
      "type": "object"
    },
    "VirtualMachineSchemaProperties": {
      "properties": {
        "address": {
          "description": "Public IP address of the virtual machine.",
          "type": "string"
        },
        "administratorAccount": {
          "description": "Admin credentials for virtual machine",
          "oneOf": [
            {
              "$ref": "#/definitions/VirtualMachineSshCredentials"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "isNotebookInstanceCompute": {
          "description": "Indicates whether this compute will be used for running notebooks.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "notebookServerPort": {
          "description": "Notebook server port open for ssh connections.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "sshPort": {
          "description": "Port open for ssh connections.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "virtualMachineSize": {
          "description": "Virtual Machine size",
          "type": "string"
        }
      },
      "type": "object"
    },
    "VirtualMachineSshCredentials": {
      "description": "Admin credentials for virtual machine",
      "properties": {
        "password": {
          "description": "Password of admin account",
          "type": "string"
        },
        "privateKeyData": {
          "description": "Private key data",
          "type": "string"
        },
        "publicKeyData": {
          "description": "Public key data",
          "type": "string"
        },
        "username": {
          "description": "Username of admin account",
          "type": "string"
        }
      },
      "type": "object"
    },
    "VolumeDefinition": {
      "properties": {
        "bind": {
          "description": "Bind Options of the mount",
          "oneOf": [
            {
              "$ref": "#/definitions/BindOptions"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "consistency": {
          "description": "Consistency of the volume",
          "type": "string"
        },
        "readOnly": {
          "description": "Indicate whether to mount volume as readOnly. Default value for this is false.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "source": {
          "description": "Source of the mount. For bind mounts this is the host path.",
          "type": "string"
        },
        "target": {
          "description": "Target of the mount. For bind mounts this is the path in the container.",
          "type": "string"
        },
        "tmpfs": {
          "description": "tmpfs option of the mount",
          "oneOf": [
            {
              "$ref": "#/definitions/TmpfsOptions"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "description": "Type of Volume Definition. Possible Values: bind,volume,tmpfs,npipe",
          "oneOf": [
            {
              "enum": [
                "bind",
                "volume",
                "tmpfs",
                "npipe"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "volume": {
          "description": "Volume Options of the mount",
          "oneOf": [
            {
              "$ref": "#/definitions/VolumeOptions"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "VolumeOptions": {
      "properties": {
        "nocopy": {
          "description": "Indicate whether volume is nocopy",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "Webhook": {
      "description": "Webhook base",
      "oneOf": [
        {
          "description": "Webhook details specific for Azure DevOps",
          "properties": {
            "webhookType": {
              "enum": [
                "AzureDevOps"
              ],
              "type": "string"
            }
          },
          "required": [
            "webhookType"
          ],
          "type": "object"
        }
      ],
      "properties": {
        "eventType": {
          "description": "Send callback on a specified notification event",
          "type": "string"
        }
      },
      "type": "object"
    },
    "WorkspaceConnectionAccessKey": {
      "properties": {
        "accessKeyId": {
          "type": "string"
        },
        "secretAccessKey": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "WorkspaceConnectionApiKey": {
      "description": "Api key object for workspace connection credential.",
      "properties": {
        "key": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "WorkspaceConnectionManagedIdentity": {
      "properties": {
        "clientId": {
          "type": "string"
        },
        "resourceId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "WorkspaceConnectionPersonalAccessToken": {
      "properties": {
        "pat": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "WorkspaceConnectionPropertiesV2": {
      "oneOf": [
        {
          "properties": {
            "authType": {
              "enum": [
                "AccessKey"
              ],
              "type": "string"
            },
            "credentials": {
              "oneOf": [
                {
                  "$ref": "#/definitions/WorkspaceConnectionAccessKey"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "authType"
          ],
          "type": "object"
        },
        {
          "description": "This connection type covers the generic ApiKey auth connection categories, for examples:\r\nAzureOpenAI:\r\n    Category:= AzureOpenAI\r\n    AuthType:= ApiKey (as type discriminator)\r\n    Credentials:= {ApiKey} as Microsoft.MachineLearning.AccountRP.Contracts.WorkspaceConnection.ApiKey\r\n    Target:= {ApiBase}\r\n            \r\nCognitiveService:\r\n    Category:= CognitiveService\r\n    AuthType:= ApiKey (as type discriminator)\r\n    Credentials:= {SubscriptionKey} as Microsoft.MachineLearning.AccountRP.Contracts.WorkspaceConnection.ApiKey\r\n    Target:= ServiceRegion={serviceRegion}\r\n            \r\nCognitiveSearch:\r\n    Category:= CognitiveSearch\r\n    AuthType:= ApiKey (as type discriminator)\r\n    Credentials:= {Key} as Microsoft.MachineLearning.AccountRP.Contracts.WorkspaceConnection.ApiKey\r\n    Target:= {Endpoint}\r\n            \r\nUse Metadata property bag for ApiType, ApiVersion, Kind and other metadata fields",
          "properties": {
            "authType": {
              "enum": [
                "ApiKey"
              ],
              "type": "string"
            },
            "credentials": {
              "description": "Api key object for workspace connection credential.",
              "oneOf": [
                {
                  "$ref": "#/definitions/WorkspaceConnectionApiKey"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "authType"
          ],
          "type": "object"
        },
        {
          "description": "Category:= CustomKeys\r\nAuthType:= CustomKeys (as type discriminator)\r\nCredentials:= {CustomKeys} as Microsoft.MachineLearning.AccountRP.Contracts.WorkspaceConnection.CustomKeys\r\nTarget:= {any value}\r\nUse Metadata property bag for ApiVersion and other metadata fields",
          "properties": {
            "authType": {
              "enum": [
                "CustomKeys"
              ],
              "type": "string"
            },
            "credentials": {
              "description": "Custom Keys credential object",
              "oneOf": [
                {
                  "$ref": "#/definitions/CustomKeys"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "authType"
          ],
          "type": "object"
        },
        {
          "properties": {
            "authType": {
              "enum": [
                "ManagedIdentity"
              ],
              "type": "string"
            },
            "credentials": {
              "oneOf": [
                {
                  "$ref": "#/definitions/WorkspaceConnectionManagedIdentity"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "authType"
          ],
          "type": "object"
        },
        {
          "properties": {
            "authType": {
              "enum": [
                "None"
              ],
              "type": "string"
            }
          },
          "required": [
            "authType"
          ],
          "type": "object"
        },
        {
          "properties": {
            "authType": {
              "enum": [
                "PAT"
              ],
              "type": "string"
            },
            "credentials": {
              "oneOf": [
                {
                  "$ref": "#/definitions/WorkspaceConnectionPersonalAccessToken"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "authType"
          ],
          "type": "object"
        },
        {
          "properties": {
            "authType": {
              "enum": [
                "SAS"
              ],
              "type": "string"
            },
            "credentials": {
              "oneOf": [
                {
                  "$ref": "#/definitions/WorkspaceConnectionSharedAccessSignature"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "authType"
          ],
          "type": "object"
        },
        {
          "properties": {
            "authType": {
              "enum": [
                "ServicePrincipal"
              ],
              "type": "string"
            },
            "credentials": {
              "oneOf": [
                {
                  "$ref": "#/definitions/WorkspaceConnectionServicePrincipal"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "authType"
          ],
          "type": "object"
        },
        {
          "properties": {
            "authType": {
              "enum": [
                "UsernamePassword"
              ],
              "type": "string"
            },
            "credentials": {
              "oneOf": [
                {
                  "$ref": "#/definitions/WorkspaceConnectionUsernamePassword"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "authType"
          ],
          "type": "object"
        }
      ],
      "properties": {
        "category": {
          "description": "Category of the connection",
          "oneOf": [
            {
              "enum": [
                "PythonFeed",
                "ContainerRegistry",
                "Git",
                "S3",
                "Snowflake",
                "AzureSqlDb",
                "AzureSynapseAnalytics",
                "AzureMySqlDb",
                "AzurePostgresDb",
                "ADLSGen2",
                "Redis",
                "ApiKey",
                "AzureOpenAI",
                "CognitiveSearch",
                "CognitiveService",
                "CustomKeys"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "expiryTime": {
          "format": "date-time",
          "type": "string"
        },
        "metadata": {
          "description": "Any object",
          "oneOf": [
            {
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "target": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "WorkspaceConnectionServicePrincipal": {
      "properties": {
        "clientId": {
          "type": "string"
        },
        "clientSecret": {
          "type": "string"
        },
        "tenantId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "WorkspaceConnectionSharedAccessSignature": {
      "properties": {
        "sas": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "WorkspaceConnectionUsernamePassword": {
      "properties": {
        "password": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "WorkspaceHubConfig": {
      "description": "WorkspaceHub's configuration object.",
      "properties": {
        "additionalWorkspaceStorageAccounts": {
          "description": "Array of WorkspaceHubConfigAdditionalWorkspaceStorageAccountsItem",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "defaultWorkspaceResourceGroup": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "WorkspacePrivateEndpointResource": {
      "description": "The Private Endpoint resource.",
      "properties": {},
      "type": "object"
    },
    "WorkspaceProperties": {
      "description": "The properties of a machine learning workspace.",
      "properties": {
        "allowPublicAccessWhenBehindVnet": {
          "description": "The flag to indicate whether to allow public access when behind VNet.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "applicationInsights": {
          "description": "ARM id of the application insights associated with this workspace.",
          "type": "string"
        },
        "associatedWorkspaces": {
          "description": "Array of WorkspacePropertiesAssociatedWorkspacesItem",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "containerRegistries": {
          "description": "Array of WorkspacePropertiesContainerRegistriesItem",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "containerRegistry": {
          "description": "ARM id of the container registry associated with this workspace.",
          "type": "string"
        },
        "description": {
          "description": "The description of this workspace.",
          "type": "string"
        },
        "discoveryUrl": {
          "description": "Url for the discovery service to identify regional endpoints for machine learning experimentation services",
          "type": "string"
        },
        "enableDataIsolation": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "encryption": {
          "oneOf": [
            {
              "$ref": "#/definitions/EncryptionProperty"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "existingWorkspaces": {
          "description": "Array of WorkspacePropertiesExistingWorkspacesItem",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "featureStoreSettings": {
          "description": "Settings for feature store type workspace.",
          "oneOf": [
            {
              "$ref": "#/definitions/FeatureStoreSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "friendlyName": {
          "description": "The friendly name for this workspace. This name in mutable",
          "type": "string"
        },
        "hbiWorkspace": {
          "description": "The flag to signal HBI data in the workspace and reduce diagnostic data collected by the service",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "hubResourceId": {
          "type": "string"
        },
        "imageBuildCompute": {
          "description": "The compute name for image build",
          "type": "string"
        },
        "keyVault": {
          "description": "ARM id of the key vault associated with this workspace. This cannot be changed once the workspace has been created",
          "type": "string"
        },
        "keyVaults": {
          "description": "Array of WorkspacePropertiesKeyVaultsItem",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "managedNetwork": {
          "description": "Managed Network settings for a machine learning workspace.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedNetworkSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "primaryUserAssignedIdentity": {
          "description": "The user assigned identity resource id that represents the workspace identity.",
          "type": "string"
        },
        "publicNetworkAccess": {
          "description": "Whether requests from Public Network are allowed.",
          "oneOf": [
            {
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "serviceManagedResourcesSettings": {
          "description": "The service managed resource settings.",
          "oneOf": [
            {
              "$ref": "#/definitions/ServiceManagedResourcesSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "sharedPrivateLinkResources": {
          "description": "The list of shared private link resources in this workspace.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/SharedPrivateLinkResource"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "softDeleteRetentionInDays": {
          "description": "Retention time in days after workspace get soft deleted.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "storageAccount": {
          "description": "ARM id of the storage account associated with this workspace. This cannot be changed once the workspace has been created",
          "type": "string"
        },
        "storageAccounts": {
          "description": "Array of WorkspacePropertiesStorageAccountsItem",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "systemDatastoresAuthMode": {
          "description": "The auth mode used for accessing the system datastores of the workspace.",
          "type": "string"
        },
        "v1LegacyMode": {
          "description": "Enabling v1_legacy_mode may prevent you from using features provided by the v2 API.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "workspaceHubConfig": {
          "description": "WorkspaceHub's configuration object.",
          "oneOf": [
            {
              "$ref": "#/definitions/WorkspaceHubConfig"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "registries_codes_childResource": {
      "description": "Microsoft.MachineLearningServices/registries/codes",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-06-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Container name.",
          "oneOf": [
            {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "[Required] Additional attributes of the entity.",
          "oneOf": [
            {
              "$ref": "#/definitions/CodeContainerProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "codes"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "registries_codes_versions_childResource": {
      "description": "Microsoft.MachineLearningServices/registries/codes/versions",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-06-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Version identifier.",
          "type": "string"
        },
        "properties": {
          "description": "[Required] Additional attributes of the entity.",
          "oneOf": [
            {
              "$ref": "#/definitions/CodeVersionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "versions"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "registries_components_childResource": {
      "description": "Microsoft.MachineLearningServices/registries/components",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-06-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Container name.",
          "oneOf": [
            {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "[Required] Additional attributes of the entity.",
          "oneOf": [
            {
              "$ref": "#/definitions/ComponentContainerProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "components"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "registries_components_versions_childResource": {
      "description": "Microsoft.MachineLearningServices/registries/components/versions",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-06-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Version identifier.",
          "type": "string"
        },
        "properties": {
          "description": "[Required] Additional attributes of the entity.",
          "oneOf": [
            {
              "$ref": "#/definitions/ComponentVersionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "versions"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "registries_data_childResource": {
      "description": "Microsoft.MachineLearningServices/registries/data",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-06-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Container name.",
          "oneOf": [
            {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "[Required] Additional attributes of the entity.",
          "oneOf": [
            {
              "$ref": "#/definitions/DataContainerProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "data"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "registries_data_versions_childResource": {
      "description": "Microsoft.MachineLearningServices/registries/data/versions",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-06-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Version identifier.",
          "type": "string"
        },
        "properties": {
          "description": "[Required] Additional attributes of the entity.",
          "oneOf": [
            {
              "$ref": "#/definitions/DataVersionBaseProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "versions"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "registries_environments_childResource": {
      "description": "Microsoft.MachineLearningServices/registries/environments",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-06-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Container name.",
          "oneOf": [
            {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "[Required] Additional attributes of the entity.",
          "oneOf": [
            {
              "$ref": "#/definitions/EnvironmentContainerProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "environments"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "registries_environments_versions_childResource": {
      "description": "Microsoft.MachineLearningServices/registries/environments/versions",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-06-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Version identifier.",
          "type": "string"
        },
        "properties": {
          "description": "[Required] Additional attributes of the entity.",
          "oneOf": [
            {
              "$ref": "#/definitions/EnvironmentVersionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "versions"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "registries_models_childResource": {
      "description": "Microsoft.MachineLearningServices/registries/models",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-06-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Container name.",
          "oneOf": [
            {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "[Required] Additional attributes of the entity.",
          "oneOf": [
            {
              "$ref": "#/definitions/ModelContainerProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "models"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "registries_models_versions_childResource": {
      "description": "Microsoft.MachineLearningServices/registries/models/versions",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-06-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Version identifier.",
          "type": "string"
        },
        "properties": {
          "description": "[Required] Additional attributes of the entity.",
          "oneOf": [
            {
              "$ref": "#/definitions/ModelVersionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "versions"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "workspaces_batchEndpoints_childResource": {
      "description": "Microsoft.MachineLearningServices/workspaces/batchEndpoints",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-06-01-preview"
          ],
          "type": "string"
        },
        "identity": {
          "description": "Managed service identity (system assigned and/or user assigned identities)",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedServiceIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "kind": {
          "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type.",
          "type": "string"
        },
        "location": {
          "description": "The geo-location where the resource lives",
          "type": "string"
        },
        "name": {
          "description": "Name for the Batch inference endpoint.",
          "oneOf": [
            {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "[Required] Additional attributes of the entity.",
          "oneOf": [
            {
              "$ref": "#/definitions/BatchEndpointProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "sku": {
          "description": "Sku details required for ARM contract for Autoscaling.",
          "oneOf": [
            {
              "$ref": "#/definitions/Sku"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Resource tags.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "batchEndpoints"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "workspaces_batchEndpoints_deployments_childResource": {
      "description": "Microsoft.MachineLearningServices/workspaces/batchEndpoints/deployments",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-06-01-preview"
          ],
          "type": "string"
        },
        "identity": {
          "description": "Managed service identity (system assigned and/or user assigned identities)",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedServiceIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "kind": {
          "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type.",
          "type": "string"
        },
        "location": {
          "description": "The geo-location where the resource lives",
          "type": "string"
        },
        "name": {
          "description": "The identifier for the Batch inference deployment.",
          "oneOf": [
            {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "[Required] Additional attributes of the entity.",
          "oneOf": [
            {
              "$ref": "#/definitions/BatchDeploymentProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "sku": {
          "description": "Sku details required for ARM contract for Autoscaling.",
          "oneOf": [
            {
              "$ref": "#/definitions/Sku"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Resource tags.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "deployments"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "workspaces_codes_childResource": {
      "description": "Microsoft.MachineLearningServices/workspaces/codes",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-06-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Container name. This is case-sensitive.",
          "oneOf": [
            {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "[Required] Additional attributes of the entity.",
          "oneOf": [
            {
              "$ref": "#/definitions/CodeContainerProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "codes"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "workspaces_codes_versions_childResource": {
      "description": "Microsoft.MachineLearningServices/workspaces/codes/versions",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-06-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Version identifier. This is case-sensitive.",
          "type": "string"
        },
        "properties": {
          "description": "[Required] Additional attributes of the entity.",
          "oneOf": [
            {
              "$ref": "#/definitions/CodeVersionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "versions"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "workspaces_components_childResource": {
      "description": "Microsoft.MachineLearningServices/workspaces/components",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-06-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Container name.",
          "oneOf": [
            {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "[Required] Additional attributes of the entity.",
          "oneOf": [
            {
              "$ref": "#/definitions/ComponentContainerProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "components"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "workspaces_components_versions_childResource": {
      "description": "Microsoft.MachineLearningServices/workspaces/components/versions",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-06-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Version identifier.",
          "type": "string"
        },
        "properties": {
          "description": "[Required] Additional attributes of the entity.",
          "oneOf": [
            {
              "$ref": "#/definitions/ComponentVersionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "versions"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "workspaces_computes_childResource": {
      "description": "Microsoft.MachineLearningServices/workspaces/computes",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-06-01-preview"
          ],
          "type": "string"
        },
        "identity": {
          "description": "The identity of the resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedServiceIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "location": {
          "description": "Specifies the location of the resource.",
          "type": "string"
        },
        "name": {
          "description": "Name of the Azure Machine Learning compute.",
          "type": "string"
        },
        "properties": {
          "description": "Compute properties",
          "oneOf": [
            {
              "$ref": "#/definitions/Compute"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "sku": {
          "description": "The sku of the workspace.",
          "oneOf": [
            {
              "$ref": "#/definitions/Sku"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Contains resource tags defined as key/value pairs.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "computes"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "workspaces_connections_childResource": {
      "description": "Microsoft.MachineLearningServices/workspaces/connections",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-06-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Friendly name of the workspace connection",
          "oneOf": [
            {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/WorkspaceConnectionPropertiesV2"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "connections"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "workspaces_data_childResource": {
      "description": "Microsoft.MachineLearningServices/workspaces/data",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-06-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Container name.",
          "oneOf": [
            {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "[Required] Additional attributes of the entity.",
          "oneOf": [
            {
              "$ref": "#/definitions/DataContainerProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "data"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "workspaces_data_versions_childResource": {
      "description": "Microsoft.MachineLearningServices/workspaces/data/versions",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-06-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Version identifier.",
          "type": "string"
        },
        "properties": {
          "description": "[Required] Additional attributes of the entity.",
          "oneOf": [
            {
              "$ref": "#/definitions/DataVersionBaseProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "versions"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "workspaces_datastores_childResource": {
      "description": "Microsoft.MachineLearningServices/workspaces/datastores",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-06-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Datastore name.",
          "oneOf": [
            {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "[Required] Additional attributes of the entity.",
          "oneOf": [
            {
              "$ref": "#/definitions/DatastoreProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "datastores"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "workspaces_environments_childResource": {
      "description": "Microsoft.MachineLearningServices/workspaces/environments",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-06-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Container name. This is case-sensitive.",
          "oneOf": [
            {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "[Required] Additional attributes of the entity.",
          "oneOf": [
            {
              "$ref": "#/definitions/EnvironmentContainerProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "environments"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "workspaces_environments_versions_childResource": {
      "description": "Microsoft.MachineLearningServices/workspaces/environments/versions",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-06-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Version of EnvironmentVersion.",
          "type": "string"
        },
        "properties": {
          "description": "[Required] Additional attributes of the entity.",
          "oneOf": [
            {
              "$ref": "#/definitions/EnvironmentVersionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "versions"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "workspaces_featuresets_childResource": {
      "description": "Microsoft.MachineLearningServices/workspaces/featuresets",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-06-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Container name. This is case-sensitive.",
          "oneOf": [
            {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "[Required] Additional attributes of the entity.",
          "oneOf": [
            {
              "$ref": "#/definitions/FeaturesetContainerProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "featuresets"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "workspaces_featuresets_versions_childResource": {
      "description": "Microsoft.MachineLearningServices/workspaces/featuresets/versions",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-06-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Version identifier. This is case-sensitive.",
          "type": "string"
        },
        "properties": {
          "description": "[Required] Additional attributes of the entity.",
          "oneOf": [
            {
              "$ref": "#/definitions/FeaturesetVersionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "versions"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "workspaces_featurestoreEntities_childResource": {
      "description": "Microsoft.MachineLearningServices/workspaces/featurestoreEntities",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-06-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Container name. This is case-sensitive.",
          "oneOf": [
            {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "[Required] Additional attributes of the entity.",
          "oneOf": [
            {
              "$ref": "#/definitions/FeaturestoreEntityContainerProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "featurestoreEntities"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "workspaces_featurestoreEntities_versions_childResource": {
      "description": "Microsoft.MachineLearningServices/workspaces/featurestoreEntities/versions",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-06-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Version identifier. This is case-sensitive.",
          "type": "string"
        },
        "properties": {
          "description": "[Required] Additional attributes of the entity.",
          "oneOf": [
            {
              "$ref": "#/definitions/FeaturestoreEntityVersionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "versions"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "workspaces_jobs_childResource": {
      "description": "Microsoft.MachineLearningServices/workspaces/jobs",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-06-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name and identifier for the Job. This is case-sensitive.",
          "oneOf": [
            {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "[Required] Additional attributes of the entity.",
          "oneOf": [
            {
              "$ref": "#/definitions/JobBaseProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "jobs"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "workspaces_labelingJobs_childResource": {
      "description": "Microsoft.MachineLearningServices/workspaces/labelingJobs",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-06-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name and identifier for the LabelingJob.",
          "oneOf": [
            {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "[Required] Additional attributes of the entity.",
          "oneOf": [
            {
              "$ref": "#/definitions/LabelingJobProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "labelingJobs"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "workspaces_models_childResource": {
      "description": "Microsoft.MachineLearningServices/workspaces/models",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-06-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Container name. This is case-sensitive.",
          "oneOf": [
            {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "[Required] Additional attributes of the entity.",
          "oneOf": [
            {
              "$ref": "#/definitions/ModelContainerProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "models"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "workspaces_models_versions_childResource": {
      "description": "Microsoft.MachineLearningServices/workspaces/models/versions",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-06-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Version identifier. This is case-sensitive.",
          "type": "string"
        },
        "properties": {
          "description": "[Required] Additional attributes of the entity.",
          "oneOf": [
            {
              "$ref": "#/definitions/ModelVersionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "versions"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "workspaces_onlineEndpoints_childResource": {
      "description": "Microsoft.MachineLearningServices/workspaces/onlineEndpoints",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-06-01-preview"
          ],
          "type": "string"
        },
        "identity": {
          "description": "Managed service identity (system assigned and/or user assigned identities)",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedServiceIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "kind": {
          "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type.",
          "type": "string"
        },
        "location": {
          "description": "The geo-location where the resource lives",
          "type": "string"
        },
        "name": {
          "description": "Online Endpoint name.",
          "oneOf": [
            {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "[Required] Additional attributes of the entity.",
          "oneOf": [
            {
              "$ref": "#/definitions/OnlineEndpointProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "sku": {
          "description": "Sku details required for ARM contract for Autoscaling.",
          "oneOf": [
            {
              "$ref": "#/definitions/Sku"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Resource tags.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "onlineEndpoints"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "workspaces_onlineEndpoints_deployments_childResource": {
      "description": "Microsoft.MachineLearningServices/workspaces/onlineEndpoints/deployments",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-06-01-preview"
          ],
          "type": "string"
        },
        "identity": {
          "description": "Managed service identity (system assigned and/or user assigned identities)",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedServiceIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "kind": {
          "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type.",
          "type": "string"
        },
        "location": {
          "description": "The geo-location where the resource lives",
          "type": "string"
        },
        "name": {
          "description": "Inference Endpoint Deployment name.",
          "oneOf": [
            {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "[Required] Additional attributes of the entity.",
          "oneOf": [
            {
              "$ref": "#/definitions/OnlineDeploymentProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "sku": {
          "description": "Sku details required for ARM contract for Autoscaling.",
          "oneOf": [
            {
              "$ref": "#/definitions/Sku"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Resource tags.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "deployments"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "workspaces_outboundRules_childResource": {
      "description": "Microsoft.MachineLearningServices/workspaces/outboundRules",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-06-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Name of the workspace managed network outbound rule",
          "oneOf": [
            {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9_-]{2,32}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Outbound Rule for the managed network of a machine learning workspace.",
          "oneOf": [
            {
              "$ref": "#/definitions/OutboundRule"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "outboundRules"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "workspaces_privateEndpointConnections_childResource": {
      "description": "Microsoft.MachineLearningServices/workspaces/privateEndpointConnections",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-06-01-preview"
          ],
          "type": "string"
        },
        "identity": {
          "description": "Managed service identity (system assigned and/or user assigned identities)",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedServiceIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "location": {
          "description": "Same as workspace location.",
          "type": "string"
        },
        "name": {
          "description": "NRP Private Endpoint Connection Name",
          "type": "string"
        },
        "properties": {
          "description": "Private endpoint connection properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/PrivateEndpointConnectionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "sku": {
          "description": "Optional. This field is required to be implemented by the RP because AML is supporting more than one tier",
          "oneOf": [
            {
              "$ref": "#/definitions/Sku"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Dictionary of <string>",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "privateEndpointConnections"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "workspaces_schedules_childResource": {
      "description": "Microsoft.MachineLearningServices/workspaces/schedules",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-06-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Schedule name.",
          "oneOf": [
            {
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]{0,254}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "[Required] Additional attributes of the entity.",
          "oneOf": [
            {
              "$ref": "#/definitions/ScheduleProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "schedules"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    }
  }
}