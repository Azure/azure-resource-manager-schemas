{
  "id": "https://schema.management.azure.com/schemas/2023-08-01/Microsoft.DevHub.json#",
  "title": "Microsoft.DevHub",
  "description": "Microsoft DevHub Resource Types",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "resourceDefinitions": {
    "workflows": {
      "description": "Microsoft.DevHub/workflows",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-08-01"
          ],
          "type": "string"
        },
        "location": {
          "description": "The geo-location where the resource lives",
          "type": "string"
        },
        "name": {
          "description": "The name of the workflow resource.",
          "oneOf": [
            {
              "maxLength": 63,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9]$|^[a-zA-Z0-9][-_a-zA-Z0-9]{0,61}[a-zA-Z0-9]$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Properties of a workflow.",
          "oneOf": [
            {
              "$ref": "#/definitions/WorkflowProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Resource tags.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.DevHub/workflows"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    }
  },
  "definitions": {
    "ACR": {
      "description": "Information on the azure container registry",
      "properties": {
        "acrRegistryName": {
          "description": "ACR registry",
          "type": "string"
        },
        "acrRepositoryName": {
          "description": "ACR repository",
          "type": "string"
        },
        "acrResourceGroup": {
          "description": "ACR resource group",
          "type": "string"
        },
        "acrSubscriptionId": {
          "description": "ACR subscription id",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ArtifactGenerationProperties": {
      "description": "Properties used for generating artifacts such as Dockerfiles and manifests.",
      "properties": {
        "appName": {
          "description": "The name of the app.",
          "type": "string"
        },
        "builderVersion": {
          "description": "The version of the language image used for building the code in the generated dockerfile.",
          "type": "string"
        },
        "dockerfileGenerationMode": {
          "description": "The mode of generation to be used for generating Dockerfiles.",
          "oneOf": [
            {
              "enum": [
                "enabled",
                "disabled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "dockerfileOutputDirectory": {
          "description": "The directory to output the generated Dockerfile to.",
          "type": "string"
        },
        "generationLanguage": {
          "description": "The programming language used.",
          "oneOf": [
            {
              "enum": [
                "clojure",
                "csharp",
                "erlang",
                "go",
                "gomodule",
                "gradle",
                "java",
                "javascript",
                "php",
                "python",
                "ruby",
                "rust",
                "swift"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "imageName": {
          "description": "The name of the image to be generated.",
          "type": "string"
        },
        "imageTag": {
          "description": "The tag to apply to the generated image.",
          "type": "string"
        },
        "languageVersion": {
          "description": "The version of the language image used for execution in the generated dockerfile.",
          "type": "string"
        },
        "manifestGenerationMode": {
          "description": "The mode of generation to be used for generating Manifest.",
          "oneOf": [
            {
              "enum": [
                "enabled",
                "disabled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "manifestOutputDirectory": {
          "description": "The directory to output the generated manifests to.",
          "type": "string"
        },
        "manifestType": {
          "description": "Determines the type of manifests to be generated.",
          "oneOf": [
            {
              "enum": [
                "helm",
                "kube"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "namespace": {
          "description": "The namespace to deploy the application to.",
          "type": "string"
        },
        "port": {
          "description": "The port the application is exposed on.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DeploymentProperties": {
      "properties": {
        "helmChartPath": {
          "description": "Helm chart directory path in repository.",
          "type": "string"
        },
        "helmValues": {
          "description": "Helm Values.yaml file location in repository.",
          "type": "string"
        },
        "kubeManifestLocations": {
          "description": "",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "manifestType": {
          "description": "Determines the type of manifests within the repository.",
          "oneOf": [
            {
              "enum": [
                "helm",
                "kube"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "overrides": {
          "description": "Manifest override values.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "GitHubWorkflowProfile": {
      "description": "GitHub Workflow Profile",
      "properties": {
        "acr": {
          "description": "Information on the azure container registry",
          "oneOf": [
            {
              "$ref": "#/definitions/ACR"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "aksResourceId": {
          "description": "The Azure Kubernetes Cluster Resource the application will be deployed to.",
          "type": "string"
        },
        "branchName": {
          "description": "Repository Branch Name",
          "type": "string"
        },
        "deploymentProperties": {
          "description": "",
          "oneOf": [
            {
              "$ref": "#/definitions/DeploymentProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "dockerBuildContext": {
          "description": "Path to Dockerfile Build Context within the repository.",
          "type": "string"
        },
        "dockerfile": {
          "description": "Path to the Dockerfile within the repository.",
          "type": "string"
        },
        "lastWorkflowRun": {
          "description": "",
          "oneOf": [
            {
              "$ref": "#/definitions/WorkflowRun"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "namespace": {
          "description": "Kubernetes namespace the application is deployed to.",
          "type": "string"
        },
        "oidcCredentials": {
          "description": "The fields needed for OIDC with GitHub.",
          "oneOf": [
            {
              "$ref": "#/definitions/GitHubWorkflowProfileOidcCredentials"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "repositoryName": {
          "description": "Repository Name",
          "type": "string"
        },
        "repositoryOwner": {
          "description": "Repository Owner",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GitHubWorkflowProfileOidcCredentials": {
      "description": "The fields needed for OIDC with GitHub.",
      "properties": {
        "azureClientId": {
          "description": "Azure Application Client ID",
          "type": "string"
        },
        "azureTenantId": {
          "description": "Azure Directory (tenant) ID",
          "type": "string"
        }
      },
      "type": "object"
    },
    "WorkflowProperties": {
      "description": "Workflow properties",
      "properties": {
        "artifactGenerationProperties": {
          "description": "Properties for generating artifacts like dockerfile and manifests.",
          "oneOf": [
            {
              "$ref": "#/definitions/ArtifactGenerationProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "githubWorkflowProfile": {
          "description": "Profile of a github workflow.",
          "oneOf": [
            {
              "$ref": "#/definitions/GitHubWorkflowProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "WorkflowRun": {
      "properties": {
        "workflowRunStatus": {
          "description": "Describes the status of the workflow run",
          "oneOf": [
            {
              "enum": [
                "queued",
                "inprogress",
                "completed"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    }
  }
}