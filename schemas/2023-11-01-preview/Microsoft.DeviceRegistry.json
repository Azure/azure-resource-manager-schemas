{
  "id": "https://schema.management.azure.com/schemas/2023-11-01-preview/Microsoft.DeviceRegistry.json#",
  "title": "Microsoft.DeviceRegistry",
  "description": "Microsoft DeviceRegistry Resource Types",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "resourceDefinitions": {
    "assetEndpointProfiles": {
      "description": "Microsoft.DeviceRegistry/assetEndpointProfiles",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-11-01-preview"
          ],
          "type": "string"
        },
        "extendedLocation": {
          "description": "The extended location.",
          "oneOf": [
            {
              "$ref": "#/definitions/ExtendedLocation"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "location": {
          "description": "The geo-location where the resource lives",
          "type": "string"
        },
        "name": {
          "description": "Asset Endpoint Profile name parameter.",
          "oneOf": [
            {
              "maxLength": 63,
              "minLength": 3,
              "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/AssetEndpointProfileProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Resource tags.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.DeviceRegistry/assetEndpointProfiles"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "assets": {
      "description": "Microsoft.DeviceRegistry/assets",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-11-01-preview"
          ],
          "type": "string"
        },
        "extendedLocation": {
          "description": "The extended location.",
          "oneOf": [
            {
              "$ref": "#/definitions/ExtendedLocation"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "location": {
          "description": "The geo-location where the resource lives",
          "type": "string"
        },
        "name": {
          "description": "Asset name parameter.",
          "oneOf": [
            {
              "maxLength": 63,
              "minLength": 3,
              "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/AssetProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Resource tags.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.DeviceRegistry/assets"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    }
  },
  "definitions": {
    "AssetEndpointProfileProperties": {
      "description": "Defines the Asset Endpoint Profile properties.",
      "properties": {
        "additionalConfiguration": {
          "description": "Contains connectivity type specific further configuration (e.g. OPC UA, Modbus, ONVIF).",
          "type": "string"
        },
        "targetAddress": {
          "description": "The local valid URI specifying the network address/DNS name of a southbound device. The scheme part of the targetAddress URI specifies the type of the device. The additionalConfiguration field holds further connector type specific configuration.",
          "type": "string"
        },
        "transportAuthentication": {
          "description": "Defines the authentication mechanism for the southbound connector connecting to the shop floor/OT device.",
          "oneOf": [
            {
              "$ref": "#/definitions/TransportAuthentication"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "userAuthentication": {
          "description": "Defines the client authentication mechanism to the server.",
          "oneOf": [
            {
              "$ref": "#/definitions/UserAuthentication"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "targetAddress"
      ],
      "type": "object"
    },
    "AssetProperties": {
      "description": "Defines the asset properties.",
      "properties": {
        "assetEndpointProfileUri": {
          "description": "A reference to the asset endpoint profile (connection information) used by brokers to connect to an endpoint that provides data points for this asset. Must have the format <ModuleCR.metadata.namespace>/<ModuleCR.metadata.name>.",
          "type": "string"
        },
        "assetType": {
          "description": "Resource path to asset type (model) definition.",
          "type": "string"
        },
        "attributes": {
          "description": "A set of key-value pairs that contain custom attributes set by the customer.",
          "oneOf": [
            {
              "additionalProperties": {},
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "dataPoints": {
          "description": "Array of data points that are part of the asset. Each data point can reference an asset type capability and have per-data point configuration. See below for more details for the definition of the dataPoints element.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/DataPoint"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "defaultDataPointsConfiguration": {
          "description": "Protocol-specific default configuration for all data points. Each data point can have its own configuration that overrides the default settings here. This assumes that each asset instance has one protocol.",
          "type": "string"
        },
        "defaultEventsConfiguration": {
          "description": "Protocol-specific default configuration for all events. Each event can have its own configuration that overrides the default settings here. This assumes that each asset instance has one protocol.",
          "type": "string"
        },
        "description": {
          "description": "Human-readable description of the asset.",
          "type": "string"
        },
        "displayName": {
          "description": "Human-readable display name.",
          "type": "string"
        },
        "documentationUri": {
          "description": "Reference to the documentation.",
          "type": "string"
        },
        "enabled": {
          "description": "Enabled/Disabled status of the asset.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "events": {
          "description": "Array of events that are part of the asset. Each event can reference an asset type capability and have per-event configuration. See below for more details about the definition of the events element.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/Event"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "externalAssetId": {
          "description": "Asset id provided by the customer.",
          "type": "string"
        },
        "hardwareRevision": {
          "description": "Revision number of the hardware.",
          "type": "string"
        },
        "manufacturer": {
          "description": "Asset manufacturer name.",
          "type": "string"
        },
        "manufacturerUri": {
          "description": "Asset manufacturer URI.",
          "type": "string"
        },
        "model": {
          "description": "Asset model name.",
          "type": "string"
        },
        "productCode": {
          "description": "Asset product code.",
          "type": "string"
        },
        "serialNumber": {
          "description": "Asset serial number.",
          "type": "string"
        },
        "softwareRevision": {
          "description": "Revision number of the software.",
          "type": "string"
        }
      },
      "required": [
        "assetEndpointProfileUri"
      ],
      "type": "object"
    },
    "DataPoint": {
      "description": "Defines the data point properties.",
      "properties": {
        "capabilityId": {
          "description": "The path to the type definition of the capability (e.g. DTMI, OPC UA information model node id, etc.), for example dtmi:com:example:Robot:_contents:__prop1;1.",
          "type": "string"
        },
        "dataPointConfiguration": {
          "description": "Protocol-specific configuration for the data point. For OPC UA, this could include configuration like, publishingInterval, samplingInterval, and queueSize.",
          "type": "string"
        },
        "dataSource": {
          "description": "The address of the source of the data in the asset (e.g. URL) so that a client can access the data source on the asset.",
          "type": "string"
        },
        "name": {
          "description": "The name of the data point.",
          "type": "string"
        },
        "observabilityMode": {
          "description": "An indication of how the data point should be mapped to OpenTelemetry.",
          "oneOf": [
            {
              "enum": [
                "none",
                "counter",
                "gauge",
                "histogram",
                "log"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "dataSource"
      ],
      "type": "object"
    },
    "Event": {
      "description": "Defines the event properties.",
      "properties": {
        "capabilityId": {
          "description": "The path to the type definition of the capability (e.g. DTMI, OPC UA information model node id, etc.), for example dtmi:com:example:Robot:_contents:__prop1;1.",
          "type": "string"
        },
        "eventConfiguration": {
          "description": "Protocol-specific configuration for the event. For OPC UA, this could include configuration like, publishingInterval, samplingInterval, and queueSize.",
          "type": "string"
        },
        "eventNotifier": {
          "description": "The address of the notifier of the event in the asset (e.g. URL) so that a client can access the event on the asset.",
          "type": "string"
        },
        "name": {
          "description": "The name of the event.",
          "type": "string"
        },
        "observabilityMode": {
          "description": "An indication of how the event should be mapped to OpenTelemetry.",
          "oneOf": [
            {
              "enum": [
                "none",
                "log"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "eventNotifier"
      ],
      "type": "object"
    },
    "ExtendedLocation": {
      "description": "The extended location.",
      "properties": {
        "name": {
          "description": "The extended location name.",
          "type": "string"
        },
        "type": {
          "description": "The extended location type.",
          "type": "string"
        }
      },
      "required": [
        "type",
        "name"
      ],
      "type": "object"
    },
    "OwnCertificate": {
      "description": "Certificate or private key that can be used by the southbound connector connecting to the shop floor/OT device. The accepted extensions are .der for certificates and .pfx/.pem for private keys.",
      "properties": {
        "certPasswordReference": {
          "description": "Secret Reference Name (Pfx or Pem password).",
          "type": "string"
        },
        "certSecretReference": {
          "description": "Secret Reference name (cert and private key).",
          "type": "string"
        },
        "certThumbprint": {
          "description": "Certificate thumbprint.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "TransportAuthentication": {
      "description": "Definition of the authentication mechanism for the southbound connector.",
      "properties": {
        "ownCertificates": {
          "description": "Defines a reference to a secret which contains all certificates and private keys that can be used by the southbound connector connecting to the shop floor/OT device. The accepted extensions are .der for certificates and .pfx/.pem for private keys.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/OwnCertificate"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "ownCertificates"
      ],
      "type": "object"
    },
    "UserAuthentication": {
      "description": "Definition of the client authentication mechanism to the server.",
      "properties": {
        "mode": {
          "description": "Defines the mode to authenticate the user of the client at the server.",
          "oneOf": [
            {
              "enum": [
                "Anonymous",
                "Certificate",
                "UsernamePassword"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "usernamePasswordCredentials": {
          "description": "Defines the username and password references when UsernamePassword user authentication mode is selected.",
          "oneOf": [
            {
              "$ref": "#/definitions/UsernamePasswordCredentials"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "x509Credentials": {
          "description": "Defines the certificate reference when Certificate user authentication mode is selected.",
          "oneOf": [
            {
              "$ref": "#/definitions/X509Credentials"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "mode"
      ],
      "type": "object"
    },
    "UsernamePasswordCredentials": {
      "description": "The credentials for authentication mode UsernamePassword.",
      "properties": {
        "passwordReference": {
          "description": "A reference to secret containing the password.",
          "type": "string"
        },
        "usernameReference": {
          "description": "A reference to secret containing the username.",
          "type": "string"
        }
      },
      "required": [
        "usernameReference",
        "passwordReference"
      ],
      "type": "object"
    },
    "X509Credentials": {
      "description": "The x509 certificate for authentication mode Certificate.",
      "properties": {
        "certificateReference": {
          "description": "A reference to secret containing the certificate and private key (e.g. stored as .der/.pem or .der/.pfx).",
          "type": "string"
        }
      },
      "required": [
        "certificateReference"
      ],
      "type": "object"
    }
  }
}