{
  "id": "https://schema.management.azure.com/schemas/2023-12-01/Microsoft.ConnectedVMwarevSphere.json#",
  "title": "Microsoft.ConnectedVMwarevSphere",
  "description": "Microsoft ConnectedVMwarevSphere Resource Types",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "resourceDefinitions": {
    "clusters": {
      "description": "Microsoft.ConnectedVMwarevSphere/clusters",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-12-01"
          ],
          "type": "string"
        },
        "extendedLocation": {
          "description": "Gets or sets the extended location.",
          "oneOf": [
            {
              "$ref": "#/definitions/ExtendedLocation"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "kind": {
          "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.",
          "type": "string"
        },
        "location": {
          "description": "Gets or sets the location.",
          "type": "string"
        },
        "name": {
          "description": "Name of the cluster.",
          "type": "string"
        },
        "properties": {
          "description": "Resource properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/ClusterProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Gets or sets the Resource tags.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.ConnectedVMwarevSphere/clusters"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "datastores": {
      "description": "Microsoft.ConnectedVMwarevSphere/datastores",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-12-01"
          ],
          "type": "string"
        },
        "extendedLocation": {
          "description": "Gets or sets the extended location.",
          "oneOf": [
            {
              "$ref": "#/definitions/ExtendedLocation"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "kind": {
          "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.",
          "type": "string"
        },
        "location": {
          "description": "Gets or sets the location.",
          "type": "string"
        },
        "name": {
          "description": "Name of the datastore.",
          "type": "string"
        },
        "properties": {
          "description": "Resource properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/DatastoreProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Gets or sets the Resource tags.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.ConnectedVMwarevSphere/datastores"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "hosts": {
      "description": "Microsoft.ConnectedVMwarevSphere/hosts",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-12-01"
          ],
          "type": "string"
        },
        "extendedLocation": {
          "description": "Gets or sets the extended location.",
          "oneOf": [
            {
              "$ref": "#/definitions/ExtendedLocation"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "kind": {
          "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.",
          "type": "string"
        },
        "location": {
          "description": "Gets or sets the location.",
          "type": "string"
        },
        "name": {
          "description": "Name of the host.",
          "type": "string"
        },
        "properties": {
          "description": "Resource properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/HostProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Gets or sets the Resource tags.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.ConnectedVMwarevSphere/hosts"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "resourcePools": {
      "description": "Microsoft.ConnectedVMwarevSphere/resourcePools",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-12-01"
          ],
          "type": "string"
        },
        "extendedLocation": {
          "description": "Gets or sets the extended location.",
          "oneOf": [
            {
              "$ref": "#/definitions/ExtendedLocation"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "kind": {
          "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.",
          "type": "string"
        },
        "location": {
          "description": "Gets or sets the location.",
          "type": "string"
        },
        "name": {
          "description": "Name of the resourcePool.",
          "type": "string"
        },
        "properties": {
          "description": "Resource properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/ResourcePoolProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Gets or sets the Resource tags.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.ConnectedVMwarevSphere/resourcePools"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "vcenters": {
      "description": "Microsoft.ConnectedVMwarevSphere/vcenters",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-12-01"
          ],
          "type": "string"
        },
        "extendedLocation": {
          "description": "Gets or sets the extended location.",
          "oneOf": [
            {
              "$ref": "#/definitions/ExtendedLocation"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "kind": {
          "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.",
          "type": "string"
        },
        "location": {
          "description": "Gets or sets the location.",
          "type": "string"
        },
        "name": {
          "description": "Name of the vCenter.",
          "type": "string"
        },
        "properties": {
          "description": "Resource properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/VCenterProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/vcenters_inventoryItems_childResource"
              }
            ]
          },
          "type": "array"
        },
        "tags": {
          "description": "Gets or sets the Resource tags.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.ConnectedVMwarevSphere/vcenters"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "vcenters_inventoryItems": {
      "description": "Microsoft.ConnectedVMwarevSphere/vcenters/inventoryItems",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-12-01"
          ],
          "type": "string"
        },
        "kind": {
          "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.",
          "type": "string"
        },
        "name": {
          "description": "Name of the inventoryItem.",
          "type": "string"
        },
        "properties": {
          "description": "Resource properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/InventoryItemProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.ConnectedVMwarevSphere/vcenters/inventoryItems"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "virtualMachineTemplates": {
      "description": "Microsoft.ConnectedVMwarevSphere/virtualMachineTemplates",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-12-01"
          ],
          "type": "string"
        },
        "extendedLocation": {
          "description": "Gets or sets the extended location.",
          "oneOf": [
            {
              "$ref": "#/definitions/ExtendedLocation"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "kind": {
          "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.",
          "type": "string"
        },
        "location": {
          "description": "Gets or sets the location.",
          "type": "string"
        },
        "name": {
          "description": "Name of the virtual machine template resource.",
          "type": "string"
        },
        "properties": {
          "description": "Resource properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/VirtualMachineTemplateProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Gets or sets the Resource tags.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.ConnectedVMwarevSphere/virtualMachineTemplates"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "virtualNetworks": {
      "description": "Microsoft.ConnectedVMwarevSphere/virtualNetworks",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-12-01"
          ],
          "type": "string"
        },
        "extendedLocation": {
          "description": "Gets or sets the extended location.",
          "oneOf": [
            {
              "$ref": "#/definitions/ExtendedLocation"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "kind": {
          "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.",
          "type": "string"
        },
        "location": {
          "description": "Gets or sets the location.",
          "type": "string"
        },
        "name": {
          "description": "Name of the virtual network resource.",
          "type": "string"
        },
        "properties": {
          "description": "Resource properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/VirtualNetworkProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Gets or sets the Resource tags.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.ConnectedVMwarevSphere/virtualNetworks"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    }
  },
  "unknown_resourceDefinitions": {
    "virtualMachineInstances": {
      "description": "Microsoft.ConnectedVMwarevSphere/virtualMachineInstances",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-12-01"
          ],
          "type": "string"
        },
        "extendedLocation": {
          "description": "Gets or sets the extended location.",
          "oneOf": [
            {
              "$ref": "#/definitions/ExtendedLocation"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "name": {
          "oneOf": [
            {
              "enum": [
                "default"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Resource properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/VirtualMachineInstanceProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/virtualMachineInstances_guestAgents_childResource"
              }
            ]
          },
          "type": "array"
        },
        "type": {
          "enum": [
            "Microsoft.ConnectedVMwarevSphere/virtualMachineInstances"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "virtualMachineInstances_guestAgents": {
      "description": "Microsoft.ConnectedVMwarevSphere/virtualMachineInstances/guestAgents",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-12-01"
          ],
          "type": "string"
        },
        "name": {
          "oneOf": [
            {
              "pattern": "^.*/default$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Resource properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/GuestAgentProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.ConnectedVMwarevSphere/virtualMachineInstances/guestAgents"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    }
  },
  "definitions": {
    "ClusterProperties": {
      "description": "Describes the properties of a Cluster.",
      "properties": {
        "inventoryItemId": {
          "description": "Gets or sets the inventory Item ID for the cluster.",
          "type": "string"
        },
        "moRefId": {
          "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID for the cluster.",
          "type": "string"
        },
        "vCenterId": {
          "description": "Gets or sets the ARM Id of the vCenter resource in which this cluster resides.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DatastoreProperties": {
      "description": "Describes the properties of a Datastore.",
      "properties": {
        "inventoryItemId": {
          "description": "Gets or sets the inventory Item ID for the datastore.",
          "type": "string"
        },
        "moRefId": {
          "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID for the datastore.",
          "type": "string"
        },
        "vCenterId": {
          "description": "Gets or sets the ARM Id of the vCenter resource in which this datastore resides.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ExtendedLocation": {
      "description": "The extended location.",
      "properties": {
        "name": {
          "description": "The extended location name.",
          "type": "string"
        },
        "type": {
          "description": "The extended location type.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GuestAgentProperties": {
      "description": "Describes the properties of a Virtual Machine Guest Agent.",
      "properties": {
        "credentials": {
          "description": "Username / Password Credentials to provision guest agent.",
          "oneOf": [
            {
              "$ref": "#/definitions/GuestCredential"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "httpProxyConfig": {
          "description": "HTTP Proxy configuration for the VM.",
          "oneOf": [
            {
              "$ref": "#/definitions/HttpProxyConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "privateLinkScopeResourceId": {
          "description": "The resource id of the private link scope this machine is assigned to, if any.",
          "type": "string"
        },
        "provisioningAction": {
          "description": "Gets or sets the guest agent provisioning action.",
          "oneOf": [
            {
              "enum": [
                "install",
                "uninstall",
                "repair"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "GuestCredential": {
      "description": "Username / Password Credentials to connect to guest.",
      "properties": {
        "password": {
          "description": "Gets or sets the password to connect with the guest.",
          "type": "string"
        },
        "privateKey": {
          "description": "Private key used to authenticate to a virtual machine through ssh.",
          "type": "string"
        },
        "username": {
          "description": "Gets or sets username to connect with the guest.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "HardwareProfile": {
      "description": "Specifies the hardware settings for the virtual machine.",
      "properties": {
        "memorySizeMB": {
          "description": "Gets or sets memory size in MBs for the vm.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "numCPUs": {
          "description": "Gets or sets the number of vCPUs for the vm.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "numCoresPerSocket": {
          "description": "Gets or sets the number of cores per socket for the vm. Defaults to 1 if unspecified.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "HostProperties": {
      "description": "Describes the properties of a Host.",
      "properties": {
        "inventoryItemId": {
          "description": "Gets or sets the inventory Item ID for the host.",
          "type": "string"
        },
        "moRefId": {
          "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID for the host.",
          "type": "string"
        },
        "vCenterId": {
          "description": "Gets or sets the ARM Id of the vCenter resource in which this host resides.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "HttpProxyConfiguration": {
      "description": "HTTP Proxy configuration for the VM.",
      "properties": {
        "httpsProxy": {
          "description": "Gets or sets httpsProxy url.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "InfrastructureProfile": {
      "description": "Specifies the vCenter infrastructure specific settings for the virtual machine.",
      "properties": {
        "firmwareType": {
          "description": "Firmware type",
          "oneOf": [
            {
              "enum": [
                "bios",
                "efi"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "inventoryItemId": {
          "description": "Gets or sets the inventory Item ID for the virtual machine.",
          "type": "string"
        },
        "smbiosUuid": {
          "description": "Gets or sets the SMBIOS UUID of the vm.",
          "type": "string"
        },
        "templateId": {
          "description": "Gets or sets the ARM Id of the template resource to deploy the virtual machine.",
          "type": "string"
        },
        "vCenterId": {
          "description": "Gets or sets the ARM Id of the vCenter resource in which this resource pool resides.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "InventoryItemDetails": {
      "description": "Describes the properties of an Inventory Item reference.",
      "properties": {
        "inventoryItemId": {
          "description": "Gets or sets the inventory Item ID for the resource.",
          "type": "string"
        },
        "inventoryType": {
          "description": "The inventory type.",
          "oneOf": [
            {
              "enum": [
                "ResourcePool",
                "VirtualMachine",
                "VirtualMachineTemplate",
                "VirtualNetwork",
                "Cluster",
                "Datastore",
                "Host"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "moName": {
          "description": "Gets or sets the vCenter Managed Object name for the resource.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "InventoryItemProperties": {
      "description": "Describes the properties of an Inventory Item.",
      "oneOf": [
        {
          "description": "The cluster inventory item.",
          "properties": {
            "inventoryType": {
              "enum": [
                "Cluster"
              ],
              "type": "string"
            }
          },
          "required": [
            "inventoryType"
          ],
          "type": "object"
        },
        {
          "description": "The datastore inventory item.",
          "properties": {
            "capacityGB": {
              "description": "Gets or sets Maximum capacity of this datastore, in GBs.",
              "oneOf": [
                {
                  "type": "integer"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "freeSpaceGB": {
              "description": "Gets or sets Available space of this datastore, in GBs.",
              "oneOf": [
                {
                  "type": "integer"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "inventoryType": {
              "enum": [
                "Datastore"
              ],
              "type": "string"
            }
          },
          "required": [
            "inventoryType"
          ],
          "type": "object"
        },
        {
          "description": "The host inventory item.",
          "properties": {
            "inventoryType": {
              "enum": [
                "Host"
              ],
              "type": "string"
            },
            "parent": {
              "description": "Parent host inventory resource details.",
              "oneOf": [
                {
                  "$ref": "#/definitions/InventoryItemDetails"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "inventoryType"
          ],
          "type": "object"
        },
        {
          "description": "The resource pool inventory item.",
          "properties": {
            "inventoryType": {
              "enum": [
                "ResourcePool"
              ],
              "type": "string"
            },
            "parent": {
              "description": "Parent resourcePool inventory resource details.",
              "oneOf": [
                {
                  "$ref": "#/definitions/InventoryItemDetails"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "inventoryType"
          ],
          "type": "object"
        },
        {
          "description": "The VM inventory item.",
          "properties": {
            "cluster": {
              "description": "Cluster inventory resource details.",
              "oneOf": [
                {
                  "$ref": "#/definitions/InventoryItemDetails"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "folderPath": {
              "description": "Gets or sets the folder path of the vm.",
              "type": "string"
            },
            "host": {
              "description": "Host inventory resource details.",
              "oneOf": [
                {
                  "$ref": "#/definitions/InventoryItemDetails"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "instanceUuid": {
              "description": "Gets or sets the instance uuid of the vm.",
              "type": "string"
            },
            "inventoryType": {
              "enum": [
                "VirtualMachine"
              ],
              "type": "string"
            },
            "ipAddresses": {
              "description": "Gets or sets the nic ip addresses.",
              "oneOf": [
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "networkProfile": {
              "description": "Network properties.",
              "oneOf": [
                {
                  "$ref": "#/definitions/NetworkProfileInventory"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "osName": {
              "description": "Gets or sets os name.",
              "type": "string"
            },
            "osType": {
              "description": "Gets or sets the type of the os.",
              "oneOf": [
                {
                  "enum": [
                    "Windows",
                    "Linux",
                    "Other"
                  ],
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "resourcePool": {
              "description": "ResourcePool inventory resource details.",
              "oneOf": [
                {
                  "$ref": "#/definitions/InventoryItemDetails"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "smbiosUuid": {
              "description": "Gets or sets the SMBIOS UUID of the vm.",
              "type": "string"
            },
            "storageProfile": {
              "description": "Storage properties.",
              "oneOf": [
                {
                  "$ref": "#/definitions/StorageProfileInventory"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "inventoryType"
          ],
          "type": "object"
        },
        {
          "description": "The VM Template inventory item.",
          "properties": {
            "folderPath": {
              "description": "Gets or sets the folder path of the template.",
              "type": "string"
            },
            "inventoryType": {
              "enum": [
                "VirtualMachineTemplate"
              ],
              "type": "string"
            },
            "memorySizeMB": {
              "description": "Gets or sets memory size in MBs for the template.",
              "oneOf": [
                {
                  "type": "integer"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "numCPUs": {
              "description": "Gets or sets the number of vCPUs for the template.",
              "oneOf": [
                {
                  "type": "integer"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "numCoresPerSocket": {
              "description": "Gets or sets the number of cores per socket for the template.\r\nDefaults to 1 if unspecified.",
              "oneOf": [
                {
                  "type": "integer"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "osName": {
              "description": "Gets or sets os name.",
              "type": "string"
            },
            "osType": {
              "description": "Gets or sets the type of the os.",
              "oneOf": [
                {
                  "enum": [
                    "Windows",
                    "Linux",
                    "Other"
                  ],
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "inventoryType"
          ],
          "type": "object"
        },
        {
          "description": "The Virtual network inventory item.",
          "properties": {
            "inventoryType": {
              "enum": [
                "VirtualNetwork"
              ],
              "type": "string"
            }
          },
          "required": [
            "inventoryType"
          ],
          "type": "object"
        }
      ],
      "properties": {
        "managedResourceId": {
          "description": "Gets or sets the tracked resource id corresponding to the inventory resource.",
          "type": "string"
        },
        "moName": {
          "description": "Gets or sets the vCenter Managed Object name for the inventory item.",
          "type": "string"
        },
        "moRefId": {
          "description": "Gets or sets the MoRef (Managed Object Reference) ID for the inventory item.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "NetworkInterface": {
      "description": "Network Interface model",
      "properties": {
        "deviceKey": {
          "description": "Gets or sets the device key value.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "ipSettings": {
          "description": "Gets or sets the ipsettings.",
          "oneOf": [
            {
              "$ref": "#/definitions/NicIPSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "name": {
          "description": "Gets or sets the name of the network interface.",
          "type": "string"
        },
        "networkId": {
          "description": "Gets or sets the ARM Id of the network resource to connect the virtual machine.",
          "type": "string"
        },
        "nicType": {
          "description": "NIC type",
          "oneOf": [
            {
              "enum": [
                "vmxnet3",
                "vmxnet2",
                "vmxnet",
                "e1000",
                "e1000e",
                "pcnet32"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "powerOnBoot": {
          "description": "Gets or sets the power on boot.",
          "oneOf": [
            {
              "enum": [
                "enabled",
                "disabled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "NetworkInterfaceInventory": {
      "description": "Inventory Network Interface model",
      "properties": {},
      "type": "object"
    },
    "NetworkProfile": {
      "description": "Specifies the network interfaces of the virtual machine.",
      "properties": {
        "networkInterfaces": {
          "description": "Gets or sets the list of network interfaces associated with the virtual machine.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/NetworkInterface"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "NetworkProfileInventory": {
      "description": "Specifies the network interfaces of the virtual machine.",
      "properties": {
        "networkInterfaces": {
          "description": "Gets or sets the list of network interfaces associated with the virtual machine.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/NetworkInterfaceInventory"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "NicIPSettings": {
      "description": "Defines the network interface ip settings.",
      "properties": {
        "allocationMethod": {
          "description": "Gets or sets the nic allocation method.",
          "oneOf": [
            {
              "enum": [
                "unset",
                "dynamic",
                "static",
                "linklayer",
                "random",
                "other"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "dnsServers": {
          "description": "Gets or sets the dns servers.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "gateway": {
          "description": "Gets or sets the gateway.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "ipAddress": {
          "description": "Gets or sets the ip address for the nic.",
          "type": "string"
        },
        "subnetMask": {
          "description": "Gets or sets the mask.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "OsProfileForVMInstance": {
      "description": "Specifies the operating system settings for the virtual machine.",
      "properties": {
        "adminPassword": {
          "description": "Sets administrator password.",
          "type": "string"
        },
        "adminUsername": {
          "description": "Gets or sets administrator username.",
          "type": "string"
        },
        "computerName": {
          "description": "Gets or sets computer name.",
          "type": "string"
        },
        "guestId": {
          "description": "Gets or sets the guestId.",
          "type": "string"
        },
        "osType": {
          "description": "Gets or sets the type of the os.",
          "oneOf": [
            {
              "enum": [
                "Windows",
                "Linux",
                "Other"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "windowsConfiguration": {
          "description": "Windows Configuration.",
          "oneOf": [
            {
              "$ref": "#/definitions/WindowsConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "PlacementProfile": {
      "description": "Specifies the compute and storage placement settings for the virtual machine.",
      "properties": {
        "clusterId": {
          "description": "Gets or sets the ARM Id of the cluster resource on which this virtual machine will deploy.",
          "type": "string"
        },
        "datastoreId": {
          "description": "Gets or sets the ARM Id of the datastore resource on which the data for the virtual machine will be kept.",
          "type": "string"
        },
        "hostId": {
          "description": "Gets or sets the ARM Id of the host resource on which this virtual machine will deploy.",
          "type": "string"
        },
        "resourcePoolId": {
          "description": "Gets or sets the ARM Id of the resourcePool resource on which this virtual machine will deploy.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ResourcePoolProperties": {
      "description": "Describes the properties of a Resource Pool.",
      "properties": {
        "inventoryItemId": {
          "description": "Gets or sets the inventory Item ID for the resource pool.",
          "type": "string"
        },
        "moRefId": {
          "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID for the resource pool.",
          "type": "string"
        },
        "vCenterId": {
          "description": "Gets or sets the ARM Id of the vCenter resource in which this resource pool resides.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "SecurityProfile": {
      "description": "Specifies the Security profile settings for the virtual machine.",
      "properties": {
        "uefiSettings": {
          "description": "Specifies the security settings like secure boot used while creating the virtual machine.",
          "oneOf": [
            {
              "$ref": "#/definitions/UefiSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "StorageProfile": {
      "description": "Specifies the storage settings for the virtual machine disks.",
      "properties": {
        "disks": {
          "description": "Gets or sets the list of virtual disks associated with the virtual machine.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/VirtualDisk"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "StorageProfileInventory": {
      "description": "Specifies the storage settings for the virtual machine disks.",
      "properties": {
        "disks": {
          "description": "Gets or sets the list of virtual disks associated with the virtual machine.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/VirtualDiskInventory"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "UefiSettings": {
      "description": "Specifies the security settings like secure boot used while creating the virtual machine.",
      "properties": {
        "secureBootEnabled": {
          "description": "Specifies whether secure boot should be enabled on the virtual machine.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "VCenterProperties": {
      "description": "Describes the properties of a VCenter.",
      "properties": {
        "credentials": {
          "description": "Username / Password Credentials to connect to vcenter.",
          "oneOf": [
            {
              "$ref": "#/definitions/VICredential"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "fqdn": {
          "description": "Gets or sets the FQDN/IPAddress of the vCenter.",
          "type": "string"
        },
        "port": {
          "description": "Gets or sets the port of the vCenter.",
          "oneOf": [
            {
              "maximum": 65535,
              "minimum": 1,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "fqdn"
      ],
      "type": "object"
    },
    "VICredential": {
      "description": "Username / Password Credentials to connect to vcenter.",
      "properties": {
        "password": {
          "description": "Gets or sets the password to connect with the vCenter.",
          "type": "string"
        },
        "username": {
          "description": "Gets or sets username to connect with the vCenter.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "VirtualDisk": {
      "description": "Virtual disk model",
      "properties": {
        "controllerKey": {
          "description": "Gets or sets the controller id.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "deviceKey": {
          "description": "Gets or sets the device key value.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "deviceName": {
          "description": "Gets or sets the device name.",
          "type": "string"
        },
        "diskMode": {
          "description": "Gets or sets the disk mode.",
          "oneOf": [
            {
              "enum": [
                "persistent",
                "independent_persistent",
                "independent_nonpersistent"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "diskSizeGB": {
          "description": "Gets or sets the disk total size.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "diskType": {
          "description": "Gets or sets the disk backing type.",
          "oneOf": [
            {
              "enum": [
                "flat",
                "pmem",
                "rawphysical",
                "rawvirtual",
                "sparse",
                "sesparse",
                "unknown"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "name": {
          "description": "Gets or sets the name of the virtual disk.",
          "type": "string"
        },
        "unitNumber": {
          "description": "Gets or sets the unit number of the disk on the controller.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "VirtualDiskInventory": {
      "description": "Virtual disk model",
      "properties": {
        "diskName": {
          "description": "Gets or sets the name of the virtual disk.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "VirtualMachineInstanceProperties": {
      "description": "Describes the properties of a Virtual Machine Instance.",
      "properties": {
        "hardwareProfile": {
          "description": "Hardware properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/HardwareProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "infrastructureProfile": {
          "description": "Gets the infrastructure profile.",
          "oneOf": [
            {
              "$ref": "#/definitions/InfrastructureProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "networkProfile": {
          "description": "Network properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/NetworkProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "osProfile": {
          "description": "OS properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/OsProfileForVMInstance"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "placementProfile": {
          "description": "Placement properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/PlacementProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "securityProfile": {
          "description": "Gets the security profile.",
          "oneOf": [
            {
              "$ref": "#/definitions/SecurityProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "storageProfile": {
          "description": "Storage properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/StorageProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "VirtualMachineTemplateProperties": {
      "description": "Describes the properties of a Virtual Machine Template.",
      "properties": {
        "inventoryItemId": {
          "description": "Gets or sets the inventory Item ID for the virtual machine template.",
          "type": "string"
        },
        "moRefId": {
          "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID for the virtual machine\r\ntemplate.",
          "type": "string"
        },
        "vCenterId": {
          "description": "Gets or sets the ARM Id of the vCenter resource in which this template resides.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "VirtualNetworkProperties": {
      "description": "Describes the properties of a Virtual Network.",
      "properties": {
        "inventoryItemId": {
          "description": "Gets or sets the inventory Item ID for the virtual network.",
          "type": "string"
        },
        "moRefId": {
          "description": "Gets or sets the vCenter MoRef (Managed Object Reference) ID for the virtual network.",
          "type": "string"
        },
        "vCenterId": {
          "description": "Gets or sets the ARM Id of the vCenter resource in which this template resides.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "WindowsConfiguration": {
      "description": "Specifies the Windows Configuration settings for the virtual machine.",
      "properties": {
        "autoLogon": {
          "description": "Sets a value indicating whether auto logon is enabled.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "autoLogonCount": {
          "description": "Sets auto logon count.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "domainName": {
          "description": "Sets domain name that vm should join.",
          "type": "string"
        },
        "domainUserPassword": {
          "description": "Sets domain user password.",
          "type": "string"
        },
        "domainUsername": {
          "description": "Sets domain username.",
          "type": "string"
        },
        "firstLogonCommands": {
          "description": "Sets first logon commands",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "fullName": {
          "description": "Sets full name of the owner of the vm.",
          "type": "string"
        },
        "orgName": {
          "description": "Sets org name to which the owner of the vm belongs.",
          "type": "string"
        },
        "productId": {
          "description": "Sets product id of the vm.",
          "type": "string"
        },
        "timeZone": {
          "description": "Specifies the time zone of the virtual machine. e.g. \"Pacific Standard Time\". Time zone name correspond to time zones listed at Microsoft Time Zone name values(https://learn.microsoft.com/en-us/previous-versions/windows/embedded/ms912391(v=winembedded.11)).",
          "type": "string"
        },
        "workGroupName": {
          "description": "Sets work group name that vm should join.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "vcenters_inventoryItems_childResource": {
      "description": "Microsoft.ConnectedVMwarevSphere/vcenters/inventoryItems",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-12-01"
          ],
          "type": "string"
        },
        "kind": {
          "description": "Metadata used by portal/tooling/etc to render different UX experiences for resources of the same type; e.g. ApiApps are a kind of Microsoft.Web/sites type.  If supported, the resource provider must validate and persist this value.",
          "type": "string"
        },
        "name": {
          "description": "Name of the inventoryItem.",
          "type": "string"
        },
        "properties": {
          "description": "Resource properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/InventoryItemProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "inventoryItems"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "virtualMachineInstances_guestAgents_childResource": {
      "description": "Microsoft.ConnectedVMwarevSphere/virtualMachineInstances/guestAgents",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-12-01"
          ],
          "type": "string"
        },
        "name": {
          "oneOf": [
            {
              "enum": [
                "default"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Resource properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/GuestAgentProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "guestAgents"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    }
  }
}