{
  "id": "https://schema.management.azure.com/schemas/2023-12-15-preview/Microsoft.EventGrid.json#",
  "title": "Microsoft.EventGrid",
  "description": "Microsoft EventGrid Resource Types",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "resourceDefinitions": {
    "domains": {
      "description": "Microsoft.EventGrid/domains",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-12-15-preview"
          ],
          "type": "string"
        },
        "identity": {
          "description": "Identity information for the Event Grid Domain resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/IdentityInfo"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "location": {
          "description": "Location of the resource.",
          "type": "string"
        },
        "name": {
          "description": "Name of the domain.",
          "type": "string"
        },
        "properties": {
          "description": "Properties of the Event Grid Domain resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/DomainProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/domains_topics_childResource"
              },
              {
                "$ref": "#/definitions/domains_eventSubscriptions_childResource"
              },
              {
                "$ref": "#/definitions/domains_privateEndpointConnections_childResource"
              }
            ]
          },
          "type": "array"
        },
        "sku": {
          "description": "The Sku pricing tier for the Event Grid Domain resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/ResourceSku"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Tags of the resource.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.EventGrid/domains"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "domains_eventSubscriptions": {
      "description": "Microsoft.EventGrid/domains/eventSubscriptions",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-12-15-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Name of the event subscription to be created. Event subscription names must be between 3 and 100 characters in length and use alphanumeric letters only.",
          "type": "string"
        },
        "properties": {
          "description": "Properties of the event subscription.",
          "oneOf": [
            {
              "$ref": "#/definitions/EventSubscriptionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.EventGrid/domains/eventSubscriptions"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "domains_privateEndpointConnections": {
      "description": "Microsoft.EventGrid/domains/privateEndpointConnections",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-12-15-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the private endpoint connection connection.",
          "type": "string"
        },
        "properties": {
          "description": "Properties of the PrivateEndpointConnection.",
          "oneOf": [
            {
              "$ref": "#/definitions/PrivateEndpointConnectionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.EventGrid/domains/privateEndpointConnections"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "domains_topics": {
      "description": "Microsoft.EventGrid/domains/topics",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-12-15-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Name of the domain topic.",
          "type": "string"
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/domains_topics_eventSubscriptions_childResource"
              }
            ]
          },
          "type": "array"
        },
        "type": {
          "enum": [
            "Microsoft.EventGrid/domains/topics"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "domains_topics_eventSubscriptions": {
      "description": "Microsoft.EventGrid/domains/topics/eventSubscriptions",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-12-15-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Name of the event subscription to be created. Event subscription names must be between 3 and 100 characters in length and use alphanumeric letters only.",
          "type": "string"
        },
        "properties": {
          "description": "Properties of the event subscription.",
          "oneOf": [
            {
              "$ref": "#/definitions/EventSubscriptionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.EventGrid/domains/topics/eventSubscriptions"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "namespaces": {
      "description": "Microsoft.EventGrid/namespaces",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-12-15-preview"
          ],
          "type": "string"
        },
        "identity": {
          "description": "Identity information for the Namespace resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/IdentityInfo"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "location": {
          "description": "Location of the resource.",
          "type": "string"
        },
        "name": {
          "description": "Name of the namespace.",
          "oneOf": [
            {
              "maxLength": 50,
              "minLength": 3,
              "pattern": "^[a-zA-Z0-9-]*$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Properties of the Namespace resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/NamespaceProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/namespaces_topics_childResource"
              },
              {
                "$ref": "#/definitions/namespaces_clients_childResource"
              },
              {
                "$ref": "#/definitions/namespaces_topicSpaces_childResource"
              },
              {
                "$ref": "#/definitions/namespaces_clientGroups_childResource"
              },
              {
                "$ref": "#/definitions/namespaces_caCertificates_childResource"
              },
              {
                "$ref": "#/definitions/namespaces_permissionBindings_childResource"
              },
              {
                "$ref": "#/definitions/namespaces_privateEndpointConnections_childResource"
              }
            ]
          },
          "type": "array"
        },
        "sku": {
          "description": "Represents available Sku pricing tiers.",
          "oneOf": [
            {
              "$ref": "#/definitions/NamespaceSku"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Tags of the resource.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.EventGrid/namespaces"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "namespaces_caCertificates": {
      "description": "Microsoft.EventGrid/namespaces/caCertificates",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-12-15-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The CA certificate name.",
          "oneOf": [
            {
              "maxLength": 50,
              "minLength": 3,
              "pattern": "^[a-zA-Z0-9-]*$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The properties of CA certificate.",
          "oneOf": [
            {
              "$ref": "#/definitions/CaCertificateProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.EventGrid/namespaces/caCertificates"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "namespaces_clientGroups": {
      "description": "Microsoft.EventGrid/namespaces/clientGroups",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-12-15-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The client group name.",
          "oneOf": [
            {
              "maxLength": 50,
              "minLength": 3,
              "pattern": "^[a-zA-Z0-9-]*$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The properties of client group.",
          "oneOf": [
            {
              "$ref": "#/definitions/ClientGroupProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.EventGrid/namespaces/clientGroups"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "namespaces_clients": {
      "description": "Microsoft.EventGrid/namespaces/clients",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-12-15-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The client name.",
          "oneOf": [
            {
              "maxLength": 128,
              "minLength": 1,
              "pattern": "^[-a-zA-Z0-9:\\._]*$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The properties of client.",
          "oneOf": [
            {
              "$ref": "#/definitions/ClientProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.EventGrid/namespaces/clients"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "namespaces_permissionBindings": {
      "description": "Microsoft.EventGrid/namespaces/permissionBindings",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-12-15-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The permission binding name.",
          "oneOf": [
            {
              "maxLength": 50,
              "minLength": 3,
              "pattern": "^[a-zA-Z0-9-]*$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The properties of permission binding.",
          "oneOf": [
            {
              "$ref": "#/definitions/PermissionBindingProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.EventGrid/namespaces/permissionBindings"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "namespaces_privateEndpointConnections": {
      "description": "Microsoft.EventGrid/namespaces/privateEndpointConnections",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-12-15-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the private endpoint connection connection.",
          "type": "string"
        },
        "properties": {
          "description": "Properties of the PrivateEndpointConnection.",
          "oneOf": [
            {
              "$ref": "#/definitions/PrivateEndpointConnectionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.EventGrid/namespaces/privateEndpointConnections"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "namespaces_topicSpaces": {
      "description": "Microsoft.EventGrid/namespaces/topicSpaces",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-12-15-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The topic space name.",
          "oneOf": [
            {
              "maxLength": 50,
              "minLength": 3,
              "pattern": "^[a-zA-Z0-9-]*$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The properties of topic space.",
          "oneOf": [
            {
              "$ref": "#/definitions/TopicSpaceProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.EventGrid/namespaces/topicSpaces"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "namespaces_topics": {
      "description": "Microsoft.EventGrid/namespaces/topics",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-12-15-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Name of the namespace topic.",
          "oneOf": [
            {
              "maxLength": 50,
              "minLength": 3,
              "pattern": "^[a-zA-Z0-9-]*$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Properties of the namespace topic.",
          "oneOf": [
            {
              "$ref": "#/definitions/NamespaceTopicProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/namespaces_topics_eventSubscriptions_childResource"
              }
            ]
          },
          "type": "array"
        },
        "type": {
          "enum": [
            "Microsoft.EventGrid/namespaces/topics"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "namespaces_topics_eventSubscriptions": {
      "description": "Microsoft.EventGrid/namespaces/topics/eventSubscriptions",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-12-15-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Name of the event subscription to be created. Event subscription names must be between 3 and 100 characters in length and use alphanumeric letters only.",
          "oneOf": [
            {
              "maxLength": 50,
              "minLength": 3,
              "pattern": "^[a-zA-Z0-9-]*$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Properties of the event subscription.",
          "oneOf": [
            {
              "$ref": "#/definitions/SubscriptionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.EventGrid/namespaces/topics/eventSubscriptions"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "partnerConfigurations": {
      "description": "Microsoft.EventGrid/partnerConfigurations",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-12-15-preview"
          ],
          "type": "string"
        },
        "location": {
          "description": "Location of the resource.",
          "type": "string"
        },
        "name": {
          "oneOf": [
            {
              "enum": [
                "default"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Properties of the partner configuration.",
          "oneOf": [
            {
              "$ref": "#/definitions/PartnerConfigurationProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Tags of the resource.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.EventGrid/partnerConfigurations"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "partnerDestinations": {
      "description": "Microsoft.EventGrid/partnerDestinations",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-12-15-preview"
          ],
          "type": "string"
        },
        "location": {
          "description": "Location of the resource.",
          "type": "string"
        },
        "name": {
          "description": "Name of the partner destination.",
          "oneOf": [
            {
              "maxLength": 50,
              "minLength": 3,
              "pattern": "^[a-zA-Z0-9-]*$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Properties of the Partner Destination.",
          "oneOf": [
            {
              "$ref": "#/definitions/PartnerDestinationProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Tags of the resource.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.EventGrid/partnerDestinations"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "partnerNamespaces": {
      "description": "Microsoft.EventGrid/partnerNamespaces",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-12-15-preview"
          ],
          "type": "string"
        },
        "location": {
          "description": "Location of the resource.",
          "type": "string"
        },
        "name": {
          "description": "Name of the partner namespace.",
          "type": "string"
        },
        "properties": {
          "description": "Properties of the Partner Namespace.",
          "oneOf": [
            {
              "$ref": "#/definitions/PartnerNamespaceProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/partnerNamespaces_channels_childResource"
              },
              {
                "$ref": "#/definitions/partnerNamespaces_privateEndpointConnections_childResource"
              }
            ]
          },
          "type": "array"
        },
        "tags": {
          "description": "Tags of the resource.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.EventGrid/partnerNamespaces"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "partnerNamespaces_channels": {
      "description": "Microsoft.EventGrid/partnerNamespaces/channels",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-12-15-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Name of the channel.",
          "type": "string"
        },
        "properties": {
          "description": "Properties of the Channel.",
          "oneOf": [
            {
              "$ref": "#/definitions/ChannelProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.EventGrid/partnerNamespaces/channels"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "partnerNamespaces_privateEndpointConnections": {
      "description": "Microsoft.EventGrid/partnerNamespaces/privateEndpointConnections",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-12-15-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the private endpoint connection connection.",
          "type": "string"
        },
        "properties": {
          "description": "Properties of the PrivateEndpointConnection.",
          "oneOf": [
            {
              "$ref": "#/definitions/PrivateEndpointConnectionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.EventGrid/partnerNamespaces/privateEndpointConnections"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "partnerRegistrations": {
      "description": "Microsoft.EventGrid/partnerRegistrations",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-12-15-preview"
          ],
          "type": "string"
        },
        "location": {
          "description": "Location of the resource.",
          "type": "string"
        },
        "name": {
          "description": "Name of the partner registration.",
          "type": "string"
        },
        "properties": {
          "description": "Properties of the partner registration.",
          "oneOf": [
            {
              "$ref": "#/definitions/PartnerRegistrationProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Tags of the resource.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.EventGrid/partnerRegistrations"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "partnerTopics": {
      "description": "Microsoft.EventGrid/partnerTopics",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-12-15-preview"
          ],
          "type": "string"
        },
        "identity": {
          "description": "Identity information for the Partner Topic resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/IdentityInfo"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "location": {
          "description": "Location of the resource.",
          "type": "string"
        },
        "name": {
          "description": "Name of the partner topic.",
          "type": "string"
        },
        "properties": {
          "description": "Properties of the Partner Topic.",
          "oneOf": [
            {
              "$ref": "#/definitions/PartnerTopicProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/partnerTopics_eventSubscriptions_childResource"
              }
            ]
          },
          "type": "array"
        },
        "tags": {
          "description": "Tags of the resource.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.EventGrid/partnerTopics"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "partnerTopics_eventSubscriptions": {
      "description": "Microsoft.EventGrid/partnerTopics/eventSubscriptions",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-12-15-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Name of the event subscription to be created. Event subscription names must be between 3 and 100 characters in length and use alphanumeric letters only.",
          "type": "string"
        },
        "properties": {
          "description": "Properties of the event subscription.",
          "oneOf": [
            {
              "$ref": "#/definitions/EventSubscriptionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.EventGrid/partnerTopics/eventSubscriptions"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "systemTopics": {
      "description": "Microsoft.EventGrid/systemTopics",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-12-15-preview"
          ],
          "type": "string"
        },
        "identity": {
          "description": "Identity information for the resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/IdentityInfo"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "location": {
          "description": "Location of the resource.",
          "type": "string"
        },
        "name": {
          "description": "Name of the system topic.",
          "type": "string"
        },
        "properties": {
          "description": "Properties of the system topic.",
          "oneOf": [
            {
              "$ref": "#/definitions/SystemTopicProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/systemTopics_eventSubscriptions_childResource"
              }
            ]
          },
          "type": "array"
        },
        "tags": {
          "description": "Tags of the resource.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.EventGrid/systemTopics"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "systemTopics_eventSubscriptions": {
      "description": "Microsoft.EventGrid/systemTopics/eventSubscriptions",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-12-15-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Name of the event subscription to be created. Event subscription names must be between 3 and 100 characters in length and use alphanumeric letters only.",
          "type": "string"
        },
        "properties": {
          "description": "Properties of the event subscription.",
          "oneOf": [
            {
              "$ref": "#/definitions/EventSubscriptionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.EventGrid/systemTopics/eventSubscriptions"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "topics": {
      "description": "Microsoft.EventGrid/topics",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-12-15-preview"
          ],
          "type": "string"
        },
        "extendedLocation": {
          "description": "Extended location of the resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/ExtendedLocation"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "identity": {
          "description": "Identity information for the resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/IdentityInfo"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "kind": {
          "description": "Kind of the resource.",
          "oneOf": [
            {
              "enum": [
                "Azure",
                "AzureArc"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "location": {
          "description": "Location of the resource.",
          "type": "string"
        },
        "name": {
          "description": "Name of the topic.",
          "type": "string"
        },
        "properties": {
          "description": "Properties of the topic.",
          "oneOf": [
            {
              "$ref": "#/definitions/TopicProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/topics_eventSubscriptions_childResource"
              },
              {
                "$ref": "#/definitions/topics_privateEndpointConnections_childResource"
              }
            ]
          },
          "type": "array"
        },
        "sku": {
          "description": "The Sku pricing tier for the topic.",
          "oneOf": [
            {
              "$ref": "#/definitions/ResourceSku"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Tags of the resource.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.EventGrid/topics"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "topics_eventSubscriptions": {
      "description": "Microsoft.EventGrid/topics/eventSubscriptions",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-12-15-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Name of the event subscription to be created. Event subscription names must be between 3 and 100 characters in length and use alphanumeric letters only.",
          "type": "string"
        },
        "properties": {
          "description": "Properties of the event subscription.",
          "oneOf": [
            {
              "$ref": "#/definitions/EventSubscriptionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.EventGrid/topics/eventSubscriptions"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "topics_privateEndpointConnections": {
      "description": "Microsoft.EventGrid/topics/privateEndpointConnections",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-12-15-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the private endpoint connection connection.",
          "type": "string"
        },
        "properties": {
          "description": "Properties of the PrivateEndpointConnection.",
          "oneOf": [
            {
              "$ref": "#/definitions/PrivateEndpointConnectionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.EventGrid/topics/privateEndpointConnections"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    }
  },
  "unknown_resourceDefinitions": {
    "eventSubscriptions": {
      "description": "Microsoft.EventGrid/eventSubscriptions",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-12-15-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Name of the event subscription. Event subscription names must be between 3 and 64 characters in length and should use alphanumeric letters only.",
          "type": "string"
        },
        "properties": {
          "description": "Properties of the event subscription.",
          "oneOf": [
            {
              "$ref": "#/definitions/EventSubscriptionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.EventGrid/eventSubscriptions"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    }
  },
  "definitions": {
    "AdvancedFilter": {
      "description": "This is the base type that represents an advanced filter. To configure an advanced filter, do not directly instantiate an object of this class. Instead, instantiate an object of a derived class such as BoolEqualsAdvancedFilter, NumberInAdvancedFilter, StringEqualsAdvancedFilter etc. depending on the type of the key based on which you want to filter.",
      "oneOf": [
        {
          "description": "BoolEquals Advanced Filter.",
          "properties": {
            "operatorType": {
              "enum": [
                "BoolEquals"
              ],
              "type": "string"
            },
            "value": {
              "description": "The boolean filter value.",
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "operatorType"
          ],
          "type": "object"
        },
        {
          "description": "IsNotNull Advanced Filter.",
          "properties": {
            "operatorType": {
              "enum": [
                "IsNotNull"
              ],
              "type": "string"
            }
          },
          "required": [
            "operatorType"
          ],
          "type": "object"
        },
        {
          "description": "IsNullOrUndefined Advanced Filter.",
          "properties": {
            "operatorType": {
              "enum": [
                "IsNullOrUndefined"
              ],
              "type": "string"
            }
          },
          "required": [
            "operatorType"
          ],
          "type": "object"
        },
        {
          "description": "NumberGreaterThan Advanced Filter.",
          "properties": {
            "operatorType": {
              "enum": [
                "NumberGreaterThan"
              ],
              "type": "string"
            },
            "value": {
              "description": "The filter value.",
              "oneOf": [
                {
                  "type": "number"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "operatorType"
          ],
          "type": "object"
        },
        {
          "description": "NumberGreaterThanOrEquals Advanced Filter.",
          "properties": {
            "operatorType": {
              "enum": [
                "NumberGreaterThanOrEquals"
              ],
              "type": "string"
            },
            "value": {
              "description": "The filter value.",
              "oneOf": [
                {
                  "type": "number"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "operatorType"
          ],
          "type": "object"
        },
        {
          "description": "NumberIn Advanced Filter.",
          "properties": {
            "operatorType": {
              "enum": [
                "NumberIn"
              ],
              "type": "string"
            },
            "values": {
              "description": "The set of filter values.",
              "oneOf": [
                {
                  "items": {
                    "type": "number"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "operatorType"
          ],
          "type": "object"
        },
        {
          "description": "NumberInRange Advanced Filter.",
          "properties": {
            "operatorType": {
              "enum": [
                "NumberInRange"
              ],
              "type": "string"
            },
            "values": {
              "description": "The set of filter values.",
              "oneOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "operatorType"
          ],
          "type": "object"
        },
        {
          "description": "NumberLessThan Advanced Filter.",
          "properties": {
            "operatorType": {
              "enum": [
                "NumberLessThan"
              ],
              "type": "string"
            },
            "value": {
              "description": "The filter value.",
              "oneOf": [
                {
                  "type": "number"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "operatorType"
          ],
          "type": "object"
        },
        {
          "description": "NumberLessThanOrEquals Advanced Filter.",
          "properties": {
            "operatorType": {
              "enum": [
                "NumberLessThanOrEquals"
              ],
              "type": "string"
            },
            "value": {
              "description": "The filter value.",
              "oneOf": [
                {
                  "type": "number"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "operatorType"
          ],
          "type": "object"
        },
        {
          "description": "NumberNotIn Advanced Filter.",
          "properties": {
            "operatorType": {
              "enum": [
                "NumberNotIn"
              ],
              "type": "string"
            },
            "values": {
              "description": "The set of filter values.",
              "oneOf": [
                {
                  "items": {
                    "type": "number"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "operatorType"
          ],
          "type": "object"
        },
        {
          "description": "NumberNotInRange Advanced Filter.",
          "properties": {
            "operatorType": {
              "enum": [
                "NumberNotInRange"
              ],
              "type": "string"
            },
            "values": {
              "description": "The set of filter values.",
              "oneOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "operatorType"
          ],
          "type": "object"
        },
        {
          "description": "StringBeginsWith Advanced Filter.",
          "properties": {
            "operatorType": {
              "enum": [
                "StringBeginsWith"
              ],
              "type": "string"
            },
            "values": {
              "description": "The set of filter values.",
              "oneOf": [
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "operatorType"
          ],
          "type": "object"
        },
        {
          "description": "StringContains Advanced Filter.",
          "properties": {
            "operatorType": {
              "enum": [
                "StringContains"
              ],
              "type": "string"
            },
            "values": {
              "description": "The set of filter values.",
              "oneOf": [
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "operatorType"
          ],
          "type": "object"
        },
        {
          "description": "StringEndsWith Advanced Filter.",
          "properties": {
            "operatorType": {
              "enum": [
                "StringEndsWith"
              ],
              "type": "string"
            },
            "values": {
              "description": "The set of filter values.",
              "oneOf": [
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "operatorType"
          ],
          "type": "object"
        },
        {
          "description": "StringIn Advanced Filter.",
          "properties": {
            "operatorType": {
              "enum": [
                "StringIn"
              ],
              "type": "string"
            },
            "values": {
              "description": "The set of filter values.",
              "oneOf": [
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "operatorType"
          ],
          "type": "object"
        },
        {
          "description": "StringNotBeginsWith Advanced Filter.",
          "properties": {
            "operatorType": {
              "enum": [
                "StringNotBeginsWith"
              ],
              "type": "string"
            },
            "values": {
              "description": "The set of filter values.",
              "oneOf": [
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "operatorType"
          ],
          "type": "object"
        },
        {
          "description": "StringNotContains Advanced Filter.",
          "properties": {
            "operatorType": {
              "enum": [
                "StringNotContains"
              ],
              "type": "string"
            },
            "values": {
              "description": "The set of filter values.",
              "oneOf": [
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "operatorType"
          ],
          "type": "object"
        },
        {
          "description": "StringNotEndsWith Advanced Filter.",
          "properties": {
            "operatorType": {
              "enum": [
                "StringNotEndsWith"
              ],
              "type": "string"
            },
            "values": {
              "description": "The set of filter values.",
              "oneOf": [
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "operatorType"
          ],
          "type": "object"
        },
        {
          "description": "StringNotIn Advanced Filter.",
          "properties": {
            "operatorType": {
              "enum": [
                "StringNotIn"
              ],
              "type": "string"
            },
            "values": {
              "description": "The set of filter values.",
              "oneOf": [
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "operatorType"
          ],
          "type": "object"
        }
      ],
      "properties": {
        "key": {
          "description": "The field/property in the event based on which you want to filter.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "AzureADPartnerClientAuthenticationProperties": {
      "description": "Properties of an Azure Active Directory Partner Client Authentication.",
      "properties": {
        "azureActiveDirectoryApplicationIdOrUri": {
          "description": "The Azure Active Directory Application ID or URI to get the access token that will be included as the bearer token in delivery requests.",
          "type": "string"
        },
        "azureActiveDirectoryTenantId": {
          "description": "The Azure Active Directory Tenant ID to get the access token that will be included as the bearer token in delivery requests.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "AzureFunctionEventSubscriptionDestinationProperties": {
      "description": "The properties that represent the Azure Function destination of an event subscription.",
      "properties": {
        "deliveryAttributeMappings": {
          "description": "Delivery attribute details.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/DeliveryAttributeMapping"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "maxEventsPerBatch": {
          "description": "Maximum number of events per batch.",
          "oneOf": [
            {
              "default": 1,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "preferredBatchSizeInKilobytes": {
          "description": "Preferred batch size in Kilobytes.",
          "oneOf": [
            {
              "default": 64,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resourceId": {
          "description": "The Azure Resource Id that represents the endpoint of the Azure Function destination of an event subscription.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CaCertificateProperties": {
      "description": "The properties of CA certificate.",
      "properties": {
        "description": {
          "description": "Description for the CA Certificate resource.",
          "type": "string"
        },
        "encodedCertificate": {
          "description": "Base64 encoded PEM (Privacy Enhanced Mail) format certificate data.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ChannelProperties": {
      "description": "Properties of the Channel.",
      "properties": {
        "channelType": {
          "description": "The type of the event channel which represents the direction flow of events.",
          "oneOf": [
            {
              "enum": [
                "PartnerTopic",
                "PartnerDestination"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "expirationTimeIfNotActivatedUtc": {
          "description": "Expiration time of the channel. If this timer expires while the corresponding partner topic is never activated,\r\nthe channel and corresponding partner topic are deleted.",
          "format": "date-time",
          "type": "string"
        },
        "messageForActivation": {
          "description": "Context or helpful message that can be used during the approval process by the subscriber.",
          "type": "string"
        },
        "partnerDestinationInfo": {
          "description": "This property should be populated when channelType is PartnerDestination and represents information about the partner destination resource corresponding to the channel.",
          "oneOf": [
            {
              "$ref": "#/definitions/PartnerDestinationInfo"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "partnerTopicInfo": {
          "description": "This property should be populated when channelType is PartnerTopic and represents information about the partner topic resource corresponding to the channel.",
          "oneOf": [
            {
              "$ref": "#/definitions/PartnerTopicInfo"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "provisioningState": {
          "description": "Provisioning state of the channel.",
          "oneOf": [
            {
              "enum": [
                "Creating",
                "Updating",
                "Deleting",
                "Succeeded",
                "Canceled",
                "Failed",
                "IdleDueToMirroredPartnerTopicDeletion",
                "IdleDueToMirroredPartnerDestinationDeletion"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "readinessState": {
          "description": "The readiness state of the corresponding partner topic.",
          "oneOf": [
            {
              "enum": [
                "NeverActivated",
                "Activated"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ClientAuthenticationSettings": {
      "description": "Client authentication settings for namespace resource.",
      "properties": {
        "alternativeAuthenticationNameSources": {
          "description": "Alternative authentication name sources related to client authentication settings for namespace resource.",
          "oneOf": [
            {
              "items": {
                "enum": [
                  "ClientCertificateSubject",
                  "ClientCertificateDns",
                  "ClientCertificateUri",
                  "ClientCertificateIp",
                  "ClientCertificateEmail"
                ],
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ClientCertificateAuthentication": {
      "description": "The certificate authentication properties for the client.",
      "properties": {
        "allowedThumbprints": {
          "description": "The list of thumbprints that are allowed during client authentication. This property is required only if the validationScheme is 'ThumbprintMatch'.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "validationScheme": {
          "description": "The validation scheme used to authenticate the client. Default value is SubjectMatchesAuthenticationName.",
          "oneOf": [
            {
              "enum": [
                "SubjectMatchesAuthenticationName",
                "DnsMatchesAuthenticationName",
                "UriMatchesAuthenticationName",
                "IpMatchesAuthenticationName",
                "EmailMatchesAuthenticationName",
                "ThumbprintMatch"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ClientGroupProperties": {
      "description": "The properties of client group.",
      "properties": {
        "description": {
          "description": "Description for the Client Group resource.",
          "type": "string"
        },
        "query": {
          "description": "The grouping query for the clients.\r\nExample : attributes.keyName IN ['a', 'b', 'c'].",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ClientProperties": {
      "description": "The properties of client.",
      "properties": {
        "attributes": {
          "description": "Attributes for the client. Supported values are int, bool, string, string[].\r\nExample:\r\n\"attributes\": { \"room\": \"345\", \"floor\": 12, \"deviceTypes\": [\"Fan\", \"Light\"] }",
          "oneOf": [
            {
              "additionalProperties": {},
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "authenticationName": {
          "description": "The name presented by the client for authentication. The default value is the name of the resource.",
          "type": "string"
        },
        "clientCertificateAuthentication": {
          "description": "The client certificate authentication information.",
          "oneOf": [
            {
              "$ref": "#/definitions/ClientCertificateAuthentication"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "description": {
          "description": "Description for the Client resource.",
          "type": "string"
        },
        "state": {
          "description": "Indicates if the client is enabled or not. Default value is Enabled.",
          "oneOf": [
            {
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ConnectionState": {
      "description": "ConnectionState information.",
      "properties": {
        "actionsRequired": {
          "description": "Actions required (if any).",
          "type": "string"
        },
        "description": {
          "description": "Description of the connection state.",
          "type": "string"
        },
        "status": {
          "description": "Status of the connection.",
          "oneOf": [
            {
              "enum": [
                "Pending",
                "Approved",
                "Rejected",
                "Disconnected"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "DeadLetterDestination": {
      "description": "Information about the dead letter destination for an event subscription. To configure a deadletter destination, do not directly instantiate an object of this class. Instead, instantiate an object of a derived class. Currently, StorageBlobDeadLetterDestination is the only class that derives from this class.",
      "oneOf": [
        {
          "description": "Information about the storage blob based dead letter destination.",
          "properties": {
            "endpointType": {
              "enum": [
                "StorageBlob"
              ],
              "type": "string"
            },
            "properties": {
              "description": "The properties of the Storage Blob based deadletter destination",
              "oneOf": [
                {
                  "$ref": "#/definitions/StorageBlobDeadLetterDestinationProperties"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "endpointType"
          ],
          "type": "object"
        }
      ],
      "properties": {},
      "type": "object"
    },
    "DeadLetterWithResourceIdentity": {
      "description": "Information about the deadletter destination with resource identity.",
      "properties": {
        "deadLetterDestination": {
          "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery / dead-lettering.",
          "oneOf": [
            {
              "$ref": "#/definitions/DeadLetterDestination"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "identity": {
          "description": "The identity to use when dead-lettering events.",
          "oneOf": [
            {
              "$ref": "#/definitions/EventSubscriptionIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "DeliveryAttributeMapping": {
      "description": "Delivery attribute mapping details.",
      "oneOf": [
        {
          "description": "Dynamic delivery attribute mapping details.",
          "properties": {
            "properties": {
              "description": "Properties of dynamic delivery attribute mapping.",
              "oneOf": [
                {
                  "$ref": "#/definitions/DynamicDeliveryAttributeMappingProperties"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "type": {
              "enum": [
                "Dynamic"
              ],
              "type": "string"
            }
          },
          "required": [
            "type"
          ],
          "type": "object"
        },
        {
          "description": "Static delivery attribute mapping details.",
          "properties": {
            "properties": {
              "description": "Properties of static delivery attribute mapping.",
              "oneOf": [
                {
                  "$ref": "#/definitions/StaticDeliveryAttributeMappingProperties"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "type": {
              "enum": [
                "Static"
              ],
              "type": "string"
            }
          },
          "required": [
            "type"
          ],
          "type": "object"
        }
      ],
      "properties": {
        "name": {
          "description": "Name of the delivery attribute or header.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DeliveryConfiguration": {
      "description": "Properties of the delivery configuration information of the event subscription.",
      "properties": {
        "deliveryMode": {
          "description": "Delivery mode of the event subscription.",
          "oneOf": [
            {
              "enum": [
                "Queue",
                "Push"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "push": {
          "description": "This property should be populated when deliveryMode is push and represents information about the push subscription.",
          "oneOf": [
            {
              "$ref": "#/definitions/PushInfo"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "queue": {
          "description": "This property should be populated when deliveryMode is queue and represents information about the queue subscription.",
          "oneOf": [
            {
              "$ref": "#/definitions/QueueInfo"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "DeliveryWithResourceIdentity": {
      "description": "Information about the delivery for an event subscription with resource identity.",
      "properties": {
        "destination": {
          "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.",
          "oneOf": [
            {
              "$ref": "#/definitions/EventSubscriptionDestination"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "identity": {
          "description": "The identity to use when delivering events.",
          "oneOf": [
            {
              "$ref": "#/definitions/EventSubscriptionIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "DomainProperties": {
      "description": "Properties of the Event Grid Domain Resource.",
      "properties": {
        "autoCreateTopicWithFirstSubscription": {
          "description": "This Boolean is used to specify the creation mechanism for 'all' the Event Grid Domain Topics associated with this Event Grid Domain resource.\r\nIn this context, creation of domain topic can be auto-managed (when true) or self-managed (when false). The default value for this property is true.\r\nWhen this property is null or set to true, Event Grid is responsible of automatically creating the domain topic when the first event subscription is\r\ncreated at the scope of the domain topic. If this property is set to false, then creating the first event subscription will require creating a domain topic\r\nby the user. The self-management mode can be used if the user wants full control of when the domain topic is created, while auto-managed mode provides the\r\nflexibility to perform less operations and manage fewer resources by the user. Also, note that in auto-managed creation mode, user is allowed to create the\r\ndomain topic on demand if needed.",
          "oneOf": [
            {
              "default": true,
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "autoDeleteTopicWithLastSubscription": {
          "description": "This Boolean is used to specify the deletion mechanism for 'all' the Event Grid Domain Topics associated with this Event Grid Domain resource.\r\nIn this context, deletion of domain topic can be auto-managed (when true) or self-managed (when false). The default value for this property is true.\r\nWhen this property is set to true, Event Grid is responsible of automatically deleting the domain topic when the last event subscription at the scope\r\nof the domain topic is deleted. If this property is set to false, then the user needs to manually delete the domain topic when it is no longer needed\r\n(e.g., when last event subscription is deleted and the resource needs to be cleaned up). The self-management mode can be used if the user wants full\r\ncontrol of when the domain topic needs to be deleted, while auto-managed mode provides the flexibility to perform less operations and manage fewer\r\nresources by the user.",
          "oneOf": [
            {
              "default": true,
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "dataResidencyBoundary": {
          "description": "Data Residency Boundary of the resource.",
          "oneOf": [
            {
              "enum": [
                "WithinGeopair",
                "WithinRegion"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "disableLocalAuth": {
          "description": "This boolean is used to enable or disable local auth. Default value is false. When the property is set to true, only AAD token will be used to authenticate if user is allowed to publish to the domain.",
          "oneOf": [
            {
              "default": false,
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "eventTypeInfo": {
          "description": "Event Type Information for the domain. This information is provided by the publisher and can be used by the \r\nsubscriber to view different types of events that are published.",
          "oneOf": [
            {
              "$ref": "#/definitions/EventTypeInfo"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "inboundIpRules": {
          "description": "This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/InboundIpRule"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "inputSchema": {
          "description": "This determines the format that Event Grid should expect for incoming events published to the Event Grid Domain Resource.",
          "oneOf": [
            {
              "enum": [
                "EventGridSchema",
                "CustomEventSchema",
                "CloudEventSchemaV1_0"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "inputSchemaMapping": {
          "description": "Information about the InputSchemaMapping which specified the info about mapping event payload.",
          "oneOf": [
            {
              "$ref": "#/definitions/InputSchemaMapping"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "minimumTlsVersionAllowed": {
          "description": "Minimum TLS version of the publisher allowed to publish to this domain",
          "oneOf": [
            {
              "enum": [
                "1.0",
                "1.1",
                "1.2"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "publicNetworkAccess": {
          "description": "This determines if traffic is allowed over public network. By default it is enabled.\r\nYou can further restrict to specific IPs by configuring <seealso cref=\"P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.DomainProperties.InboundIpRules\" />",
          "oneOf": [
            {
              "enum": [
                "Enabled",
                "Disabled",
                "SecuredByPerimeter"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "DynamicDeliveryAttributeMappingProperties": {
      "description": "Properties of dynamic delivery attribute mapping.",
      "properties": {
        "sourceField": {
          "description": "JSON path in the event which contains attribute value.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DynamicRoutingEnrichment": {
      "properties": {
        "key": {
          "description": "Dynamic routing enrichment key.",
          "type": "string"
        },
        "value": {
          "description": "Dynamic routing enrichment value.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "EventHubEventSubscriptionDestinationProperties": {
      "description": "The properties for a event hub destination.",
      "properties": {
        "deliveryAttributeMappings": {
          "description": "Delivery attribute details.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/DeliveryAttributeMapping"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resourceId": {
          "description": "The Azure Resource Id that represents the endpoint of an Event Hub destination of an event subscription.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "EventSubscriptionDestination": {
      "description": "Information about the destination for an event subscription.",
      "oneOf": [
        {
          "description": "Information about the azure function destination for an event subscription.",
          "properties": {
            "endpointType": {
              "enum": [
                "AzureFunction"
              ],
              "type": "string"
            },
            "properties": {
              "description": "Azure Function Properties of the event subscription destination.",
              "oneOf": [
                {
                  "$ref": "#/definitions/AzureFunctionEventSubscriptionDestinationProperties"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "endpointType"
          ],
          "type": "object"
        },
        {
          "description": "Information about the event hub destination for an event subscription.",
          "properties": {
            "endpointType": {
              "enum": [
                "EventHub"
              ],
              "type": "string"
            },
            "properties": {
              "description": "Event Hub Properties of the event subscription destination.",
              "oneOf": [
                {
                  "$ref": "#/definitions/EventHubEventSubscriptionDestinationProperties"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "endpointType"
          ],
          "type": "object"
        },
        {
          "description": "Information about the HybridConnection destination for an event subscription.",
          "properties": {
            "endpointType": {
              "enum": [
                "HybridConnection"
              ],
              "type": "string"
            },
            "properties": {
              "description": "Hybrid connection Properties of the event subscription destination.",
              "oneOf": [
                {
                  "$ref": "#/definitions/HybridConnectionEventSubscriptionDestinationProperties"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "endpointType"
          ],
          "type": "object"
        },
        {
          "description": "Information about the Monitor Alert destination for an event subscription.",
          "properties": {
            "endpointType": {
              "enum": [
                "MonitorAlert"
              ],
              "type": "string"
            },
            "properties": {
              "description": "Monitor Alert properties of the event subscription destination.",
              "oneOf": [
                {
                  "$ref": "#/definitions/MonitorAlertEventSubscriptionDestinationProperties"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "endpointType"
          ],
          "type": "object"
        },
        {
          "description": "Information about the Namespace Topic destination for an event subscription.",
          "properties": {
            "endpointType": {
              "enum": [
                "NamespaceTopic"
              ],
              "type": "string"
            },
            "properties": {
              "description": "Namespace Topic properties of the event subscription destination.",
              "oneOf": [
                {
                  "$ref": "#/definitions/NamespaceTopicEventSubscriptionDestinationProperties"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "endpointType"
          ],
          "type": "object"
        },
        {
          "properties": {
            "endpointType": {
              "enum": [
                "PartnerDestination"
              ],
              "type": "string"
            },
            "properties": {
              "description": "Partner Destination Properties of the event subscription destination.",
              "oneOf": [
                {
                  "$ref": "#/definitions/PartnerEventSubscriptionDestinationProperties"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "endpointType"
          ],
          "type": "object"
        },
        {
          "description": "Information about the service bus destination for an event subscription.",
          "properties": {
            "endpointType": {
              "enum": [
                "ServiceBusQueue"
              ],
              "type": "string"
            },
            "properties": {
              "description": "Service Bus Properties of the event subscription destination.",
              "oneOf": [
                {
                  "$ref": "#/definitions/ServiceBusQueueEventSubscriptionDestinationProperties"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "endpointType"
          ],
          "type": "object"
        },
        {
          "description": "Information about the service bus topic destination for an event subscription.",
          "properties": {
            "endpointType": {
              "enum": [
                "ServiceBusTopic"
              ],
              "type": "string"
            },
            "properties": {
              "description": "Service Bus Topic Properties of the event subscription destination.",
              "oneOf": [
                {
                  "$ref": "#/definitions/ServiceBusTopicEventSubscriptionDestinationProperties"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "endpointType"
          ],
          "type": "object"
        },
        {
          "description": "Information about the storage queue destination for an event subscription.",
          "properties": {
            "endpointType": {
              "enum": [
                "StorageQueue"
              ],
              "type": "string"
            },
            "properties": {
              "description": "Storage Queue Properties of the event subscription destination.",
              "oneOf": [
                {
                  "$ref": "#/definitions/StorageQueueEventSubscriptionDestinationProperties"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "endpointType"
          ],
          "type": "object"
        },
        {
          "description": "Information about the webhook destination for an event subscription.",
          "properties": {
            "endpointType": {
              "enum": [
                "WebHook"
              ],
              "type": "string"
            },
            "properties": {
              "description": "WebHook Properties of the event subscription destination.",
              "oneOf": [
                {
                  "$ref": "#/definitions/WebHookEventSubscriptionDestinationProperties"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "endpointType"
          ],
          "type": "object"
        }
      ],
      "properties": {},
      "type": "object"
    },
    "EventSubscriptionFilter": {
      "description": "Filter for the Event Subscription.",
      "properties": {
        "advancedFilters": {
          "description": "An array of advanced filters that are used for filtering event subscriptions.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/AdvancedFilter"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "enableAdvancedFilteringOnArrays": {
          "description": "Allows advanced filters to be evaluated against an array of values instead of expecting a singular value.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "includedEventTypes": {
          "description": "A list of applicable event types that need to be part of the event subscription. If it is desired to subscribe to all default event types, set the IncludedEventTypes to null.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "isSubjectCaseSensitive": {
          "description": "Specifies if the SubjectBeginsWith and SubjectEndsWith properties of the filter\r\nshould be compared in a case sensitive manner.",
          "oneOf": [
            {
              "default": false,
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "subjectBeginsWith": {
          "description": "An optional string to filter events for an event subscription based on a resource path prefix.\r\nThe format of this depends on the publisher of the events.\r\nWildcard characters are not supported in this path.",
          "type": "string"
        },
        "subjectEndsWith": {
          "description": "An optional string to filter events for an event subscription based on a resource path suffix.\r\nWildcard characters are not supported in this path.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "EventSubscriptionIdentity": {
      "description": "The identity information with the event subscription.",
      "properties": {
        "type": {
          "description": "The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identity.",
          "oneOf": [
            {
              "enum": [
                "SystemAssigned",
                "UserAssigned"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "userAssignedIdentity": {
          "description": "The user identity associated with the resource.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "EventSubscriptionProperties": {
      "description": "Properties of the Event Subscription.",
      "properties": {
        "deadLetterDestination": {
          "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.",
          "oneOf": [
            {
              "$ref": "#/definitions/DeadLetterDestination"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "deadLetterWithResourceIdentity": {
          "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery / dead-lettering.",
          "oneOf": [
            {
              "$ref": "#/definitions/DeadLetterWithResourceIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "deliveryWithResourceIdentity": {
          "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery / dead-lettering.",
          "oneOf": [
            {
              "$ref": "#/definitions/DeliveryWithResourceIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "destination": {
          "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses Azure Event Grid's identity to acquire the authentication tokens being used during delivery / dead-lettering.",
          "oneOf": [
            {
              "$ref": "#/definitions/EventSubscriptionDestination"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "eventDeliverySchema": {
          "description": "The event delivery schema for the event subscription.",
          "oneOf": [
            {
              "enum": [
                "EventGridSchema",
                "CustomInputSchema",
                "CloudEventSchemaV1_0"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "expirationTimeUtc": {
          "description": "Expiration time of the event subscription.",
          "format": "date-time",
          "type": "string"
        },
        "filter": {
          "description": "Information about the filter for the event subscription.",
          "oneOf": [
            {
              "$ref": "#/definitions/EventSubscriptionFilter"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "labels": {
          "description": "List of user defined labels.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "retryPolicy": {
          "description": "The retry policy for events. This can be used to configure maximum number of delivery attempts and time to live for events.",
          "oneOf": [
            {
              "$ref": "#/definitions/RetryPolicy"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "EventTypeInfo": {
      "description": "The event type information for Channels.",
      "properties": {
        "inlineEventTypes": {
          "description": "A collection of inline event types for the resource. The inline event type keys are of type string which represents the name of the event.\r\nAn example of a valid inline event name is \"Contoso.OrderCreated\".\r\nThe inline event type values are of type InlineEventProperties and will contain additional information for every inline event type.",
          "oneOf": [
            {
              "additionalProperties": {
                "$ref": "#/definitions/InlineEventProperties"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "kind": {
          "description": "The kind of event type used.",
          "oneOf": [
            {
              "enum": [
                "Inline"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ExtendedLocation": {
      "description": "Definition of an Extended Location",
      "properties": {
        "name": {
          "description": "Fully qualified name of the extended location.",
          "type": "string"
        },
        "type": {
          "description": "Type of the extended location.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Filter": {
      "description": "This is the base type that represents a filter. To configure a filter, do not directly instantiate an object of this class. Instead, instantiate\r\nan object of a derived class such as BoolEqualsFilter, NumberInFilter, StringEqualsFilter etc depending on the type of the key based on\r\nwhich you want to filter.",
      "oneOf": [
        {
          "description": "BoolEquals Filter.",
          "properties": {
            "operatorType": {
              "enum": [
                "BoolEquals"
              ],
              "type": "string"
            },
            "value": {
              "description": "The boolean filter value.",
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "operatorType"
          ],
          "type": "object"
        },
        {
          "description": "IsNotNull Filter.",
          "properties": {
            "operatorType": {
              "enum": [
                "IsNotNull"
              ],
              "type": "string"
            }
          },
          "required": [
            "operatorType"
          ],
          "type": "object"
        },
        {
          "description": "IsNullOrUndefined Filter.",
          "properties": {
            "operatorType": {
              "enum": [
                "IsNullOrUndefined"
              ],
              "type": "string"
            }
          },
          "required": [
            "operatorType"
          ],
          "type": "object"
        },
        {
          "description": "NumberGreaterThan Filter.",
          "properties": {
            "operatorType": {
              "enum": [
                "NumberGreaterThan"
              ],
              "type": "string"
            },
            "value": {
              "description": "The filter value.",
              "oneOf": [
                {
                  "type": "number"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "operatorType"
          ],
          "type": "object"
        },
        {
          "description": "NumberGreaterThanOrEquals Filter.",
          "properties": {
            "operatorType": {
              "enum": [
                "NumberGreaterThanOrEquals"
              ],
              "type": "string"
            },
            "value": {
              "description": "The filter value.",
              "oneOf": [
                {
                  "type": "number"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "operatorType"
          ],
          "type": "object"
        },
        {
          "description": "NumberIn Filter.",
          "properties": {
            "operatorType": {
              "enum": [
                "NumberIn"
              ],
              "type": "string"
            },
            "values": {
              "description": "The set of filter values.",
              "oneOf": [
                {
                  "items": {
                    "type": "number"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "operatorType"
          ],
          "type": "object"
        },
        {
          "description": "NumberInRange Filter.",
          "properties": {
            "operatorType": {
              "enum": [
                "NumberInRange"
              ],
              "type": "string"
            },
            "values": {
              "description": "The set of filter values.",
              "oneOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "operatorType"
          ],
          "type": "object"
        },
        {
          "description": "NumberLessThan Filter.",
          "properties": {
            "operatorType": {
              "enum": [
                "NumberLessThan"
              ],
              "type": "string"
            },
            "value": {
              "description": "The filter value.",
              "oneOf": [
                {
                  "type": "number"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "operatorType"
          ],
          "type": "object"
        },
        {
          "description": "NumberLessThanOrEquals Filter.",
          "properties": {
            "operatorType": {
              "enum": [
                "NumberLessThanOrEquals"
              ],
              "type": "string"
            },
            "value": {
              "description": "The filter value.",
              "oneOf": [
                {
                  "type": "number"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "operatorType"
          ],
          "type": "object"
        },
        {
          "description": "NumberNotIn Filter.",
          "properties": {
            "operatorType": {
              "enum": [
                "NumberNotIn"
              ],
              "type": "string"
            },
            "values": {
              "description": "The set of filter values.",
              "oneOf": [
                {
                  "items": {
                    "type": "number"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "operatorType"
          ],
          "type": "object"
        },
        {
          "description": "NumberNotInRange Filter.",
          "properties": {
            "operatorType": {
              "enum": [
                "NumberNotInRange"
              ],
              "type": "string"
            },
            "values": {
              "description": "The set of filter values.",
              "oneOf": [
                {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "operatorType"
          ],
          "type": "object"
        },
        {
          "description": "StringBeginsWith Filter.",
          "properties": {
            "operatorType": {
              "enum": [
                "StringBeginsWith"
              ],
              "type": "string"
            },
            "values": {
              "description": "The set of filter values.",
              "oneOf": [
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "operatorType"
          ],
          "type": "object"
        },
        {
          "description": "StringContains Filter.",
          "properties": {
            "operatorType": {
              "enum": [
                "StringContains"
              ],
              "type": "string"
            },
            "values": {
              "description": "The set of filter values.",
              "oneOf": [
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "operatorType"
          ],
          "type": "object"
        },
        {
          "description": "StringEndsWith Filter.",
          "properties": {
            "operatorType": {
              "enum": [
                "StringEndsWith"
              ],
              "type": "string"
            },
            "values": {
              "description": "The set of filter values.",
              "oneOf": [
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "operatorType"
          ],
          "type": "object"
        },
        {
          "description": "StringIn Filter.",
          "properties": {
            "operatorType": {
              "enum": [
                "StringIn"
              ],
              "type": "string"
            },
            "values": {
              "description": "The set of filter values.",
              "oneOf": [
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "operatorType"
          ],
          "type": "object"
        },
        {
          "description": "StringNotBeginsWith Filter.",
          "properties": {
            "operatorType": {
              "enum": [
                "StringNotBeginsWith"
              ],
              "type": "string"
            },
            "values": {
              "description": "The set of filter values.",
              "oneOf": [
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "operatorType"
          ],
          "type": "object"
        },
        {
          "description": "StringNotContains Filter.",
          "properties": {
            "operatorType": {
              "enum": [
                "StringNotContains"
              ],
              "type": "string"
            },
            "values": {
              "description": "The set of filter values.",
              "oneOf": [
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "operatorType"
          ],
          "type": "object"
        },
        {
          "description": "StringNotEndsWith Filter.",
          "properties": {
            "operatorType": {
              "enum": [
                "StringNotEndsWith"
              ],
              "type": "string"
            },
            "values": {
              "description": "The set of filter values.",
              "oneOf": [
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "operatorType"
          ],
          "type": "object"
        },
        {
          "description": "StringNotIn Filter.",
          "properties": {
            "operatorType": {
              "enum": [
                "StringNotIn"
              ],
              "type": "string"
            },
            "values": {
              "description": "The set of filter values.",
              "oneOf": [
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "operatorType"
          ],
          "type": "object"
        }
      ],
      "properties": {
        "key": {
          "description": "The field/property in the event based on which you want to filter.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "FiltersConfiguration": {
      "description": "Filters configuration for the Event Subscription.",
      "properties": {
        "filters": {
          "description": "An array of filters that are used for filtering event subscriptions.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/Filter"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "includedEventTypes": {
          "description": "A list of applicable event types that need to be part of the event subscription. If it is desired to subscribe to all default event types, set the IncludedEventTypes to null.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "HybridConnectionEventSubscriptionDestinationProperties": {
      "description": "The properties for a hybrid connection destination.",
      "properties": {
        "deliveryAttributeMappings": {
          "description": "Delivery attribute details.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/DeliveryAttributeMapping"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resourceId": {
          "description": "The Azure Resource ID of an hybrid connection that is the destination of an event subscription.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "IdentityInfo": {
      "description": "The identity information for the resource.",
      "properties": {
        "principalId": {
          "description": "The principal ID of resource identity.",
          "type": "string"
        },
        "tenantId": {
          "description": "The tenant ID of resource.",
          "type": "string"
        },
        "type": {
          "description": "The type of managed identity used. The type 'SystemAssigned, UserAssigned' includes both an implicitly created identity and a set of user-assigned identities. The type 'None' will remove any identity.",
          "oneOf": [
            {
              "enum": [
                "None",
                "SystemAssigned",
                "UserAssigned",
                "SystemAssigned, UserAssigned"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "userAssignedIdentities": {
          "description": "The list of user identities associated with the resource. The user identity dictionary key references will be ARM resource ids in the form:\r\n'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.\r\nThis property is currently not used and reserved for future usage.",
          "oneOf": [
            {
              "additionalProperties": {
                "$ref": "#/definitions/UserIdentityProperties"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "InboundIpRule": {
      "properties": {
        "action": {
          "description": "Action to perform based on the match or no match of the IpMask.",
          "oneOf": [
            {
              "enum": [
                "Allow"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "ipMask": {
          "description": "IP Address in CIDR notation e.g., 10.0.0.0/8.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "InlineEventProperties": {
      "description": "Additional information about every inline event.",
      "properties": {
        "dataSchemaUrl": {
          "description": "The dataSchemaUrl for the inline event.",
          "type": "string"
        },
        "description": {
          "description": "The description for the inline event.",
          "type": "string"
        },
        "displayName": {
          "description": "The displayName for the inline event.",
          "type": "string"
        },
        "documentationUrl": {
          "description": "The documentationUrl for the inline event.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "InputSchemaMapping": {
      "description": "By default, Event Grid expects events to be in the Event Grid event schema. Specifying an input schema mapping enables publishing to Event Grid using a custom input schema. Currently, the only supported type of InputSchemaMapping is 'JsonInputSchemaMapping'.",
      "oneOf": [
        {
          "description": "This enables publishing to Event Grid using a custom input schema. This can be used to map properties from a custom input JSON schema to the Event Grid event schema.",
          "properties": {
            "inputSchemaMappingType": {
              "enum": [
                "Json"
              ],
              "type": "string"
            },
            "properties": {
              "description": "JSON Properties of the input schema mapping",
              "oneOf": [
                {
                  "$ref": "#/definitions/JsonInputSchemaMappingProperties"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "inputSchemaMappingType"
          ],
          "type": "object"
        }
      ],
      "properties": {},
      "type": "object"
    },
    "JsonField": {
      "description": "This is used to express the source of an input schema mapping for a single target field in the Event Grid Event schema. This is currently used in the mappings for the 'id', 'topic' and 'eventtime' properties. This represents a field in the input event schema.",
      "properties": {
        "sourceField": {
          "description": "Name of a field in the input event schema that's to be used as the source of a mapping.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "JsonFieldWithDefault": {
      "description": "This is used to express the source of an input schema mapping for a single target field\r\nin the Event Grid Event schema. This is currently used in the mappings for the 'subject',\r\n'eventtype' and 'dataversion' properties. This represents a field in the input event schema\r\nalong with a default value to be used, and at least one of these two properties should be provided.",
      "properties": {
        "defaultValue": {
          "description": "The default value to be used for mapping when a SourceField is not provided or if there's no property with the specified name in the published JSON event payload.",
          "type": "string"
        },
        "sourceField": {
          "description": "Name of a field in the input event schema that's to be used as the source of a mapping.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "JsonInputSchemaMappingProperties": {
      "description": "This can be used to map properties of a source schema (or default values, for certain supported properties) to properties of the EventGridEvent schema.",
      "properties": {
        "dataVersion": {
          "description": "The mapping information for the DataVersion property of the Event Grid Event.",
          "oneOf": [
            {
              "$ref": "#/definitions/JsonFieldWithDefault"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "eventTime": {
          "description": "The mapping information for the EventTime property of the Event Grid Event.",
          "oneOf": [
            {
              "$ref": "#/definitions/JsonField"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "eventType": {
          "description": "The mapping information for the EventType property of the Event Grid Event.",
          "oneOf": [
            {
              "$ref": "#/definitions/JsonFieldWithDefault"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "id": {
          "description": "The mapping information for the Id property of the Event Grid Event.",
          "oneOf": [
            {
              "$ref": "#/definitions/JsonField"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "subject": {
          "description": "The mapping information for the Subject property of the Event Grid Event.",
          "oneOf": [
            {
              "$ref": "#/definitions/JsonFieldWithDefault"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "topic": {
          "description": "The mapping information for the Topic property of the Event Grid Event.",
          "oneOf": [
            {
              "$ref": "#/definitions/JsonField"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "MonitorAlertEventSubscriptionDestinationProperties": {
      "description": "The properties that represent the Monitor Alert destination of an event subscription.",
      "properties": {
        "actionGroups": {
          "description": "The list of ARM Ids of Action Groups that will be triggered on every Alert fired through this event subscription.\r\nEach resource ARM Id should follow this pattern: /subscriptions/{AzureSubscriptionId}/resourceGroups/{ResourceGroupName}/providers/Microsoft.Insights/actionGroups/{ActionGroupName}.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "description": {
          "description": "The description that will be attached to every Alert fired through this event subscription.",
          "type": "string"
        },
        "severity": {
          "description": "The severity that will be attached to every Alert fired through this event subscription.\r\nThis field must be provided.",
          "oneOf": [
            {
              "enum": [
                "Sev0",
                "Sev1",
                "Sev2",
                "Sev3",
                "Sev4"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "NamespaceProperties": {
      "description": "Properties of the namespace resource.",
      "properties": {
        "inboundIpRules": {
          "description": "This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/InboundIpRule"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "isZoneRedundant": {
          "description": "This is an optional property and it allows the user to specify if the namespace resource supports zone-redundancy capability or not. If this\r\nproperty is not specified explicitly by the user, its default value depends on the following conditions:\r\n    a. For Availability Zones enabled regions - The default property value would be true.\r\n    b. For non-Availability Zones enabled regions - The default property value would be false.\r\nOnce specified, this property cannot be updated.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "minimumTlsVersionAllowed": {
          "description": "Minimum TLS version of the publisher allowed to publish to this namespace. Only TLS version 1.2 is supported.",
          "oneOf": [
            {
              "enum": [
                "1.0",
                "1.1",
                "1.2"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "privateEndpointConnections": {
          "description": "Array of PrivateEndpointConnection",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/PrivateEndpointConnection"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "publicNetworkAccess": {
          "description": "This determines if traffic is allowed over public network. By default it is enabled.\r\nYou can further restrict to specific IPs by configuring <seealso cref=\"P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.PubSub.NamespaceProperties.InboundIpRules\" />",
          "oneOf": [
            {
              "enum": [
                "Enabled",
                "Disabled",
                "SecuredByPerimeter"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "topicSpacesConfiguration": {
          "description": "Topic spaces configuration information for the namespace resource",
          "oneOf": [
            {
              "$ref": "#/definitions/TopicSpacesConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "topicsConfiguration": {
          "description": "Topics configuration information for the namespace resource",
          "oneOf": [
            {
              "$ref": "#/definitions/TopicsConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "NamespaceSku": {
      "description": "Represents available Sku pricing tiers.",
      "properties": {
        "capacity": {
          "description": "Specifies the number of Throughput Units that defines the capacity for the namespace. The property default value is\r\n1 which signifies 1 Throughput Unit = 1MB/s ingress and 2MB/s egress per namespace. Min capacity is 1 and\r\nmax allowed capacity is 20.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "name": {
          "description": "The name of the SKU.",
          "oneOf": [
            {
              "enum": [
                "Standard"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "NamespaceTopicEventSubscriptionDestinationProperties": {
      "description": "The properties that represent the Event Grid Namespace Topic destination of an event subscription.",
      "properties": {
        "resourceId": {
          "description": "The Azure resource Id that represents the endpoint of the Event Grid Namespace Topic destination of an event subscription.\r\nThis field is required and the Namespace Topic resource listed must already exist.\r\nThe resource ARM Id should follow this pattern: /subscriptions/{AzureSubscriptionId}/resourceGroups/{ResourceGroupName}/providers/Microsoft.EventGrid/namespaces/{NamespaceName}/topics/{TopicName}.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "NamespaceTopicProperties": {
      "description": "Properties of the namespace topic.",
      "properties": {
        "eventRetentionInDays": {
          "description": "Event retention for the namespace topic expressed in days. The property default value is 1 day.\r\nMin event retention duration value is 1 day and max event retention duration value is 1 day.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "inputSchema": {
          "description": "This determines the format that is expected for incoming events published to the topic.",
          "oneOf": [
            {
              "enum": [
                "CloudEventSchemaV1_0"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "publisherType": {
          "description": "Publisher type of the namespace topic.",
          "oneOf": [
            {
              "enum": [
                "Custom"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "Partner": {
      "description": "Information about the partner.",
      "properties": {
        "authorizationExpirationTimeInUtc": {
          "description": "Expiration time of the partner authorization. If this timer expires, any request from this partner to create, update or delete resources in subscriber's\r\ncontext will fail. If specified, the allowed values are between 1 to the value of defaultMaximumExpirationTimeInDays specified in PartnerConfiguration.\r\nIf not specified, the default value will be the value of defaultMaximumExpirationTimeInDays specified in PartnerConfiguration or 7 if this value is not specified.",
          "format": "date-time",
          "type": "string"
        },
        "partnerName": {
          "description": "The partner name.",
          "type": "string"
        },
        "partnerRegistrationImmutableId": {
          "description": "The immutableId of the corresponding partner registration.",
          "oneOf": [
            {
              "pattern": "^[0-9a-fA-F]{8}(-[0-9a-fA-F]{4}){3}-[0-9a-fA-F]{12}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "PartnerAuthorization": {
      "description": "The partner authorization details.",
      "properties": {
        "authorizedPartnersList": {
          "description": "The list of authorized partners.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/Partner"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "defaultMaximumExpirationTimeInDays": {
          "description": "Time used to validate the authorization expiration time for each authorized partner. If DefaultMaximumExpirationTimeInDays is\r\nnot specified, the default is 7 days. Otherwise, allowed values are between 1 and 365 days.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "PartnerClientAuthentication": {
      "description": "Partner client authentication",
      "oneOf": [
        {
          "description": "Azure Active Directory Partner Client Authentication",
          "properties": {
            "clientAuthenticationType": {
              "enum": [
                "AzureAD"
              ],
              "type": "string"
            },
            "properties": {
              "description": "AzureAD ClientAuthentication Properties",
              "oneOf": [
                {
                  "$ref": "#/definitions/AzureADPartnerClientAuthenticationProperties"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "clientAuthenticationType"
          ],
          "type": "object"
        }
      ],
      "properties": {},
      "type": "object"
    },
    "PartnerConfigurationProperties": {
      "description": "Properties of the partner configuration.",
      "properties": {
        "partnerAuthorization": {
          "description": "The details of authorized partners.",
          "oneOf": [
            {
              "$ref": "#/definitions/PartnerAuthorization"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "provisioningState": {
          "description": "Provisioning state of the partner configuration.",
          "oneOf": [
            {
              "enum": [
                "Creating",
                "Updating",
                "Deleting",
                "Succeeded",
                "Canceled",
                "Failed"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "PartnerDestinationInfo": {
      "description": "Properties of the corresponding partner destination of a Channel.",
      "oneOf": [
        {
          "description": "Information about the WebHook of the partner destination.",
          "properties": {
            "endpointType": {
              "enum": [
                "WebHook"
              ],
              "type": "string"
            },
            "properties": {
              "description": "WebHook Properties of the partner destination.",
              "oneOf": [
                {
                  "$ref": "#/definitions/WebhookPartnerDestinationProperties"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "endpointType"
          ],
          "type": "object"
        }
      ],
      "properties": {
        "azureSubscriptionId": {
          "description": "Azure subscription ID of the subscriber. The partner destination associated with the channel will be\r\ncreated under this Azure subscription.",
          "type": "string"
        },
        "endpointServiceContext": {
          "description": "Additional context of the partner destination endpoint.",
          "type": "string"
        },
        "name": {
          "description": "Name of the partner destination associated with the channel.",
          "type": "string"
        },
        "resourceGroupName": {
          "description": "Azure Resource Group of the subscriber. The partner destination associated with the channel will be\r\ncreated under this resource group.",
          "type": "string"
        },
        "resourceMoveChangeHistory": {
          "description": "Change history of the resource move.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/ResourceMoveChangeHistory"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "PartnerDestinationProperties": {
      "description": "Properties of the Partner Destination.",
      "properties": {
        "activationState": {
          "description": "Activation state of the partner destination.",
          "oneOf": [
            {
              "enum": [
                "NeverActivated",
                "Activated"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "endpointBaseUrl": {
          "description": "Endpoint Base URL of the partner destination",
          "type": "string"
        },
        "endpointServiceContext": {
          "description": "Endpoint context associated with this partner destination.",
          "type": "string"
        },
        "expirationTimeIfNotActivatedUtc": {
          "description": "Expiration time of the partner destination. If this timer expires and the partner destination was never activated,\r\nthe partner destination and corresponding channel are deleted.",
          "format": "date-time",
          "type": "string"
        },
        "messageForActivation": {
          "description": "Context or helpful message that can be used during the approval process.",
          "type": "string"
        },
        "partnerRegistrationImmutableId": {
          "description": "The immutable Id of the corresponding partner registration.",
          "oneOf": [
            {
              "pattern": "^[0-9a-fA-F]{8}(-[0-9a-fA-F]{4}){3}-[0-9a-fA-F]{12}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "PartnerEventSubscriptionDestinationProperties": {
      "properties": {
        "resourceId": {
          "description": "The Azure Resource Id that represents the endpoint of a Partner Destination of an event subscription.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PartnerNamespaceProperties": {
      "description": "Properties of the partner namespace.",
      "properties": {
        "disableLocalAuth": {
          "description": "This boolean is used to enable or disable local auth. Default value is false. When the property is set to true, only AAD token will be used to authenticate if user is allowed to publish to the partner namespace.",
          "oneOf": [
            {
              "default": false,
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "inboundIpRules": {
          "description": "This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/InboundIpRule"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "minimumTlsVersionAllowed": {
          "description": "Minimum TLS version of the publisher allowed to publish to this partner namespace",
          "oneOf": [
            {
              "enum": [
                "1.0",
                "1.1",
                "1.2"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "partnerRegistrationFullyQualifiedId": {
          "description": "The fully qualified ARM Id of the partner registration that should be associated with this partner namespace. This takes the following format:\r\n/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/partnerRegistrations/{partnerRegistrationName}.",
          "type": "string"
        },
        "partnerTopicRoutingMode": {
          "description": "This determines if events published to this partner namespace should use the source attribute in the event payload\r\nor use the channel name in the header when matching to the partner topic. If none is specified, source attribute routing will be used to match the partner topic.",
          "oneOf": [
            {
              "enum": [
                "SourceEventAttribute",
                "ChannelNameHeader"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "publicNetworkAccess": {
          "description": "This determines if traffic is allowed over public network. By default it is enabled.\r\nYou can further restrict to specific IPs by configuring <seealso cref=\"P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.PartnerNamespaceProperties.InboundIpRules\" />",
          "oneOf": [
            {
              "enum": [
                "Enabled",
                "Disabled",
                "SecuredByPerimeter"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "PartnerRegistrationProperties": {
      "description": "Properties of the partner registration.",
      "properties": {
        "partnerRegistrationImmutableId": {
          "description": "The immutableId of the corresponding partner registration.\r\nNote: This property is marked for deprecation and is not supported in any future GA API version",
          "oneOf": [
            {
              "pattern": "^[0-9a-fA-F]{8}(-[0-9a-fA-F]{4}){3}-[0-9a-fA-F]{12}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "PartnerTopicInfo": {
      "description": "Properties of the corresponding partner topic of a Channel.",
      "properties": {
        "azureSubscriptionId": {
          "description": "Azure subscription ID of the subscriber. The partner topic associated with the channel will be\r\ncreated under this Azure subscription.",
          "type": "string"
        },
        "eventTypeInfo": {
          "description": "Event Type Information for the partner topic. This information is provided by the publisher and can be used by the \r\nsubscriber to view different types of events that are published.",
          "oneOf": [
            {
              "$ref": "#/definitions/EventTypeInfo"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "name": {
          "description": "Name of the partner topic associated with the channel.",
          "type": "string"
        },
        "resourceGroupName": {
          "description": "Azure Resource Group of the subscriber. The partner topic associated with the channel will be\r\ncreated under this resource group.",
          "type": "string"
        },
        "source": {
          "description": "The source information is provided by the publisher to determine the scope or context from which the events\r\nare originating. This information can be used by the subscriber during the approval process of the\r\ncreated partner topic.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PartnerTopicProperties": {
      "description": "Properties of the Partner Topic.",
      "properties": {
        "activationState": {
          "description": "Activation state of the partner topic.",
          "oneOf": [
            {
              "enum": [
                "NeverActivated",
                "Activated",
                "Deactivated"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "eventTypeInfo": {
          "description": "Event Type information from the corresponding event channel.",
          "oneOf": [
            {
              "$ref": "#/definitions/EventTypeInfo"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "expirationTimeIfNotActivatedUtc": {
          "description": "Expiration time of the partner topic. If this timer expires while the partner topic is still never activated,\r\nthe partner topic and corresponding event channel are deleted.",
          "format": "date-time",
          "type": "string"
        },
        "messageForActivation": {
          "description": "Context or helpful message that can be used during the approval process by the subscriber.",
          "type": "string"
        },
        "partnerRegistrationImmutableId": {
          "description": "The immutableId of the corresponding partner registration.",
          "oneOf": [
            {
              "pattern": "^[0-9a-fA-F]{8}(-[0-9a-fA-F]{4}){3}-[0-9a-fA-F]{12}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "partnerTopicFriendlyDescription": {
          "description": "Friendly description about the topic. This can be set by the publisher/partner to show custom description for the customer partner topic.\r\nThis will be helpful to remove any ambiguity of the origin of creation of the partner topic for the customer.",
          "type": "string"
        },
        "source": {
          "description": "Source associated with this partner topic. This represents a unique partner resource.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PermissionBindingProperties": {
      "description": "The properties of permission binding.",
      "properties": {
        "clientGroupName": {
          "description": "The name of the client group resource that the permission is bound to.\r\nThe client group needs to be a resource under the same namespace the permission binding is a part of.",
          "type": "string"
        },
        "description": {
          "description": "Description for the Permission Binding resource.",
          "type": "string"
        },
        "permission": {
          "description": "The allowed permission.",
          "oneOf": [
            {
              "enum": [
                "Publisher",
                "Subscriber"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "topicSpaceName": {
          "description": "The name of the Topic Space resource that the permission is bound to.\r\nThe Topic space needs to be a resource under the same namespace the permission binding is a part of.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PrivateEndpoint": {
      "description": "PrivateEndpoint information.",
      "properties": {
        "id": {
          "description": "The ARM identifier for Private Endpoint.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PrivateEndpointConnection": {
      "properties": {
        "properties": {
          "description": "Properties of the PrivateEndpointConnection.",
          "oneOf": [
            {
              "$ref": "#/definitions/PrivateEndpointConnectionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "PrivateEndpointConnectionProperties": {
      "description": "Properties of the private endpoint connection resource.",
      "properties": {
        "groupIds": {
          "description": "GroupIds from the private link service resource.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "privateEndpoint": {
          "description": "The Private Endpoint resource for this Connection.",
          "oneOf": [
            {
              "$ref": "#/definitions/PrivateEndpoint"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "privateLinkServiceConnectionState": {
          "description": "Details about the state of the connection.",
          "oneOf": [
            {
              "$ref": "#/definitions/ConnectionState"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "provisioningState": {
          "description": "Provisioning state of the Private Endpoint Connection.",
          "oneOf": [
            {
              "enum": [
                "Creating",
                "Updating",
                "Deleting",
                "Succeeded",
                "Canceled",
                "Failed"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "PushInfo": {
      "description": "Properties of the destination info for event subscription supporting push.",
      "properties": {
        "deadLetterDestinationWithResourceIdentity": {
          "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses the managed identity setup on the parent resource (namely, namespace) to acquire the authentication tokens being used during delivery / dead-lettering.",
          "oneOf": [
            {
              "$ref": "#/definitions/DeadLetterWithResourceIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "deliveryWithResourceIdentity": {
          "description": "Information about the destination where events have to be delivered for the event subscription.\r\nUses the managed identity setup on the parent resource (namely, topic or domain) to acquire the authentication tokens being used during delivery / dead-lettering.",
          "oneOf": [
            {
              "$ref": "#/definitions/DeliveryWithResourceIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "eventTimeToLive": {
          "description": "Time span duration in ISO 8601 format that determines how long messages are available to the subscription from the time the message was published.\r\nThis duration value is expressed using the following format: \\'P(n)Y(n)M(n)DT(n)H(n)M(n)S\\', where:\r\n    - (n) is replaced by the value of each time element that follows the (n).\r\n    - P is the duration (or Period) designator and is always placed at the beginning of the duration.\r\n    - Y is the year designator, and it follows the value for the number of years.\r\n    - M is the month designator, and it follows the value for the number of months.\r\n    - W is the week designator, and it follows the value for the number of weeks.\r\n    - D is the day designator, and it follows the value for the number of days.\r\n    - T is the time designator, and it precedes the time components.\r\n    - H is the hour designator, and it follows the value for the number of hours.\r\n    - M is the minute designator, and it follows the value for the number of minutes.\r\n    - S is the second designator, and it follows the value for the number of seconds.\r\nThis duration value cannot be set greater than the topic’s EventRetentionInDays. It is is an optional field where its minimum value is 1 minute, and its maximum is determined\r\nby topic’s EventRetentionInDays value. The followings are examples of valid values:\r\n    - \\'P0DT23H12M\\' or \\'PT23H12M\\': for duration of 23 hours and 12 minutes.\r\n    - \\'P1D\\' or \\'P1DT0H0M0S\\': for duration of 1 day.",
          "type": "string"
        },
        "maxDeliveryCount": {
          "description": "The maximum delivery count of the events.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "QueueInfo": {
      "description": "Properties of the Queue info for event subscription.",
      "properties": {
        "deadLetterDestinationWithResourceIdentity": {
          "description": "The dead letter destination of the event subscription. Any event that cannot be delivered to its' destination is sent to the dead letter destination.\r\nUses the managed identity setup on the parent resource (namely, topic) to acquire the authentication tokens being used during delivery / dead-lettering.",
          "oneOf": [
            {
              "$ref": "#/definitions/DeadLetterWithResourceIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "eventTimeToLive": {
          "description": "Time span duration in ISO 8601 format that determines how long messages are available to the subscription from the time the message was published.\r\nThis duration value is expressed using the following format: \\'P(n)Y(n)M(n)DT(n)H(n)M(n)S\\', where:\r\n    - (n) is replaced by the value of each time element that follows the (n).\r\n    - P is the duration (or Period) designator and is always placed at the beginning of the duration.\r\n    - Y is the year designator, and it follows the value for the number of years.\r\n    - M is the month designator, and it follows the value for the number of months.\r\n    - W is the week designator, and it follows the value for the number of weeks.\r\n    - D is the day designator, and it follows the value for the number of days.\r\n    - T is the time designator, and it precedes the time components.\r\n    - H is the hour designator, and it follows the value for the number of hours.\r\n    - M is the minute designator, and it follows the value for the number of minutes.\r\n    - S is the second designator, and it follows the value for the number of seconds.\r\nThis duration value cannot be set greater than the topic’s EventRetentionInDays. It is is an optional field where its minimum value is 1 minute, and its maximum is determined\r\nby topic’s EventRetentionInDays value. The followings are examples of valid values:\r\n    - \\'P0DT23H12M\\' or \\'PT23H12M\\': for duration of 23 hours and 12 minutes.\r\n    - \\'P1D\\' or \\'P1DT0H0M0S\\': for duration of 1 day.",
          "type": "string"
        },
        "maxDeliveryCount": {
          "description": "The maximum delivery count of the events.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "receiveLockDurationInSeconds": {
          "description": "Maximum period in seconds in which once the message is in received (by the client) state and waiting to be accepted, released or rejected.\r\nIf this time elapsed after a message has been received by the client and not transitioned into accepted (not processed), released or rejected,\r\nthe message is available for redelivery. This is an optional field, where default is 60 seconds, minimum is 60 seconds and maximum is 300 seconds.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ResourceMoveChangeHistory": {
      "description": "The change history of the resource move.",
      "properties": {
        "azureSubscriptionId": {
          "description": "Azure subscription ID of the resource.",
          "type": "string"
        },
        "changedTimeUtc": {
          "description": "UTC timestamp of when the resource was changed.",
          "format": "date-time",
          "type": "string"
        },
        "resourceGroupName": {
          "description": "Azure Resource Group of the resource.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ResourceSku": {
      "description": "Describes an EventGrid Resource Sku.",
      "properties": {
        "name": {
          "description": "The Sku name of the resource. The possible values are: Basic or Premium.",
          "oneOf": [
            {
              "enum": [
                "Basic",
                "Premium"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "RetryPolicy": {
      "description": "Information about the retry policy for an event subscription.",
      "properties": {
        "eventTimeToLiveInMinutes": {
          "description": "Time To Live (in minutes) for events.",
          "oneOf": [
            {
              "default": 1440,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "maxDeliveryAttempts": {
          "description": "Maximum number of delivery retry attempts for events.",
          "oneOf": [
            {
              "default": 30,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "RoutingEnrichments": {
      "properties": {
        "dynamic": {
          "description": "Array of DynamicRoutingEnrichment",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/DynamicRoutingEnrichment"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "static": {
          "description": "Array of StaticRoutingEnrichment",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/StaticRoutingEnrichment"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "RoutingIdentityInfo": {
      "description": "Routing identity info for topic spaces configuration.",
      "properties": {
        "type": {
          "oneOf": [
            {
              "enum": [
                "None",
                "SystemAssigned",
                "UserAssigned"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "userAssignedIdentity": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ServiceBusQueueEventSubscriptionDestinationProperties": {
      "description": "The properties that represent the Service Bus destination of an event subscription.",
      "properties": {
        "deliveryAttributeMappings": {
          "description": "Delivery attribute details.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/DeliveryAttributeMapping"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resourceId": {
          "description": "The Azure Resource Id that represents the endpoint of the Service Bus destination of an event subscription.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ServiceBusTopicEventSubscriptionDestinationProperties": {
      "description": "The properties that represent the Service Bus Topic destination of an event subscription.",
      "properties": {
        "deliveryAttributeMappings": {
          "description": "Delivery attribute details.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/DeliveryAttributeMapping"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resourceId": {
          "description": "The Azure Resource Id that represents the endpoint of the Service Bus Topic destination of an event subscription.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "StaticDeliveryAttributeMappingProperties": {
      "description": "Properties of static delivery attribute mapping.",
      "properties": {
        "isSecret": {
          "description": "Boolean flag to tell if the attribute contains sensitive information .",
          "oneOf": [
            {
              "default": false,
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "value": {
          "description": "Value of the delivery attribute.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "StaticRoutingEnrichment": {
      "description": "Static routing enrichment details.",
      "oneOf": [
        {
          "properties": {
            "value": {
              "description": "String type routing enrichment value.",
              "type": "string"
            },
            "valueType": {
              "enum": [
                "String"
              ],
              "type": "string"
            }
          },
          "required": [
            "valueType"
          ],
          "type": "object"
        }
      ],
      "properties": {
        "key": {
          "description": "Static routing enrichment key.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "StorageBlobDeadLetterDestinationProperties": {
      "description": "Properties of the storage blob based dead letter destination.",
      "properties": {
        "blobContainerName": {
          "description": "The name of the Storage blob container that is the destination of the deadletter events",
          "type": "string"
        },
        "resourceId": {
          "description": "The Azure Resource ID of the storage account that is the destination of the deadletter events",
          "type": "string"
        }
      },
      "type": "object"
    },
    "StorageQueueEventSubscriptionDestinationProperties": {
      "description": "The properties for a storage queue destination.",
      "properties": {
        "queueMessageTimeToLiveInSeconds": {
          "description": "Storage queue message time to live in seconds. This value cannot be zero or negative with the exception of using -1 to indicate that the Time To Live of the message is Infinite.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "queueName": {
          "description": "The name of the Storage queue under a storage account that is the destination of an event subscription.",
          "type": "string"
        },
        "resourceId": {
          "description": "The Azure Resource ID of the storage account that contains the queue that is the destination of an event subscription.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "SubscriptionProperties": {
      "description": "Properties of the event subscription.",
      "properties": {
        "deliveryConfiguration": {
          "description": "Information about the delivery configuration of the event subscription.",
          "oneOf": [
            {
              "$ref": "#/definitions/DeliveryConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "eventDeliverySchema": {
          "description": "The event delivery schema for the event subscription.",
          "oneOf": [
            {
              "enum": [
                "CloudEventSchemaV1_0"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "filtersConfiguration": {
          "description": "Information about the filter for the event subscription.",
          "oneOf": [
            {
              "$ref": "#/definitions/FiltersConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "SystemTopicProperties": {
      "description": "Properties of the System Topic.",
      "properties": {
        "source": {
          "description": "Source for the system topic.",
          "type": "string"
        },
        "topicType": {
          "description": "TopicType for the system topic.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "TopicProperties": {
      "description": "Properties of the Topic.",
      "properties": {
        "dataResidencyBoundary": {
          "description": "Data Residency Boundary of the resource.",
          "oneOf": [
            {
              "enum": [
                "WithinGeopair",
                "WithinRegion"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "disableLocalAuth": {
          "description": "This boolean is used to enable or disable local auth. Default value is false. When the property is set to true, only AAD token will be used to authenticate if user is allowed to publish to the topic.",
          "oneOf": [
            {
              "default": false,
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "eventTypeInfo": {
          "description": "Event Type Information for the user topic. This information is provided by the publisher and can be used by the \r\nsubscriber to view different types of events that are published.",
          "oneOf": [
            {
              "$ref": "#/definitions/EventTypeInfo"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "inboundIpRules": {
          "description": "This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered only if PublicNetworkAccess is enabled.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/InboundIpRule"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "inputSchema": {
          "description": "This determines the format that Event Grid should expect for incoming events published to the topic.",
          "oneOf": [
            {
              "enum": [
                "EventGridSchema",
                "CustomEventSchema",
                "CloudEventSchemaV1_0"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "inputSchemaMapping": {
          "description": "This enables publishing using custom event schemas. An InputSchemaMapping can be specified to map various properties of a source schema to various required properties of the EventGridEvent schema.",
          "oneOf": [
            {
              "$ref": "#/definitions/InputSchemaMapping"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "minimumTlsVersionAllowed": {
          "description": "Minimum TLS version of the publisher allowed to publish to this topic",
          "oneOf": [
            {
              "enum": [
                "1.0",
                "1.1",
                "1.2"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "publicNetworkAccess": {
          "description": "This determines if traffic is allowed over public network. By default it is enabled. \r\nYou can further restrict to specific IPs by configuring <seealso cref=\"P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.TopicProperties.InboundIpRules\" />",
          "oneOf": [
            {
              "enum": [
                "Enabled",
                "Disabled",
                "SecuredByPerimeter"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "TopicSpaceProperties": {
      "description": "The properties of topic space.",
      "properties": {
        "description": {
          "description": "Description for the Topic Space resource.",
          "type": "string"
        },
        "topicTemplates": {
          "description": "The topic filters in the topic space.\r\nExample: \"topicTemplates\": [ \r\n              \"devices/foo/bar\",\r\n              \"devices/topic1/+\",\r\n              \"devices/${principal.name}/${principal.attributes.keyName}\" ].",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "TopicSpacesConfiguration": {
      "description": "Properties of the Topic Spaces Configuration.",
      "properties": {
        "clientAuthentication": {
          "description": "Client authentication settings for topic spaces configuration.",
          "oneOf": [
            {
              "$ref": "#/definitions/ClientAuthenticationSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "maximumClientSessionsPerAuthenticationName": {
          "description": "The maximum number of sessions per authentication name. The property default value is 1.\r\nMin allowed value is 1 and max allowed value is 100.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "maximumSessionExpiryInHours": {
          "description": "The maximum session expiry in hours. The property default value is 1 hour.\r\nMin allowed value is 1 hour and max allowed value is 8 hours.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "routeTopicResourceId": {
          "description": "Fully qualified Azure Resource Id for the Event Grid Topic to which events will be routed to from TopicSpaces under a namespace.\r\nThis property should be in the following format '/subscriptions/{subId}/resourcegroups/{resourceGroupName}/providers/microsoft.EventGrid/topics/{topicName}'.\r\nThis topic should reside in the same region where namespace is located.",
          "type": "string"
        },
        "routingEnrichments": {
          "description": "Routing enrichments for topic spaces configuration",
          "oneOf": [
            {
              "$ref": "#/definitions/RoutingEnrichments"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "routingIdentityInfo": {
          "description": "Routing identity info for topic spaces configuration.",
          "oneOf": [
            {
              "$ref": "#/definitions/RoutingIdentityInfo"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "state": {
          "description": "Indicate if Topic Spaces Configuration is enabled for the namespace. Default is Disabled.",
          "oneOf": [
            {
              "enum": [
                "Disabled",
                "Enabled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "TopicsConfiguration": {
      "description": "Properties of the Topics Configuration.",
      "properties": {},
      "type": "object"
    },
    "UserIdentityProperties": {
      "description": "The information about the user identity.",
      "properties": {
        "clientId": {
          "description": "The client id of user assigned identity.",
          "type": "string"
        },
        "principalId": {
          "description": "The principal id of user assigned identity.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "WebHookEventSubscriptionDestinationProperties": {
      "description": "Information about the webhook destination properties for an event subscription.",
      "properties": {
        "azureActiveDirectoryApplicationIdOrUri": {
          "description": "The Azure Active Directory Application ID or URI to get the access token that will be included as the bearer token in delivery requests.",
          "type": "string"
        },
        "azureActiveDirectoryTenantId": {
          "description": "The Azure Active Directory Tenant ID to get the access token that will be included as the bearer token in delivery requests.",
          "type": "string"
        },
        "deliveryAttributeMappings": {
          "description": "Delivery attribute details.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/DeliveryAttributeMapping"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "endpointUrl": {
          "description": "The URL that represents the endpoint of the destination of an event subscription.",
          "type": "string"
        },
        "maxEventsPerBatch": {
          "description": "Maximum number of events per batch.",
          "oneOf": [
            {
              "default": 1,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "minimumTlsVersionAllowed": {
          "description": "Minimum TLS version that should be supported by webhook endpoint",
          "oneOf": [
            {
              "enum": [
                "1.0",
                "1.1",
                "1.2"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "preferredBatchSizeInKilobytes": {
          "description": "Preferred batch size in Kilobytes.",
          "oneOf": [
            {
              "default": 64,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "WebhookPartnerDestinationProperties": {
      "description": "Properties of a partner destination webhook.",
      "properties": {
        "clientAuthentication": {
          "description": "Partner client authentication",
          "oneOf": [
            {
              "$ref": "#/definitions/PartnerClientAuthentication"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "endpointBaseUrl": {
          "description": "The base URL that represents the endpoint of the partner destination.",
          "type": "string"
        },
        "endpointUrl": {
          "description": "The URL that represents the endpoint of the partner destination.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "domains_eventSubscriptions_childResource": {
      "description": "Microsoft.EventGrid/domains/eventSubscriptions",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-12-15-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Name of the event subscription to be created. Event subscription names must be between 3 and 100 characters in length and use alphanumeric letters only.",
          "type": "string"
        },
        "properties": {
          "description": "Properties of the event subscription.",
          "oneOf": [
            {
              "$ref": "#/definitions/EventSubscriptionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "eventSubscriptions"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "domains_privateEndpointConnections_childResource": {
      "description": "Microsoft.EventGrid/domains/privateEndpointConnections",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-12-15-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the private endpoint connection connection.",
          "type": "string"
        },
        "properties": {
          "description": "Properties of the PrivateEndpointConnection.",
          "oneOf": [
            {
              "$ref": "#/definitions/PrivateEndpointConnectionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "privateEndpointConnections"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "domains_topics_childResource": {
      "description": "Microsoft.EventGrid/domains/topics",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-12-15-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Name of the domain topic.",
          "type": "string"
        },
        "type": {
          "enum": [
            "topics"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "domains_topics_eventSubscriptions_childResource": {
      "description": "Microsoft.EventGrid/domains/topics/eventSubscriptions",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-12-15-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Name of the event subscription to be created. Event subscription names must be between 3 and 100 characters in length and use alphanumeric letters only.",
          "type": "string"
        },
        "properties": {
          "description": "Properties of the event subscription.",
          "oneOf": [
            {
              "$ref": "#/definitions/EventSubscriptionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "eventSubscriptions"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "namespaces_caCertificates_childResource": {
      "description": "Microsoft.EventGrid/namespaces/caCertificates",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-12-15-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The CA certificate name.",
          "oneOf": [
            {
              "maxLength": 50,
              "minLength": 3,
              "pattern": "^[a-zA-Z0-9-]*$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The properties of CA certificate.",
          "oneOf": [
            {
              "$ref": "#/definitions/CaCertificateProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "caCertificates"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "namespaces_clientGroups_childResource": {
      "description": "Microsoft.EventGrid/namespaces/clientGroups",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-12-15-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The client group name.",
          "oneOf": [
            {
              "maxLength": 50,
              "minLength": 3,
              "pattern": "^[a-zA-Z0-9-]*$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The properties of client group.",
          "oneOf": [
            {
              "$ref": "#/definitions/ClientGroupProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "clientGroups"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "namespaces_clients_childResource": {
      "description": "Microsoft.EventGrid/namespaces/clients",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-12-15-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The client name.",
          "oneOf": [
            {
              "maxLength": 128,
              "minLength": 1,
              "pattern": "^[-a-zA-Z0-9:\\._]*$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The properties of client.",
          "oneOf": [
            {
              "$ref": "#/definitions/ClientProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "clients"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "namespaces_permissionBindings_childResource": {
      "description": "Microsoft.EventGrid/namespaces/permissionBindings",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-12-15-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The permission binding name.",
          "oneOf": [
            {
              "maxLength": 50,
              "minLength": 3,
              "pattern": "^[a-zA-Z0-9-]*$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The properties of permission binding.",
          "oneOf": [
            {
              "$ref": "#/definitions/PermissionBindingProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "permissionBindings"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "namespaces_privateEndpointConnections_childResource": {
      "description": "Microsoft.EventGrid/namespaces/privateEndpointConnections",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-12-15-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the private endpoint connection connection.",
          "type": "string"
        },
        "properties": {
          "description": "Properties of the PrivateEndpointConnection.",
          "oneOf": [
            {
              "$ref": "#/definitions/PrivateEndpointConnectionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "privateEndpointConnections"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "namespaces_topicSpaces_childResource": {
      "description": "Microsoft.EventGrid/namespaces/topicSpaces",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-12-15-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The topic space name.",
          "oneOf": [
            {
              "maxLength": 50,
              "minLength": 3,
              "pattern": "^[a-zA-Z0-9-]*$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The properties of topic space.",
          "oneOf": [
            {
              "$ref": "#/definitions/TopicSpaceProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "topicSpaces"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "namespaces_topics_childResource": {
      "description": "Microsoft.EventGrid/namespaces/topics",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-12-15-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Name of the namespace topic.",
          "oneOf": [
            {
              "maxLength": 50,
              "minLength": 3,
              "pattern": "^[a-zA-Z0-9-]*$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Properties of the namespace topic.",
          "oneOf": [
            {
              "$ref": "#/definitions/NamespaceTopicProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "topics"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "namespaces_topics_eventSubscriptions_childResource": {
      "description": "Microsoft.EventGrid/namespaces/topics/eventSubscriptions",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-12-15-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Name of the event subscription to be created. Event subscription names must be between 3 and 100 characters in length and use alphanumeric letters only.",
          "oneOf": [
            {
              "maxLength": 50,
              "minLength": 3,
              "pattern": "^[a-zA-Z0-9-]*$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Properties of the event subscription.",
          "oneOf": [
            {
              "$ref": "#/definitions/SubscriptionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "eventSubscriptions"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "partnerNamespaces_channels_childResource": {
      "description": "Microsoft.EventGrid/partnerNamespaces/channels",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-12-15-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Name of the channel.",
          "type": "string"
        },
        "properties": {
          "description": "Properties of the Channel.",
          "oneOf": [
            {
              "$ref": "#/definitions/ChannelProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "channels"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "partnerNamespaces_privateEndpointConnections_childResource": {
      "description": "Microsoft.EventGrid/partnerNamespaces/privateEndpointConnections",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-12-15-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the private endpoint connection connection.",
          "type": "string"
        },
        "properties": {
          "description": "Properties of the PrivateEndpointConnection.",
          "oneOf": [
            {
              "$ref": "#/definitions/PrivateEndpointConnectionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "privateEndpointConnections"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "partnerTopics_eventSubscriptions_childResource": {
      "description": "Microsoft.EventGrid/partnerTopics/eventSubscriptions",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-12-15-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Name of the event subscription to be created. Event subscription names must be between 3 and 100 characters in length and use alphanumeric letters only.",
          "type": "string"
        },
        "properties": {
          "description": "Properties of the event subscription.",
          "oneOf": [
            {
              "$ref": "#/definitions/EventSubscriptionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "eventSubscriptions"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "systemTopics_eventSubscriptions_childResource": {
      "description": "Microsoft.EventGrid/systemTopics/eventSubscriptions",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-12-15-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Name of the event subscription to be created. Event subscription names must be between 3 and 100 characters in length and use alphanumeric letters only.",
          "type": "string"
        },
        "properties": {
          "description": "Properties of the event subscription.",
          "oneOf": [
            {
              "$ref": "#/definitions/EventSubscriptionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "eventSubscriptions"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "topics_eventSubscriptions_childResource": {
      "description": "Microsoft.EventGrid/topics/eventSubscriptions",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-12-15-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Name of the event subscription to be created. Event subscription names must be between 3 and 100 characters in length and use alphanumeric letters only.",
          "type": "string"
        },
        "properties": {
          "description": "Properties of the event subscription.",
          "oneOf": [
            {
              "$ref": "#/definitions/EventSubscriptionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "eventSubscriptions"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "topics_privateEndpointConnections_childResource": {
      "description": "Microsoft.EventGrid/topics/privateEndpointConnections",
      "properties": {
        "apiVersion": {
          "enum": [
            "2023-12-15-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the private endpoint connection connection.",
          "type": "string"
        },
        "properties": {
          "description": "Properties of the PrivateEndpointConnection.",
          "oneOf": [
            {
              "$ref": "#/definitions/PrivateEndpointConnectionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "privateEndpointConnections"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    }
  }
}