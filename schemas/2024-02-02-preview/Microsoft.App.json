{
  "id": "https://schema.management.azure.com/schemas/2024-02-02-preview/Microsoft.App.json#",
  "title": "Microsoft.App",
  "description": "Microsoft App Resource Types",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "resourceDefinitions": {
    "builders": {
      "description": "Microsoft.App/builders",
      "properties": {
        "apiVersion": {
          "enum": [
            "2024-02-02-preview"
          ],
          "type": "string"
        },
        "identity": {
          "description": "The managed service identities assigned to this resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedServiceIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "location": {
          "description": "The geo-location where the resource lives",
          "type": "string"
        },
        "name": {
          "description": "The name of the builder.",
          "oneOf": [
            {
              "maxLength": 32,
              "minLength": 2,
              "pattern": "^[-\\w\\._\\(\\)]+$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/BuilderProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/builders_builds_childResource"
              }
            ]
          },
          "type": "array"
        },
        "tags": {
          "description": "Resource tags.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.App/builders"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "builders_builds": {
      "description": "Microsoft.App/builders/builds",
      "properties": {
        "apiVersion": {
          "enum": [
            "2024-02-02-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of a build.",
          "oneOf": [
            {
              "maxLength": 64,
              "minLength": 2,
              "pattern": "^[-\\w\\._\\(\\)]+$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/BuildProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.App/builders/builds"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "connectedEnvironments": {
      "description": "Microsoft.App/connectedEnvironments",
      "properties": {
        "apiVersion": {
          "enum": [
            "2024-02-02-preview"
          ],
          "type": "string"
        },
        "extendedLocation": {
          "description": "The complex type of the extended location.",
          "oneOf": [
            {
              "$ref": "#/definitions/ExtendedLocation"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "location": {
          "description": "The geo-location where the resource lives",
          "type": "string"
        },
        "name": {
          "description": "Name of the connectedEnvironment.",
          "type": "string"
        },
        "properties": {
          "description": "ConnectedEnvironment resource specific properties",
          "oneOf": [
            {
              "$ref": "#/definitions/ConnectedEnvironmentProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/connectedEnvironments_storages_childResource"
              },
              {
                "$ref": "#/definitions/connectedEnvironments_certificates_childResource"
              },
              {
                "$ref": "#/definitions/connectedEnvironments_daprComponents_childResource"
              }
            ]
          },
          "type": "array"
        },
        "tags": {
          "description": "Resource tags.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.App/connectedEnvironments"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "connectedEnvironments_certificates": {
      "description": "Microsoft.App/connectedEnvironments/certificates",
      "properties": {
        "apiVersion": {
          "enum": [
            "2024-02-02-preview"
          ],
          "type": "string"
        },
        "location": {
          "description": "The geo-location where the resource lives",
          "type": "string"
        },
        "name": {
          "description": "Name of the Certificate.",
          "type": "string"
        },
        "properties": {
          "description": "Certificate resource specific properties",
          "oneOf": [
            {
              "$ref": "#/definitions/CertificateProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Resource tags.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.App/connectedEnvironments/certificates"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "connectedEnvironments_daprComponents": {
      "description": "Microsoft.App/connectedEnvironments/daprComponents",
      "properties": {
        "apiVersion": {
          "enum": [
            "2024-02-02-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Name of the Dapr Component.",
          "type": "string"
        },
        "properties": {
          "description": "Dapr Component resource specific properties",
          "oneOf": [
            {
              "$ref": "#/definitions/DaprComponentProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.App/connectedEnvironments/daprComponents"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "connectedEnvironments_storages": {
      "description": "Microsoft.App/connectedEnvironments/storages",
      "properties": {
        "apiVersion": {
          "enum": [
            "2024-02-02-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Name of the storage.",
          "type": "string"
        },
        "properties": {
          "description": "Storage properties",
          "oneOf": [
            {
              "$ref": "#/definitions/ConnectedEnvironmentStorageProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.App/connectedEnvironments/storages"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "containerApps": {
      "description": "Microsoft.App/containerApps",
      "properties": {
        "apiVersion": {
          "enum": [
            "2024-02-02-preview"
          ],
          "type": "string"
        },
        "extendedLocation": {
          "description": "The complex type of the extended location.",
          "oneOf": [
            {
              "$ref": "#/definitions/ExtendedLocation"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "identity": {
          "description": "managed identities for the Container App to interact with other Azure services without maintaining any secrets or credentials in code.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedServiceIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "kind": {
          "description": "Metadata used to render different experiences for resources of the same type; e.g. WorkflowApp is a kind of Microsoft.App/ContainerApps type. If supported, the resource provider must validate and persist this value.",
          "oneOf": [
            {
              "enum": [
                "workflowapp"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "location": {
          "description": "The geo-location where the resource lives",
          "type": "string"
        },
        "managedBy": {
          "description": "The fully qualified resource ID of the resource that manages this resource. Indicates if this resource is managed by another Azure resource. If this is present, complete mode deployment will not delete the resource if it is removed from the template since it is managed by another resource.",
          "type": "string"
        },
        "name": {
          "description": "Name of the Container App.",
          "type": "string"
        },
        "properties": {
          "description": "ContainerApp resource specific properties",
          "oneOf": [
            {
              "$ref": "#/definitions/ContainerAppProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/containerApps_authConfigs_childResource"
              },
              {
                "$ref": "#/definitions/containerApps_sourcecontrols_childResource"
              },
              {
                "$ref": "#/definitions/containerApps_resiliencyPolicies_childResource"
              }
            ]
          },
          "type": "array"
        },
        "tags": {
          "description": "Resource tags.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.App/containerApps"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "containerApps_authConfigs": {
      "description": "Microsoft.App/containerApps/authConfigs",
      "properties": {
        "apiVersion": {
          "enum": [
            "2024-02-02-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Name of the Container App AuthConfig.",
          "type": "string"
        },
        "properties": {
          "description": "AuthConfig resource specific properties",
          "oneOf": [
            {
              "$ref": "#/definitions/AuthConfigProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.App/containerApps/authConfigs"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "containerApps_resiliencyPolicies": {
      "description": "Microsoft.App/containerApps/resiliencyPolicies",
      "properties": {
        "apiVersion": {
          "enum": [
            "2024-02-02-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Name of the resiliency policy.",
          "oneOf": [
            {
              "pattern": "^[-\\w\\._\\(\\)]+$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "App Resiliency resource specific properties",
          "oneOf": [
            {
              "$ref": "#/definitions/AppResiliencyProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.App/containerApps/resiliencyPolicies"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "containerApps_sourcecontrols": {
      "description": "Microsoft.App/containerApps/sourcecontrols",
      "properties": {
        "apiVersion": {
          "enum": [
            "2024-02-02-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Name of the Container App SourceControl.",
          "type": "string"
        },
        "properties": {
          "description": "SourceControl resource specific properties",
          "oneOf": [
            {
              "$ref": "#/definitions/SourceControlProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.App/containerApps/sourcecontrols"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "jobs": {
      "description": "Microsoft.App/jobs",
      "properties": {
        "apiVersion": {
          "enum": [
            "2024-02-02-preview"
          ],
          "type": "string"
        },
        "extendedLocation": {
          "description": "The complex type of the extended location.",
          "oneOf": [
            {
              "$ref": "#/definitions/ExtendedLocation"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "identity": {
          "description": "Managed identities needed by a container app job to interact with other Azure services to not maintain any secrets or credentials in code.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedServiceIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "location": {
          "description": "The geo-location where the resource lives",
          "type": "string"
        },
        "name": {
          "description": "Job Name",
          "oneOf": [
            {
              "pattern": "^[-\\w\\._\\(\\)]+$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Container Apps Job resource specific properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/JobProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Resource tags.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.App/jobs"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "managedEnvironments": {
      "description": "Microsoft.App/managedEnvironments",
      "properties": {
        "apiVersion": {
          "enum": [
            "2024-02-02-preview"
          ],
          "type": "string"
        },
        "identity": {
          "description": "Managed identities for the Managed Environment to interact with other Azure services without maintaining any secrets or credentials in code.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedServiceIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "kind": {
          "description": "Kind of the Environment.",
          "type": "string"
        },
        "location": {
          "description": "The geo-location where the resource lives",
          "type": "string"
        },
        "name": {
          "description": "Name of the Environment.",
          "type": "string"
        },
        "properties": {
          "description": "Managed environment resource specific properties",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedEnvironmentProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/managedEnvironments_storages_childResource"
              },
              {
                "$ref": "#/definitions/managedEnvironments_certificates_childResource"
              },
              {
                "$ref": "#/definitions/managedEnvironments_javaComponents_childResource"
              },
              {
                "$ref": "#/definitions/managedEnvironments_daprComponents_childResource"
              },
              {
                "$ref": "#/definitions/managedEnvironments_dotNetComponents_childResource"
              },
              {
                "$ref": "#/definitions/managedEnvironments_daprSubscriptions_childResource"
              },
              {
                "$ref": "#/definitions/managedEnvironments_managedCertificates_childResource"
              },
              {
                "$ref": "#/definitions/managedEnvironments_privateEndpointConnections_childResource"
              }
            ]
          },
          "type": "array"
        },
        "tags": {
          "description": "Resource tags.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.App/managedEnvironments"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "managedEnvironments_certificates": {
      "description": "Microsoft.App/managedEnvironments/certificates",
      "properties": {
        "apiVersion": {
          "enum": [
            "2024-02-02-preview"
          ],
          "type": "string"
        },
        "location": {
          "description": "The geo-location where the resource lives",
          "type": "string"
        },
        "name": {
          "description": "Name of the Certificate.",
          "type": "string"
        },
        "properties": {
          "description": "Certificate resource specific properties",
          "oneOf": [
            {
              "$ref": "#/definitions/CertificateProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Resource tags.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.App/managedEnvironments/certificates"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "managedEnvironments_daprComponents": {
      "description": "Microsoft.App/managedEnvironments/daprComponents",
      "properties": {
        "apiVersion": {
          "enum": [
            "2024-02-02-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Name of the Dapr Component.",
          "type": "string"
        },
        "properties": {
          "description": "Dapr Component resource specific properties",
          "oneOf": [
            {
              "$ref": "#/definitions/DaprComponentProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/managedEnvironments_daprComponents_resiliencyPolicies_childResource"
              }
            ]
          },
          "type": "array"
        },
        "type": {
          "enum": [
            "Microsoft.App/managedEnvironments/daprComponents"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "managedEnvironments_daprComponents_resiliencyPolicies": {
      "description": "Microsoft.App/managedEnvironments/daprComponents/resiliencyPolicies",
      "properties": {
        "apiVersion": {
          "enum": [
            "2024-02-02-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Name of the Dapr Component Resiliency Policy.",
          "type": "string"
        },
        "properties": {
          "description": "Dapr Component Resiliency Policy resource specific properties",
          "oneOf": [
            {
              "$ref": "#/definitions/DaprComponentResiliencyPolicyProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.App/managedEnvironments/daprComponents/resiliencyPolicies"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "managedEnvironments_daprSubscriptions": {
      "description": "Microsoft.App/managedEnvironments/daprSubscriptions",
      "properties": {
        "apiVersion": {
          "enum": [
            "2024-02-02-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Name of the Dapr subscription.",
          "type": "string"
        },
        "properties": {
          "description": "Dapr PubSub Event Subscription resource specific properties",
          "oneOf": [
            {
              "$ref": "#/definitions/DaprSubscriptionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.App/managedEnvironments/daprSubscriptions"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "managedEnvironments_dotNetComponents": {
      "description": "Microsoft.App/managedEnvironments/dotNetComponents",
      "properties": {
        "apiVersion": {
          "enum": [
            "2024-02-02-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Name of the .NET Component.",
          "oneOf": [
            {
              "pattern": "^[-\\w\\._\\(\\)]+$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": ".NET Component resource specific properties",
          "oneOf": [
            {
              "$ref": "#/definitions/DotNetComponentProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.App/managedEnvironments/dotNetComponents"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "managedEnvironments_javaComponents": {
      "description": "Microsoft.App/managedEnvironments/javaComponents",
      "properties": {
        "apiVersion": {
          "enum": [
            "2024-02-02-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Name of the Java Component.",
          "oneOf": [
            {
              "pattern": "^[-\\w\\._\\(\\)]+$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Java Component resource specific properties",
          "oneOf": [
            {
              "$ref": "#/definitions/JavaComponentProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.App/managedEnvironments/javaComponents"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "managedEnvironments_managedCertificates": {
      "description": "Microsoft.App/managedEnvironments/managedCertificates",
      "properties": {
        "apiVersion": {
          "enum": [
            "2024-02-02-preview"
          ],
          "type": "string"
        },
        "location": {
          "description": "The geo-location where the resource lives",
          "type": "string"
        },
        "name": {
          "description": "Name of the Managed Certificate.",
          "type": "string"
        },
        "properties": {
          "description": "Certificate resource specific properties",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedCertificateProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Resource tags.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.App/managedEnvironments/managedCertificates"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "managedEnvironments_privateEndpointConnections": {
      "description": "Microsoft.App/managedEnvironments/privateEndpointConnections",
      "properties": {
        "apiVersion": {
          "enum": [
            "2024-02-02-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the private endpoint connection associated with the Azure resource.",
          "type": "string"
        },
        "properties": {
          "description": "Resource properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/PrivateEndpointConnectionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.App/managedEnvironments/privateEndpointConnections"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "managedEnvironments_storages": {
      "description": "Microsoft.App/managedEnvironments/storages",
      "properties": {
        "apiVersion": {
          "enum": [
            "2024-02-02-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Name of the storage.",
          "type": "string"
        },
        "properties": {
          "description": "Storage properties",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedEnvironmentStorageProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.App/managedEnvironments/storages"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "sessionPools": {
      "description": "Microsoft.App/sessionPools",
      "properties": {
        "apiVersion": {
          "enum": [
            "2024-02-02-preview"
          ],
          "type": "string"
        },
        "location": {
          "description": "The geo-location where the resource lives",
          "type": "string"
        },
        "name": {
          "description": "Name of the session pool.",
          "oneOf": [
            {
              "maxLength": 63,
              "minLength": 3,
              "pattern": "^[a-z][a-z0-9]*$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Container App session pool resource specific properties",
          "oneOf": [
            {
              "$ref": "#/definitions/SessionPoolProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Resource tags.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.App/sessionPools"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    }
  },
  "extension_resourceDefinitions": {
    "logicApps": {
      "description": "Microsoft.App/logicApps",
      "properties": {
        "apiVersion": {
          "enum": [
            "2024-02-02-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Name of the Logic App, the extension resource.",
          "oneOf": [
            {
              "pattern": "^[-\\w\\._\\(\\)]+$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "oneOf": [
            {
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.App/logicApps"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    }
  },
  "definitions": {
    "AllowedAudiencesValidation": {
      "description": "The configuration settings of the Allowed Audiences validation flow.",
      "properties": {
        "allowedAudiences": {
          "description": "The configuration settings of the allowed list of audiences from which to validate the JWT token.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "AllowedPrincipals": {
      "description": "The configuration settings of the Azure Active Directory allowed principals.",
      "properties": {
        "groups": {
          "description": "The list of the allowed groups.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "identities": {
          "description": "The list of the allowed identities.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "AppInsightsConfiguration": {
      "description": "Configuration of Application Insights ",
      "properties": {
        "connectionString": {
          "description": "Application Insights connection string",
          "type": "string"
        }
      },
      "type": "object"
    },
    "AppLogsConfiguration": {
      "description": "Configuration of application logs",
      "properties": {
        "destination": {
          "description": "Logs destination, can be 'log-analytics', 'azure-monitor' or 'none'",
          "type": "string"
        },
        "logAnalyticsConfiguration": {
          "description": "Log Analytics configuration, must only be provided when destination is configured as 'log-analytics'",
          "oneOf": [
            {
              "$ref": "#/definitions/LogAnalyticsConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "AppRegistration": {
      "description": "The configuration settings of the app registration for providers that have app ids and app secrets",
      "properties": {
        "appId": {
          "description": "The App ID of the app used for login.",
          "type": "string"
        },
        "appSecretSettingName": {
          "description": "The app setting name that contains the app secret.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "AppResiliencyProperties": {
      "description": "App Resiliency resource specific properties",
      "properties": {
        "circuitBreakerPolicy": {
          "description": "Policy that defines circuit breaker conditions",
          "oneOf": [
            {
              "$ref": "#/definitions/CircuitBreakerPolicy"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "httpConnectionPool": {
          "description": "Defines parameters for http connection pooling",
          "oneOf": [
            {
              "$ref": "#/definitions/HttpConnectionPool"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "httpRetryPolicy": {
          "description": "Policy that defines http request retry conditions",
          "oneOf": [
            {
              "$ref": "#/definitions/HttpRetryPolicy"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tcpConnectionPool": {
          "description": "Defines parameters for tcp connection pooling",
          "oneOf": [
            {
              "$ref": "#/definitions/TcpConnectionPool"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tcpRetryPolicy": {
          "description": "Policy that defines tcp request retry conditions",
          "oneOf": [
            {
              "$ref": "#/definitions/TcpRetryPolicy"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "timeoutPolicy": {
          "description": "Policy to set request timeouts",
          "oneOf": [
            {
              "$ref": "#/definitions/TimeoutPolicy"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "Apple": {
      "description": "The configuration settings of the Apple provider.",
      "properties": {
        "enabled": {
          "description": "<code>false</code> if the Apple provider should not be enabled despite the set registration; otherwise, <code>true</code>.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "login": {
          "description": "The configuration settings of the login flow.",
          "oneOf": [
            {
              "$ref": "#/definitions/LoginScopes"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "registration": {
          "description": "The configuration settings of the Apple registration.",
          "oneOf": [
            {
              "$ref": "#/definitions/AppleRegistration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "AppleRegistration": {
      "description": "The configuration settings of the registration for the Apple provider",
      "properties": {
        "clientId": {
          "description": "The Client ID of the app used for login.",
          "type": "string"
        },
        "clientSecretSettingName": {
          "description": "The app setting name that contains the client secret.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "AuthConfigProperties": {
      "description": "AuthConfig resource specific properties",
      "properties": {
        "encryptionSettings": {
          "description": "The configuration settings of the secrets references of encryption key and signing key for ContainerApp Service Authentication/Authorization.",
          "oneOf": [
            {
              "$ref": "#/definitions/EncryptionSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "globalValidation": {
          "description": "The configuration settings that determines the validation flow of users using  Service Authentication/Authorization.",
          "oneOf": [
            {
              "$ref": "#/definitions/GlobalValidation"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "httpSettings": {
          "description": "The configuration settings of the HTTP requests for authentication and authorization requests made against ContainerApp Service Authentication/Authorization.",
          "oneOf": [
            {
              "$ref": "#/definitions/HttpSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "identityProviders": {
          "description": "The configuration settings of each of the identity providers used to configure ContainerApp Service Authentication/Authorization.",
          "oneOf": [
            {
              "$ref": "#/definitions/IdentityProviders"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "login": {
          "description": "The configuration settings of the login flow of users using ContainerApp Service Authentication/Authorization.",
          "oneOf": [
            {
              "$ref": "#/definitions/Login"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "platform": {
          "description": "The configuration settings of the platform of ContainerApp Service Authentication/Authorization.",
          "oneOf": [
            {
              "$ref": "#/definitions/AuthPlatform"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "AuthPlatform": {
      "description": "The configuration settings of the platform of ContainerApp Service Authentication/Authorization.",
      "properties": {
        "enabled": {
          "description": "<code>true</code> if the Authentication / Authorization feature is enabled for the current app; otherwise, <code>false</code>.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "runtimeVersion": {
          "description": "The RuntimeVersion of the Authentication / Authorization feature in use for the current app.\nThe setting in this value can control the behavior of certain features in the Authentication / Authorization module.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "AzureActiveDirectory": {
      "description": "The configuration settings of the Azure Active directory provider.",
      "properties": {
        "enabled": {
          "description": "<code>false</code> if the Azure Active Directory provider should not be enabled despite the set registration; otherwise, <code>true</code>.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "isAutoProvisioned": {
          "description": "Gets a value indicating whether the Azure AD configuration was auto-provisioned using 1st party tooling.\nThis is an internal flag primarily intended to support the Azure Management Portal. Users should not\nread or write to this property.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "login": {
          "description": "The configuration settings of the Azure Active Directory login flow.",
          "oneOf": [
            {
              "$ref": "#/definitions/AzureActiveDirectoryLogin"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "registration": {
          "description": "The configuration settings of the Azure Active Directory app registration.",
          "oneOf": [
            {
              "$ref": "#/definitions/AzureActiveDirectoryRegistration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "validation": {
          "description": "The configuration settings of the Azure Active Directory token validation flow.",
          "oneOf": [
            {
              "$ref": "#/definitions/AzureActiveDirectoryValidation"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "AzureActiveDirectoryLogin": {
      "description": "The configuration settings of the Azure Active Directory login flow.",
      "properties": {
        "disableWWWAuthenticate": {
          "description": "<code>true</code> if the www-authenticate provider should be omitted from the request; otherwise, <code>false</code>.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "loginParameters": {
          "description": "Login parameters to send to the OpenID Connect authorization endpoint when\na user logs in. Each parameter must be in the form \"key=value\".",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "AzureActiveDirectoryRegistration": {
      "description": "The configuration settings of the Azure Active Directory app registration.",
      "properties": {
        "clientId": {
          "description": "The Client ID of this relying party application, known as the client_id.\nThis setting is required for enabling OpenID Connection authentication with Azure Active Directory or \nother 3rd party OpenID Connect providers.\nMore information on OpenID Connect: http://openid.net/specs/openid-connect-core-1_0.html",
          "type": "string"
        },
        "clientSecretCertificateIssuer": {
          "description": "An alternative to the client secret thumbprint, that is the issuer of a certificate used for signing purposes. This property acts as\na replacement for the Client Secret Certificate Thumbprint. It is also optional.",
          "type": "string"
        },
        "clientSecretCertificateSubjectAlternativeName": {
          "description": "An alternative to the client secret thumbprint, that is the subject alternative name of a certificate used for signing purposes. This property acts as\na replacement for the Client Secret Certificate Thumbprint. It is also optional.",
          "type": "string"
        },
        "clientSecretCertificateThumbprint": {
          "description": "An alternative to the client secret, that is the thumbprint of a certificate used for signing purposes. This property acts as\na replacement for the Client Secret. It is also optional.",
          "type": "string"
        },
        "clientSecretSettingName": {
          "description": "The app setting name that contains the client secret of the relying party application.",
          "type": "string"
        },
        "openIdIssuer": {
          "description": "The OpenID Connect Issuer URI that represents the entity which issues access tokens for this application.\nWhen using Azure Active Directory, this value is the URI of the directory tenant, e.g. https://login.microsoftonline.com/v2.0/{tenant-guid}/.\nThis URI is a case-sensitive identifier for the token issuer.\nMore information on OpenID Connect Discovery: http://openid.net/specs/openid-connect-discovery-1_0.html",
          "type": "string"
        }
      },
      "type": "object"
    },
    "AzureActiveDirectoryValidation": {
      "description": "The configuration settings of the Azure Active Directory token validation flow.",
      "properties": {
        "allowedAudiences": {
          "description": "The list of audiences that can make successful authentication/authorization requests.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "defaultAuthorizationPolicy": {
          "description": "The configuration settings of the default authorization policy.",
          "oneOf": [
            {
              "$ref": "#/definitions/DefaultAuthorizationPolicy"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "jwtClaimChecks": {
          "description": "The configuration settings of the checks that should be made while validating the JWT Claims.",
          "oneOf": [
            {
              "$ref": "#/definitions/JwtClaimChecks"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "AzureCredentials": {
      "description": "Container App credentials.",
      "properties": {
        "clientId": {
          "description": "Client Id.",
          "type": "string"
        },
        "clientSecret": {
          "description": "Client Secret.",
          "type": "string"
        },
        "kind": {
          "description": "Kind of auth github does for deploying the template",
          "type": "string"
        },
        "subscriptionId": {
          "description": "Subscription Id.",
          "type": "string"
        },
        "tenantId": {
          "description": "Tenant Id.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "AzureFileProperties": {
      "description": "Azure File Properties.",
      "properties": {
        "accessMode": {
          "description": "Access mode for storage",
          "oneOf": [
            {
              "enum": [
                "ReadOnly",
                "ReadWrite"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "accountKey": {
          "description": "Storage account key for azure file.",
          "type": "string"
        },
        "accountName": {
          "description": "Storage account name for azure file.",
          "type": "string"
        },
        "shareName": {
          "description": "Azure file share name.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "AzureStaticWebApps": {
      "description": "The configuration settings of the Azure Static Web Apps provider.",
      "properties": {
        "enabled": {
          "description": "<code>false</code> if the Azure Static Web Apps provider should not be enabled despite the set registration; otherwise, <code>true</code>.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "registration": {
          "description": "The configuration settings of the Azure Static Web Apps registration.",
          "oneOf": [
            {
              "$ref": "#/definitions/AzureStaticWebAppsRegistration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "AzureStaticWebAppsRegistration": {
      "description": "The configuration settings of the registration for the Azure Static Web Apps provider",
      "properties": {
        "clientId": {
          "description": "The Client ID of the app used for login.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "BlobStorageTokenStore": {
      "description": "The configuration settings of the storage of the tokens if blob storage is used.",
      "properties": {
        "sasUrlSettingName": {
          "description": "The name of the app secrets containing the SAS URL of the blob storage containing the tokens.",
          "type": "string"
        }
      },
      "required": [
        "sasUrlSettingName"
      ],
      "type": "object"
    },
    "BuildConfiguration": {
      "description": "Configuration of the build.",
      "properties": {
        "baseOs": {
          "description": "Base OS used to build and run the app.",
          "type": "string"
        },
        "environmentVariables": {
          "description": "List of environment variables to be passed to the build, secrets should not be used in environment variable.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/EnvironmentVariable"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "platform": {
          "description": "Platform to be used to build and run the app.",
          "type": "string"
        },
        "platformVersion": {
          "description": "Platform version to be used to build and run the app.",
          "type": "string"
        },
        "preBuildSteps": {
          "description": "List of steps to perform before the build.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/PreBuildStep"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "BuildProperties": {
      "description": "The build properties.",
      "properties": {
        "configuration": {
          "description": "Configuration of the build.",
          "oneOf": [
            {
              "$ref": "#/definitions/BuildConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "destinationContainerRegistry": {
          "description": "Container registry that the final image will be uploaded to.",
          "oneOf": [
            {
              "$ref": "#/definitions/ContainerRegistryWithCustomImage"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "BuilderProperties": {
      "description": "The builder properties.",
      "properties": {
        "containerRegistries": {
          "description": "List of mappings of container registries and the managed identity used to connect to it.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/ContainerRegistry"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "environmentId": {
          "description": "Resource ID of the container apps environment that the builder is associated with.",
          "type": "string"
        }
      },
      "required": [
        "environmentId"
      ],
      "type": "object"
    },
    "CertificateKeyVaultProperties": {
      "description": "Properties for a certificate stored in a Key Vault.",
      "properties": {
        "identity": {
          "description": "Resource ID of a managed identity to authenticate with Azure Key Vault, or System to use a system-assigned identity.",
          "type": "string"
        },
        "keyVaultUrl": {
          "description": "URL pointing to the Azure Key Vault secret that holds the certificate.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CertificateProperties": {
      "description": "Certificate resource specific properties",
      "properties": {
        "certificateKeyVaultProperties": {
          "description": "Properties for a certificate stored in a Key Vault.",
          "oneOf": [
            {
              "$ref": "#/definitions/CertificateKeyVaultProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "certificateType": {
          "description": "The type of the certificate. Allowed values are `ServerSSLCertificate` and `ImagePullTrustedCA`",
          "oneOf": [
            {
              "enum": [
                "ServerSSLCertificate",
                "ImagePullTrustedCA"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "password": {
          "description": "Certificate password.",
          "type": "string"
        },
        "value": {
          "description": "PFX or PEM blob"
        }
      },
      "type": "object"
    },
    "CircuitBreakerPolicy": {
      "description": "Policy that defines circuit breaker conditions",
      "properties": {
        "consecutiveErrors": {
          "description": "Number of consecutive errors before the circuit breaker opens",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "intervalInSeconds": {
          "description": "The time interval, in seconds, between endpoint checks. This can result in opening the circuit breaker if the check fails as well as closing the circuit breaker if the check succeeds. Defaults to 10s.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "maxEjectionPercent": {
          "description": "Maximum percentage of hosts that will be ejected after failure threshold has been met",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ClientRegistration": {
      "description": "The configuration settings of the app registration for providers that have client ids and client secrets",
      "properties": {
        "clientId": {
          "description": "The Client ID of the app used for login.",
          "type": "string"
        },
        "clientSecretSettingName": {
          "description": "The app setting name that contains the client secret.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Configuration": {
      "description": "Non versioned Container App configuration properties that define the mutable settings of a Container app",
      "properties": {
        "activeRevisionsMode": {
          "description": "ActiveRevisionsMode controls how active revisions are handled for the Container app:\n<list><item>Multiple: multiple revisions can be active.</item><item>Single: Only one revision can be active at a time. Revision weights can not be used in this mode. If no value if provided, this is the default.</item></list>",
          "oneOf": [
            {
              "enum": [
                "Multiple",
                "Single"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "dapr": {
          "description": "Dapr configuration for the Container App.",
          "oneOf": [
            {
              "$ref": "#/definitions/Dapr"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "identitySettings": {
          "description": "Optional settings for Managed Identities that are assigned to the Container App. If a Managed Identity is not specified here, default settings will be used.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/IdentitySettings"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "ingress": {
          "description": "Ingress configurations.",
          "oneOf": [
            {
              "$ref": "#/definitions/Ingress"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "maxInactiveRevisions": {
          "description": "Optional. Max inactive revisions a Container App can have.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "registries": {
          "description": "Collection of private container registry credentials for containers used by the Container app",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/RegistryCredentials"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "runtime": {
          "description": "App runtime configuration for the Container App.",
          "oneOf": [
            {
              "$ref": "#/definitions/Runtime"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "secrets": {
          "description": "Collection of secrets used by a Container app",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/Secret"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "service": {
          "description": "Container App to be a dev Container App Service",
          "oneOf": [
            {
              "$ref": "#/definitions/Service"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ConnectedEnvironmentProperties": {
      "description": "ConnectedEnvironment resource specific properties",
      "properties": {
        "customDomainConfiguration": {
          "description": "Custom domain configuration for the environment",
          "oneOf": [
            {
              "$ref": "#/definitions/CustomDomainConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "daprAIConnectionString": {
          "description": "Application Insights connection string used by Dapr to export Service to Service communication telemetry",
          "type": "string"
        },
        "staticIp": {
          "description": "Static IP of the connectedEnvironment",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ConnectedEnvironmentStorageProperties": {
      "description": "Storage properties",
      "properties": {
        "azureFile": {
          "description": "Azure file properties",
          "oneOf": [
            {
              "$ref": "#/definitions/AzureFileProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "smb": {
          "description": "SMB storage properties",
          "oneOf": [
            {
              "$ref": "#/definitions/SmbStorage"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "Container": {
      "description": "Container App container definition",
      "properties": {
        "args": {
          "description": "Container start command arguments.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "command": {
          "description": "Container start command.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "env": {
          "description": "Container environment variables.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/EnvironmentVar"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "image": {
          "description": "Container image tag.",
          "type": "string"
        },
        "imageType": {
          "description": "The type of the image. Set to CloudBuild to let the system manages the image, where user will not be able to update image through image field. Set to ContainerImage for user provided image.",
          "oneOf": [
            {
              "enum": [
                "CloudBuild",
                "ContainerImage"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "name": {
          "description": "Custom container name.",
          "type": "string"
        },
        "probes": {
          "description": "List of probes for the container.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/ContainerAppProbe"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "description": "Container resource requirements.",
          "oneOf": [
            {
              "$ref": "#/definitions/ContainerResources"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "volumeMounts": {
          "description": "Container volume mounts.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/VolumeMount"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ContainerAppProbe": {
      "description": "Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.",
      "properties": {
        "failureThreshold": {
          "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1. Maximum value is 10.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "httpGet": {
          "description": "HTTPGet specifies the http request to perform.",
          "oneOf": [
            {
              "$ref": "#/definitions/ContainerAppProbeHttpGet"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "initialDelaySeconds": {
          "description": "Number of seconds after the container has started before liveness probes are initiated. Minimum value is 1. Maximum value is 60.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "periodSeconds": {
          "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1. Maximum value is 240.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "successThreshold": {
          "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1. Maximum value is 10.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tcpSocket": {
          "description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported.",
          "oneOf": [
            {
              "$ref": "#/definitions/ContainerAppProbeTcpSocket"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "terminationGracePeriodSeconds": {
          "description": "Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is an alpha field and requires enabling ProbeTerminationGracePeriod feature gate. Maximum value is 3600 seconds (1 hour)",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "timeoutSeconds": {
          "description": "Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. Maximum value is 240.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "description": "The type of probe.",
          "oneOf": [
            {
              "enum": [
                "Liveness",
                "Readiness",
                "Startup"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ContainerAppProbeHttpGet": {
      "description": "HTTPGet specifies the http request to perform.",
      "properties": {
        "host": {
          "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
          "type": "string"
        },
        "httpHeaders": {
          "description": "Custom headers to set in the request. HTTP allows repeated headers.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/ContainerAppProbeHttpGetHttpHeadersItem"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "path": {
          "description": "Path to access on the HTTP server.",
          "type": "string"
        },
        "port": {
          "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "scheme": {
          "description": "Scheme to use for connecting to the host. Defaults to HTTP.",
          "oneOf": [
            {
              "enum": [
                "HTTP",
                "HTTPS"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "port"
      ],
      "type": "object"
    },
    "ContainerAppProbeHttpGetHttpHeadersItem": {
      "description": "HTTPHeader describes a custom header to be used in HTTP probes",
      "properties": {
        "name": {
          "description": "The header field name",
          "type": "string"
        },
        "value": {
          "description": "The header field value",
          "type": "string"
        }
      },
      "required": [
        "name",
        "value"
      ],
      "type": "object"
    },
    "ContainerAppProbeTcpSocket": {
      "description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported.",
      "properties": {
        "host": {
          "description": "Optional: Host name to connect to, defaults to the pod IP.",
          "type": "string"
        },
        "port": {
          "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "port"
      ],
      "type": "object"
    },
    "ContainerAppProperties": {
      "description": "ContainerApp resource specific properties",
      "properties": {
        "configuration": {
          "description": "Non versioned Container App configuration properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/Configuration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "environmentId": {
          "description": "Resource ID of environment.",
          "type": "string"
        },
        "managedEnvironmentId": {
          "description": "Deprecated. Resource ID of the Container App's environment.",
          "type": "string"
        },
        "patchingConfiguration": {
          "description": "Container App auto patch configuration.",
          "oneOf": [
            {
              "$ref": "#/definitions/ContainerAppPropertiesPatchingConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "template": {
          "description": "Container App versioned application definition.",
          "oneOf": [
            {
              "$ref": "#/definitions/Template"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "workloadProfileName": {
          "description": "Workload profile name to pin for container app execution.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ContainerAppPropertiesPatchingConfiguration": {
      "description": "Container App auto patch configuration.",
      "properties": {
        "patchingMode": {
          "description": "Patching mode for the container app. Null or default in this field will be interpreted as Automatic by RP. Automatic mode will automatically apply available patches. Manual mode will require the user to manually apply patches. Disabled mode will stop patch detection and auto patching.",
          "oneOf": [
            {
              "enum": [
                "Automatic",
                "Manual",
                "Disabled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ContainerRegistry": {
      "description": "Model representing a mapping from a container registry to the identity used to connect to it.",
      "properties": {
        "containerRegistryServer": {
          "description": "Login server of the container registry.",
          "type": "string"
        },
        "identityResourceId": {
          "description": "Resource ID of the managed identity.",
          "type": "string"
        }
      },
      "required": [
        "containerRegistryServer",
        "identityResourceId"
      ],
      "type": "object"
    },
    "ContainerRegistryWithCustomImage": {
      "description": "Container registry that the final image will be uploaded to.",
      "properties": {
        "image": {
          "description": "Full name that the final image should be uploaded as, including both image name and tag.",
          "type": "string"
        },
        "server": {
          "description": "Login server of the container registry that the final image should be uploaded to. Builder resource needs to have this container registry defined along with an identity to use to access it.",
          "type": "string"
        }
      },
      "required": [
        "server"
      ],
      "type": "object"
    },
    "ContainerResources": {
      "description": "Container App container resource requirements.",
      "properties": {
        "cpu": {
          "description": "Required CPU in cores, e.g. 0.5",
          "oneOf": [
            {
              "type": "number"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "memory": {
          "description": "Required memory, e.g. \"250Mb\"",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CookieExpiration": {
      "description": "The configuration settings of the session cookie's expiration.",
      "properties": {
        "convention": {
          "description": "The convention used when determining the session cookie's expiration.",
          "oneOf": [
            {
              "enum": [
                "FixedTime",
                "IdentityProviderDerived"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "timeToExpiration": {
          "description": "The time after the request is made when the session cookie should expire.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CorsPolicy": {
      "description": "Cross-Origin-Resource-Sharing policy",
      "properties": {
        "allowCredentials": {
          "description": "Specifies whether the resource allows credentials",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "allowedHeaders": {
          "description": "Specifies the content for the access-control-allow-headers header",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "allowedMethods": {
          "description": "Specifies the content for the access-control-allow-methods header",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "allowedOrigins": {
          "description": "Specifies the content for the access-control-allow-origins header",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "exposeHeaders": {
          "description": "Specifies the content for the access-control-expose-headers header ",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "maxAge": {
          "description": "Specifies the content for the access-control-max-age header",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "allowedOrigins"
      ],
      "type": "object"
    },
    "CustomContainerTemplate": {
      "description": "Custom container configuration.",
      "properties": {
        "containers": {
          "description": "List of container definitions for the sessions of the session pool.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/SessionContainer"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "ingress": {
          "description": "Session pool ingress configuration.",
          "oneOf": [
            {
              "$ref": "#/definitions/SessionIngress"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "registryCredentials": {
          "description": "Private container registry credentials for containers used by the sessions of the session pool.",
          "oneOf": [
            {
              "$ref": "#/definitions/SessionRegistryCredentials"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "CustomDomain": {
      "description": "Custom Domain of a Container App",
      "properties": {
        "bindingType": {
          "description": "Custom Domain binding type.",
          "oneOf": [
            {
              "enum": [
                "Disabled",
                "SniEnabled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "certificateId": {
          "description": "Resource Id of the Certificate to be bound to this hostname. Must exist in the Managed Environment.",
          "type": "string"
        },
        "name": {
          "description": "Hostname.",
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "CustomDomainConfiguration": {
      "description": "Configuration properties for apps environment custom domain",
      "properties": {
        "certificateKeyVaultProperties": {
          "description": "Certificate stored in Azure Key Vault.",
          "oneOf": [
            {
              "$ref": "#/definitions/CertificateKeyVaultProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "certificatePassword": {
          "description": "Certificate password",
          "type": "string"
        },
        "certificateValue": {
          "description": "PFX or PEM blob"
        },
        "dnsSuffix": {
          "description": "Dns suffix for the environment domain",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CustomOpenIdConnectProvider": {
      "description": "The configuration settings of the custom Open ID Connect provider.",
      "properties": {
        "enabled": {
          "description": "<code>false</code> if the custom Open ID provider provider should not be enabled; otherwise, <code>true</code>.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "login": {
          "description": "The configuration settings of the login flow of the custom Open ID Connect provider.",
          "oneOf": [
            {
              "$ref": "#/definitions/OpenIdConnectLogin"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "registration": {
          "description": "The configuration settings of the app registration for the custom Open ID Connect provider.",
          "oneOf": [
            {
              "$ref": "#/definitions/OpenIdConnectRegistration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "CustomScaleRule": {
      "description": "Container App container Custom scaling rule.",
      "properties": {
        "auth": {
          "description": "Authentication secrets for the custom scale rule.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/ScaleRuleAuth"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "identity": {
          "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
          "type": "string"
        },
        "metadata": {
          "description": "Metadata properties to describe custom scale rule.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "description": "Type of the custom scale rule\neg: azure-servicebus, redis etc.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Dapr": {
      "description": "Container App Dapr configuration.",
      "properties": {
        "appId": {
          "description": "Dapr application identifier",
          "type": "string"
        },
        "appPort": {
          "description": "Tells Dapr which port your application is listening on",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "appProtocol": {
          "description": "Tells Dapr which protocol your application is using. Valid options are http and grpc. Default is http",
          "oneOf": [
            {
              "enum": [
                "http",
                "grpc"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "enableApiLogging": {
          "description": "Enables API logging for the Dapr sidecar",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "enabled": {
          "description": "Boolean indicating if the Dapr side car is enabled",
          "oneOf": [
            {
              "default": false,
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "httpMaxRequestSize": {
          "description": "Increasing max size of request body http and grpc servers parameter in MB to handle uploading of big files. Default is 4 MB.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "httpReadBufferSize": {
          "description": "Dapr max size of http header read buffer in KB to handle when sending multi-KB headers. Default is 65KB.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "logLevel": {
          "description": "Sets the log level for the Dapr sidecar. Allowed values are debug, info, warn, error. Default is info.",
          "oneOf": [
            {
              "enum": [
                "info",
                "debug",
                "warn",
                "error"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "DaprComponentProperties": {
      "description": "Dapr Component resource specific properties",
      "properties": {
        "componentType": {
          "description": "Component type",
          "type": "string"
        },
        "ignoreErrors": {
          "description": "Boolean describing if the component errors are ignores",
          "oneOf": [
            {
              "default": false,
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "initTimeout": {
          "description": "Initialization timeout",
          "type": "string"
        },
        "metadata": {
          "description": "Component metadata",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/DaprMetadata"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "scopes": {
          "description": "Names of container apps that can use this Dapr component",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "secretStoreComponent": {
          "description": "Name of a Dapr component to retrieve component secrets from",
          "type": "string"
        },
        "secrets": {
          "description": "Collection of secrets used by a Dapr component",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/Secret"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "serviceComponentBind": {
          "description": "List of container app services that are bound to the Dapr component",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/DaprComponentServiceBinding"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "version": {
          "description": "Component version",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DaprComponentResiliencyPolicyCircuitBreakerPolicyConfiguration": {
      "description": "Dapr Component Resiliency Policy Circuit Breaker Policy Configuration.",
      "properties": {
        "consecutiveErrors": {
          "description": "The number of consecutive errors before the circuit is opened.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "intervalInSeconds": {
          "description": "The optional interval in seconds after which the error count resets to 0. An interval of 0 will never reset. If not specified, the timeoutInSeconds value will be used.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "timeoutInSeconds": {
          "description": "The interval in seconds until a retry attempt is made after the circuit is opened.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "DaprComponentResiliencyPolicyConfiguration": {
      "description": "Dapr Component Resiliency Policy Configuration.",
      "properties": {
        "circuitBreakerPolicy": {
          "description": "The optional circuit breaker policy configuration",
          "oneOf": [
            {
              "$ref": "#/definitions/DaprComponentResiliencyPolicyCircuitBreakerPolicyConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "httpRetryPolicy": {
          "description": "The optional HTTP retry policy configuration",
          "oneOf": [
            {
              "$ref": "#/definitions/DaprComponentResiliencyPolicyHttpRetryPolicyConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "timeoutPolicy": {
          "description": "The optional timeout policy configuration",
          "oneOf": [
            {
              "$ref": "#/definitions/DaprComponentResiliencyPolicyTimeoutPolicyConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "DaprComponentResiliencyPolicyHttpRetryBackOffConfiguration": {
      "description": "Dapr Component Resiliency Policy HTTP Retry Backoff Configuration.",
      "properties": {
        "initialDelayInMilliseconds": {
          "description": "The optional initial delay in milliseconds before an operation is retried",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "maxIntervalInMilliseconds": {
          "description": "The optional maximum time interval in milliseconds between retry attempts",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "DaprComponentResiliencyPolicyHttpRetryPolicyConfiguration": {
      "description": "Dapr Component Resiliency Policy HTTP Retry Policy Configuration.",
      "properties": {
        "maxRetries": {
          "description": "The optional maximum number of retries",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "retryBackOff": {
          "description": "The optional retry backoff configuration",
          "oneOf": [
            {
              "$ref": "#/definitions/DaprComponentResiliencyPolicyHttpRetryBackOffConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "DaprComponentResiliencyPolicyProperties": {
      "description": "Dapr Component Resiliency Policy resource specific properties",
      "properties": {
        "inboundPolicy": {
          "description": "The optional inbound component resiliency policy configuration",
          "oneOf": [
            {
              "$ref": "#/definitions/DaprComponentResiliencyPolicyConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "outboundPolicy": {
          "description": "The optional outbound component resiliency policy configuration",
          "oneOf": [
            {
              "$ref": "#/definitions/DaprComponentResiliencyPolicyConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "DaprComponentResiliencyPolicyTimeoutPolicyConfiguration": {
      "description": "Dapr Component Resiliency Policy Timeout Policy Configuration.",
      "properties": {
        "responseTimeoutInSeconds": {
          "description": "The optional response timeout in seconds",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "DaprComponentServiceBinding": {
      "description": "Configuration to bind a Dapr Component to a dev ContainerApp Service",
      "properties": {
        "metadata": {
          "description": "Service bind metadata",
          "oneOf": [
            {
              "$ref": "#/definitions/DaprServiceBindMetadata"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "name": {
          "description": "Name of the service bind",
          "type": "string"
        },
        "serviceId": {
          "description": "Resource id of the target service",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DaprConfiguration": {
      "description": "Configuration properties Dapr component",
      "properties": {},
      "type": "object"
    },
    "DaprMetadata": {
      "description": "Dapr component metadata.",
      "properties": {
        "name": {
          "description": "Metadata property name.",
          "type": "string"
        },
        "secretRef": {
          "description": "Name of the Dapr Component secret from which to pull the metadata property value.",
          "type": "string"
        },
        "value": {
          "description": "Metadata property value.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DaprServiceBindMetadata": {
      "description": "Dapr component metadata.",
      "properties": {
        "name": {
          "description": "Service bind metadata property name.",
          "type": "string"
        },
        "value": {
          "description": "Service bind metadata property value.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DaprSubscriptionBulkSubscribeOptions": {
      "description": "Dapr PubSub Bulk Subscription Options.",
      "properties": {
        "enabled": {
          "description": "Enable bulk subscription",
          "oneOf": [
            {
              "default": false,
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "maxAwaitDurationMs": {
          "description": "Maximum duration in milliseconds to wait before a bulk message is sent to the app.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "maxMessagesCount": {
          "description": "Maximum number of messages to deliver in a bulk message.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "DaprSubscriptionProperties": {
      "description": "Dapr PubSub Event Subscription resource specific properties",
      "properties": {
        "bulkSubscribe": {
          "description": "Bulk subscription options",
          "oneOf": [
            {
              "$ref": "#/definitions/DaprSubscriptionBulkSubscribeOptions"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "deadLetterTopic": {
          "description": "Deadletter topic name",
          "type": "string"
        },
        "metadata": {
          "description": "Subscription metadata",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "pubsubName": {
          "description": "Dapr PubSub component name",
          "type": "string"
        },
        "routes": {
          "description": "Subscription routes",
          "oneOf": [
            {
              "$ref": "#/definitions/DaprSubscriptionRoutes"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "scopes": {
          "description": "Application scopes to restrict the subscription to specific apps.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "topic": {
          "description": "Topic name",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DaprSubscriptionRouteRule": {
      "description": "Dapr Pubsub Event Subscription Route Rule is used to specify the condition for sending a message to a specific path.",
      "properties": {
        "match": {
          "description": "The optional CEL expression used to match the event. If the match is not specified, then the route is considered the default. The rules are tested in the order specified, so they should be define from most-to-least specific. The default route should appear last in the list.",
          "type": "string"
        },
        "path": {
          "description": "The path for events that match this rule",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DaprSubscriptionRoutes": {
      "description": "Dapr PubSub Event Subscription Routes configuration.",
      "properties": {
        "default": {
          "description": "The default path to deliver events that do not match any of the rules.",
          "type": "string"
        },
        "rules": {
          "description": "The list of Dapr PubSub Event Subscription Route Rules.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/DaprSubscriptionRouteRule"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "DataDogConfiguration": {
      "description": "Configuration of datadog ",
      "properties": {
        "key": {
          "description": "The data dog api key",
          "type": "string"
        },
        "site": {
          "description": "The data dog site",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DefaultAuthorizationPolicy": {
      "description": "The configuration settings of the Azure Active Directory default authorization policy.",
      "properties": {
        "allowedApplications": {
          "description": "The configuration settings of the Azure Active Directory allowed applications.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "allowedPrincipals": {
          "description": "The configuration settings of the Azure Active Directory allowed principals.",
          "oneOf": [
            {
              "$ref": "#/definitions/AllowedPrincipals"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "DestinationsConfiguration": {
      "description": "Configuration of Open Telemetry destinations",
      "properties": {
        "dataDogConfiguration": {
          "description": "Open telemetry datadog destination configuration",
          "oneOf": [
            {
              "$ref": "#/definitions/DataDogConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "otlpConfigurations": {
          "description": "Open telemetry otlp configurations",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/OtlpConfiguration"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "DotNetComponentConfigurationProperty": {
      "description": "Configuration properties for a .NET Component",
      "properties": {
        "propertyName": {
          "description": "The name of the property",
          "type": "string"
        },
        "value": {
          "description": "The value of the property",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DotNetComponentProperties": {
      "description": ".NET Component resource specific properties",
      "properties": {
        "componentType": {
          "description": "Type of the .NET Component.",
          "oneOf": [
            {
              "enum": [
                "AspireDashboard"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "configurations": {
          "description": "List of .NET Components configuration properties",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/DotNetComponentConfigurationProperty"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "serviceBinds": {
          "description": "List of .NET Components that are bound to the .NET component",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/DotNetComponentServiceBind"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "DotNetComponentServiceBind": {
      "description": "Configuration to bind a .NET Component to another .NET Component",
      "properties": {
        "name": {
          "description": "Name of the service bind",
          "type": "string"
        },
        "serviceId": {
          "description": "Resource id of the target service",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DynamicPoolConfiguration": {
      "description": "Dynamic pool configuration.",
      "properties": {
        "cooldownPeriodInSeconds": {
          "description": "The cooldown period of a session in seconds.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "executionType": {
          "description": "The execution type of the session pool.",
          "oneOf": [
            {
              "enum": [
                "Timed"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "EncryptionSettings": {
      "description": "The configuration settings of the secrets references of encryption key and signing key for ContainerApp Service Authentication/Authorization.",
      "properties": {
        "containerAppAuthEncryptionSecretName": {
          "description": "The secret name which is referenced for EncryptionKey.",
          "type": "string"
        },
        "containerAppAuthSigningSecretName": {
          "description": "The secret name which is referenced for SigningKey.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "EnvironmentVar": {
      "description": "Container App container environment variable.",
      "properties": {
        "name": {
          "description": "Environment variable name.",
          "type": "string"
        },
        "secretRef": {
          "description": "Name of the Container App secret from which to pull the environment variable value.",
          "type": "string"
        },
        "value": {
          "description": "Non-secret environment variable value.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "EnvironmentVariable": {
      "description": "Model representing an environment variable.",
      "properties": {
        "name": {
          "description": "Environment variable name.",
          "type": "string"
        },
        "value": {
          "description": "Environment variable value.",
          "type": "string"
        }
      },
      "required": [
        "name",
        "value"
      ],
      "type": "object"
    },
    "ExtendedLocation": {
      "description": "The complex type of the extended location.",
      "properties": {
        "name": {
          "description": "The name of the extended location.",
          "type": "string"
        },
        "type": {
          "description": "The type of the extended location.",
          "oneOf": [
            {
              "enum": [
                "CustomLocation"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "Facebook": {
      "description": "The configuration settings of the Facebook provider.",
      "properties": {
        "enabled": {
          "description": "<code>false</code> if the Facebook provider should not be enabled despite the set registration; otherwise, <code>true</code>.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "graphApiVersion": {
          "description": "The version of the Facebook api to be used while logging in.",
          "type": "string"
        },
        "login": {
          "description": "The configuration settings of the login flow.",
          "oneOf": [
            {
              "$ref": "#/definitions/LoginScopes"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "registration": {
          "description": "The configuration settings of the app registration for the Facebook provider.",
          "oneOf": [
            {
              "$ref": "#/definitions/AppRegistration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ForwardProxy": {
      "description": "The configuration settings of a forward proxy used to make the requests.",
      "properties": {
        "convention": {
          "description": "The convention used to determine the url of the request made.",
          "oneOf": [
            {
              "enum": [
                "NoProxy",
                "Standard",
                "Custom"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "customHostHeaderName": {
          "description": "The name of the header containing the host of the request.",
          "type": "string"
        },
        "customProtoHeaderName": {
          "description": "The name of the header containing the scheme of the request.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GitHub": {
      "description": "The configuration settings of the GitHub provider.",
      "properties": {
        "enabled": {
          "description": "<code>false</code> if the GitHub provider should not be enabled despite the set registration; otherwise, <code>true</code>.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "login": {
          "description": "The configuration settings of the login flow.",
          "oneOf": [
            {
              "$ref": "#/definitions/LoginScopes"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "registration": {
          "description": "The configuration settings of the app registration for the GitHub provider.",
          "oneOf": [
            {
              "$ref": "#/definitions/ClientRegistration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "GithubActionConfiguration": {
      "description": "Configuration properties that define the mutable settings of a Container App SourceControl",
      "properties": {
        "azureCredentials": {
          "description": "AzureCredentials configurations.",
          "oneOf": [
            {
              "$ref": "#/definitions/AzureCredentials"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "buildEnvironmentVariables": {
          "description": "List of environment variables to be passed to the build.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/EnvironmentVariable"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "contextPath": {
          "description": "Context path",
          "type": "string"
        },
        "githubPersonalAccessToken": {
          "description": "One time Github PAT to configure github environment",
          "type": "string"
        },
        "image": {
          "description": "Image name",
          "type": "string"
        },
        "os": {
          "description": "Operation system",
          "type": "string"
        },
        "publishType": {
          "description": "Code or Image",
          "type": "string"
        },
        "registryInfo": {
          "description": "Registry configurations.",
          "oneOf": [
            {
              "$ref": "#/definitions/RegistryInfo"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "runtimeStack": {
          "description": "Runtime stack",
          "type": "string"
        },
        "runtimeVersion": {
          "description": "Runtime version",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GlobalValidation": {
      "description": "The configuration settings that determines the validation flow of users using ContainerApp Service Authentication/Authorization.",
      "properties": {
        "excludedPaths": {
          "description": "The paths for which unauthenticated flow would not be redirected to the login page.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "redirectToProvider": {
          "description": "The default authentication provider to use when multiple providers are configured.\nThis setting is only needed if multiple providers are configured and the unauthenticated client\naction is set to \"RedirectToLoginPage\".",
          "type": "string"
        },
        "unauthenticatedClientAction": {
          "description": "The action to take when an unauthenticated client attempts to access the app.",
          "oneOf": [
            {
              "enum": [
                "RedirectToLoginPage",
                "AllowAnonymous",
                "Return401",
                "Return403"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "Google": {
      "description": "The configuration settings of the Google provider.",
      "properties": {
        "enabled": {
          "description": "<code>false</code> if the Google provider should not be enabled despite the set registration; otherwise, <code>true</code>.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "login": {
          "description": "The configuration settings of the login flow.",
          "oneOf": [
            {
              "$ref": "#/definitions/LoginScopes"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "registration": {
          "description": "The configuration settings of the app registration for the Google provider.",
          "oneOf": [
            {
              "$ref": "#/definitions/ClientRegistration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "validation": {
          "description": "The configuration settings of the Azure Active Directory token validation flow.",
          "oneOf": [
            {
              "$ref": "#/definitions/AllowedAudiencesValidation"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "Header": {
      "description": "Header of otlp configuration",
      "properties": {
        "key": {
          "description": "The key of otlp configuration header",
          "type": "string"
        },
        "value": {
          "description": "The value of otlp configuration header",
          "type": "string"
        }
      },
      "type": "object"
    },
    "HeaderMatch": {
      "description": "Conditions required to match a header",
      "properties": {
        "header": {
          "description": "Name of the header",
          "type": "string"
        },
        "match": {
          "description": "Type of match to perform",
          "oneOf": [
            {
              "$ref": "#/definitions/HeaderMatchMatch"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "HeaderMatchMatch": {
      "description": "Type of match to perform",
      "properties": {
        "exactMatch": {
          "description": "Exact value of the header",
          "type": "string"
        },
        "prefixMatch": {
          "description": "Prefix value of the header",
          "type": "string"
        },
        "regexMatch": {
          "description": "Regex value of the header",
          "type": "string"
        },
        "suffixMatch": {
          "description": "Suffix value of the header",
          "type": "string"
        }
      },
      "type": "object"
    },
    "HttpConnectionPool": {
      "description": "Defines parameters for http connection pooling",
      "properties": {
        "http1MaxPendingRequests": {
          "description": "Maximum number of pending http1 requests allowed",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "http2MaxRequests": {
          "description": "Maximum number of http2 requests allowed",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "HttpGet": {
      "description": "Model representing a http get request.",
      "properties": {
        "fileName": {
          "description": "Name of the file that the request should be saved to.",
          "type": "string"
        },
        "headers": {
          "description": "List of headers to send with the request.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "url": {
          "description": "URL to make HTTP GET request against.",
          "type": "string"
        }
      },
      "required": [
        "url"
      ],
      "type": "object"
    },
    "HttpRetryPolicy": {
      "description": "Policy that defines http request retry conditions",
      "properties": {
        "matches": {
          "description": "Conditions that must be met for a request to be retried",
          "oneOf": [
            {
              "$ref": "#/definitions/HttpRetryPolicyMatches"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "maxRetries": {
          "description": "Maximum number of times a request will retry",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "retryBackOff": {
          "description": "Settings for retry backoff characteristics",
          "oneOf": [
            {
              "$ref": "#/definitions/HttpRetryPolicyRetryBackOff"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "HttpRetryPolicyMatches": {
      "description": "Conditions that must be met for a request to be retried",
      "properties": {
        "errors": {
          "description": "Errors that can trigger a retry",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "headers": {
          "description": "Headers that must be present for a request to be retried",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/HeaderMatch"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "httpStatusCodes": {
          "description": "Additional http status codes that can trigger a retry",
          "oneOf": [
            {
              "items": {
                "type": "integer"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "HttpRetryPolicyRetryBackOff": {
      "description": "Settings for retry backoff characteristics",
      "properties": {
        "initialDelayInMilliseconds": {
          "description": "Initial delay, in milliseconds, before retrying a request",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "maxIntervalInMilliseconds": {
          "description": "Maximum interval, in milliseconds, between retries",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "HttpScaleRule": {
      "description": "Container App container Http scaling rule.",
      "properties": {
        "auth": {
          "description": "Authentication secrets for the custom scale rule.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/ScaleRuleAuth"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "identity": {
          "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
          "type": "string"
        },
        "metadata": {
          "description": "Metadata properties to describe http scale rule.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "HttpSettings": {
      "description": "The configuration settings of the HTTP requests for authentication and authorization requests made against ContainerApp Service Authentication/Authorization.",
      "properties": {
        "forwardProxy": {
          "description": "The configuration settings of a forward proxy used to make the requests.",
          "oneOf": [
            {
              "$ref": "#/definitions/ForwardProxy"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "requireHttps": {
          "description": "<code>false</code> if the authentication/authorization responses not having the HTTPS scheme are permissible; otherwise, <code>true</code>.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "routes": {
          "description": "The configuration settings of the paths HTTP requests.",
          "oneOf": [
            {
              "$ref": "#/definitions/HttpSettingsRoutes"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "HttpSettingsRoutes": {
      "description": "The configuration settings of the paths HTTP requests.",
      "properties": {
        "apiPrefix": {
          "description": "The prefix that should precede all the authentication/authorization paths.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "IdentityProviders": {
      "description": "The configuration settings of each of the identity providers used to configure ContainerApp Service Authentication/Authorization.",
      "properties": {
        "apple": {
          "description": "The configuration settings of the Apple provider.",
          "oneOf": [
            {
              "$ref": "#/definitions/Apple"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "azureActiveDirectory": {
          "description": "The configuration settings of the Azure Active directory provider.",
          "oneOf": [
            {
              "$ref": "#/definitions/AzureActiveDirectory"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "azureStaticWebApps": {
          "description": "The configuration settings of the Azure Static Web Apps provider.",
          "oneOf": [
            {
              "$ref": "#/definitions/AzureStaticWebApps"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "customOpenIdConnectProviders": {
          "description": "The map of the name of the alias of each custom Open ID Connect provider to the\nconfiguration settings of the custom Open ID Connect provider.",
          "oneOf": [
            {
              "additionalProperties": {
                "$ref": "#/definitions/CustomOpenIdConnectProvider"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "facebook": {
          "description": "The configuration settings of the Facebook provider.",
          "oneOf": [
            {
              "$ref": "#/definitions/Facebook"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "gitHub": {
          "description": "The configuration settings of the GitHub provider.",
          "oneOf": [
            {
              "$ref": "#/definitions/GitHub"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "google": {
          "description": "The configuration settings of the Google provider.",
          "oneOf": [
            {
              "$ref": "#/definitions/Google"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "twitter": {
          "description": "The configuration settings of the Twitter provider.",
          "oneOf": [
            {
              "$ref": "#/definitions/Twitter"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "IdentitySettings": {
      "description": "Optional settings for a Managed Identity that is assigned to the Container App.",
      "properties": {
        "identity": {
          "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
          "type": "string"
        },
        "lifecycle": {
          "description": "Use to select the lifecycle stages of a Container App during which the Managed Identity should be available.",
          "oneOf": [
            {
              "enum": [
                "Init",
                "Main",
                "None",
                "All"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "identity"
      ],
      "type": "object"
    },
    "Ingress": {
      "description": "Container App Ingress configuration.",
      "properties": {
        "additionalPortMappings": {
          "description": "Settings to expose additional ports on container app",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/IngressPortMapping"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "allowInsecure": {
          "description": "Bool indicating if HTTP connections to is allowed. If set to false HTTP connections are automatically redirected to HTTPS connections",
          "oneOf": [
            {
              "default": false,
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "clientCertificateMode": {
          "description": "Client certificate mode for mTLS authentication. Ignore indicates server drops client certificate on forwarding. Accept indicates server forwards client certificate but does not require a client certificate. Require indicates server requires a client certificate.",
          "oneOf": [
            {
              "enum": [
                "ignore",
                "accept",
                "require"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "corsPolicy": {
          "description": "CORS policy for container app",
          "oneOf": [
            {
              "$ref": "#/definitions/CorsPolicy"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "customDomains": {
          "description": "custom domain bindings for Container Apps' hostnames.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/CustomDomain"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "exposedPort": {
          "description": "Exposed Port in containers for TCP traffic from ingress",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "external": {
          "description": "Bool indicating if app exposes an external http endpoint",
          "oneOf": [
            {
              "default": false,
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "ipSecurityRestrictions": {
          "description": "Rules to restrict incoming IP address.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/IpSecurityRestrictionRule"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "stickySessions": {
          "description": "Sticky Sessions for Single Revision Mode",
          "oneOf": [
            {
              "$ref": "#/definitions/IngressStickySessions"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "targetPort": {
          "description": "Target Port in containers for traffic from ingress",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "targetPortHttpScheme": {
          "description": "Whether an http app listens on http or https",
          "oneOf": [
            {
              "enum": [
                "http",
                "https"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "traffic": {
          "description": "Traffic weights for app's revisions",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/TrafficWeight"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "transport": {
          "description": "Ingress transport protocol",
          "oneOf": [
            {
              "enum": [
                "auto",
                "http",
                "http2",
                "tcp"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "IngressPortMapping": {
      "description": "Port mappings of container app ingress",
      "properties": {
        "exposedPort": {
          "description": "Specifies the exposed port for the target port. If not specified, it defaults to target port",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "external": {
          "description": "Specifies whether the app port is accessible outside of the environment",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "targetPort": {
          "description": "Specifies the port user's container listens on",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "external",
        "targetPort"
      ],
      "type": "object"
    },
    "IngressStickySessions": {
      "description": "Sticky Sessions for Single Revision Mode",
      "properties": {
        "affinity": {
          "description": "Sticky Session Affinity",
          "oneOf": [
            {
              "enum": [
                "sticky",
                "none"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "InitContainer": {
      "description": "Container App init container definition",
      "properties": {
        "args": {
          "description": "Container start command arguments.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "command": {
          "description": "Container start command.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "env": {
          "description": "Container environment variables.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/EnvironmentVar"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "image": {
          "description": "Container image tag.",
          "type": "string"
        },
        "imageType": {
          "description": "The type of the image. Set to CloudBuild to let the system manages the image, where user will not be able to update image through image field. Set to ContainerImage for user provided image.",
          "oneOf": [
            {
              "enum": [
                "CloudBuild",
                "ContainerImage"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "name": {
          "description": "Custom container name.",
          "type": "string"
        },
        "resources": {
          "description": "Container resource requirements.",
          "oneOf": [
            {
              "$ref": "#/definitions/ContainerResources"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "volumeMounts": {
          "description": "Container volume mounts.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/VolumeMount"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "IpSecurityRestrictionRule": {
      "description": "Rule to restrict incoming IP address.",
      "properties": {
        "action": {
          "description": "Allow or Deny rules to determine for incoming IP. Note: Rules can only consist of ALL Allow or ALL Deny",
          "oneOf": [
            {
              "enum": [
                "Allow",
                "Deny"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "description": {
          "description": "Describe the IP restriction rule that is being sent to the container-app. This is an optional field.",
          "type": "string"
        },
        "ipAddressRange": {
          "description": "CIDR notation to match incoming IP address",
          "type": "string"
        },
        "name": {
          "description": "Name for the IP restriction rule.",
          "type": "string"
        }
      },
      "required": [
        "name",
        "ipAddressRange",
        "action"
      ],
      "type": "object"
    },
    "JavaComponentConfigurationProperty": {
      "description": "Configuration properties for a Java Component",
      "properties": {
        "propertyName": {
          "description": "The name of the property",
          "type": "string"
        },
        "value": {
          "description": "The value of the property",
          "type": "string"
        }
      },
      "type": "object"
    },
    "JavaComponentIngress": {
      "description": "Container App Ingress configuration.",
      "properties": {},
      "type": "object"
    },
    "JavaComponentProperties": {
      "description": "Java Component common properties.",
      "oneOf": [
        {
          "description": "Nacos properties.",
          "properties": {
            "componentType": {
              "enum": [
                "Nacos"
              ],
              "type": "string"
            },
            "ingress": {
              "description": "Java Component Ingress configurations.",
              "oneOf": [
                {
                  "$ref": "#/definitions/JavaComponentIngress"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "componentType"
          ],
          "type": "object"
        },
        {
          "description": "Spring Boot Admin properties.",
          "properties": {
            "componentType": {
              "enum": [
                "SpringBootAdmin"
              ],
              "type": "string"
            },
            "ingress": {
              "description": "Java Component Ingress configurations.",
              "oneOf": [
                {
                  "$ref": "#/definitions/JavaComponentIngress"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "componentType"
          ],
          "type": "object"
        },
        {
          "description": "Spring Cloud Config properties.",
          "properties": {
            "componentType": {
              "enum": [
                "SpringCloudConfig"
              ],
              "type": "string"
            }
          },
          "required": [
            "componentType"
          ],
          "type": "object"
        },
        {
          "description": "Spring Cloud Eureka properties.",
          "properties": {
            "componentType": {
              "enum": [
                "SpringCloudEureka"
              ],
              "type": "string"
            },
            "ingress": {
              "description": "Java Component Ingress configurations.",
              "oneOf": [
                {
                  "$ref": "#/definitions/JavaComponentIngress"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "componentType"
          ],
          "type": "object"
        }
      ],
      "properties": {
        "configurations": {
          "description": "List of Java Components configuration properties",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/JavaComponentConfigurationProperty"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "serviceBinds": {
          "description": "List of Java Components that are bound to the Java component",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/JavaComponentServiceBind"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "JavaComponentServiceBind": {
      "description": "Configuration to bind a Java Component to another Java Component",
      "properties": {
        "name": {
          "description": "Name of the service bind",
          "type": "string"
        },
        "serviceId": {
          "description": "Resource id of the target service",
          "type": "string"
        }
      },
      "type": "object"
    },
    "JobConfiguration": {
      "description": "Non versioned Container Apps Job configuration properties",
      "properties": {
        "eventTriggerConfig": {
          "description": "Trigger configuration of an event driven job.",
          "oneOf": [
            {
              "$ref": "#/definitions/JobConfigurationEventTriggerConfig"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "identitySettings": {
          "description": "Optional settings for Managed Identities that are assigned to the Container App Job. If a Managed Identity is not specified here, default settings will be used.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/IdentitySettings"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "manualTriggerConfig": {
          "description": "Manual trigger configuration for a single execution job. Properties replicaCompletionCount and parallelism would be set to 1 by default",
          "oneOf": [
            {
              "$ref": "#/definitions/JobConfigurationManualTriggerConfig"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "registries": {
          "description": "Collection of private container registry credentials used by a Container apps job",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/RegistryCredentials"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "replicaRetryLimit": {
          "description": "Maximum number of retries before failing the job.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "replicaTimeout": {
          "description": "Maximum number of seconds a replica is allowed to run.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "scheduleTriggerConfig": {
          "description": "Cron formatted repeating trigger schedule (\"* * * * *\") for cronjobs. Properties completions and parallelism would be set to 1 by default",
          "oneOf": [
            {
              "$ref": "#/definitions/JobConfigurationScheduleTriggerConfig"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "secrets": {
          "description": "Collection of secrets used by a Container Apps Job",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/Secret"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "triggerType": {
          "description": "Trigger type of the job",
          "oneOf": [
            {
              "enum": [
                "Schedule",
                "Event",
                "Manual"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "triggerType",
        "replicaTimeout"
      ],
      "type": "object"
    },
    "JobConfigurationEventTriggerConfig": {
      "description": "Trigger configuration of an event driven job.",
      "properties": {
        "parallelism": {
          "description": "Number of parallel replicas of a job that can run at a given time.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "replicaCompletionCount": {
          "description": "Minimum number of successful replica completions before overall job completion.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "scale": {
          "description": "Scaling configurations for event driven jobs.",
          "oneOf": [
            {
              "$ref": "#/definitions/JobScale"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "JobConfigurationManualTriggerConfig": {
      "description": "Manual trigger configuration for a single execution job. Properties replicaCompletionCount and parallelism would be set to 1 by default",
      "properties": {
        "parallelism": {
          "description": "Number of parallel replicas of a job that can run at a given time.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "replicaCompletionCount": {
          "description": "Minimum number of successful replica completions before overall job completion.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "JobConfigurationScheduleTriggerConfig": {
      "description": "Cron formatted repeating trigger schedule (\"* * * * *\") for cronjobs. Properties completions and parallelism would be set to 1 by default",
      "properties": {
        "cronExpression": {
          "description": "Cron formatted repeating schedule (\"* * * * *\") of a Cron Job.",
          "type": "string"
        },
        "parallelism": {
          "description": "Number of parallel replicas of a job that can run at a given time.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "replicaCompletionCount": {
          "description": "Minimum number of successful replica completions before overall job completion.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "cronExpression"
      ],
      "type": "object"
    },
    "JobProperties": {
      "description": "Container Apps Job resource specific properties.",
      "properties": {
        "configuration": {
          "description": "Container Apps Job configuration properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/JobConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "environmentId": {
          "description": "Resource ID of environment.",
          "type": "string"
        },
        "template": {
          "description": "Container Apps job definition.",
          "oneOf": [
            {
              "$ref": "#/definitions/JobTemplate"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "workloadProfileName": {
          "description": "Workload profile name to pin for container apps job execution.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "JobScale": {
      "description": "Scaling configurations for event driven jobs.",
      "properties": {
        "maxExecutions": {
          "description": "Maximum number of job executions that are created for a trigger, default 100.",
          "oneOf": [
            {
              "default": 100,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "minExecutions": {
          "description": "Minimum number of job executions that are created for a trigger, default 0",
          "oneOf": [
            {
              "default": 0,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "pollingInterval": {
          "description": "Interval to check each event source in seconds. Defaults to 30s",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "rules": {
          "description": "Scaling rules.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/JobScaleRule"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "JobScaleRule": {
      "description": "Scaling rule.",
      "properties": {
        "auth": {
          "description": "Authentication secrets for the scale rule.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/ScaleRuleAuth"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "identity": {
          "description": "The resource ID of a user-assigned managed identity that is assigned to the job, or 'system' for system-assigned identity.",
          "type": "string"
        },
        "metadata": {
          "description": "Metadata properties to describe the scale rule.",
          "oneOf": [
            {
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "name": {
          "description": "Scale Rule Name",
          "type": "string"
        },
        "type": {
          "description": "Type of the scale rule\neg: azure-servicebus, redis etc.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "JobTemplate": {
      "description": "Container Apps Job versioned application definition. Defines the desired state of an immutable revision. Any changes to this section Will result in a new revision being created",
      "properties": {
        "containers": {
          "description": "List of container definitions for the Container App.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/Container"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "initContainers": {
          "description": "List of specialized containers that run before app containers.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/InitContainer"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "volumes": {
          "description": "List of volume definitions for the Container App.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/Volume"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "JwtClaimChecks": {
      "description": "The configuration settings of the checks that should be made while validating the JWT Claims.",
      "properties": {
        "allowedClientApplications": {
          "description": "The list of the allowed client applications.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "allowedGroups": {
          "description": "The list of the allowed groups.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "KedaConfiguration": {
      "description": "Configuration properties Keda component",
      "properties": {},
      "type": "object"
    },
    "LogAnalyticsConfiguration": {
      "description": "Log Analytics configuration, must only be provided when destination is configured as 'log-analytics'",
      "properties": {
        "customerId": {
          "description": "Log analytics customer id",
          "type": "string"
        },
        "dynamicJsonColumns": {
          "description": "Boolean indicating whether to parse json string log into dynamic json columns",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "sharedKey": {
          "description": "Log analytics customer key",
          "type": "string"
        }
      },
      "type": "object"
    },
    "LoggerSetting": {
      "description": "Logger settings for java workloads.",
      "properties": {
        "level": {
          "description": "The specified logger's log level.",
          "oneOf": [
            {
              "enum": [
                "off",
                "error",
                "info",
                "debug",
                "trace",
                "warn"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "logger": {
          "description": "Logger name.",
          "type": "string"
        }
      },
      "required": [
        "logger",
        "level"
      ],
      "type": "object"
    },
    "Login": {
      "description": "The configuration settings of the login flow of users using ContainerApp Service Authentication/Authorization.",
      "properties": {
        "allowedExternalRedirectUrls": {
          "description": "External URLs that can be redirected to as part of logging in or logging out of the app. Note that the query string part of the URL is ignored.\nThis is an advanced setting typically only needed by Windows Store application backends.\nNote that URLs within the current domain are always implicitly allowed.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "cookieExpiration": {
          "description": "The configuration settings of the session cookie's expiration.",
          "oneOf": [
            {
              "$ref": "#/definitions/CookieExpiration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "nonce": {
          "description": "The configuration settings of the nonce used in the login flow.",
          "oneOf": [
            {
              "$ref": "#/definitions/Nonce"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "preserveUrlFragmentsForLogins": {
          "description": "<code>true</code> if the fragments from the request are preserved after the login request is made; otherwise, <code>false</code>.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "routes": {
          "description": "The routes that specify the endpoints used for login and logout requests.",
          "oneOf": [
            {
              "$ref": "#/definitions/LoginRoutes"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tokenStore": {
          "description": "The configuration settings of the token store.",
          "oneOf": [
            {
              "$ref": "#/definitions/TokenStore"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "LoginRoutes": {
      "description": "The routes that specify the endpoints used for login and logout requests.",
      "properties": {
        "logoutEndpoint": {
          "description": "The endpoint at which a logout request should be made.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "LoginScopes": {
      "description": "The configuration settings of the login flow, including the scopes that should be requested.",
      "properties": {
        "scopes": {
          "description": "A list of the scopes that should be requested while authenticating.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "LogsConfiguration": {
      "description": "Configuration of Open Telemetry logs",
      "properties": {
        "destinations": {
          "description": "Open telemetry logs destinations",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ManagedCertificateProperties": {
      "description": "Certificate resource specific properties",
      "properties": {
        "domainControlValidation": {
          "description": "Selected type of domain control validation for managed certificates.",
          "oneOf": [
            {
              "enum": [
                "CNAME",
                "HTTP",
                "TXT"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "subjectName": {
          "description": "Subject name of the certificate.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ManagedEnvironmentProperties": {
      "description": "Managed environment resource specific properties",
      "properties": {
        "appInsightsConfiguration": {
          "description": "Environment level Application Insights configuration",
          "oneOf": [
            {
              "$ref": "#/definitions/AppInsightsConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "appLogsConfiguration": {
          "description": "Cluster configuration which enables the log daemon to export\napp logs to a destination. Currently only \"log-analytics\" is\nsupported",
          "oneOf": [
            {
              "$ref": "#/definitions/AppLogsConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "customDomainConfiguration": {
          "description": "Custom domain configuration for the environment",
          "oneOf": [
            {
              "$ref": "#/definitions/CustomDomainConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "daprAIConnectionString": {
          "description": "Application Insights connection string used by Dapr to export Service to Service communication telemetry",
          "type": "string"
        },
        "daprAIInstrumentationKey": {
          "description": "Azure Monitor instrumentation key used by Dapr to export Service to Service communication telemetry",
          "type": "string"
        },
        "daprConfiguration": {
          "description": "The configuration of Dapr component.",
          "oneOf": [
            {
              "$ref": "#/definitions/DaprConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "infrastructureResourceGroup": {
          "description": "Name of the platform-managed resource group created for the Managed Environment to host infrastructure resources. If a subnet ID is provided, this resource group will be created in the same subscription as the subnet.",
          "type": "string"
        },
        "kedaConfiguration": {
          "description": "The configuration of Keda component.",
          "oneOf": [
            {
              "$ref": "#/definitions/KedaConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "openTelemetryConfiguration": {
          "description": "Environment Open Telemetry configuration",
          "oneOf": [
            {
              "$ref": "#/definitions/OpenTelemetryConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "peerAuthentication": {
          "description": "Peer authentication settings for the Managed Environment",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedEnvironmentPropertiesPeerAuthentication"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "peerTrafficConfiguration": {
          "description": "Peer traffic settings for the Managed Environment",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedEnvironmentPropertiesPeerTrafficConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "publicNetworkAccess": {
          "description": "Property to allow or block all public traffic. Allowed Values: 'Enabled', 'Disabled'.",
          "oneOf": [
            {
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "vnetConfiguration": {
          "description": "Vnet configuration for the environment",
          "oneOf": [
            {
              "$ref": "#/definitions/VnetConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "workloadProfiles": {
          "description": "Workload profiles configured for the Managed Environment.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/WorkloadProfile"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "zoneRedundant": {
          "description": "Whether or not this Managed Environment is zone-redundant.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ManagedEnvironmentPropertiesPeerAuthentication": {
      "description": "Peer authentication settings for the Managed Environment",
      "properties": {
        "mtls": {
          "description": "Mutual TLS authentication settings for the Managed Environment",
          "oneOf": [
            {
              "$ref": "#/definitions/Mtls"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ManagedEnvironmentPropertiesPeerTrafficConfiguration": {
      "description": "Peer traffic settings for the Managed Environment",
      "properties": {
        "encryption": {
          "description": "Peer traffic encryption settings for the Managed Environment",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedEnvironmentPropertiesPeerTrafficConfigurationEncryption"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ManagedEnvironmentPropertiesPeerTrafficConfigurationEncryption": {
      "description": "Peer traffic encryption settings for the Managed Environment",
      "properties": {
        "enabled": {
          "description": "Boolean indicating whether the peer traffic encryption is enabled",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ManagedEnvironmentStorageProperties": {
      "description": "Storage properties",
      "properties": {
        "azureFile": {
          "description": "Azure file properties",
          "oneOf": [
            {
              "$ref": "#/definitions/AzureFileProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "nfsAzureFile": {
          "description": "NFS Azure file properties",
          "oneOf": [
            {
              "$ref": "#/definitions/NfsAzureFileProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ManagedServiceIdentity": {
      "description": "Managed service identity (system assigned and/or user assigned identities)",
      "properties": {
        "type": {
          "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
          "oneOf": [
            {
              "enum": [
                "None",
                "SystemAssigned",
                "UserAssigned",
                "SystemAssigned,UserAssigned"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "userAssignedIdentities": {
          "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
          "oneOf": [
            {
              "additionalProperties": {
                "$ref": "#/definitions/UserAssignedIdentity"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "type"
      ],
      "type": "object"
    },
    "MetricsConfiguration": {
      "description": "Configuration of Open Telemetry metrics",
      "properties": {
        "destinations": {
          "description": "Open telemetry metrics destinations",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "Mtls": {
      "description": "Configuration properties for mutual TLS authentication",
      "properties": {
        "enabled": {
          "description": "Boolean indicating whether the mutual TLS authentication is enabled",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "NfsAzureFileProperties": {
      "description": "NFS Azure File Properties.",
      "properties": {
        "accessMode": {
          "description": "Access mode for storage",
          "oneOf": [
            {
              "enum": [
                "ReadOnly",
                "ReadWrite"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "server": {
          "description": "Server for NFS azure file.",
          "type": "string"
        },
        "shareName": {
          "description": "NFS Azure file share name.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Nonce": {
      "description": "The configuration settings of the nonce used in the login flow.",
      "properties": {
        "nonceExpirationInterval": {
          "description": "The time after the request is made when the nonce should expire.",
          "type": "string"
        },
        "validateNonce": {
          "description": "<code>false</code> if the nonce should not be validated while completing the login flow; otherwise, <code>true</code>.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "OpenIdConnectClientCredential": {
      "description": "The authentication client credentials of the custom Open ID Connect provider.",
      "properties": {
        "clientSecretSettingName": {
          "description": "The app setting that contains the client secret for the custom Open ID Connect provider.",
          "type": "string"
        },
        "method": {
          "description": "The method that should be used to authenticate the user.",
          "oneOf": [
            {
              "enum": [
                "ClientSecretPost"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "OpenIdConnectConfig": {
      "description": "The configuration settings of the endpoints used for the custom Open ID Connect provider.",
      "properties": {
        "authorizationEndpoint": {
          "description": "The endpoint to be used to make an authorization request.",
          "type": "string"
        },
        "certificationUri": {
          "description": "The endpoint that provides the keys necessary to validate the token.",
          "type": "string"
        },
        "issuer": {
          "description": "The endpoint that issues the token.",
          "type": "string"
        },
        "tokenEndpoint": {
          "description": "The endpoint to be used to request a token.",
          "type": "string"
        },
        "wellKnownOpenIdConfiguration": {
          "description": "The endpoint that contains all the configuration endpoints for the provider.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "OpenIdConnectLogin": {
      "description": "The configuration settings of the login flow of the custom Open ID Connect provider.",
      "properties": {
        "nameClaimType": {
          "description": "The name of the claim that contains the users name.",
          "type": "string"
        },
        "scopes": {
          "description": "A list of the scopes that should be requested while authenticating.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "OpenIdConnectRegistration": {
      "description": "The configuration settings of the app registration for the custom Open ID Connect provider.",
      "properties": {
        "clientCredential": {
          "description": "The authentication credentials of the custom Open ID Connect provider.",
          "oneOf": [
            {
              "$ref": "#/definitions/OpenIdConnectClientCredential"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "clientId": {
          "description": "The client id of the custom Open ID Connect provider.",
          "type": "string"
        },
        "openIdConnectConfiguration": {
          "description": "The configuration settings of the endpoints used for the custom Open ID Connect provider.",
          "oneOf": [
            {
              "$ref": "#/definitions/OpenIdConnectConfig"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "OpenTelemetryConfiguration": {
      "description": "Configuration of Open Telemetry",
      "properties": {
        "destinationsConfiguration": {
          "description": "Open telemetry destinations configuration",
          "oneOf": [
            {
              "$ref": "#/definitions/DestinationsConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "logsConfiguration": {
          "description": "Open telemetry logs configuration",
          "oneOf": [
            {
              "$ref": "#/definitions/LogsConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "metricsConfiguration": {
          "description": "Open telemetry metrics configuration",
          "oneOf": [
            {
              "$ref": "#/definitions/MetricsConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tracesConfiguration": {
          "description": "Open telemetry trace configuration",
          "oneOf": [
            {
              "$ref": "#/definitions/TracesConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "OtlpConfiguration": {
      "description": "Configuration of otlp ",
      "properties": {
        "endpoint": {
          "description": "The endpoint of otlp configuration",
          "type": "string"
        },
        "headers": {
          "description": "Headers of otlp configurations",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/Header"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "insecure": {
          "description": "Boolean indicating if otlp configuration is insecure",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "name": {
          "description": "The name of otlp configuration",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PreBuildStep": {
      "description": "Model representing a pre-build step.",
      "properties": {
        "description": {
          "description": "Description of the pre-build step.",
          "type": "string"
        },
        "httpGet": {
          "description": "Http get request to send before the build.",
          "oneOf": [
            {
              "$ref": "#/definitions/HttpGet"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "scripts": {
          "description": "List of custom commands to run.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "PrivateEndpoint": {
      "description": "The Private Endpoint resource.",
      "properties": {},
      "type": "object"
    },
    "PrivateEndpointConnectionProperties": {
      "description": "Properties of the private endpoint connection.",
      "properties": {
        "privateEndpoint": {
          "description": "The resource of private end point.",
          "oneOf": [
            {
              "$ref": "#/definitions/PrivateEndpoint"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "privateLinkServiceConnectionState": {
          "description": "A collection of information about the state of the connection between service consumer and provider.",
          "oneOf": [
            {
              "$ref": "#/definitions/PrivateLinkServiceConnectionState"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "privateLinkServiceConnectionState"
      ],
      "type": "object"
    },
    "PrivateLinkServiceConnectionState": {
      "description": "A collection of information about the state of the connection between service consumer and provider.",
      "properties": {
        "actionsRequired": {
          "description": "A message indicating if changes on the service provider require any updates on the consumer.",
          "type": "string"
        },
        "description": {
          "description": "The reason for approval/rejection of the connection.",
          "type": "string"
        },
        "status": {
          "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
          "oneOf": [
            {
              "enum": [
                "Pending",
                "Approved",
                "Rejected",
                "Disconnected"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "QueueScaleRule": {
      "description": "Container App container Azure Queue based scaling rule.",
      "properties": {
        "accountName": {
          "description": "Storage account name. required if using managed identity to authenticate",
          "type": "string"
        },
        "auth": {
          "description": "Authentication secrets for the queue scale rule.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/ScaleRuleAuth"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "identity": {
          "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
          "type": "string"
        },
        "queueLength": {
          "description": "Queue length.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "queueName": {
          "description": "Queue name.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RegistryCredentials": {
      "description": "Container App Private Registry",
      "properties": {
        "identity": {
          "description": "A Managed Identity to use to authenticate with Azure Container Registry. For user-assigned identities, use the full user-assigned identity Resource ID. For system-assigned identities, use 'system'",
          "type": "string"
        },
        "passwordSecretRef": {
          "description": "The name of the Secret that contains the registry login password",
          "type": "string"
        },
        "server": {
          "description": "Container Registry Server",
          "type": "string"
        },
        "username": {
          "description": "Container Registry Username",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RegistryInfo": {
      "description": "Container App registry information.",
      "properties": {
        "registryPassword": {
          "description": "registry secret.",
          "type": "string"
        },
        "registryUrl": {
          "description": "registry server Url.",
          "type": "string"
        },
        "registryUserName": {
          "description": "registry username.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Runtime": {
      "description": "Container App Runtime configuration.",
      "properties": {
        "dotnet": {
          "description": ".NET app configuration",
          "oneOf": [
            {
              "$ref": "#/definitions/RuntimeDotnet"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "java": {
          "description": "Java app configuration",
          "oneOf": [
            {
              "$ref": "#/definitions/RuntimeJava"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "RuntimeDotnet": {
      "description": ".NET app configuration",
      "properties": {
        "autoConfigureDataProtection": {
          "description": "Auto configure the ASP.NET Core Data Protection feature",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "RuntimeJava": {
      "description": "Java app configuration",
      "properties": {
        "enableMetrics": {
          "description": "Enable jmx core metrics for the java app",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "javaAgent": {
          "description": "Diagnostic capabilities achieved by java agent",
          "oneOf": [
            {
              "$ref": "#/definitions/RuntimeJavaAgent"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "RuntimeJavaAgent": {
      "description": "Diagnostic capabilities achieved by java agent",
      "properties": {
        "enabled": {
          "description": "Enable java agent injection for the java app.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "logging": {
          "description": "Capabilities on the java logging scenario.",
          "oneOf": [
            {
              "$ref": "#/definitions/RuntimeJavaAgentLogging"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "RuntimeJavaAgentLogging": {
      "description": "Capabilities on the java logging scenario.",
      "properties": {
        "loggerSettings": {
          "description": "Settings of the logger for the java app.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/LoggerSetting"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "Scale": {
      "description": "Container App scaling configurations.",
      "properties": {
        "maxReplicas": {
          "description": "Optional. Maximum number of container replicas. Defaults to 10 if not set.",
          "oneOf": [
            {
              "default": 10,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "minReplicas": {
          "description": "Optional. Minimum number of container replicas.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "rules": {
          "description": "Scaling rules.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/ScaleRule"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ScaleConfiguration": {
      "description": "Scale configuration.",
      "properties": {
        "maxConcurrentSessions": {
          "description": "The maximum count of sessions at the same time.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "readySessionInstances": {
          "description": "The minimum count of ready session instances.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ScaleRule": {
      "description": "Container App container scaling rule.",
      "properties": {
        "azureQueue": {
          "description": "Azure Queue based scaling.",
          "oneOf": [
            {
              "$ref": "#/definitions/QueueScaleRule"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "custom": {
          "description": "Custom scale rule.",
          "oneOf": [
            {
              "$ref": "#/definitions/CustomScaleRule"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "http": {
          "description": "HTTP requests based scaling.",
          "oneOf": [
            {
              "$ref": "#/definitions/HttpScaleRule"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "name": {
          "description": "Scale Rule Name",
          "type": "string"
        },
        "tcp": {
          "description": "Tcp requests based scaling.",
          "oneOf": [
            {
              "$ref": "#/definitions/TcpScaleRule"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ScaleRuleAuth": {
      "description": "Auth Secrets for Scale Rule",
      "properties": {
        "secretRef": {
          "description": "Name of the secret from which to pull the auth params.",
          "type": "string"
        },
        "triggerParameter": {
          "description": "Trigger Parameter that uses the secret",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Secret": {
      "description": "Secret definition.",
      "properties": {
        "identity": {
          "description": "Resource ID of a managed identity to authenticate with Azure Key Vault, or System to use a system-assigned identity.",
          "type": "string"
        },
        "keyVaultUrl": {
          "description": "Azure Key Vault URL pointing to the secret referenced by the container app.",
          "type": "string"
        },
        "name": {
          "description": "Secret Name.",
          "type": "string"
        },
        "value": {
          "description": "Secret Value.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "SecretVolumeItem": {
      "description": "Secret to be added to volume.",
      "properties": {
        "path": {
          "description": "Path to project secret to. If no path is provided, path defaults to name of secret listed in secretRef.",
          "type": "string"
        },
        "secretRef": {
          "description": "Name of the Container App secret from which to pull the secret value.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Service": {
      "description": "Container App to be a dev service",
      "properties": {
        "type": {
          "description": "Dev ContainerApp service type",
          "type": "string"
        }
      },
      "required": [
        "type"
      ],
      "type": "object"
    },
    "ServiceBind": {
      "description": "Configuration to bind a ContainerApp to a dev ContainerApp Service",
      "properties": {
        "clientType": {
          "description": "Type of the client to be used to connect to the service",
          "type": "string"
        },
        "customizedKeys": {
          "description": "Customized keys for customizing injected values to the app",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "name": {
          "description": "Name of the service bind",
          "type": "string"
        },
        "serviceId": {
          "description": "Resource id of the target service",
          "type": "string"
        }
      },
      "type": "object"
    },
    "SessionContainer": {
      "description": "Container definitions for the sessions of the session pool.",
      "properties": {
        "args": {
          "description": "Container start command arguments.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "command": {
          "description": "Container start command.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "env": {
          "description": "Container environment variables.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/EnvironmentVar"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "image": {
          "description": "Container image tag.",
          "type": "string"
        },
        "name": {
          "description": "Custom container name.",
          "type": "string"
        },
        "resources": {
          "description": "Container resource requirements.",
          "oneOf": [
            {
              "$ref": "#/definitions/SessionContainerResources"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "SessionContainerResources": {
      "description": "Container resource requirements for sessions of the session pool.",
      "properties": {
        "cpu": {
          "description": "Required CPU in cores, e.g. 0.5",
          "oneOf": [
            {
              "type": "number"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "memory": {
          "description": "Required memory, e.g. \"250Mb\"",
          "type": "string"
        }
      },
      "type": "object"
    },
    "SessionIngress": {
      "description": "Session pool ingress configuration.",
      "properties": {
        "targetPort": {
          "description": "Target port in containers for traffic from ingress",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "SessionNetworkConfiguration": {
      "description": "Session network configuration.",
      "properties": {
        "status": {
          "description": "Network status for the sessions.",
          "oneOf": [
            {
              "enum": [
                "EgressEnabled",
                "EgressDisabled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "SessionPoolProperties": {
      "description": "Container App session pool resource specific properties",
      "properties": {
        "containerType": {
          "description": "The container type of the sessions.",
          "oneOf": [
            {
              "enum": [
                "CustomContainer",
                "PythonLTS"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "customContainerTemplate": {
          "description": "The custom container configuration if the containerType is CustomContainer.",
          "oneOf": [
            {
              "$ref": "#/definitions/CustomContainerTemplate"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "dynamicPoolConfiguration": {
          "description": "The pool configuration if the poolManagementType is dynamic.",
          "oneOf": [
            {
              "$ref": "#/definitions/DynamicPoolConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "environmentId": {
          "description": "Resource ID of the session pool's environment.",
          "type": "string"
        },
        "poolManagementType": {
          "description": "The pool management type of the session pool.",
          "oneOf": [
            {
              "enum": [
                "Manual",
                "Dynamic"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "scaleConfiguration": {
          "description": "The scale configuration of the session pool.",
          "oneOf": [
            {
              "$ref": "#/definitions/ScaleConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "secrets": {
          "description": "The secrets of the session pool.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/SessionPoolSecret"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "sessionNetworkConfiguration": {
          "description": "The network configuration of the sessions in the session pool.",
          "oneOf": [
            {
              "$ref": "#/definitions/SessionNetworkConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "SessionPoolSecret": {
      "description": "Secret definition.",
      "properties": {
        "name": {
          "description": "Secret Name.",
          "type": "string"
        },
        "value": {
          "description": "Secret Value.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "SessionRegistryCredentials": {
      "description": "Session pool private registry credentials.",
      "properties": {
        "passwordSecretRef": {
          "description": "The name of the secret that contains the registry login password",
          "type": "string"
        },
        "registryServer": {
          "description": "Container registry server.",
          "type": "string"
        },
        "username": {
          "description": "Container registry username.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "SmbStorage": {
      "description": "SMB storage properties",
      "properties": {
        "accessMode": {
          "description": "Access mode for storage",
          "oneOf": [
            {
              "enum": [
                "ReadOnly",
                "ReadWrite"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "domain": {
          "description": "The domain name for the user.",
          "type": "string"
        },
        "host": {
          "description": "The host name or IP address of the SMB server.",
          "type": "string"
        },
        "password": {
          "description": "The password for the user.",
          "type": "string"
        },
        "shareName": {
          "description": "The path to the SMB shared folder.",
          "type": "string"
        },
        "username": {
          "description": "The user to log on to the SMB server.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "SourceControlProperties": {
      "description": "SourceControl resource specific properties",
      "properties": {
        "branch": {
          "description": "The branch which will trigger the auto deployment",
          "type": "string"
        },
        "githubActionConfiguration": {
          "description": "Container App Revision Template with all possible settings and the\ndefaults if user did not provide them. The defaults are populated\nas they were at the creation time",
          "oneOf": [
            {
              "$ref": "#/definitions/GithubActionConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "repoUrl": {
          "description": "The repo url which will be integrated to ContainerApp.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "TcpConnectionPool": {
      "description": "Defines parameters for tcp connection pooling",
      "properties": {
        "maxConnections": {
          "description": "Maximum number of tcp connections allowed",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "TcpRetryPolicy": {
      "description": "Policy that defines tcp request retry conditions",
      "properties": {
        "maxConnectAttempts": {
          "description": "Maximum number of attempts to connect to the tcp service",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "TcpScaleRule": {
      "description": "Container App container Tcp scaling rule.",
      "properties": {
        "auth": {
          "description": "Authentication secrets for the tcp scale rule.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/ScaleRuleAuth"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "identity": {
          "description": "The resource ID of a user-assigned managed identity that is assigned to the Container App, or 'system' for system-assigned identity.",
          "type": "string"
        },
        "metadata": {
          "description": "Metadata properties to describe tcp scale rule.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "Template": {
      "description": "Container App versioned application definition.\nDefines the desired state of an immutable revision.\nAny changes to this section Will result in a new revision being created",
      "properties": {
        "containers": {
          "description": "List of container definitions for the Container App.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/Container"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "initContainers": {
          "description": "List of specialized containers that run before app containers.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/InitContainer"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "revisionSuffix": {
          "description": "User friendly suffix that is appended to the revision name",
          "type": "string"
        },
        "scale": {
          "description": "Scaling properties for the Container App.",
          "oneOf": [
            {
              "$ref": "#/definitions/Scale"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "serviceBinds": {
          "description": "List of container app services bound to the app",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/ServiceBind"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "terminationGracePeriodSeconds": {
          "description": "Optional duration in seconds the Container App Instance needs to terminate gracefully. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). If this value is nil, the default grace period will be used instead. Set this value longer than the expected cleanup time for your process. Defaults to 30 seconds.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "volumes": {
          "description": "List of volume definitions for the Container App.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/Volume"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "TimeoutPolicy": {
      "description": "Policy to set request timeouts",
      "properties": {
        "connectionTimeoutInSeconds": {
          "description": "Timeout, in seconds, for a request to initiate a connection",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "responseTimeoutInSeconds": {
          "description": "Timeout, in seconds, for a request to respond",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "TokenStore": {
      "description": "The configuration settings of the token store.",
      "properties": {
        "azureBlobStorage": {
          "description": "The configuration settings of the storage of the tokens if blob storage is used.",
          "oneOf": [
            {
              "$ref": "#/definitions/BlobStorageTokenStore"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "enabled": {
          "description": "<code>true</code> to durably store platform-specific security tokens that are obtained during login flows; otherwise, <code>false</code>.\n The default is <code>false</code>.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tokenRefreshExtensionHours": {
          "description": "The number of hours after session token expiration that a session token can be used to\ncall the token refresh API. The default is 72 hours.",
          "oneOf": [
            {
              "type": "number"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "TracesConfiguration": {
      "description": "Configuration of Open Telemetry traces",
      "properties": {
        "destinations": {
          "description": "Open telemetry traces destinations",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "TrafficWeight": {
      "description": "Traffic weight assigned to a revision",
      "properties": {
        "label": {
          "description": "Associates a traffic label with a revision",
          "type": "string"
        },
        "latestRevision": {
          "description": "Indicates that the traffic weight belongs to a latest stable revision",
          "oneOf": [
            {
              "default": false,
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "revisionName": {
          "description": "Name of a revision",
          "type": "string"
        },
        "weight": {
          "description": "Traffic weight assigned to a revision",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "Twitter": {
      "description": "The configuration settings of the Twitter provider.",
      "properties": {
        "enabled": {
          "description": "<code>false</code> if the Twitter provider should not be enabled despite the set registration; otherwise, <code>true</code>.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "registration": {
          "description": "The configuration settings of the app registration for the Twitter provider.",
          "oneOf": [
            {
              "$ref": "#/definitions/TwitterRegistration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "TwitterRegistration": {
      "description": "The configuration settings of the app registration for the Twitter provider.",
      "properties": {
        "consumerKey": {
          "description": "The OAuth 1.0a consumer key of the Twitter application used for sign-in.\nThis setting is required for enabling Twitter Sign-In.\nTwitter Sign-In documentation: https://dev.twitter.com/web/sign-in",
          "type": "string"
        },
        "consumerSecretSettingName": {
          "description": "The app setting name that contains the OAuth 1.0a consumer secret of the Twitter\napplication used for sign-in.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "UserAssignedIdentity": {
      "description": "User assigned identity properties",
      "properties": {},
      "type": "object"
    },
    "VnetConfiguration": {
      "description": "Configuration properties for apps environment to join a Virtual Network",
      "properties": {
        "dockerBridgeCidr": {
          "description": "CIDR notation IP range assigned to the Docker bridge, network. Must not overlap with any other provided IP ranges.",
          "type": "string"
        },
        "infrastructureSubnetId": {
          "description": "Resource ID of a subnet for infrastructure components. Must not overlap with any other provided IP ranges.",
          "type": "string"
        },
        "internal": {
          "description": "Boolean indicating the environment only has an internal load balancer. These environments do not have a public static IP resource. They must provide infrastructureSubnetId if enabling this property",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "platformReservedCidr": {
          "description": "IP range in CIDR notation that can be reserved for environment infrastructure IP addresses. Must not overlap with any other provided IP ranges.",
          "type": "string"
        },
        "platformReservedDnsIP": {
          "description": " An IP address from the IP range defined by platformReservedCidr that will be reserved for the internal DNS server.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Volume": {
      "description": "Volume definitions for the Container App.",
      "properties": {
        "mountOptions": {
          "description": "Mount options used while mounting the Azure file share or NFS Azure file share. Must be a comma-separated string.",
          "type": "string"
        },
        "name": {
          "description": "Volume name.",
          "type": "string"
        },
        "secrets": {
          "description": "List of secrets to be added in volume. If no secrets are provided, all secrets in collection will be added to volume.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/SecretVolumeItem"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "storageName": {
          "description": "Name of storage resource. No need to provide for EmptyDir and Secret.",
          "type": "string"
        },
        "storageType": {
          "description": "Storage type for the volume. If not provided, use EmptyDir.",
          "oneOf": [
            {
              "enum": [
                "AzureFile",
                "EmptyDir",
                "Secret",
                "NfsAzureFile",
                "Smb"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "VolumeMount": {
      "description": "Volume mount for the Container App.",
      "properties": {
        "mountPath": {
          "description": "Path within the container at which the volume should be mounted.Must not contain ':'.",
          "type": "string"
        },
        "subPath": {
          "description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).",
          "type": "string"
        },
        "volumeName": {
          "description": "This must match the Name of a Volume.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "WorkloadProfile": {
      "description": "Workload profile to scope container app execution.",
      "properties": {
        "maximumCount": {
          "description": "The maximum capacity.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "minimumCount": {
          "description": "The minimum capacity.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "name": {
          "description": "Workload profile type for the workloads to run on.",
          "type": "string"
        },
        "workloadProfileType": {
          "description": "Workload profile type for the workloads to run on.",
          "type": "string"
        }
      },
      "required": [
        "name",
        "workloadProfileType"
      ],
      "type": "object"
    },
    "builders_builds_childResource": {
      "description": "Microsoft.App/builders/builds",
      "properties": {
        "apiVersion": {
          "enum": [
            "2024-02-02-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of a build.",
          "oneOf": [
            {
              "maxLength": 64,
              "minLength": 2,
              "pattern": "^[-\\w\\._\\(\\)]+$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/BuildProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "builds"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "connectedEnvironments_certificates_childResource": {
      "description": "Microsoft.App/connectedEnvironments/certificates",
      "properties": {
        "apiVersion": {
          "enum": [
            "2024-02-02-preview"
          ],
          "type": "string"
        },
        "location": {
          "description": "The geo-location where the resource lives",
          "type": "string"
        },
        "name": {
          "description": "Name of the Certificate.",
          "type": "string"
        },
        "properties": {
          "description": "Certificate resource specific properties",
          "oneOf": [
            {
              "$ref": "#/definitions/CertificateProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Resource tags.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "certificates"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "connectedEnvironments_daprComponents_childResource": {
      "description": "Microsoft.App/connectedEnvironments/daprComponents",
      "properties": {
        "apiVersion": {
          "enum": [
            "2024-02-02-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Name of the Dapr Component.",
          "type": "string"
        },
        "properties": {
          "description": "Dapr Component resource specific properties",
          "oneOf": [
            {
              "$ref": "#/definitions/DaprComponentProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "daprComponents"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "connectedEnvironments_storages_childResource": {
      "description": "Microsoft.App/connectedEnvironments/storages",
      "properties": {
        "apiVersion": {
          "enum": [
            "2024-02-02-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Name of the storage.",
          "type": "string"
        },
        "properties": {
          "description": "Storage properties",
          "oneOf": [
            {
              "$ref": "#/definitions/ConnectedEnvironmentStorageProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "storages"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "containerApps_authConfigs_childResource": {
      "description": "Microsoft.App/containerApps/authConfigs",
      "properties": {
        "apiVersion": {
          "enum": [
            "2024-02-02-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Name of the Container App AuthConfig.",
          "type": "string"
        },
        "properties": {
          "description": "AuthConfig resource specific properties",
          "oneOf": [
            {
              "$ref": "#/definitions/AuthConfigProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "authConfigs"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "containerApps_resiliencyPolicies_childResource": {
      "description": "Microsoft.App/containerApps/resiliencyPolicies",
      "properties": {
        "apiVersion": {
          "enum": [
            "2024-02-02-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Name of the resiliency policy.",
          "oneOf": [
            {
              "pattern": "^[-\\w\\._\\(\\)]+$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "App Resiliency resource specific properties",
          "oneOf": [
            {
              "$ref": "#/definitions/AppResiliencyProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "resiliencyPolicies"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "containerApps_sourcecontrols_childResource": {
      "description": "Microsoft.App/containerApps/sourcecontrols",
      "properties": {
        "apiVersion": {
          "enum": [
            "2024-02-02-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Name of the Container App SourceControl.",
          "type": "string"
        },
        "properties": {
          "description": "SourceControl resource specific properties",
          "oneOf": [
            {
              "$ref": "#/definitions/SourceControlProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "sourcecontrols"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "managedEnvironments_certificates_childResource": {
      "description": "Microsoft.App/managedEnvironments/certificates",
      "properties": {
        "apiVersion": {
          "enum": [
            "2024-02-02-preview"
          ],
          "type": "string"
        },
        "location": {
          "description": "The geo-location where the resource lives",
          "type": "string"
        },
        "name": {
          "description": "Name of the Certificate.",
          "type": "string"
        },
        "properties": {
          "description": "Certificate resource specific properties",
          "oneOf": [
            {
              "$ref": "#/definitions/CertificateProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Resource tags.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "certificates"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "managedEnvironments_daprComponents_childResource": {
      "description": "Microsoft.App/managedEnvironments/daprComponents",
      "properties": {
        "apiVersion": {
          "enum": [
            "2024-02-02-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Name of the Dapr Component.",
          "type": "string"
        },
        "properties": {
          "description": "Dapr Component resource specific properties",
          "oneOf": [
            {
              "$ref": "#/definitions/DaprComponentProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "daprComponents"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "managedEnvironments_daprComponents_resiliencyPolicies_childResource": {
      "description": "Microsoft.App/managedEnvironments/daprComponents/resiliencyPolicies",
      "properties": {
        "apiVersion": {
          "enum": [
            "2024-02-02-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Name of the Dapr Component Resiliency Policy.",
          "type": "string"
        },
        "properties": {
          "description": "Dapr Component Resiliency Policy resource specific properties",
          "oneOf": [
            {
              "$ref": "#/definitions/DaprComponentResiliencyPolicyProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "resiliencyPolicies"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "managedEnvironments_daprSubscriptions_childResource": {
      "description": "Microsoft.App/managedEnvironments/daprSubscriptions",
      "properties": {
        "apiVersion": {
          "enum": [
            "2024-02-02-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Name of the Dapr subscription.",
          "type": "string"
        },
        "properties": {
          "description": "Dapr PubSub Event Subscription resource specific properties",
          "oneOf": [
            {
              "$ref": "#/definitions/DaprSubscriptionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "daprSubscriptions"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "managedEnvironments_dotNetComponents_childResource": {
      "description": "Microsoft.App/managedEnvironments/dotNetComponents",
      "properties": {
        "apiVersion": {
          "enum": [
            "2024-02-02-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Name of the .NET Component.",
          "oneOf": [
            {
              "pattern": "^[-\\w\\._\\(\\)]+$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": ".NET Component resource specific properties",
          "oneOf": [
            {
              "$ref": "#/definitions/DotNetComponentProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "dotNetComponents"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "managedEnvironments_javaComponents_childResource": {
      "description": "Microsoft.App/managedEnvironments/javaComponents",
      "properties": {
        "apiVersion": {
          "enum": [
            "2024-02-02-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Name of the Java Component.",
          "oneOf": [
            {
              "pattern": "^[-\\w\\._\\(\\)]+$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Java Component resource specific properties",
          "oneOf": [
            {
              "$ref": "#/definitions/JavaComponentProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "javaComponents"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "managedEnvironments_managedCertificates_childResource": {
      "description": "Microsoft.App/managedEnvironments/managedCertificates",
      "properties": {
        "apiVersion": {
          "enum": [
            "2024-02-02-preview"
          ],
          "type": "string"
        },
        "location": {
          "description": "The geo-location where the resource lives",
          "type": "string"
        },
        "name": {
          "description": "Name of the Managed Certificate.",
          "type": "string"
        },
        "properties": {
          "description": "Certificate resource specific properties",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedCertificateProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Resource tags.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "managedCertificates"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "managedEnvironments_privateEndpointConnections_childResource": {
      "description": "Microsoft.App/managedEnvironments/privateEndpointConnections",
      "properties": {
        "apiVersion": {
          "enum": [
            "2024-02-02-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the private endpoint connection associated with the Azure resource.",
          "type": "string"
        },
        "properties": {
          "description": "Resource properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/PrivateEndpointConnectionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "privateEndpointConnections"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "managedEnvironments_storages_childResource": {
      "description": "Microsoft.App/managedEnvironments/storages",
      "properties": {
        "apiVersion": {
          "enum": [
            "2024-02-02-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "Name of the storage.",
          "type": "string"
        },
        "properties": {
          "description": "Storage properties",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedEnvironmentStorageProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "storages"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    }
  }
}