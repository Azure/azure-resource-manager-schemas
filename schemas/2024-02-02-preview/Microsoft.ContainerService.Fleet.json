{
  "id": "https://schema.management.azure.com/schemas/2024-02-02-preview/Microsoft.ContainerService.Fleet.json#",
  "title": "Microsoft.ContainerService",
  "description": "Microsoft ContainerService Resource Types",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "resourceDefinitions": {
    "fleets": {
      "description": "Microsoft.ContainerService/fleets",
      "properties": {
        "apiVersion": {
          "enum": [
            "2024-02-02-preview"
          ],
          "type": "string"
        },
        "identity": {
          "description": "Managed identity.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedServiceIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "location": {
          "description": "The geo-location where the resource lives",
          "type": "string"
        },
        "name": {
          "description": "The name of the Fleet resource.",
          "oneOf": [
            {
              "maxLength": 63,
              "minLength": 1,
              "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/FleetProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/fleets_members_childResource"
              },
              {
                "$ref": "#/definitions/fleets_updateRuns_childResource"
              },
              {
                "$ref": "#/definitions/fleets_updateStrategies_childResource"
              }
            ]
          },
          "type": "array"
        },
        "tags": {
          "description": "Resource tags.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.ContainerService/fleets"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "fleets_members": {
      "description": "Microsoft.ContainerService/fleets/members",
      "properties": {
        "apiVersion": {
          "enum": [
            "2024-02-02-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the Fleet member resource.",
          "oneOf": [
            {
              "maxLength": 50,
              "minLength": 1,
              "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/FleetMemberProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.ContainerService/fleets/members"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "fleets_updateRuns": {
      "description": "Microsoft.ContainerService/fleets/updateRuns",
      "properties": {
        "apiVersion": {
          "enum": [
            "2024-02-02-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the UpdateRun resource.",
          "oneOf": [
            {
              "maxLength": 50,
              "minLength": 1,
              "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/UpdateRunProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.ContainerService/fleets/updateRuns"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "fleets_updateStrategies": {
      "description": "Microsoft.ContainerService/fleets/updateStrategies",
      "properties": {
        "apiVersion": {
          "enum": [
            "2024-02-02-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the UpdateStrategy resource.",
          "oneOf": [
            {
              "maxLength": 50,
              "minLength": 1,
              "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/FleetUpdateStrategyProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.ContainerService/fleets/updateStrategies"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    }
  },
  "definitions": {
    "APIServerAccessProfile": {
      "description": "Access profile for the Fleet hub API server.",
      "properties": {
        "enablePrivateCluster": {
          "description": "Whether to create the Fleet hub as a private cluster or not.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "enableVnetIntegration": {
          "description": "Whether to enable apiserver vnet integration for the Fleet hub or not.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "subnetId": {
          "description": "The subnet to be used when apiserver vnet integration is enabled. It is required when creating a new Fleet with BYO vnet.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "AgentProfile": {
      "description": "Agent profile for the Fleet hub.",
      "properties": {
        "subnetId": {
          "description": "The ID of the subnet which the Fleet hub node will join on startup. If this is not specified, a vnet and subnet will be generated and used.",
          "type": "string"
        },
        "vmSize": {
          "description": "The virtual machine size of the Fleet hub.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "FleetHubProfile": {
      "description": "The FleetHubProfile configures the fleet hub.",
      "properties": {
        "agentProfile": {
          "description": "The agent profile for the Fleet hub.",
          "oneOf": [
            {
              "$ref": "#/definitions/AgentProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "apiServerAccessProfile": {
          "description": "The access profile for the Fleet hub API server.",
          "oneOf": [
            {
              "$ref": "#/definitions/APIServerAccessProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "dnsPrefix": {
          "description": "DNS prefix used to create the FQDN for the Fleet hub.",
          "oneOf": [
            {
              "maxLength": 54,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9]$|^[a-zA-Z0-9][a-zA-Z0-9-]{0,52}[a-zA-Z0-9]$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "FleetMemberProperties": {
      "description": "A member of the Fleet. It contains a reference to an existing Kubernetes cluster on Azure.",
      "properties": {
        "clusterResourceId": {
          "description": "The ARM resource id of the cluster that joins the Fleet. Must be a valid Azure resource id. e.g.: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerService/managedClusters/{clusterName}'.",
          "type": "string"
        },
        "group": {
          "description": "The group this member belongs to for multi-cluster update management.",
          "oneOf": [
            {
              "maxLength": 50,
              "minLength": 1,
              "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "clusterResourceId"
      ],
      "type": "object"
    },
    "FleetProperties": {
      "description": "Fleet properties.",
      "properties": {
        "hubProfile": {
          "description": "The FleetHubProfile configures the Fleet's hub.",
          "oneOf": [
            {
              "$ref": "#/definitions/FleetHubProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "FleetUpdateStrategyProperties": {
      "description": "The properties of the UpdateStrategy.",
      "properties": {
        "strategy": {
          "description": "Defines the update sequence of the clusters.",
          "oneOf": [
            {
              "$ref": "#/definitions/UpdateRunStrategy"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "strategy"
      ],
      "type": "object"
    },
    "ManagedClusterUpdate": {
      "description": "The update to be applied to the ManagedClusters.",
      "properties": {
        "nodeImageSelection": {
          "description": "The node image upgrade to be applied to the target nodes in update run.",
          "oneOf": [
            {
              "$ref": "#/definitions/NodeImageSelection"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "upgrade": {
          "description": "The upgrade to apply to the ManagedClusters.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedClusterUpgradeSpec"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "upgrade"
      ],
      "type": "object"
    },
    "ManagedClusterUpgradeSpec": {
      "description": "The upgrade to apply to a ManagedCluster.",
      "properties": {
        "kubernetesVersion": {
          "description": "The Kubernetes version to upgrade the member clusters to.",
          "type": "string"
        },
        "type": {
          "description": "ManagedClusterUpgradeType is the type of upgrade to be applied.",
          "oneOf": [
            {
              "enum": [
                "Full",
                "NodeImageOnly",
                "ControlPlaneOnly"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "type"
      ],
      "type": "object"
    },
    "ManagedServiceIdentity": {
      "description": "Managed service identity (system assigned and/or user assigned identities)",
      "properties": {
        "type": {
          "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
          "oneOf": [
            {
              "enum": [
                "None",
                "SystemAssigned",
                "UserAssigned",
                "SystemAssigned, UserAssigned"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "userAssignedIdentities": {
          "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
          "oneOf": [
            {
              "additionalProperties": {
                "$ref": "#/definitions/UserAssignedIdentity"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "type"
      ],
      "type": "object"
    },
    "NodeImageSelection": {
      "description": "The node image upgrade to be applied to the target nodes in update run.",
      "properties": {
        "type": {
          "description": "The node image upgrade type.",
          "oneOf": [
            {
              "enum": [
                "Latest",
                "Consistent"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "type"
      ],
      "type": "object"
    },
    "UpdateGroup": {
      "description": "A group to be updated.",
      "properties": {
        "name": {
          "description": "Name of the group.\nIt must match a group name of an existing fleet member. ",
          "oneOf": [
            {
              "maxLength": 50,
              "minLength": 1,
              "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "UpdateRunProperties": {
      "description": "The properties of the UpdateRun.",
      "properties": {
        "managedClusterUpdate": {
          "description": "The update to be applied to all clusters in the UpdateRun. The managedClusterUpdate can be modified until the run is started.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedClusterUpdate"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "strategy": {
          "description": "The strategy defines the order in which the clusters will be updated.\nIf not set, all members will be updated sequentially. The UpdateRun status will show a single UpdateStage and a single UpdateGroup targeting all members.\nThe strategy of the UpdateRun can be modified until the run is started.",
          "oneOf": [
            {
              "$ref": "#/definitions/UpdateRunStrategy"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "updateStrategyId": {
          "description": "The resource id of the FleetUpdateStrategy resource to reference.\n\nWhen creating a new run, there are three ways to define a strategy for the run:\n1. Define a new strategy in place: Set the \"strategy\" field.\n2. Use an existing strategy: Set the \"updateStrategyId\" field. (since 2023-08-15-preview)\n3. Use the default strategy to update all the members one by one: Leave both \"updateStrategyId\" and \"strategy\" unset. (since 2023-08-15-preview)\n\nSetting both \"updateStrategyId\" and \"strategy\" is invalid.\n\nUpdateRuns created by \"updateStrategyId\" snapshot the referenced UpdateStrategy at the time of creation and store it in the \"strategy\" field. \nSubsequent changes to the referenced FleetUpdateStrategy resource do not propagate.\nUpdateRunStrategy changes can be made directly on the \"strategy\" field before launching the UpdateRun.",
          "type": "string"
        }
      },
      "required": [
        "managedClusterUpdate"
      ],
      "type": "object"
    },
    "UpdateRunStrategy": {
      "description": "Defines the update sequence of the clusters via stages and groups.\n\nStages within a run are executed sequentially one after another.\nGroups within a stage are executed in parallel.\nMember clusters within a group are updated sequentially one after another.\n\nA valid strategy contains no duplicate groups within or across stages.",
      "properties": {
        "stages": {
          "description": "The list of stages that compose this update run. Min size: 1.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/UpdateStage"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "stages"
      ],
      "type": "object"
    },
    "UpdateStage": {
      "description": "Defines a stage which contains the groups to update and the steps to take (e.g., wait for a time period) before starting the next stage.",
      "properties": {
        "afterStageWaitInSeconds": {
          "description": "The time in seconds to wait at the end of this stage before starting the next one. Defaults to 0 seconds if unspecified.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "groups": {
          "description": "Defines the groups to be executed in parallel in this stage. Duplicate groups are not allowed. Min size: 1.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/UpdateGroup"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "name": {
          "description": "The name of the stage. Must be unique within the UpdateRun.",
          "oneOf": [
            {
              "maxLength": 50,
              "minLength": 1,
              "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "UserAssignedIdentity": {
      "description": "User assigned identity properties",
      "properties": {},
      "type": "object"
    },
    "fleets_members_childResource": {
      "description": "Microsoft.ContainerService/fleets/members",
      "properties": {
        "apiVersion": {
          "enum": [
            "2024-02-02-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the Fleet member resource.",
          "oneOf": [
            {
              "maxLength": 50,
              "minLength": 1,
              "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/FleetMemberProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "members"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "fleets_updateRuns_childResource": {
      "description": "Microsoft.ContainerService/fleets/updateRuns",
      "properties": {
        "apiVersion": {
          "enum": [
            "2024-02-02-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the UpdateRun resource.",
          "oneOf": [
            {
              "maxLength": 50,
              "minLength": 1,
              "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/UpdateRunProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "updateRuns"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "fleets_updateStrategies_childResource": {
      "description": "Microsoft.ContainerService/fleets/updateStrategies",
      "properties": {
        "apiVersion": {
          "enum": [
            "2024-02-02-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the UpdateStrategy resource.",
          "oneOf": [
            {
              "maxLength": 50,
              "minLength": 1,
              "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/FleetUpdateStrategyProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "updateStrategies"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    }
  }
}