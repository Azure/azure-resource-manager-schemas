{
  "id": "https://schema.management.azure.com/schemas/2024-03-01/Microsoft.Resources.json#",
  "title": "Microsoft.Resources",
  "description": "Microsoft Resources Resource Types",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "resourceDefinitions": {
    "deploymentStacks": {
      "description": "Microsoft.Resources/deploymentStacks",
      "properties": {
        "apiVersion": {
          "enum": [
            "2024-03-01"
          ],
          "type": "string"
        },
        "location": {
          "description": "The location of the Deployment stack. It cannot be changed after creation. It must be one of the supported Azure locations.",
          "type": "string"
        },
        "name": {
          "description": "Name of the deployment stack.",
          "oneOf": [
            {
              "maxLength": 90,
              "minLength": 1,
              "pattern": "^[-\\w\\._\\(\\)]+$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Deployment stack properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/DeploymentStackProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Deployment stack resource tags.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.Resources/deploymentStacks"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    }
  },
  "subscription_resourceDefinitions": {
    "deploymentStacks": {
      "description": "Microsoft.Resources/deploymentStacks",
      "properties": {
        "apiVersion": {
          "enum": [
            "2024-03-01"
          ],
          "type": "string"
        },
        "location": {
          "description": "The location of the Deployment stack. It cannot be changed after creation. It must be one of the supported Azure locations.",
          "type": "string"
        },
        "name": {
          "description": "Name of the deployment stack.",
          "oneOf": [
            {
              "maxLength": 90,
              "minLength": 1,
              "pattern": "^[-\\w\\._\\(\\)]+$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Deployment stack properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/DeploymentStackProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Deployment stack resource tags.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.Resources/deploymentStacks"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "resourceGroups": {
      "type": "object",
      "properties": {
        "name": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^[-\\w\\._\\(\\)]+$",
              "maxLength": 90,
              "description": "the resource group name"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Resources/resourceGroups"
          ]
        },
        "apiVersion": {
          "type": "string",
          "enum": [
            "2024-03-01"
          ]
        },
        "location": {
          "type": "string",
          "description": "the resource group location"
        },
        "tags": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ],
          "description": "The resource group tags."
        }
      },
      "required": [
        "name",
        "type",
        "apiVersion",
        "location"
      ],
      "description": "Microsoft.Resources/resourceGroups"
    }
  },
  "managementGroup_resourceDefinitions": {
    "deploymentStacks": {
      "description": "Microsoft.Resources/deploymentStacks",
      "properties": {
        "apiVersion": {
          "enum": [
            "2024-03-01"
          ],
          "type": "string"
        },
        "location": {
          "description": "The location of the Deployment stack. It cannot be changed after creation. It must be one of the supported Azure locations.",
          "type": "string"
        },
        "name": {
          "description": "Name of the deployment stack.",
          "oneOf": [
            {
              "maxLength": 90,
              "minLength": 1,
              "pattern": "^[-\\w\\._\\(\\)]+$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Deployment stack properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/DeploymentStackProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Deployment stack resource tags.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.Resources/deploymentStacks"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    }
  },
  "unknown_resourceDefinitions": {
    "deployments": {
      "description": "Microsoft.Resources/deployments",
      "properties": {
        "apiVersion": {
          "enum": [
            "2024-03-01"
          ],
          "type": "string"
        },
        "location": {
          "description": "The location to store the deployment data.",
          "type": "string"
        },
        "name": {
          "description": "The name of the deployment.",
          "oneOf": [
            {
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[-\\w\\._\\(\\)]+$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The deployment properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/DeploymentProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Deployment tags",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.Resources/deployments"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "tags": {
      "description": "Microsoft.Resources/tags",
      "properties": {
        "apiVersion": {
          "enum": [
            "2024-03-01"
          ],
          "type": "string"
        },
        "name": {
          "oneOf": [
            {
              "enum": [
                "default"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The set of tags.",
          "oneOf": [
            {
              "$ref": "#/definitions/Tags"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.Resources/tags"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    }
  },
  "definitions": {
    "ActionOnUnmanage": {
      "description": "Defines the behavior of resources that are no longer managed after the stack is updated or deleted.",
      "properties": {
        "managementGroups": {
          "description": "Specifies an action for a newly unmanaged resource. Delete will attempt to delete the resource from Azure. Detach will leave the resource in it's current state.",
          "oneOf": [
            {
              "enum": [
                "delete",
                "detach"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resourceGroups": {
          "description": "Specifies an action for a newly unmanaged resource. Delete will attempt to delete the resource from Azure. Detach will leave the resource in it's current state.",
          "oneOf": [
            {
              "enum": [
                "delete",
                "detach"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "description": "Specifies an action for a newly unmanaged resource. Delete will attempt to delete the resource from Azure. Detach will leave the resource in it's current state.",
          "oneOf": [
            {
              "enum": [
                "delete",
                "detach"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "resources"
      ],
      "type": "object"
    },
    "DebugSetting": {
      "description": "The debug setting.",
      "properties": {
        "detailLevel": {
          "description": "Specifies the type of information to log for debugging. The permitted values are none, requestContent, responseContent, or both requestContent and responseContent separated by a comma. The default is none. When setting this value, carefully consider the type of information you are passing in during deployment. By logging information about the request or response, you could potentially expose sensitive data that is retrieved through the deployment operations.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DenySettings": {
      "description": "Defines how resources deployed by the Deployment stack are locked.",
      "properties": {
        "applyToChildScopes": {
          "description": "DenySettings will be applied to child resource scopes of every managed resource with a deny assignment.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "excludedActions": {
          "description": "List of role-based management operations that are excluded from the denySettings. Up to 200 actions are permitted. If the denySetting mode is set to 'denyWriteAndDelete', then the following actions are automatically appended to 'excludedActions': '*\\/read' and 'Microsoft.Authorization/locks/delete'. If the denySetting mode is set to 'denyDelete', then the following actions are automatically appended to 'excludedActions': 'Microsoft.Authorization/locks/delete'. Duplicate actions will be removed.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "excludedPrincipals": {
          "description": "List of AAD principal IDs excluded from the lock. Up to 5 principals are permitted.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "mode": {
          "description": "denySettings Mode that defines denied actions.",
          "oneOf": [
            {
              "enum": [
                "denyDelete",
                "denyWriteAndDelete",
                "none"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "mode"
      ],
      "type": "object"
    },
    "DeploymentParameter": {
      "description": "Deployment parameter for the template.",
      "properties": {
        "reference": {
          "description": "Azure Key Vault parameter reference.",
          "oneOf": [
            {
              "$ref": "#/definitions/KeyVaultParameterReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "value": {
          "description": "Input value to the parameter ."
        }
      },
      "type": "object"
    },
    "DeploymentParameterAutoGenerated": {
      "description": "Deployment parameter for the template.",
      "properties": {
        "reference": {
          "description": "Azure Key Vault parameter reference.",
          "oneOf": [
            {
              "$ref": "#/definitions/KeyVaultParameterReferenceAutoGenerated"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "description": "Type of the value.",
          "type": "string"
        },
        "value": {
          "description": "Input value to the parameter."
        }
      },
      "type": "object"
    },
    "DeploymentProperties": {
      "description": "Deployment properties.",
      "properties": {
        "debugSetting": {
          "description": "The debug setting of the deployment.",
          "oneOf": [
            {
              "$ref": "#/definitions/DebugSetting"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "expressionEvaluationOptions": {
          "description": "Specifies whether template expressions are evaluated within the scope of the parent template or nested template. Only applicable to nested templates. If not specified, default value is outer.",
          "oneOf": [
            {
              "$ref": "#/definitions/ExpressionEvaluationOptions"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "mode": {
          "description": "The mode that is used to deploy resources. This value can be either Incremental or Complete. In Incremental mode, resources are deployed without deleting existing resources that are not included in the template. In Complete mode, resources are deployed and existing resources in the resource group that are not included in the template are deleted. Be careful when using Complete mode as you may unintentionally delete resources.",
          "oneOf": [
            {
              "enum": [
                "Incremental",
                "Complete"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "onErrorDeployment": {
          "description": "The deployment on error behavior.",
          "oneOf": [
            {
              "$ref": "#/definitions/OnErrorDeployment"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "parameters": {
          "description": "Name and value pairs that define the deployment parameters for the template. You use this element when you want to provide the parameter values directly in the request rather than link to an existing parameter file. Use either the parametersLink property or the parameters property, but not both. It can be a JObject or a well formed JSON string.",
          "oneOf": [
            {
              "additionalProperties": {
                "$ref": "#/definitions/DeploymentParameter"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "parametersLink": {
          "description": "The URI of parameters file. You use this element to link to an existing parameters file. Use either the parametersLink property or the parameters property, but not both.",
          "oneOf": [
            {
              "$ref": "#/definitions/ParametersLink"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "template": {
          "description": "The template content. You use this element when you want to pass the template syntax directly in the request rather than link to an existing template. It can be a JObject or well-formed JSON string. Use either the templateLink property or the template property, but not both.",
          "oneOf": [
            {
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "templateLink": {
          "description": "The URI of the template. Use either the templateLink property or the template property, but not both.",
          "oneOf": [
            {
              "$ref": "#/definitions/TemplateLink"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "mode"
      ],
      "type": "object"
    },
    "DeploymentStackProperties": {
      "description": "Deployment stack properties.",
      "properties": {
        "actionOnUnmanage": {
          "description": "Defines the behavior of resources that are no longer managed after the Deployment stack is updated or deleted.",
          "oneOf": [
            {
              "$ref": "#/definitions/ActionOnUnmanage"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "bypassStackOutOfSyncError": {
          "description": "Flag to bypass service errors that indicate the stack resource list is not correctly synchronized.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "debugSetting": {
          "description": "The debug setting of the deployment.",
          "oneOf": [
            {
              "$ref": "#/definitions/DeploymentStacksDebugSetting"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "denySettings": {
          "description": "Defines how resources deployed by the stack are locked.",
          "oneOf": [
            {
              "$ref": "#/definitions/DenySettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "deploymentScope": {
          "description": "The scope at which the initial deployment should be created. If a scope is not specified, it will default to the scope of the deployment stack. Valid scopes are: management group (format: '/providers/Microsoft.Management/managementGroups/{managementGroupId}'), subscription (format: '/subscriptions/{subscriptionId}'), resource group (format: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}').",
          "type": "string"
        },
        "description": {
          "description": "Deployment stack description. Max length of 4096 characters.",
          "maxLength": 4096,
          "type": "string"
        },
        "error": {
          "description": "The error detail.",
          "oneOf": [
            {
              "$ref": "#/definitions/ErrorDetail"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "parameters": {
          "description": "Name and value pairs that define the deployment parameters for the template. Use this element when providing the parameter values directly in the request, rather than linking to an existing parameter file. Use either the parametersLink property or the parameters property, but not both.",
          "oneOf": [
            {
              "additionalProperties": {
                "$ref": "#/definitions/DeploymentParameterAutoGenerated"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "parametersLink": {
          "description": "The URI of parameters file. Use this element to link to an existing parameters file. Use either the parametersLink property or the parameters property, but not both.",
          "oneOf": [
            {
              "$ref": "#/definitions/DeploymentStacksParametersLink"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "template": {
          "description": "The template content. You use this element when you want to pass the template syntax directly in the request rather than link to an existing template. It can be a JObject or well-formed JSON string. Use either the templateLink property or the template property, but not both.",
          "oneOf": [
            {
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "templateLink": {
          "description": "The URI of the template. Use either the templateLink property or the template property, but not both.",
          "oneOf": [
            {
              "$ref": "#/definitions/DeploymentStacksTemplateLink"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "actionOnUnmanage",
        "denySettings"
      ],
      "type": "object"
    },
    "DeploymentStacksDebugSetting": {
      "description": "The debug setting.",
      "properties": {
        "detailLevel": {
          "description": "Specifies the type of information to log for debugging. The permitted values are none, requestContent, responseContent, or both requestContent and responseContent separated by a comma. The default is none. When setting this value, carefully consider the type of information that is being passed in during deployment. By logging information about the request or response, sensitive data that is retrieved through the deployment operations could potentially be exposed.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DeploymentStacksParametersLink": {
      "description": "Entity representing the reference to the deployment parameters.",
      "properties": {
        "contentVersion": {
          "description": "If included, must match the ContentVersion in the template.",
          "type": "string"
        },
        "uri": {
          "description": "The URI of the parameters file.",
          "type": "string"
        }
      },
      "required": [
        "uri"
      ],
      "type": "object"
    },
    "DeploymentStacksTemplateLink": {
      "description": "Entity representing the reference to the template.",
      "properties": {
        "contentVersion": {
          "description": "If included, must match the ContentVersion in the template.",
          "type": "string"
        },
        "id": {
          "description": "The resourceId of a Template Spec. Use either the id or uri property, but not both.",
          "type": "string"
        },
        "queryString": {
          "description": "The query string (for example, a SAS token) to be used with the templateLink URI.",
          "type": "string"
        },
        "relativePath": {
          "description": "The relativePath property can be used to deploy a linked template at a location relative to the parent. If the parent template was linked with a TemplateSpec, this will reference an artifact in the TemplateSpec.  If the parent was linked with a URI, the child deployment will be a combination of the parent and relativePath URIs.",
          "type": "string"
        },
        "uri": {
          "description": "The URI of the template to deploy. Use either the uri or id property, but not both.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ErrorDetail": {
      "description": "The error detail.",
      "properties": {},
      "type": "object"
    },
    "ExpressionEvaluationOptions": {
      "description": "Specifies whether template expressions are evaluated within the scope of the parent template or nested template.",
      "properties": {
        "scope": {
          "description": "The scope to be used for evaluation of parameters, variables and functions in a nested template.",
          "oneOf": [
            {
              "enum": [
                "NotSpecified",
                "Outer",
                "Inner"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "KeyVaultParameterReference": {
      "description": "Azure Key Vault parameter reference.",
      "properties": {
        "keyVault": {
          "description": "Azure Key Vault reference.",
          "oneOf": [
            {
              "$ref": "#/definitions/KeyVaultReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "secretName": {
          "description": "Azure Key Vault secret name.",
          "type": "string"
        },
        "secretVersion": {
          "description": "Azure Key Vault secret version.",
          "type": "string"
        }
      },
      "required": [
        "keyVault",
        "secretName"
      ],
      "type": "object"
    },
    "KeyVaultParameterReferenceAutoGenerated": {
      "description": "Azure Key Vault parameter reference.",
      "properties": {
        "keyVault": {
          "description": "Azure Key Vault reference.",
          "oneOf": [
            {
              "$ref": "#/definitions/KeyVaultReferenceAutoGenerated"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "secretName": {
          "description": "Azure Key Vault secret name.",
          "type": "string"
        },
        "secretVersion": {
          "description": "Azure Key Vault secret version.",
          "type": "string"
        }
      },
      "required": [
        "keyVault",
        "secretName"
      ],
      "type": "object"
    },
    "KeyVaultReference": {
      "description": "Azure Key Vault reference.",
      "properties": {
        "id": {
          "description": "Azure Key Vault resource id.",
          "type": "string"
        }
      },
      "required": [
        "id"
      ],
      "type": "object"
    },
    "KeyVaultReferenceAutoGenerated": {
      "description": "Azure Key Vault reference.",
      "properties": {
        "id": {
          "description": "Azure Key Vault resourceId.",
          "type": "string"
        }
      },
      "required": [
        "id"
      ],
      "type": "object"
    },
    "OnErrorDeployment": {
      "description": "Deployment on error behavior.",
      "properties": {
        "deploymentName": {
          "description": "The deployment to be used on error case.",
          "type": "string"
        },
        "type": {
          "description": "The deployment on error behavior type. Possible values are LastSuccessful and SpecificDeployment.",
          "oneOf": [
            {
              "enum": [
                "LastSuccessful",
                "SpecificDeployment"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ParametersLink": {
      "description": "Entity representing the reference to the deployment parameters.",
      "properties": {
        "contentVersion": {
          "description": "If included, must match the ContentVersion in the template.",
          "type": "string"
        },
        "uri": {
          "description": "The URI of the parameters file.",
          "type": "string"
        }
      },
      "required": [
        "uri"
      ],
      "type": "object"
    },
    "ResourceGroupProperties": {
      "description": "The resource group properties.",
      "properties": {},
      "type": "object"
    },
    "Tags": {
      "description": "A dictionary of name and value pairs.",
      "properties": {
        "tags": {
          "description": "Dictionary of <string>",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "TemplateLink": {
      "description": "Entity representing the reference to the template.",
      "properties": {
        "contentVersion": {
          "description": "If included, must match the ContentVersion in the template.",
          "type": "string"
        },
        "id": {
          "description": "The resource id of a Template Spec. Use either the id or uri property, but not both.",
          "type": "string"
        },
        "queryString": {
          "description": "The query string (for example, a SAS token) to be used with the templateLink URI.",
          "type": "string"
        },
        "relativePath": {
          "description": "The relativePath property can be used to deploy a linked template at a location relative to the parent. If the parent template was linked with a TemplateSpec, this will reference an artifact in the TemplateSpec.  If the parent was linked with a URI, the child deployment will be a combination of the parent and relativePath URIs",
          "type": "string"
        },
        "uri": {
          "description": "The URI of the template to deploy. Use either the uri or id property, but not both.",
          "type": "string"
        }
      },
      "type": "object"
    }
  }
}