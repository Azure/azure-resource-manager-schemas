{
  "id": "https://schema.management.azure.com/schemas/2024-05-01-preview/Microsoft.AzureFleet.json#",
  "title": "Microsoft.AzureFleet",
  "description": "Microsoft AzureFleet Resource Types",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "resourceDefinitions": {
    "fleets": {
      "description": "Microsoft.AzureFleet/fleets",
      "properties": {
        "apiVersion": {
          "enum": [
            "2024-05-01-preview"
          ],
          "type": "string"
        },
        "identity": {
          "description": "The managed service identities assigned to this resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedServiceIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "location": {
          "description": "The geo-location where the resource lives",
          "type": "string"
        },
        "name": {
          "description": "The name of the Compute Fleet",
          "oneOf": [
            {
              "pattern": "^[^_\\W][\\w-._]{0,79}(?<![-.])$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "plan": {
          "description": "Details of the resource plan.",
          "oneOf": [
            {
              "$ref": "#/definitions/Plan"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/FleetProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Resource tags.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.AzureFleet/fleets"
          ],
          "type": "string"
        },
        "zones": {
          "description": "Zones in which the Compute Fleet is available",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    }
  },
  "definitions": {
    "AdditionalUnattendContent": {
      "description": "Specifies additional XML formatted information that can be included in the\nUnattend.xml file, which is used by Windows Setup. Contents are defined by\nsetting name, component name, and the pass in which the content is applied.",
      "properties": {
        "componentName": {
          "description": "The component name. Currently, the only allowable value is\nMicrosoft-Windows-Shell-Setup.",
          "oneOf": [
            {
              "enum": [
                "Microsoft-Windows-Shell-Setup"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "content": {
          "description": "Specifies the XML formatted content that is added to the unattend.xml file for\nthe specified path and component. The XML must be less than 4KB and must\ninclude the root element for the setting or feature that is being inserted.",
          "type": "string"
        },
        "passName": {
          "description": "The pass name. Currently, the only allowable value is OobeSystem.",
          "oneOf": [
            {
              "enum": [
                "OobeSystem"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "settingName": {
          "description": "Specifies the name of the setting to which the content applies. Possible values\nare: FirstLogonCommands and AutoLogon.",
          "oneOf": [
            {
              "enum": [
                "AutoLogon",
                "FirstLogonCommands"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ApiEntityReference": {
      "description": "The API entity reference.",
      "properties": {
        "id": {
          "description": "The ARM resource id in the form of\n/subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroupName}/...",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ApplicationProfile": {
      "description": "Contains the list of gallery applications that should be made available to the\nVM/VMSS",
      "properties": {
        "galleryApplications": {
          "description": "Specifies the gallery applications that should be made available to the VM/VMSS",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/VMGalleryApplication"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "BaseVirtualMachineProfile": {
      "description": "Describes the base virtual machine profile for fleet",
      "properties": {
        "applicationProfile": {
          "description": "Specifies the gallery applications that should be made available to the VM/VMSS",
          "oneOf": [
            {
              "$ref": "#/definitions/ApplicationProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "capacityReservation": {
          "description": "Specifies the capacity reservation related details of a scale set. Minimum\napi-version: 2021-04-01.",
          "oneOf": [
            {
              "$ref": "#/definitions/CapacityReservationProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "diagnosticsProfile": {
          "description": "Specifies the boot diagnostic settings state.",
          "oneOf": [
            {
              "$ref": "#/definitions/DiagnosticsProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "extensionProfile": {
          "description": "Specifies a collection of settings for extensions installed on virtual machines\nin the scale set.",
          "oneOf": [
            {
              "$ref": "#/definitions/VirtualMachineScaleSetExtensionProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "hardwareProfile": {
          "description": "Specifies the hardware profile related details of a scale set. Minimum\napi-version: 2021-11-01.",
          "oneOf": [
            {
              "$ref": "#/definitions/VirtualMachineScaleSetHardwareProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "licenseType": {
          "description": "Specifies that the image or disk that is being used was licensed on-premises.\n<br><br> Possible values for Windows Server operating system are: <br><br>\nWindows_Client <br><br> Windows_Server <br><br> Possible values for Linux\nServer operating system are: <br><br> RHEL_BYOS (for RHEL) <br><br> SLES_BYOS\n(for SUSE) <br><br> For more information, see [Azure Hybrid Use Benefit for\nWindows\nServer](https://docs.microsoft.com/azure/virtual-machines/windows/hybrid-use-benefit-licensing)\n<br><br> [Azure Hybrid Use Benefit for Linux\nServer](https://docs.microsoft.com/azure/virtual-machines/linux/azure-hybrid-benefit-linux)\n<br><br> Minimum api-version: 2015-06-15",
          "type": "string"
        },
        "networkProfile": {
          "description": "Specifies properties of the network interfaces of the virtual machines in the\nscale set.",
          "oneOf": [
            {
              "$ref": "#/definitions/VirtualMachineScaleSetNetworkProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "osProfile": {
          "description": "Specifies the operating system settings for the virtual machines in the scale\nset.",
          "oneOf": [
            {
              "$ref": "#/definitions/VirtualMachineScaleSetOSProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "scheduledEventsProfile": {
          "description": "Specifies Scheduled Event related configurations.",
          "oneOf": [
            {
              "$ref": "#/definitions/ScheduledEventsProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "securityPostureReference": {
          "description": "Specifies the security posture to be used for all virtual machines in the scale\nset. Minimum api-version: 2023-03-01",
          "oneOf": [
            {
              "$ref": "#/definitions/SecurityPostureReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "securityProfile": {
          "description": "Specifies the Security related profile settings for the virtual machines in the\nscale set.",
          "oneOf": [
            {
              "$ref": "#/definitions/SecurityProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "serviceArtifactReference": {
          "description": "Specifies the service artifact reference id used to set same image version for\nall virtual machines in the scale set when using 'latest' image version.\nMinimum api-version: 2022-11-01",
          "oneOf": [
            {
              "$ref": "#/definitions/ServiceArtifactReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "storageProfile": {
          "description": "Specifies the storage settings for the virtual machine disks.",
          "oneOf": [
            {
              "$ref": "#/definitions/VirtualMachineScaleSetStorageProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "userData": {
          "description": "UserData for the virtual machines in the scale set, which must be base-64\nencoded. Customer should not pass any secrets in here. Minimum api-version:\n2021-03-01.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "BootDiagnostics": {
      "description": "Boot Diagnostics is a debugging feature which allows you to view Console Output\nand Screenshot to diagnose VM status. You can easily view the output of your\nconsole log. Azure also enables you to see a screenshot of the VM from the\nhypervisor.",
      "properties": {
        "enabled": {
          "description": "Whether boot diagnostics should be enabled on the Virtual Machine.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "storageUri": {
          "description": "Uri of the storage account to use for placing the console output and\nscreenshot. If storageUri is not specified while enabling boot diagnostics,\nmanaged storage will be used.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CapacityReservationProfile": {
      "description": "The parameters of a capacity reservation Profile.",
      "properties": {
        "capacityReservationGroup": {
          "description": "Specifies the capacity reservation group resource id that should be used for\nallocating the virtual machine or scaleset vm instances provided enough\ncapacity has been reserved. Please refer to https://aka.ms/CapacityReservation\nfor more details.",
          "oneOf": [
            {
              "$ref": "#/definitions/SubResource"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ComputeProfile": {
      "description": "Compute Profile to use for running user's workloads.",
      "properties": {
        "baseVirtualMachineProfile": {
          "description": "Base Virtual Machine Profile Properties to be specified according to \"specification/compute/resource-manager/Microsoft.Compute/ComputeRP/stable/{computeApiVersion}/virtualMachineScaleSet.json#/definitions/VirtualMachineScaleSetVMProfile\"",
          "oneOf": [
            {
              "$ref": "#/definitions/BaseVirtualMachineProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "computeApiVersion": {
          "description": "Specifies the Microsoft.Compute API version to use when creating underlying Virtual Machine scale sets and Virtual Machines.\nThe default value will be the latest supported computeApiVersion by Compute Fleet.",
          "type": "string"
        },
        "platformFaultDomainCount": {
          "description": "Specifies the number of fault domains to use when creating the underlying VMSS.\nA fault domain is a logical group of hardware within an Azure datacenter.\nVMs in the same fault domain share a common power source and network switch.\nIf not specified, defaults to 1, which represents \"Max Spreading\" (using as many fault domains as possible).\nThis property cannot be updated.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "baseVirtualMachineProfile"
      ],
      "type": "object"
    },
    "DiagnosticsProfile": {
      "description": "Specifies the boot diagnostic settings state. Minimum api-version: 2015-06-15.",
      "properties": {
        "bootDiagnostics": {
          "description": "Boot Diagnostics is a debugging feature which allows you to view Console Output\nand Screenshot to diagnose VM status. **NOTE**: If storageUri is being\nspecified then ensure that the storage account is in the same region and\nsubscription as the VM. You can easily view the output of your console log.\nAzure also enables you to see a screenshot of the VM from the hypervisor.",
          "oneOf": [
            {
              "$ref": "#/definitions/BootDiagnostics"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "DiffDiskSettings": {
      "description": "Describes the parameters of ephemeral disk settings that can be specified for\noperating system disk. **Note:** The ephemeral disk settings can only be\nspecified for managed disk.",
      "properties": {
        "option": {
          "description": "Specifies the ephemeral disk settings for operating system disk.",
          "oneOf": [
            {
              "enum": [
                "Local"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "placement": {
          "description": "Specifies the ephemeral disk placement for operating system disk. Possible\nvalues are: **CacheDisk,** **ResourceDisk.** The defaulting behavior is:\n**CacheDisk** if one is configured for the VM size otherwise **ResourceDisk**\nis used. Refer to the VM size documentation for Windows VM at\nhttps://docs.microsoft.com/azure/virtual-machines/windows/sizes and Linux VM at\nhttps://docs.microsoft.com/azure/virtual-machines/linux/sizes to check which VM\nsizes exposes a cache disk.",
          "oneOf": [
            {
              "enum": [
                "CacheDisk",
                "ResourceDisk",
                "NvmeDisk"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "DiskEncryptionSetParameters": {
      "description": "Describes the parameter of customer managed disk encryption set resource id\nthat can be specified for disk. **Note:** The disk encryption set resource id\ncan only be specified for managed disk. Please refer\nhttps://aka.ms/mdssewithcmkoverview for more details.",
      "properties": {
        "id": {
          "description": "Resource Id",
          "type": "string"
        }
      },
      "type": "object"
    },
    "EncryptionIdentity": {
      "description": "Specifies the Managed Identity used by ADE to get access token for keyvault\noperations.",
      "properties": {
        "userAssignedIdentityResourceId": {
          "description": "Specifies ARM Resource ID of one of the user identities associated with the VM.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "FleetProperties": {
      "description": "Details of the Compute Fleet.",
      "properties": {
        "computeProfile": {
          "description": "Compute Profile to use for running user's workloads.",
          "oneOf": [
            {
              "$ref": "#/definitions/ComputeProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "regularPriorityProfile": {
          "description": "Configuration Options for Regular instances in Compute Fleet.",
          "oneOf": [
            {
              "$ref": "#/definitions/RegularPriorityProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "spotPriorityProfile": {
          "description": "Configuration Options for Spot instances in Compute Fleet.",
          "oneOf": [
            {
              "$ref": "#/definitions/SpotPriorityProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "vmSizesProfile": {
          "description": "List of VM sizes supported for Compute Fleet",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/VmSizeProfile"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "vmSizesProfile",
        "computeProfile"
      ],
      "type": "object"
    },
    "ImageReference": {
      "description": "Specifies information about the image to use. You can specify information about\nplatform images, marketplace images, or virtual machine images. This element is\nrequired when you want to use a platform image, marketplace image, or virtual\nmachine image, but is not used in other creation operations. NOTE: Image\nreference publisher and offer can only be set when you create the scale set.",
      "properties": {
        "communityGalleryImageId": {
          "description": "Specified the community gallery image unique id for vm deployment. This can be\nfetched from community gallery image GET call.",
          "type": "string"
        },
        "id": {
          "description": "Resource Id",
          "type": "string"
        },
        "offer": {
          "description": "Specifies the offer of the platform image or marketplace image used to create\nthe virtual machine.",
          "type": "string"
        },
        "publisher": {
          "description": "The image publisher.",
          "type": "string"
        },
        "sharedGalleryImageId": {
          "description": "Specified the shared gallery image unique id for vm deployment. This can be\nfetched from shared gallery image GET call.",
          "type": "string"
        },
        "sku": {
          "description": "The image SKU.",
          "type": "string"
        },
        "version": {
          "description": "Specifies the version of the platform image or marketplace image used to create\nthe virtual machine. The allowed formats are Major.Minor.Build or 'latest'.\nMajor, Minor, and Build are decimal numbers. Specify 'latest' to use the latest\nversion of an image available at deploy time. Even if you use 'latest', the VM\nimage will not automatically update after deploy time even if a new version\nbecomes available. Please do not use field 'version' for gallery image\ndeployment, gallery image should always use 'id' field for deployment, to use 'latest'\nversion of gallery image, just set\n'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/images/{imageName}'\nin the 'id' field without version input.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "KeyVaultSecretReference": {
      "description": "Describes a reference to Key Vault Secret",
      "properties": {
        "secretUrl": {
          "description": "The URL referencing a secret in a Key Vault.",
          "type": "string"
        },
        "sourceVault": {
          "description": "The relative URL of the Key Vault containing the secret.",
          "oneOf": [
            {
              "$ref": "#/definitions/SubResource"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "secretUrl",
        "sourceVault"
      ],
      "type": "object"
    },
    "LinuxConfiguration": {
      "description": "Specifies the Linux operating system settings on the virtual machine. For a\nlist of supported Linux distributions, see [Linux on Azure-Endorsed\nDistributions](https://docs.microsoft.com/azure/virtual-machines/linux/endorsed-distros).",
      "properties": {
        "disablePasswordAuthentication": {
          "description": "Specifies whether password authentication should be disabled.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "enableVMAgentPlatformUpdates": {
          "description": "Indicates whether VMAgent Platform Updates is enabled for the Linux virtual\nmachine. Default value is false.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "patchSettings": {
          "description": "[Preview Feature] Specifies settings related to VM Guest Patching on Linux.",
          "oneOf": [
            {
              "$ref": "#/definitions/LinuxPatchSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "provisionVMAgent": {
          "description": "Indicates whether virtual machine agent should be provisioned on the virtual\nmachine. When this property is not specified in the request body, default\nbehavior is to set it to true. This will ensure that VM Agent is installed on\nthe VM so that extensions can be added to the VM later.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "ssh": {
          "description": "Specifies the ssh key configuration for a Linux OS.",
          "oneOf": [
            {
              "$ref": "#/definitions/SshConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "LinuxPatchSettings": {
      "description": "Specifies settings related to VM Guest Patching on Linux.",
      "properties": {
        "assessmentMode": {
          "description": "Specifies the mode of VM Guest Patch Assessment for the IaaS virtual\nmachine.<br /><br /> Possible values are:<br /><br /> **ImageDefault** - You\ncontrol the timing of patch assessments on a virtual machine. <br /><br />\n**AutomaticByPlatform** - The platform will trigger periodic patch assessments.\nThe property provisionVMAgent must be true.",
          "oneOf": [
            {
              "enum": [
                "ImageDefault",
                "AutomaticByPlatform"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "automaticByPlatformSettings": {
          "description": "Specifies additional settings for patch mode AutomaticByPlatform in VM Guest\nPatching on Linux.",
          "oneOf": [
            {
              "$ref": "#/definitions/LinuxVMGuestPatchAutomaticByPlatformSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "patchMode": {
          "description": "Specifies the mode of VM Guest Patching to IaaS virtual machine or virtual\nmachines associated to virtual machine scale set with OrchestrationMode as\nFlexible.<br /><br /> Possible values are:<br /><br /> **ImageDefault** - The\nvirtual machine's default patching configuration is used. <br /><br />\n**AutomaticByPlatform** - The virtual machine will be automatically updated by\nthe platform. The property provisionVMAgent must be true",
          "oneOf": [
            {
              "enum": [
                "ImageDefault",
                "AutomaticByPlatform"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "LinuxVMGuestPatchAutomaticByPlatformSettings": {
      "description": "Specifies additional settings to be applied when patch mode AutomaticByPlatform\nis selected in Linux patch settings.",
      "properties": {
        "bypassPlatformSafetyChecksOnUserSchedule": {
          "description": "Enables customer to schedule patching without accidental upgrades",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "rebootSetting": {
          "description": "Specifies the reboot setting for all AutomaticByPlatform patch installation\noperations.",
          "oneOf": [
            {
              "enum": [
                "Unknown",
                "IfRequired",
                "Never",
                "Always"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ManagedServiceIdentity": {
      "description": "Managed service identity (system assigned and/or user assigned identities)",
      "properties": {
        "type": {
          "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
          "oneOf": [
            {
              "enum": [
                "None",
                "SystemAssigned",
                "UserAssigned",
                "SystemAssigned,UserAssigned"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "userAssignedIdentities": {
          "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
          "oneOf": [
            {
              "additionalProperties": {
                "$ref": "#/definitions/UserAssignedIdentity"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "type"
      ],
      "type": "object"
    },
    "OSImageNotificationProfile": {
      "description": "Specifies OS Image Scheduled Event related configurations.",
      "properties": {
        "enable": {
          "description": "Specifies whether the OS Image Scheduled event is enabled or disabled.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "notBeforeTimeout": {
          "description": "Length of time a Virtual Machine being reimaged or having its OS upgraded will\nhave to potentially approve the OS Image Scheduled Event before the event is\nauto approved (timed out). The configuration is specified in ISO 8601 format,\nand the value must not exceed 15 minutes (PT15M)",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PatchSettings": {
      "description": "Specifies settings related to VM Guest Patching on Windows.",
      "properties": {
        "assessmentMode": {
          "description": "Specifies the mode of VM Guest patch assessment for the IaaS virtual\nmachine.<br /><br /> Possible values are:<br /><br /> **ImageDefault** - You\ncontrol the timing of patch assessments on a virtual machine.<br /><br />\n**AutomaticByPlatform** - The platform will trigger periodic patch assessments.\nThe property provisionVMAgent must be true.",
          "oneOf": [
            {
              "enum": [
                "ImageDefault",
                "AutomaticByPlatform"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "automaticByPlatformSettings": {
          "description": "Specifies additional settings for patch mode AutomaticByPlatform in VM Guest\nPatching on Windows.",
          "oneOf": [
            {
              "$ref": "#/definitions/WindowsVMGuestPatchAutomaticByPlatformSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "enableHotpatching": {
          "description": "Enables customers to patch their Azure VMs without requiring a reboot. For\nenableHotpatching, the 'provisionVMAgent' must be set to true and 'patchMode'\nmust be set to 'AutomaticByPlatform'.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "patchMode": {
          "description": "Specifies the mode of VM Guest Patching to IaaS virtual machine or virtual\nmachines associated to virtual machine scale set with OrchestrationMode as\nFlexible.<br /><br /> Possible values are:<br /><br /> **Manual** - You\ncontrol the application of patches to a virtual machine. You do this by\napplying patches manually inside the VM. In this mode, automatic updates are\ndisabled; the property WindowsConfiguration.enableAutomaticUpdates must be\nfalse<br /><br /> **AutomaticByOS** - The virtual machine will automatically be\nupdated by the OS. The property WindowsConfiguration.enableAutomaticUpdates\nmust be true. <br /><br /> **AutomaticByPlatform** - the virtual machine will\nautomatically updated by the platform. The properties provisionVMAgent and\nWindowsConfiguration.enableAutomaticUpdates must be true",
          "oneOf": [
            {
              "enum": [
                "Manual",
                "AutomaticByOS",
                "AutomaticByPlatform"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "Plan": {
      "description": "Plan for the resource.",
      "properties": {
        "name": {
          "description": "A user defined name of the 3rd Party Artifact that is being procured.",
          "type": "string"
        },
        "product": {
          "description": "The 3rd Party artifact that is being procured. E.g. NewRelic. Product maps to the OfferID specified for the artifact at the time of Data Market onboarding. ",
          "type": "string"
        },
        "promotionCode": {
          "description": "A publisher provided promotion code as provisioned in Data Market for the said product/artifact.",
          "type": "string"
        },
        "publisher": {
          "description": "The publisher of the 3rd Party Artifact that is being bought. E.g. NewRelic",
          "type": "string"
        },
        "version": {
          "description": "The version of the desired product/artifact.",
          "type": "string"
        }
      },
      "required": [
        "name",
        "publisher",
        "product"
      ],
      "type": "object"
    },
    "ProxyAgentSettings": {
      "description": "Specifies ProxyAgent settings while creating the virtual machine. Minimum\napi-version: 2023-09-01.",
      "properties": {
        "enabled": {
          "description": "Specifies whether ProxyAgent feature should be enabled on the virtual machine\nor virtual machine scale set.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "keyIncarnationId": {
          "description": "Increase the value of this property allows user to reset the key used for\nsecuring communication channel between guest and host.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "mode": {
          "description": "Specifies the mode that ProxyAgent will execute on if the feature is enabled.\nProxyAgent will start to audit or monitor but not enforce access control over\nrequests to host endpoints in Audit mode, while in Enforce mode it will enforce\naccess control. The default value is Enforce mode.",
          "oneOf": [
            {
              "enum": [
                "Audit",
                "Enforce"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "PublicIPAddressSku": {
      "description": "Describes the public IP Sku. It can only be set with OrchestrationMode as\nFlexible.",
      "properties": {
        "name": {
          "description": "Specify public IP sku name",
          "oneOf": [
            {
              "enum": [
                "Basic",
                "Standard"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tier": {
          "description": "Specify public IP sku tier",
          "oneOf": [
            {
              "enum": [
                "Regional",
                "Global"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "RegularPriorityProfile": {
      "description": "Configuration Options for Regular instances in Compute Fleet.",
      "properties": {
        "allocationStrategy": {
          "description": "Allocation strategy to follow when determining the VM sizes distribution for Regular VMs.",
          "oneOf": [
            {
              "enum": [
                "LowestPrice",
                "Prioritized"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "capacity": {
          "description": "Total capacity to achieve. It is currently in terms of number of VMs.",
          "oneOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "minCapacity": {
          "description": "Minimum capacity to achieve which cannot be updated. If we will not be able to \"guarantee\" minimum capacity, we will reject the request in the sync path itself.",
          "oneOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ScheduledEventsProfile": {
      "description": "Specifies Scheduled Event related configurations.",
      "properties": {
        "osImageNotificationProfile": {
          "description": "Specifies OS Image Scheduled Event related configurations.",
          "oneOf": [
            {
              "$ref": "#/definitions/OSImageNotificationProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "terminateNotificationProfile": {
          "description": "Specifies Terminate Scheduled Event related configurations.",
          "oneOf": [
            {
              "$ref": "#/definitions/TerminateNotificationProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "SecurityPostureReference": {
      "description": "Specifies the security posture to be used for all virtual machines in the scale\nset. Minimum api-version: 2023-03-01",
      "properties": {
        "excludeExtensions": {
          "description": "List of virtual machine extension names to exclude when applying the security\nposture.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "id": {
          "description": "The security posture reference id in the form of\n/CommunityGalleries/{communityGalleryName}/securityPostures/{securityPostureName}/versions/{major.minor.patch}|{major.*}|latest",
          "type": "string"
        },
        "isOverridable": {
          "description": "Whether the security posture can be overridden by the user.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "SecurityProfile": {
      "description": "Specifies the Security profile settings for the virtual machine or virtual\nmachine scale set.",
      "properties": {
        "encryptionAtHost": {
          "description": "This property can be used by user in the request to enable or disable the Host\nEncryption for the virtual machine or virtual machine scale set. This will\nenable the encryption for all the disks including Resource/Temp disk at host\nitself. The default behavior is: The Encryption at host will be disabled unless\nthis property is set to true for the resource.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "encryptionIdentity": {
          "description": "Specifies the Managed Identity used by ADE to get access token for keyvault\noperations.",
          "oneOf": [
            {
              "$ref": "#/definitions/EncryptionIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "proxyAgentSettings": {
          "description": "Specifies ProxyAgent settings while creating the virtual machine. Minimum\napi-version: 2023-09-01.",
          "oneOf": [
            {
              "$ref": "#/definitions/ProxyAgentSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "securityType": {
          "description": "Specifies the SecurityType of the virtual machine. It has to be set to any\nspecified value to enable UefiSettings. The default behavior is: UefiSettings\nwill not be enabled unless this property is set.",
          "oneOf": [
            {
              "enum": [
                "TrustedLaunch",
                "ConfidentialVM"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "uefiSettings": {
          "description": "Specifies the security settings like secure boot and vTPM used while creating\nthe virtual machine. Minimum api-version: 2020-12-01.",
          "oneOf": [
            {
              "$ref": "#/definitions/UefiSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ServiceArtifactReference": {
      "description": "Specifies the service artifact reference id used to set same image version for\nall virtual machines in the scale set when using 'latest' image version.\nMinimum api-version: 2022-11-01",
      "properties": {
        "id": {
          "description": "The service artifact reference id in the form of\n/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Compute/galleries/{galleryName}/serviceArtifacts/{serviceArtifactName}/vmArtifactsProfiles/{vmArtifactsProfilesName}",
          "type": "string"
        }
      },
      "type": "object"
    },
    "SpotPriorityProfile": {
      "description": "Configuration Options for Spot instances in Compute Fleet.",
      "properties": {
        "allocationStrategy": {
          "description": "Allocation strategy to follow when determining the VM sizes distribution for Spot VMs.",
          "oneOf": [
            {
              "enum": [
                "PriceCapacityOptimized",
                "LowestPrice",
                "CapacityOptimized"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "capacity": {
          "description": "Total capacity to achieve. It is currently in terms of number of VMs.",
          "oneOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "evictionPolicy": {
          "description": "Eviction Policy to follow when evicting Spot VMs.",
          "oneOf": [
            {
              "enum": [
                "Delete",
                "Deallocate"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "maintain": {
          "description": "Flag to enable/disable continuous goal seeking for the desired capacity and restoration of evicted Spot VMs.\nIf maintain is enabled, AzureFleetRP will use all VM sizes in vmSizesProfile to create new VMs (if VMs are evicted deleted)\nor update existing VMs with new VM sizes (if VMs are evicted deallocated or failed to allocate due to capacity constraint) in order to achieve the desired capacity.\nMaintain is enabled by default.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "maxPricePerVM": {
          "description": "Price per hour of each Spot VM will never exceed this.",
          "oneOf": [
            {
              "type": "number"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "minCapacity": {
          "description": "Minimum capacity to achieve which cannot be updated. If we will not be able to \"guarantee\" minimum capacity, we will reject the request in the sync path itself.",
          "oneOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "SshConfiguration": {
      "description": "SSH configuration for Linux based VMs running on Azure",
      "properties": {
        "publicKeys": {
          "description": "The list of SSH public keys used to authenticate with linux based VMs.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/SshPublicKey"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "SshPublicKey": {
      "description": "Contains information about SSH certificate public key and the path on the Linux\nVM where the public key is placed.",
      "properties": {
        "keyData": {
          "description": "SSH public key certificate used to authenticate with the VM through ssh. The\nkey needs to be at least 2048-bit and in ssh-rsa format. For creating ssh keys,\nsee [Create SSH keys on Linux and Mac for Linux VMs in\nAzure]https://docs.microsoft.com/azure/virtual-machines/linux/create-ssh-keys-detailed).",
          "type": "string"
        },
        "path": {
          "description": "Specifies the full path on the created VM where ssh public key is stored. If\nthe file already exists, the specified key is appended to the file. Example:\n/home/user/.ssh/authorized_keys",
          "type": "string"
        }
      },
      "type": "object"
    },
    "SubResource": {
      "description": "Describes SubResource",
      "properties": {
        "id": {
          "description": "Resource Id",
          "type": "string"
        }
      },
      "type": "object"
    },
    "TerminateNotificationProfile": {
      "description": "Specifies Terminate Scheduled Event related configurations.",
      "properties": {
        "enable": {
          "description": "Specifies whether the Terminate Scheduled event is enabled or disabled.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "notBeforeTimeout": {
          "description": "Configurable length of time a Virtual Machine being deleted will have to\npotentially approve the Terminate Scheduled Event before the event is auto\napproved (timed out). The configuration must be specified in ISO 8601 format,\nthe default value is 5 minutes (PT5M)",
          "type": "string"
        }
      },
      "type": "object"
    },
    "UefiSettings": {
      "description": "Specifies the security settings like secure boot and vTPM used while creating\nthe virtual machine. Minimum api-version: 2020-12-01.",
      "properties": {
        "secureBootEnabled": {
          "description": "Specifies whether secure boot should be enabled on the virtual machine. Minimum\napi-version: 2020-12-01.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "vTpmEnabled": {
          "description": "Specifies whether vTPM should be enabled on the virtual machine. Minimum\napi-version: 2020-12-01.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "UserAssignedIdentity": {
      "description": "User assigned identity properties",
      "properties": {},
      "type": "object"
    },
    "VMDiskSecurityProfile": {
      "description": "Specifies the security profile settings for the managed disk. **Note:** It can\nonly be set for Confidential VMs.",
      "properties": {
        "diskEncryptionSet": {
          "description": "Specifies the customer managed disk encryption set resource id for the managed\ndisk that is used for Customer Managed Key encrypted ConfidentialVM OS Disk and\nVMGuest blob.",
          "oneOf": [
            {
              "$ref": "#/definitions/DiskEncryptionSetParameters"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "securityEncryptionType": {
          "description": "Specifies the EncryptionType of the managed disk. It is set to\nDiskWithVMGuestState for encryption of the managed disk along with VMGuestState\nblob, VMGuestStateOnly for encryption of just the VMGuestState blob, and\nNonPersistedTPM for not persisting firmware state in the VMGuestState blob..\n**Note:** It can be set for only Confidential VMs.",
          "oneOf": [
            {
              "enum": [
                "VMGuestStateOnly",
                "DiskWithVMGuestState",
                "NonPersistedTPM"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "VMGalleryApplication": {
      "description": "Specifies the required information to reference a compute gallery application\nversion",
      "properties": {
        "configurationReference": {
          "description": "Optional, Specifies the uri to an azure blob that will replace the default\nconfiguration for the package if provided",
          "type": "string"
        },
        "enableAutomaticUpgrade": {
          "description": "If set to true, when a new Gallery Application version is available in PIR/SIG,\nit will be automatically updated for the VM/VMSS",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "order": {
          "description": "Optional, Specifies the order in which the packages have to be installed",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "packageReferenceId": {
          "description": "Specifies the GalleryApplicationVersion resource id on the form of\n/subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroupName}/providers/Microsoft.Compute/galleries/{galleryName}/applications/{application}/versions/{version}",
          "type": "string"
        },
        "tags": {
          "description": "Optional, Specifies a passthrough value for more generic context.",
          "type": "string"
        },
        "treatFailureAsDeploymentFailure": {
          "description": "Optional, If true, any failure for any operation in the VmApplication will fail\nthe deployment",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "packageReferenceId"
      ],
      "type": "object"
    },
    "VMSizeProperties": {
      "description": "Specifies VM Size Property settings on the virtual machine.",
      "properties": {
        "vCPUsAvailable": {
          "description": "Specifies the number of vCPUs available for the VM. When this property is not\nspecified in the request body the default behavior is to set it to the value of\nvCPUs available for that VM size exposed in api response of [List all available\nvirtual machine sizes in a\nregion](https://docs.microsoft.com/en-us/rest/api/compute/resource-skus/list).",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "vCPUsPerCore": {
          "description": "Specifies the vCPU to physical core ratio. When this property is not specified\nin the request body the default behavior is set to the value of vCPUsPerCore\nfor the VM Size exposed in api response of [List all available virtual machine\nsizes in a\nregion](https://docs.microsoft.com/en-us/rest/api/compute/resource-skus/list).\n**Setting this property to 1 also means that hyper-threading is disabled.**",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "VaultCertificate": {
      "description": "Describes a single certificate reference in a Key Vault, and where the\ncertificate should reside on the VM.",
      "properties": {
        "certificateStore": {
          "description": "For Windows VMs, specifies the certificate store on the Virtual Machine to\nwhich the certificate should be added. The specified certificate store is\nimplicitly in the LocalMachine account. For Linux VMs, the certificate file is\nplaced under the /var/lib/waagent directory, with the file name\n&lt;UppercaseThumbprint&gt;.crt for the X509 certificate file and\n&lt;UppercaseThumbprint&gt;.prv for private key. Both of these files are .pem\nformatted.",
          "type": "string"
        },
        "certificateUrl": {
          "description": "This is the URL of a certificate that has been uploaded to Key Vault as a\nsecret. For adding a secret to the Key Vault, see [Add a key or secret to the\nkey\nvault](https://docs.microsoft.com/azure/key-vault/key-vault-get-started/#add).\nIn this case, your certificate needs to be It is the Base64 encoding of the\nfollowing JSON Object which is encoded in UTF-8: <br><br> {<br>\n\"data\":\"<Base64-encoded-certificate>\",<br>  \"dataType\":\"pfx\",<br>\n\"password\":\"<pfx-file-password>\"<br>} <br> To install certificates on a virtual\nmachine it is recommended to use the [Azure Key Vault virtual machine extension\nfor\nLinux](https://docs.microsoft.com/azure/virtual-machines/extensions/key-vault-linux)\nor the [Azure Key Vault virtual machine extension for\nWindows](https://docs.microsoft.com/azure/virtual-machines/extensions/key-vault-windows).",
          "type": "string"
        }
      },
      "type": "object"
    },
    "VaultSecretGroup": {
      "description": "Describes a set of certificates which are all in the same Key Vault.",
      "properties": {
        "sourceVault": {
          "description": "The relative URL of the Key Vault containing all of the certificates in\nVaultCertificates.",
          "oneOf": [
            {
              "$ref": "#/definitions/SubResource"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "vaultCertificates": {
          "description": "The list of key vault references in SourceVault which contain certificates.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/VaultCertificate"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "VirtualHardDisk": {
      "description": "Describes the uri of a disk.",
      "properties": {
        "uri": {
          "description": "Specifies the virtual hard disk's uri.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "VirtualMachineScaleSetDataDisk": {
      "description": "Describes a virtual machine scale set data disk.",
      "properties": {
        "caching": {
          "description": "Specifies the caching requirements. Possible values are: **None,**\n**ReadOnly,** **ReadWrite.** The default values are: **None for Standard\nstorage. ReadOnly for Premium storage.**",
          "oneOf": [
            {
              "enum": [
                "None",
                "ReadOnly",
                "ReadWrite"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "createOption": {
          "description": "The create option.",
          "oneOf": [
            {
              "enum": [
                "FromImage",
                "Empty",
                "Attach",
                "Copy",
                "Restore"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "deleteOption": {
          "description": "Specifies whether data disk should be deleted or detached upon VMSS Flex\ndeletion (This feature is available for VMSS with Flexible OrchestrationMode\nonly).<br><br> Possible values: <br><br> **Delete** If this value is used, the\ndata disk is deleted when the VMSS Flex VM is deleted.<br><br> **Detach** If\nthis value is used, the data disk is retained after VMSS Flex VM is\ndeleted.<br><br> The default value is set to **Delete**.",
          "oneOf": [
            {
              "enum": [
                "Delete",
                "Detach"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "diskIOPSReadWrite": {
          "description": "Specifies the Read-Write IOPS for the managed disk. Should be used only when\nStorageAccountType is UltraSSD_LRS. If not specified, a default value would be\nassigned based on diskSizeGB.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "diskMBpsReadWrite": {
          "description": "Specifies the bandwidth in MB per second for the managed disk. Should be used\nonly when StorageAccountType is UltraSSD_LRS. If not specified, a default value\nwould be assigned based on diskSizeGB.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "diskSizeGB": {
          "description": "Specifies the size of an empty data disk in gigabytes. This element can be used\nto overwrite the size of the disk in a virtual machine image. The property\ndiskSizeGB is the number of bytes x 1024^3 for the disk and the value cannot be\nlarger than 1023.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "lun": {
          "description": "Specifies the logical unit number of the data disk. This value is used to\nidentify data disks within the VM and therefore must be unique for each data\ndisk attached to a VM.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "managedDisk": {
          "description": "The managed disk parameters.",
          "oneOf": [
            {
              "$ref": "#/definitions/VirtualMachineScaleSetManagedDiskParameters"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "name": {
          "description": "The disk name.",
          "type": "string"
        },
        "writeAcceleratorEnabled": {
          "description": "Specifies whether writeAccelerator should be enabled or disabled on the disk.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "lun",
        "createOption"
      ],
      "type": "object"
    },
    "VirtualMachineScaleSetExtension": {
      "description": "Describes a Virtual Machine Scale Set Extension.",
      "properties": {
        "name": {
          "description": "The name of the extension.",
          "type": "string"
        },
        "properties": {
          "description": "Describes the properties of a Virtual Machine Scale Set Extension.",
          "oneOf": [
            {
              "$ref": "#/definitions/VirtualMachineScaleSetExtensionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "VirtualMachineScaleSetExtensionProfile": {
      "description": "Describes a virtual machine scale set extension profile.",
      "properties": {
        "extensions": {
          "description": "The virtual machine scale set child extension resources.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/VirtualMachineScaleSetExtension"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "extensionsTimeBudget": {
          "description": "Specifies the time alloted for all extensions to start. The time duration\nshould be between 15 minutes and 120 minutes (inclusive) and should be\nspecified in ISO 8601 format. The default value is 90 minutes (PT1H30M).\nMinimum api-version: 2020-06-01.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "VirtualMachineScaleSetExtensionProperties": {
      "description": "Describes the properties of a Virtual Machine Scale Set Extension.",
      "properties": {
        "autoUpgradeMinorVersion": {
          "description": "Indicates whether the extension should use a newer minor version if one is\navailable at deployment time. Once deployed, however, the extension will not\nupgrade minor versions unless redeployed, even with this property set to true.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "enableAutomaticUpgrade": {
          "description": "Indicates whether the extension should be automatically upgraded by the\nplatform if there is a newer version of the extension available.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "forceUpdateTag": {
          "description": "If a value is provided and is different from the previous value, the extension\nhandler will be forced to update even if the extension configuration has not\nchanged.",
          "type": "string"
        },
        "protectedSettings": {
          "description": "The extension can contain either protectedSettings or\nprotectedSettingsFromKeyVault or no protected settings at all.",
          "oneOf": [
            {
              "additionalProperties": {},
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "protectedSettingsFromKeyVault": {
          "description": "The extensions protected settings that are passed by reference, and consumed\nfrom key vault",
          "oneOf": [
            {
              "$ref": "#/definitions/KeyVaultSecretReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "provisionAfterExtensions": {
          "description": "Collection of extension names after which this extension needs to be\nprovisioned.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "publisher": {
          "description": "The name of the extension handler publisher.",
          "type": "string"
        },
        "settings": {
          "description": "Json formatted public settings for the extension.",
          "oneOf": [
            {
              "additionalProperties": {},
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "suppressFailures": {
          "description": "Indicates whether failures stemming from the extension will be suppressed\n(Operational failures such as not connecting to the VM will not be suppressed\nregardless of this value). The default is false.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "description": "Specifies the type of the extension; an example is \"CustomScriptExtension\".",
          "type": "string"
        },
        "typeHandlerVersion": {
          "description": "Specifies the version of the script handler.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "VirtualMachineScaleSetHardwareProfile": {
      "description": "Specifies the hardware settings for the virtual machine scale set.",
      "properties": {
        "vmSizeProperties": {
          "description": "Specifies the properties for customizing the size of the virtual machine.\nMinimum api-version: 2021-11-01. Please follow the instructions in [VM\nCustomization](https://aka.ms/vmcustomization) for more details.",
          "oneOf": [
            {
              "$ref": "#/definitions/VMSizeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "VirtualMachineScaleSetIPConfiguration": {
      "description": "Describes a virtual machine scale set network profile's IP configuration.",
      "properties": {
        "name": {
          "description": "The IP configuration name.",
          "type": "string"
        },
        "properties": {
          "description": "Describes a virtual machine scale set network profile's IP configuration\nproperties.",
          "oneOf": [
            {
              "$ref": "#/definitions/VirtualMachineScaleSetIPConfigurationProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "VirtualMachineScaleSetIPConfigurationProperties": {
      "description": "Describes a virtual machine scale set network profile's IP configuration\nproperties.",
      "properties": {
        "applicationGatewayBackendAddressPools": {
          "description": "Specifies an array of references to backend address pools of application\ngateways. A scale set can reference backend address pools of multiple\napplication gateways. Multiple scale sets cannot use the same application\ngateway.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/SubResource"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "applicationSecurityGroups": {
          "description": "Specifies an array of references to application security group.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/SubResource"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "loadBalancerBackendAddressPools": {
          "description": "Specifies an array of references to backend address pools of load balancers. A\nscale set can reference backend address pools of one public and one internal\nload balancer. Multiple scale sets cannot use the same basic sku load balancer.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/SubResource"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "loadBalancerInboundNatPools": {
          "description": "Specifies an array of references to inbound Nat pools of the load balancers. A\nscale set can reference inbound nat pools of one public and one internal load\nbalancer. Multiple scale sets cannot use the same basic sku load balancer.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/SubResource"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "primary": {
          "description": "Specifies the primary network interface in case the virtual machine has more\nthan 1 network interface.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "privateIPAddressVersion": {
          "description": "Available from Api-Version 2017-03-30 onwards, it represents whether the\nspecific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4.  Possible\nvalues are: 'IPv4' and 'IPv6'.",
          "oneOf": [
            {
              "enum": [
                "IPv4",
                "IPv6"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "publicIPAddressConfiguration": {
          "description": "The publicIPAddressConfiguration.",
          "oneOf": [
            {
              "$ref": "#/definitions/VirtualMachineScaleSetPublicIPAddressConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "subnet": {
          "description": "Specifies the identifier of the subnet.",
          "oneOf": [
            {
              "$ref": "#/definitions/ApiEntityReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "VirtualMachineScaleSetIpTag": {
      "description": "Contains the IP tag associated with the public IP address.",
      "properties": {
        "ipTagType": {
          "description": "IP tag type. Example: FirstPartyUsage.",
          "type": "string"
        },
        "tag": {
          "description": "IP tag associated with the public IP. Example: SQL, Storage etc.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "VirtualMachineScaleSetManagedDiskParameters": {
      "description": "Describes the parameters of a ScaleSet managed disk.",
      "properties": {
        "diskEncryptionSet": {
          "description": "Specifies the customer managed disk encryption set resource id for the managed\ndisk.",
          "oneOf": [
            {
              "$ref": "#/definitions/DiskEncryptionSetParameters"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "securityProfile": {
          "description": "Specifies the security profile for the managed disk.",
          "oneOf": [
            {
              "$ref": "#/definitions/VMDiskSecurityProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "storageAccountType": {
          "description": "Specifies the storage account type for the managed disk. NOTE: UltraSSD_LRS can\nonly be used with data disks, it cannot be used with OS Disk.",
          "oneOf": [
            {
              "enum": [
                "Standard_LRS",
                "Premium_LRS",
                "StandardSSD_LRS",
                "UltraSSD_LRS",
                "Premium_ZRS",
                "StandardSSD_ZRS",
                "PremiumV2_LRS"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "VirtualMachineScaleSetNetworkConfiguration": {
      "description": "Describes a virtual machine scale set network profile's network configurations.",
      "properties": {
        "name": {
          "description": "The network configuration name.",
          "type": "string"
        },
        "properties": {
          "description": "Describes a virtual machine scale set network profile's IP configuration.",
          "oneOf": [
            {
              "$ref": "#/definitions/VirtualMachineScaleSetNetworkConfigurationProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "VirtualMachineScaleSetNetworkConfigurationDnsSettings": {
      "description": "Describes a virtual machines scale sets network configuration's DNS settings.",
      "properties": {
        "dnsServers": {
          "description": "List of DNS servers IP addresses",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "VirtualMachineScaleSetNetworkConfigurationProperties": {
      "description": "Describes a virtual machine scale set network profile's IP configuration.",
      "properties": {
        "auxiliaryMode": {
          "description": "Specifies whether the Auxiliary mode is enabled for the Network Interface\nresource.",
          "oneOf": [
            {
              "enum": [
                "None",
                "AcceleratedConnections",
                "Floating"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "auxiliarySku": {
          "description": "Specifies whether the Auxiliary sku is enabled for the Network Interface\nresource.",
          "oneOf": [
            {
              "enum": [
                "None",
                "A1",
                "A2",
                "A4",
                "A8"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "deleteOption": {
          "description": "Specify what happens to the network interface when the VM is deleted",
          "oneOf": [
            {
              "enum": [
                "Delete",
                "Detach"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "disableTcpStateTracking": {
          "description": "Specifies whether the network interface is disabled for tcp state tracking.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "dnsSettings": {
          "description": "The dns settings to be applied on the network interfaces.",
          "oneOf": [
            {
              "$ref": "#/definitions/VirtualMachineScaleSetNetworkConfigurationDnsSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "enableAcceleratedNetworking": {
          "description": "Specifies whether the network interface is accelerated networking-enabled.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "enableFpga": {
          "description": "Specifies whether the network interface is FPGA networking-enabled.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "enableIPForwarding": {
          "description": "Whether IP forwarding enabled on this NIC.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "ipConfigurations": {
          "description": "Specifies the IP configurations of the network interface.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/VirtualMachineScaleSetIPConfiguration"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "networkSecurityGroup": {
          "description": "The network security group.",
          "oneOf": [
            {
              "$ref": "#/definitions/SubResource"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "primary": {
          "description": "Specifies the primary network interface in case the virtual machine has more\nthan 1 network interface.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "ipConfigurations"
      ],
      "type": "object"
    },
    "VirtualMachineScaleSetNetworkProfile": {
      "description": "Describes a virtual machine scale set network profile.",
      "properties": {
        "healthProbe": {
          "description": "A reference to a load balancer probe used to determine the health of an\ninstance in the virtual machine scale set. The reference will be in the form:\n'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}/probes/{probeName}'.",
          "oneOf": [
            {
              "$ref": "#/definitions/ApiEntityReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "networkApiVersion": {
          "description": "specifies the Microsoft.Network API version used when creating networking\nresources in the Network Interface Configurations for Virtual Machine Scale Set\nwith orchestration mode 'Flexible'",
          "oneOf": [
            {
              "enum": [
                "2020-11-01"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "networkInterfaceConfigurations": {
          "description": "The list of network configurations.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/VirtualMachineScaleSetNetworkConfiguration"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "VirtualMachineScaleSetOSDisk": {
      "description": "Describes a virtual machine scale set operating system disk.",
      "properties": {
        "caching": {
          "description": "Specifies the caching requirements. Possible values are: **None,**\n**ReadOnly,** **ReadWrite.** The default values are: **None for Standard\nstorage. ReadOnly for Premium storage.**",
          "oneOf": [
            {
              "enum": [
                "None",
                "ReadOnly",
                "ReadWrite"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "createOption": {
          "description": "Specifies how the virtual machines in the scale set should be created. The only\nallowed value is: **FromImage.** This value is used when you are using an image\nto create the virtual machine. If you are using a platform image, you also use\nthe imageReference element described above. If you are using a marketplace\nimage, you  also use the plan element previously described.",
          "oneOf": [
            {
              "enum": [
                "FromImage",
                "Empty",
                "Attach",
                "Copy",
                "Restore"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "deleteOption": {
          "description": "Specifies whether OS Disk should be deleted or detached upon VMSS Flex deletion\n(This feature is available for VMSS with Flexible OrchestrationMode only).\n<br><br> Possible values: <br><br> **Delete** If this value is used, the OS\ndisk is deleted when VMSS Flex VM is deleted.<br><br> **Detach** If this value\nis used, the OS disk is retained after VMSS Flex VM is deleted. <br><br> The\ndefault value is set to **Delete**. For an Ephemeral OS Disk, the default value\nis set to **Delete**. User cannot change the delete option for Ephemeral OS\nDisk.",
          "oneOf": [
            {
              "enum": [
                "Delete",
                "Detach"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "diffDiskSettings": {
          "description": "Specifies the ephemeral disk Settings for the operating system disk used by the\nvirtual machine scale set.",
          "oneOf": [
            {
              "$ref": "#/definitions/DiffDiskSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "diskSizeGB": {
          "description": "Specifies the size of an empty data disk in gigabytes. This element can be used\nto overwrite the size of the disk in a virtual machine image. The property 'diskSizeGB'\nis the number of bytes x 1024^3 for the disk and the value cannot\nbe larger than 1023.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "image": {
          "description": "Specifies information about the unmanaged user image to base the scale set on.",
          "oneOf": [
            {
              "$ref": "#/definitions/VirtualHardDisk"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "managedDisk": {
          "description": "The managed disk parameters.",
          "oneOf": [
            {
              "$ref": "#/definitions/VirtualMachineScaleSetManagedDiskParameters"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "name": {
          "description": "The disk name.",
          "type": "string"
        },
        "osType": {
          "description": "This property allows you to specify the type of the OS that is included in the\ndisk if creating a VM from user-image or a specialized VHD. Possible values\nare: **Windows,** **Linux.**",
          "oneOf": [
            {
              "enum": [
                "Windows",
                "Linux"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "vhdContainers": {
          "description": "Specifies the container urls that are used to store operating system disks for\nthe scale set.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "writeAcceleratorEnabled": {
          "description": "Specifies whether writeAccelerator should be enabled or disabled on the disk.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "createOption"
      ],
      "type": "object"
    },
    "VirtualMachineScaleSetOSProfile": {
      "description": "Describes a virtual machine scale set OS profile.",
      "properties": {
        "adminPassword": {
          "description": "Specifies the password of the administrator account. <br><br> **Minimum-length\n(Windows):** 8 characters <br><br> **Minimum-length (Linux):** 6 characters\n<br><br> **Max-length (Windows):** 123 characters <br><br> **Max-length\n(Linux):** 72 characters <br><br> **Complexity requirements:** 3 out of 4\nconditions below need to be fulfilled <br> Has lower characters <br>Has upper\ncharacters <br> Has a digit <br> Has a special character (Regex match [\\W_])\n<br><br> **Disallowed values:** \"abc@123\", \"P@$$w0rd\", \"P@ssw0rd\",\n\"P@ssword123\", \"Pa$$word\", \"pass@word1\", \"Password!\", \"Password1\",\n\"Password22\", \"iloveyou!\" <br><br> For resetting the password, see [How to\nreset the Remote Desktop service or its login password in a Windows\nVM](https://docs.microsoft.com/troubleshoot/azure/virtual-machines/reset-rdp)\n<br><br> For resetting root password, see [Manage users, SSH, and check or\nrepair disks on Azure Linux VMs using the VMAccess\nExtension](https://docs.microsoft.com/troubleshoot/azure/virtual-machines/troubleshoot-ssh-connection)",
          "type": "string"
        },
        "adminUsername": {
          "description": "Specifies the name of the administrator account. <br><br> **Windows-only\nrestriction:** Cannot end in \".\" <br><br> **Disallowed values:**\n\"administrator\", \"admin\", \"user\", \"user1\", \"test\", \"user2\", \"test1\", \"user3\",\n\"admin1\", \"1\", \"123\", \"a\", \"actuser\", \"adm\", \"admin2\", \"aspnet\", \"backup\",\n\"console\", \"david\", \"guest\", \"john\", \"owner\", \"root\", \"server\", \"sql\",\n\"support\", \"support_388945a0\", \"sys\", \"test2\", \"test3\", \"user4\", \"user5\".\n<br><br> **Minimum-length (Linux):** 1  character <br><br> **Max-length\n(Linux):** 64 characters <br><br> **Max-length (Windows):** 20 characters",
          "type": "string"
        },
        "allowExtensionOperations": {
          "description": "Specifies whether extension operations should be allowed on the virtual machine\nscale set. This may only be set to False when no extensions are present on the\nvirtual machine scale set.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "computerNamePrefix": {
          "description": "Specifies the computer name prefix for all of the virtual machines in the scale\nset. Computer name prefixes must be 1 to 15 characters long.",
          "type": "string"
        },
        "customData": {
          "description": "Specifies a base-64 encoded string of custom data. The base-64 encoded string\nis decoded to a binary array that is saved as a file on the Virtual Machine.\nThe maximum length of the binary array is 65535 bytes. For using cloud-init for\nyour VM, see [Using cloud-init to customize a Linux VM during\ncreation](https://docs.microsoft.com/azure/virtual-machines/linux/using-cloud-init)",
          "type": "string"
        },
        "linuxConfiguration": {
          "description": "Specifies the Linux operating system settings on the virtual machine. For a\nlist of supported Linux distributions, see [Linux on Azure-Endorsed\nDistributions](https://docs.microsoft.com/azure/virtual-machines/linux/endorsed-distros).",
          "oneOf": [
            {
              "$ref": "#/definitions/LinuxConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "requireGuestProvisionSignal": {
          "description": "Optional property which must either be set to True or omitted.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "secrets": {
          "description": "Specifies set of certificates that should be installed onto the virtual\nmachines in the scale set. To install certificates on a virtual machine it is\nrecommended to use the [Azure Key Vault virtual machine extension for\nLinux](https://docs.microsoft.com/azure/virtual-machines/extensions/key-vault-linux)\nor the [Azure Key Vault virtual machine extension for\nWindows](https://docs.microsoft.com/azure/virtual-machines/extensions/key-vault-windows).",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/VaultSecretGroup"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "windowsConfiguration": {
          "description": "Specifies Windows operating system settings on the virtual machine.",
          "oneOf": [
            {
              "$ref": "#/definitions/WindowsConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "VirtualMachineScaleSetPublicIPAddressConfiguration": {
      "description": "Describes a virtual machines scale set IP Configuration's PublicIPAddress\nconfiguration",
      "properties": {
        "name": {
          "description": "The publicIP address configuration name.",
          "type": "string"
        },
        "properties": {
          "description": "Describes a virtual machines scale set IP Configuration's PublicIPAddress\nconfiguration",
          "oneOf": [
            {
              "$ref": "#/definitions/VirtualMachineScaleSetPublicIPAddressConfigurationProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "sku": {
          "description": "Describes the public IP Sku. It can only be set with OrchestrationMode as\nFlexible.",
          "oneOf": [
            {
              "$ref": "#/definitions/PublicIPAddressSku"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettings": {
      "description": "Describes a virtual machines scale sets network configuration's DNS settings.",
      "properties": {
        "domainNameLabel": {
          "description": "The Domain name label.The concatenation of the domain name label and vm index\nwill be the domain name labels of the PublicIPAddress resources that will be\ncreated",
          "type": "string"
        },
        "domainNameLabelScope": {
          "description": "The Domain name label scope.The concatenation of the hashed domain name label\nthat generated according to the policy from domain name label scope and vm\nindex will be the domain name labels of the PublicIPAddress resources that will\nbe created",
          "oneOf": [
            {
              "enum": [
                "TenantReuse",
                "SubscriptionReuse",
                "ResourceGroupReuse",
                "NoReuse"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "domainNameLabel"
      ],
      "type": "object"
    },
    "VirtualMachineScaleSetPublicIPAddressConfigurationProperties": {
      "description": "Describes a virtual machines scale set IP Configuration's PublicIPAddress\nconfiguration",
      "properties": {
        "deleteOption": {
          "description": "Specify what happens to the public IP when the VM is deleted",
          "oneOf": [
            {
              "enum": [
                "Delete",
                "Detach"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "dnsSettings": {
          "description": "The dns settings to be applied on the publicIP addresses .",
          "oneOf": [
            {
              "$ref": "#/definitions/VirtualMachineScaleSetPublicIPAddressConfigurationDnsSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "idleTimeoutInMinutes": {
          "description": "The idle timeout of the public IP address.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "ipTags": {
          "description": "The list of IP tags associated with the public IP address.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/VirtualMachineScaleSetIpTag"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "publicIPAddressVersion": {
          "description": "Available from Api-Version 2019-07-01 onwards, it represents whether the\nspecific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4. Possible\nvalues are: 'IPv4' and 'IPv6'.",
          "oneOf": [
            {
              "enum": [
                "IPv4",
                "IPv6"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "publicIPPrefix": {
          "description": "The PublicIPPrefix from which to allocate publicIP addresses.",
          "oneOf": [
            {
              "$ref": "#/definitions/SubResource"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "VirtualMachineScaleSetStorageProfile": {
      "description": "Describes a virtual machine scale set storage profile.",
      "properties": {
        "dataDisks": {
          "description": "Specifies the parameters that are used to add data disks to the virtual\nmachines in the scale set. For more information about disks, see [About disks\nand VHDs for Azure virtual\nmachines](https://docs.microsoft.com/azure/virtual-machines/managed-disks-overview).",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/VirtualMachineScaleSetDataDisk"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "diskControllerType": {
          "description": "Specifies the disk controller type configured for the virtual machines in the scale set. Minimum api-version: 2022-08-01",
          "oneOf": [
            {
              "enum": [
                "SCSI",
                "NVMe"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "imageReference": {
          "description": "Specifies information about the image to use. You can specify information about\nplatform images, marketplace images, or virtual machine images. This element is\nrequired when you want to use a platform image, marketplace image, or virtual\nmachine image, but is not used in other creation operations.",
          "oneOf": [
            {
              "$ref": "#/definitions/ImageReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "osDisk": {
          "description": "Specifies information about the operating system disk used by the virtual\nmachines in the scale set. For more information about disks, see [About disks\nand VHDs for Azure virtual\nmachines](https://docs.microsoft.com/azure/virtual-machines/managed-disks-overview).",
          "oneOf": [
            {
              "$ref": "#/definitions/VirtualMachineScaleSetOSDisk"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "VmSizeProfile": {
      "description": "Specifications about a VM Size. This will also contain the corresponding rank and weight in future.",
      "properties": {
        "name": {
          "description": "The Sku name (e.g. 'Standard_DS1_v2')",
          "type": "string"
        },
        "rank": {
          "description": "The rank of the VM size. This is used with 'RegularPriorityAllocationStrategy.Prioritized'\nThe lower the number, the higher the priority. Starting with 0.",
          "oneOf": [
            {
              "maximum": 65535,
              "minimum": 0,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "WinRMConfiguration": {
      "description": "Describes Windows Remote Management configuration of the VM",
      "properties": {
        "listeners": {
          "description": "The list of Windows Remote Management listeners",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/WinRMListener"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "WinRMListener": {
      "description": "Describes Protocol and thumbprint of Windows Remote Management listener",
      "properties": {
        "certificateUrl": {
          "description": "This is the URL of a certificate that has been uploaded to Key Vault as a\nsecret. For adding a secret to the Key Vault, see [Add a key or secret to the\nkey\nvault](https://docs.microsoft.com/azure/key-vault/key-vault-get-started/#add).\nIn this case, your certificate needs to be the Base64 encoding of the following\nJSON Object which is encoded in UTF-8: <br><br> {<br>\n\"data\":\"<Base64-encoded-certificate>\",<br>  \"dataType\":\"pfx\",<br>\n\"password\":\"<pfx-file-password>\"<br>} <br> To install certificates on a virtual\nmachine it is recommended to use the [Azure Key Vault virtual machine extension\nfor\nLinux](https://docs.microsoft.com/azure/virtual-machines/extensions/key-vault-linux)\nor the [Azure Key Vault virtual machine extension for\nWindows](https://docs.microsoft.com/azure/virtual-machines/extensions/key-vault-windows).",
          "type": "string"
        },
        "protocol": {
          "description": "Specifies the protocol of WinRM listener. Possible values are: **http,**\n**https.**",
          "oneOf": [
            {
              "enum": [
                "Http",
                "Https"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "WindowsConfiguration": {
      "description": "Specifies Windows operating system settings on the virtual machine.",
      "properties": {
        "additionalUnattendContent": {
          "description": "Specifies additional base-64 encoded XML formatted information that can be\nincluded in the Unattend.xml file, which is used by Windows Setup.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/AdditionalUnattendContent"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "enableAutomaticUpdates": {
          "description": "Indicates whether Automatic Updates is enabled for the Windows virtual machine.\nDefault value is true. For virtual machine scale sets, this property can be\nupdated and updates will take effect on OS reprovisioning.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "enableVMAgentPlatformUpdates": {
          "description": "Indicates whether VMAgent Platform Updates is enabled for the Windows virtual\nmachine. Default value is false.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "patchSettings": {
          "description": "[Preview Feature] Specifies settings related to VM Guest Patching on Windows.",
          "oneOf": [
            {
              "$ref": "#/definitions/PatchSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "provisionVMAgent": {
          "description": "Indicates whether virtual machine agent should be provisioned on the virtual\nmachine. When this property is not specified in the request body, it is set to\ntrue by default. This will ensure that VM Agent is installed on the VM so that\nextensions can be added to the VM later.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "timeZone": {
          "description": "Specifies the time zone of the virtual machine. e.g. \"Pacific Standard Time\".\nPossible values can be\n[TimeZoneInfo.Id](https://docs.microsoft.com/dotnet/api/system.timezoneinfo.id?#System_TimeZoneInfo_Id)\nvalue from time zones returned by\n[TimeZoneInfo.GetSystemTimeZones](https://docs.microsoft.com/dotnet/api/system.timezoneinfo.getsystemtimezones).",
          "type": "string"
        },
        "winRM": {
          "description": "Specifies the Windows Remote Management listeners. This enables remote Windows\nPowerShell.",
          "oneOf": [
            {
              "$ref": "#/definitions/WinRMConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "WindowsVMGuestPatchAutomaticByPlatformSettings": {
      "description": "Specifies additional settings to be applied when patch mode AutomaticByPlatform\nis selected in Windows patch settings.",
      "properties": {
        "bypassPlatformSafetyChecksOnUserSchedule": {
          "description": "Enables customer to schedule patching without accidental upgrades",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "rebootSetting": {
          "description": "Specifies the reboot setting for all AutomaticByPlatform patch installation\noperations.",
          "oneOf": [
            {
              "enum": [
                "Unknown",
                "IfRequired",
                "Never",
                "Always"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    }
  }
}