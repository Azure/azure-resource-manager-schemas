{
  "id": "https://schema.management.azure.com/schemas/2024-07-01/Microsoft.Confluent.json#",
  "title": "Microsoft.Confluent",
  "description": "Microsoft Confluent Resource Types",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "resourceDefinitions": {
    "organizations": {
      "description": "Microsoft.Confluent/organizations",
      "properties": {
        "apiVersion": {
          "enum": [
            "2024-07-01"
          ],
          "type": "string"
        },
        "location": {
          "description": "The geo-location where the resource lives",
          "type": "string"
        },
        "name": {
          "description": "Organization resource name",
          "type": "string"
        },
        "properties": {
          "description": "Organization resource properties",
          "oneOf": [
            {
              "$ref": "#/definitions/OrganizationResourceProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/organizations_environments_childResource"
              }
            ]
          },
          "type": "array"
        },
        "tags": {
          "description": "Resource tags.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.Confluent/organizations"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "organizations_environments": {
      "description": "Microsoft.Confluent/organizations/environments",
      "properties": {
        "apiVersion": {
          "enum": [
            "2024-07-01"
          ],
          "type": "string"
        },
        "kind": {
          "description": "Type of environment",
          "type": "string"
        },
        "name": {
          "description": "Confluent environment id",
          "type": "string"
        },
        "properties": {
          "description": "Environment properties",
          "oneOf": [
            {
              "$ref": "#/definitions/EnvironmentProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/organizations_environments_clusters_childResource"
              }
            ]
          },
          "type": "array"
        },
        "type": {
          "enum": [
            "Microsoft.Confluent/organizations/environments"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "organizations_environments_clusters": {
      "description": "Microsoft.Confluent/organizations/environments/clusters",
      "properties": {
        "apiVersion": {
          "enum": [
            "2024-07-01"
          ],
          "type": "string"
        },
        "kind": {
          "description": "Type of cluster",
          "type": "string"
        },
        "name": {
          "description": "Confluent kafka or schema registry cluster id",
          "type": "string"
        },
        "properties": {
          "description": "Cluster Properties",
          "oneOf": [
            {
              "$ref": "#/definitions/ClusterProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/organizations_environments_clusters_topics_childResource"
              },
              {
                "$ref": "#/definitions/organizations_environments_clusters_connectors_childResource"
              }
            ]
          },
          "type": "array"
        },
        "type": {
          "enum": [
            "Microsoft.Confluent/organizations/environments/clusters"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "organizations_environments_clusters_connectors": {
      "description": "Microsoft.Confluent/organizations/environments/clusters/connectors",
      "properties": {
        "apiVersion": {
          "enum": [
            "2024-07-01"
          ],
          "type": "string"
        },
        "name": {
          "description": "Confluent connector name",
          "type": "string"
        },
        "properties": {
          "description": "The properties of the Connector",
          "oneOf": [
            {
              "$ref": "#/definitions/ConnectorResourceProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.Confluent/organizations/environments/clusters/connectors"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "organizations_environments_clusters_topics": {
      "description": "Microsoft.Confluent/organizations/environments/clusters/topics",
      "properties": {
        "apiVersion": {
          "enum": [
            "2024-07-01"
          ],
          "type": "string"
        },
        "name": {
          "description": "Confluent kafka or schema registry topic name",
          "type": "string"
        },
        "properties": {
          "description": "Topic Properties",
          "oneOf": [
            {
              "$ref": "#/definitions/TopicProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.Confluent/organizations/environments/clusters/topics"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    }
  },
  "subscription_resourceDefinitions": {
    "agreements": {
      "description": "Microsoft.Confluent/agreements",
      "properties": {
        "apiVersion": {
          "enum": [
            "2024-07-01"
          ],
          "type": "string"
        },
        "name": {
          "oneOf": [
            {
              "enum": [
                "default"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Represents the properties of the resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/ConfluentAgreementProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.Confluent/agreements"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    }
  },
  "definitions": {
    "ClusterConfigEntity": {
      "description": "The configuration of the Kafka cluster",
      "properties": {
        "kind": {
          "description": "The lifecycle phase of the cluster",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ClusterProperties": {
      "description": "Service Connector Cluster Properties",
      "properties": {
        "metadata": {
          "description": "Metadata of the record",
          "oneOf": [
            {
              "$ref": "#/definitions/SCMetadataEntity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "spec": {
          "description": "Specification of the cluster",
          "oneOf": [
            {
              "$ref": "#/definitions/SCClusterSpecEntity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "status": {
          "description": "Specification of the cluster status",
          "oneOf": [
            {
              "$ref": "#/definitions/ClusterStatusEntity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ClusterStatusEntity": {
      "description": "Status of the cluster record",
      "properties": {
        "cku": {
          "description": "The number of Confluent Kafka Units",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "phase": {
          "description": "The lifecycle phase of the cluster",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ConfluentAgreementProperties": {
      "description": "Terms properties for Marketplace and Confluent.",
      "properties": {
        "accepted": {
          "description": "If any version of the terms have been accepted, otherwise false.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "licenseTextLink": {
          "description": "Link to HTML with Microsoft and Publisher terms.",
          "type": "string"
        },
        "plan": {
          "description": "Plan identifier string.",
          "type": "string"
        },
        "privacyPolicyLink": {
          "description": "Link to the privacy policy of the publisher.",
          "type": "string"
        },
        "product": {
          "description": "Product identifier string.",
          "type": "string"
        },
        "publisher": {
          "description": "Publisher identifier string.",
          "type": "string"
        },
        "retrieveDatetime": {
          "description": "Date and time in UTC of when the terms were accepted. This is empty if Accepted is false.",
          "format": "date-time",
          "type": "string"
        },
        "signature": {
          "description": "Terms signature.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ConnectorInfoBase": {
      "description": "Connector Info Base properties",
      "properties": {
        "connectorClass": {
          "description": "Connector Class",
          "oneOf": [
            {
              "enum": [
                "AZUREBLOBSOURCE",
                "AZUREBLOBSINK"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "connectorId": {
          "description": "Connector Id",
          "type": "string"
        },
        "connectorName": {
          "description": "Connector Name",
          "type": "string"
        },
        "connectorState": {
          "description": "Connector Status",
          "oneOf": [
            {
              "enum": [
                "PROVISIONING",
                "RUNNING",
                "PAUSED",
                "FAILED"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "connectorType": {
          "description": "Connector Type",
          "oneOf": [
            {
              "enum": [
                "SINK",
                "SOURCE"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ConnectorResourceProperties": {
      "description": "The resource properties of the Connector",
      "properties": {
        "connectorBasicInfo": {
          "description": "Connector Info Base",
          "oneOf": [
            {
              "$ref": "#/definitions/ConnectorInfoBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "connectorServiceTypeInfo": {
          "description": "Connector Service type info base properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/ConnectorServiceTypeInfoBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "partnerConnectorInfo": {
          "description": "The connection information consumed by applications.",
          "oneOf": [
            {
              "$ref": "#/definitions/PartnerInfoBase"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ConnectorServiceTypeInfoBase": {
      "description": "The connector service type info",
      "oneOf": [
        {
          "description": "The authentication info when auth_type is azureBlobStorageSinkConnector",
          "properties": {
            "connectorServiceType": {
              "enum": [
                "AzureBlobStorageSinkConnector"
              ],
              "type": "string"
            },
            "storageAccountKey": {
              "description": "Azure Blob Storage Account Key",
              "type": "string"
            },
            "storageAccountName": {
              "description": "Azure Blob Storage Account Name",
              "type": "string"
            },
            "storageContainerName": {
              "description": "Azure Blob Storage Account Container Name",
              "type": "string"
            }
          },
          "required": [
            "connectorServiceType"
          ],
          "type": "object"
        },
        {
          "description": "The connector service type is AzureBlobStorageSourceConnector",
          "properties": {
            "connectorServiceType": {
              "enum": [
                "AzureBlobStorageSourceConnector"
              ],
              "type": "string"
            },
            "storageAccountKey": {
              "description": "Azure Blob Storage Account Key",
              "type": "string"
            },
            "storageAccountName": {
              "description": "Azure Blob Storage Account Name",
              "type": "string"
            },
            "storageContainerName": {
              "description": "Azure Blob Storage Account Container Name",
              "type": "string"
            }
          },
          "required": [
            "connectorServiceType"
          ],
          "type": "object"
        },
        {
          "description": "The authentication info when auth_type is AzureCosmosDBSinkConnector",
          "properties": {
            "connectorServiceType": {
              "enum": [
                "AzureCosmosDBSinkConnector"
              ],
              "type": "string"
            },
            "cosmosConnectionEndpoint": {
              "description": "Azure Cosmos Database Connection Endpoint",
              "type": "string"
            },
            "cosmosContainersTopicMapping": {
              "description": "Azure Cosmos Database Containers Topic Mapping",
              "type": "string"
            },
            "cosmosDatabaseName": {
              "description": "Azure Cosmos Database Name",
              "type": "string"
            },
            "cosmosIdStrategy": {
              "description": "Azure Cosmos Database Id Strategy",
              "type": "string"
            },
            "cosmosMasterKey": {
              "description": "Azure Cosmos Database Master Key",
              "type": "string"
            }
          },
          "required": [
            "connectorServiceType"
          ],
          "type": "object"
        },
        {
          "description": "The authentication info when auth_type is AzureCosmosDBSourceConnector",
          "properties": {
            "connectorServiceType": {
              "enum": [
                "AzureCosmosDBSourceConnector"
              ],
              "type": "string"
            },
            "cosmosConnectionEndpoint": {
              "description": "Azure Cosmos Database Connection Endpoint",
              "type": "string"
            },
            "cosmosContainersTopicMapping": {
              "description": "Azure Cosmos Database Containers Topic Mapping",
              "type": "string"
            },
            "cosmosDatabaseName": {
              "description": "Azure Cosmos Database Name",
              "type": "string"
            },
            "cosmosMasterKey": {
              "description": "Azure Cosmos Database Master Key",
              "type": "string"
            },
            "cosmosMessageKeyEnabled": {
              "description": "Azure Cosmos Database Message Key Enabled",
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "cosmosMessageKeyField": {
              "description": "Azure Cosmos Database Message Key Field",
              "type": "string"
            }
          },
          "required": [
            "connectorServiceType"
          ],
          "type": "object"
        },
        {
          "description": "The authentication info when auth_type is AzureSynapseAnalyticsSinkConnector",
          "properties": {
            "connectorServiceType": {
              "enum": [
                "AzureSynapseAnalyticsSinkConnector"
              ],
              "type": "string"
            },
            "synapseSqlDatabaseName": {
              "description": "Azure Synapse Dedicated SQL Pool Database Name",
              "type": "string"
            },
            "synapseSqlPassword": {
              "description": "Azure Synapse SQL login details",
              "type": "string"
            },
            "synapseSqlServerName": {
              "description": "Azure Synapse Analytics SQL Server Name",
              "type": "string"
            },
            "synapseSqlUser": {
              "description": "Azure Synapse SQL login details",
              "type": "string"
            }
          },
          "required": [
            "connectorServiceType"
          ],
          "type": "object"
        }
      ],
      "properties": {},
      "type": "object"
    },
    "EnvironmentProperties": {
      "description": "Environment resource property",
      "properties": {
        "metadata": {
          "description": "Metadata of the record",
          "oneOf": [
            {
              "$ref": "#/definitions/SCMetadataEntity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "streamGovernanceConfig": {
          "description": "Stream governance configuration",
          "oneOf": [
            {
              "$ref": "#/definitions/StreamGovernanceConfig"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "LinkOrganization": {
      "description": "Link an existing Confluent organization",
      "properties": {
        "token": {
          "description": "User auth token",
          "type": "string"
        }
      },
      "required": [
        "token"
      ],
      "type": "object"
    },
    "OfferDetail": {
      "description": "Confluent Offer detail",
      "properties": {
        "id": {
          "description": "Offer Id",
          "maxLength": 50,
          "type": "string"
        },
        "planId": {
          "description": "Offer Plan Id",
          "maxLength": 200,
          "type": "string"
        },
        "planName": {
          "description": "Offer Plan Name",
          "maxLength": 200,
          "type": "string"
        },
        "privateOfferId": {
          "description": "Private Offer Id",
          "maxLength": 255,
          "type": "string"
        },
        "privateOfferIds": {
          "description": "Array of Private Offer Ids",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "publisherId": {
          "description": "Publisher Id",
          "maxLength": 50,
          "type": "string"
        },
        "status": {
          "description": "SaaS Offer Status",
          "oneOf": [
            {
              "enum": [
                "Started",
                "PendingFulfillmentStart",
                "InProgress",
                "Subscribed",
                "Suspended",
                "Reinstated",
                "Succeeded",
                "Failed",
                "Unsubscribed",
                "Updating"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "termId": {
          "description": "Offer Plan Term Id",
          "maxLength": 50,
          "type": "string"
        },
        "termUnit": {
          "description": "Offer Plan Term unit",
          "maxLength": 25,
          "type": "string"
        }
      },
      "required": [
        "publisherId",
        "id",
        "planId",
        "planName",
        "termUnit"
      ],
      "type": "object"
    },
    "OrganizationResourceProperties": {
      "description": "Organization resource property",
      "properties": {
        "linkOrganization": {
          "description": "Link an existing Confluent organization",
          "oneOf": [
            {
              "$ref": "#/definitions/LinkOrganization"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "offerDetail": {
          "description": "Confluent offer detail",
          "oneOf": [
            {
              "$ref": "#/definitions/OfferDetail"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "userDetail": {
          "description": "Subscriber detail",
          "oneOf": [
            {
              "$ref": "#/definitions/UserDetail"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "offerDetail",
        "userDetail"
      ],
      "type": "object"
    },
    "PartnerInfoBase": {
      "description": "The partner info base",
      "oneOf": [
        {
          "description": "The partner connector type is KafkaAzureBlobStorageSink",
          "properties": {
            "apiKey": {
              "description": "Kafka API Key",
              "type": "string"
            },
            "apiSecret": {
              "description": "Kafka API Key Secret",
              "type": "string"
            },
            "authType": {
              "description": "Kafka Auth Type",
              "oneOf": [
                {
                  "enum": [
                    "SERVICE_ACCOUNT",
                    "KAFKA_API_KEY"
                  ],
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "flushSize": {
              "description": "Flush size",
              "type": "string"
            },
            "inputFormat": {
              "description": "Kafka Input Data Format Type",
              "oneOf": [
                {
                  "enum": [
                    "AVRO",
                    "JSON",
                    "STRING",
                    "BYTES",
                    "PROTOBUF"
                  ],
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "maxTasks": {
              "description": "Maximum Tasks",
              "type": "string"
            },
            "outputFormat": {
              "description": "Kafka Output Data Format Type",
              "oneOf": [
                {
                  "enum": [
                    "AVRO",
                    "JSON",
                    "STRING",
                    "BYTES",
                    "PROTOBUF"
                  ],
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "partnerConnectorType": {
              "enum": [
                "KafkaAzureBlobStorageSink"
              ],
              "type": "string"
            },
            "serviceAccountId": {
              "description": "Kafka Service Account Id",
              "type": "string"
            },
            "timeInterval": {
              "description": "Time Interval",
              "type": "string"
            },
            "topics": {
              "description": "Kafka topics list",
              "oneOf": [
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "topicsDir": {
              "description": "Kafka topics directory",
              "type": "string"
            }
          },
          "required": [
            "partnerConnectorType"
          ],
          "type": "object"
        },
        {
          "description": "The partner connector type is KafkaAzureBlobStorageSource",
          "properties": {
            "apiKey": {
              "description": "Kafka API Key",
              "type": "string"
            },
            "apiSecret": {
              "description": "Kafka API Secret",
              "type": "string"
            },
            "authType": {
              "description": "Kafka Auth Type",
              "oneOf": [
                {
                  "enum": [
                    "SERVICE_ACCOUNT",
                    "KAFKA_API_KEY"
                  ],
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "inputFormat": {
              "description": "Kafka Input Data Format Type",
              "oneOf": [
                {
                  "enum": [
                    "AVRO",
                    "JSON",
                    "STRING",
                    "BYTES",
                    "PROTOBUF"
                  ],
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "maxTasks": {
              "description": "Maximum Tasks",
              "type": "string"
            },
            "outputFormat": {
              "description": "Kafka Output Data Format Type",
              "oneOf": [
                {
                  "enum": [
                    "AVRO",
                    "JSON",
                    "STRING",
                    "BYTES",
                    "PROTOBUF"
                  ],
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "partnerConnectorType": {
              "enum": [
                "KafkaAzureBlobStorageSource"
              ],
              "type": "string"
            },
            "serviceAccountId": {
              "description": "Kafka Service Account Id",
              "type": "string"
            },
            "topicRegex": {
              "description": "Kafka topics Regex pattern",
              "type": "string"
            },
            "topicsDir": {
              "description": "Kafka topics directory",
              "type": "string"
            }
          },
          "required": [
            "partnerConnectorType"
          ],
          "type": "object"
        },
        {
          "description": "The partner connector type is KafkaAzureCosmosDBSink",
          "properties": {
            "apiKey": {
              "description": "Kafka API Key",
              "type": "string"
            },
            "apiSecret": {
              "description": "Kafka API Key Secret",
              "type": "string"
            },
            "authType": {
              "description": "Kafka Auth Type",
              "oneOf": [
                {
                  "enum": [
                    "SERVICE_ACCOUNT",
                    "KAFKA_API_KEY"
                  ],
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "flushSize": {
              "description": "Flush size",
              "type": "string"
            },
            "inputFormat": {
              "description": "Kafka Input Data Format Type",
              "oneOf": [
                {
                  "enum": [
                    "AVRO",
                    "JSON",
                    "STRING",
                    "BYTES",
                    "PROTOBUF"
                  ],
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "maxTasks": {
              "description": "Maximum Tasks",
              "type": "string"
            },
            "outputFormat": {
              "description": "Kafka Output Data Format Type",
              "oneOf": [
                {
                  "enum": [
                    "AVRO",
                    "JSON",
                    "STRING",
                    "BYTES",
                    "PROTOBUF"
                  ],
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "partnerConnectorType": {
              "enum": [
                "KafkaAzureCosmosDBSink"
              ],
              "type": "string"
            },
            "serviceAccountId": {
              "description": "Kafka Service Account Id",
              "type": "string"
            },
            "timeInterval": {
              "description": "Time Interval",
              "type": "string"
            },
            "topics": {
              "description": "Kafka topics list",
              "oneOf": [
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "topicsDir": {
              "description": "Kafka topics directory",
              "type": "string"
            }
          },
          "required": [
            "partnerConnectorType"
          ],
          "type": "object"
        },
        {
          "description": "The partner connector type is KafkaAzureCosmosDBSource",
          "properties": {
            "apiKey": {
              "description": "Kafka API Key",
              "type": "string"
            },
            "apiSecret": {
              "description": "Kafka API Secret",
              "type": "string"
            },
            "authType": {
              "description": "Kafka Auth Type",
              "oneOf": [
                {
                  "enum": [
                    "SERVICE_ACCOUNT",
                    "KAFKA_API_KEY"
                  ],
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "inputFormat": {
              "description": "Kafka Input Data Format Type",
              "oneOf": [
                {
                  "enum": [
                    "AVRO",
                    "JSON",
                    "STRING",
                    "BYTES",
                    "PROTOBUF"
                  ],
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "maxTasks": {
              "description": "Maximum Tasks",
              "type": "string"
            },
            "outputFormat": {
              "description": "Kafka Output Data Format Type",
              "oneOf": [
                {
                  "enum": [
                    "AVRO",
                    "JSON",
                    "STRING",
                    "BYTES",
                    "PROTOBUF"
                  ],
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "partnerConnectorType": {
              "enum": [
                "KafkaAzureCosmosDBSource"
              ],
              "type": "string"
            },
            "serviceAccountId": {
              "description": "Kafka Service Account Id",
              "type": "string"
            },
            "topicRegex": {
              "description": "Kafka topics Regex pattern",
              "type": "string"
            },
            "topicsDir": {
              "description": "Kafka topics directory",
              "type": "string"
            }
          },
          "required": [
            "partnerConnectorType"
          ],
          "type": "object"
        },
        {
          "description": "The partner connector type is KafkaAzureSynapseAnalyticsSink",
          "properties": {
            "apiKey": {
              "description": "Kafka API Key",
              "type": "string"
            },
            "apiSecret": {
              "description": "Kafka API Key Secret",
              "type": "string"
            },
            "authType": {
              "description": "Kafka Auth Type",
              "oneOf": [
                {
                  "enum": [
                    "SERVICE_ACCOUNT",
                    "KAFKA_API_KEY"
                  ],
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "flushSize": {
              "description": "Flush size",
              "type": "string"
            },
            "inputFormat": {
              "description": "Kafka Input Data Format Type",
              "oneOf": [
                {
                  "enum": [
                    "AVRO",
                    "JSON",
                    "STRING",
                    "BYTES",
                    "PROTOBUF"
                  ],
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "maxTasks": {
              "description": "Maximum Tasks",
              "type": "string"
            },
            "outputFormat": {
              "description": "Kafka Output Data Format Type",
              "oneOf": [
                {
                  "enum": [
                    "AVRO",
                    "JSON",
                    "STRING",
                    "BYTES",
                    "PROTOBUF"
                  ],
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "partnerConnectorType": {
              "enum": [
                "KafkaAzureSynapseAnalyticsSink"
              ],
              "type": "string"
            },
            "serviceAccountId": {
              "description": "Kafka Service Account Id",
              "type": "string"
            },
            "timeInterval": {
              "description": "Time Interval",
              "type": "string"
            },
            "topics": {
              "description": "Kafka topics list",
              "oneOf": [
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "topicsDir": {
              "description": "Kafka topics directory",
              "type": "string"
            }
          },
          "required": [
            "partnerConnectorType"
          ],
          "type": "object"
        }
      ],
      "properties": {},
      "type": "object"
    },
    "SCClusterByokEntity": {
      "description": "The network associated with this object",
      "properties": {
        "id": {
          "description": "ID of the referred resource",
          "type": "string"
        },
        "related": {
          "description": "API URL for accessing or modifying the referred object",
          "type": "string"
        },
        "resourceName": {
          "description": "CRN reference to the referred resource",
          "type": "string"
        }
      },
      "type": "object"
    },
    "SCClusterNetworkEnvironmentEntity": {
      "description": "The environment or the network to which cluster belongs",
      "properties": {
        "environment": {
          "description": "Environment of the referred resource",
          "type": "string"
        },
        "id": {
          "description": "ID of the referred resource",
          "type": "string"
        },
        "related": {
          "description": "API URL for accessing or modifying the referred object",
          "type": "string"
        },
        "resourceName": {
          "description": "CRN reference to the referred resource",
          "type": "string"
        }
      },
      "type": "object"
    },
    "SCClusterSpecEntity": {
      "description": "Spec of the cluster record",
      "properties": {
        "apiEndpoint": {
          "description": "The Kafka API cluster endpoint",
          "type": "string"
        },
        "availability": {
          "description": "The availability zone configuration of the cluster",
          "type": "string"
        },
        "byok": {
          "description": "Specification of the cluster byok",
          "oneOf": [
            {
              "$ref": "#/definitions/SCClusterByokEntity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "cloud": {
          "description": "The cloud service provider",
          "type": "string"
        },
        "config": {
          "description": "Specification of the cluster configuration",
          "oneOf": [
            {
              "$ref": "#/definitions/ClusterConfigEntity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "environment": {
          "description": "Specification of the cluster environment",
          "oneOf": [
            {
              "$ref": "#/definitions/SCClusterNetworkEnvironmentEntity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "httpEndpoint": {
          "description": "The cluster HTTP request URL.",
          "type": "string"
        },
        "kafkaBootstrapEndpoint": {
          "description": "The bootstrap endpoint used by Kafka clients to connect to the cluster",
          "type": "string"
        },
        "name": {
          "description": "The name of the cluster",
          "type": "string"
        },
        "network": {
          "description": "Specification of the cluster network",
          "oneOf": [
            {
              "$ref": "#/definitions/SCClusterNetworkEnvironmentEntity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "package": {
          "description": "Stream governance configuration",
          "oneOf": [
            {
              "enum": [
                "ESSENTIALS",
                "ADVANCED"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "region": {
          "description": "The cloud service provider region",
          "type": "string"
        },
        "zone": {
          "description": "type of zone availability",
          "type": "string"
        }
      },
      "type": "object"
    },
    "SCMetadataEntity": {
      "description": "Metadata of the data record",
      "properties": {
        "createdTimestamp": {
          "description": "Created Date Time",
          "type": "string"
        },
        "deletedTimestamp": {
          "description": "Deleted Date time",
          "type": "string"
        },
        "resourceName": {
          "description": "Resource name of the record",
          "type": "string"
        },
        "self": {
          "description": "Self lookup url",
          "type": "string"
        },
        "updatedTimestamp": {
          "description": "Updated Date time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "StreamGovernanceConfig": {
      "description": "Stream governance configuration",
      "properties": {
        "package": {
          "description": "Stream governance configuration",
          "oneOf": [
            {
              "enum": [
                "ESSENTIALS",
                "ADVANCED"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "TopicMetadataEntity": {
      "description": "Metadata of the data record",
      "properties": {
        "resourceName": {
          "description": "Resource name of the record",
          "type": "string"
        },
        "self": {
          "description": "Self lookup url",
          "type": "string"
        }
      },
      "type": "object"
    },
    "TopicProperties": {
      "description": "Topic Properties",
      "properties": {
        "configs": {
          "description": "Config Specification of the topic",
          "oneOf": [
            {
              "$ref": "#/definitions/TopicsRelatedLink"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "inputConfigs": {
          "description": "Input Config Specification of the topic",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/TopicsInputConfig"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "kind": {
          "description": "Type of topic",
          "type": "string"
        },
        "metadata": {
          "description": "Metadata of the record",
          "oneOf": [
            {
              "$ref": "#/definitions/TopicMetadataEntity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "partitions": {
          "description": "Partition Specification of the topic",
          "oneOf": [
            {
              "$ref": "#/definitions/TopicsRelatedLink"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "partitionsCount": {
          "description": "Partition count of the topic",
          "type": "string"
        },
        "partitionsReassignments": {
          "description": "Partition Reassignment Specification of the topic",
          "oneOf": [
            {
              "$ref": "#/definitions/TopicsRelatedLink"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "replicationFactor": {
          "description": "Replication factor of the topic",
          "type": "string"
        },
        "topicId": {
          "description": "Topic Id returned by Confluent",
          "type": "string"
        }
      },
      "type": "object"
    },
    "TopicsInputConfig": {
      "description": "Topics input config",
      "properties": {
        "name": {
          "description": "Name of the topic input config",
          "type": "string"
        },
        "value": {
          "description": "Value of the topic input config",
          "type": "string"
        }
      },
      "type": "object"
    },
    "TopicsRelatedLink": {
      "description": "Partition Config spec of the topic record",
      "properties": {
        "related": {
          "description": "Relationship of the topic",
          "type": "string"
        }
      },
      "type": "object"
    },
    "UserDetail": {
      "description": "Subscriber detail",
      "properties": {
        "aadEmail": {
          "description": "AAD email address",
          "type": "string"
        },
        "emailAddress": {
          "description": "Email address",
          "oneOf": [
            {
              "pattern": "^\\S+@\\S+\\.\\S+$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "firstName": {
          "description": "First name",
          "maxLength": 50,
          "type": "string"
        },
        "lastName": {
          "description": "Last name",
          "maxLength": 50,
          "type": "string"
        },
        "userPrincipalName": {
          "description": "User principal name",
          "type": "string"
        }
      },
      "required": [
        "emailAddress"
      ],
      "type": "object"
    },
    "organizations_environments_childResource": {
      "description": "Microsoft.Confluent/organizations/environments",
      "properties": {
        "apiVersion": {
          "enum": [
            "2024-07-01"
          ],
          "type": "string"
        },
        "kind": {
          "description": "Type of environment",
          "type": "string"
        },
        "name": {
          "description": "Confluent environment id",
          "type": "string"
        },
        "properties": {
          "description": "Environment properties",
          "oneOf": [
            {
              "$ref": "#/definitions/EnvironmentProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "environments"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "organizations_environments_clusters_childResource": {
      "description": "Microsoft.Confluent/organizations/environments/clusters",
      "properties": {
        "apiVersion": {
          "enum": [
            "2024-07-01"
          ],
          "type": "string"
        },
        "kind": {
          "description": "Type of cluster",
          "type": "string"
        },
        "name": {
          "description": "Confluent kafka or schema registry cluster id",
          "type": "string"
        },
        "properties": {
          "description": "Cluster Properties",
          "oneOf": [
            {
              "$ref": "#/definitions/ClusterProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "clusters"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "organizations_environments_clusters_connectors_childResource": {
      "description": "Microsoft.Confluent/organizations/environments/clusters/connectors",
      "properties": {
        "apiVersion": {
          "enum": [
            "2024-07-01"
          ],
          "type": "string"
        },
        "name": {
          "description": "Confluent connector name",
          "type": "string"
        },
        "properties": {
          "description": "The properties of the Connector",
          "oneOf": [
            {
              "$ref": "#/definitions/ConnectorResourceProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "connectors"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "organizations_environments_clusters_topics_childResource": {
      "description": "Microsoft.Confluent/organizations/environments/clusters/topics",
      "properties": {
        "apiVersion": {
          "enum": [
            "2024-07-01"
          ],
          "type": "string"
        },
        "name": {
          "description": "Confluent kafka or schema registry topic name",
          "type": "string"
        },
        "properties": {
          "description": "Topic Properties",
          "oneOf": [
            {
              "$ref": "#/definitions/TopicProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "topics"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    }
  }
}