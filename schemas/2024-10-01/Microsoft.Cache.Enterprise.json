{
  "id": "https://schema.management.azure.com/schemas/2024-10-01/Microsoft.Cache.Enterprise.json#",
  "title": "Microsoft.Cache",
  "description": "Microsoft Cache Resource Types",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "resourceDefinitions": {
    "redisEnterprise": {
      "description": "Microsoft.Cache/redisEnterprise",
      "properties": {
        "apiVersion": {
          "enum": [
            "2024-10-01"
          ],
          "type": "string"
        },
        "identity": {
          "description": "The identity of the resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedServiceIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "location": {
          "description": "The geo-location where the resource lives",
          "type": "string"
        },
        "name": {
          "description": "The name of the Redis Enterprise cluster. Name must be 1-60 characters long. Allowed characters(A-Z, a-z, 0-9) and hyphen(-). There can be no leading nor trailing nor consecutive hyphens",
          "oneOf": [
            {
              "pattern": "^(?=.{1,60}$)[A-Za-z0-9]+(-[A-Za-z0-9]+)*$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Other properties of the cluster.",
          "oneOf": [
            {
              "$ref": "#/definitions/ClusterProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/redisEnterprise_databases_childResource"
              },
              {
                "$ref": "#/definitions/redisEnterprise_privateEndpointConnections_childResource"
              }
            ]
          },
          "type": "array"
        },
        "sku": {
          "description": "The SKU to create, which affects price, performance, and features.",
          "oneOf": [
            {
              "$ref": "#/definitions/Sku"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Resource tags.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.Cache/redisEnterprise"
          ],
          "type": "string"
        },
        "zones": {
          "description": "The Availability Zones where this cluster will be deployed.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "redisEnterprise_databases": {
      "description": "Microsoft.Cache/redisEnterprise/databases",
      "properties": {
        "apiVersion": {
          "enum": [
            "2024-10-01"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the Redis Enterprise database.",
          "oneOf": [
            {
              "pattern": "^(?=.{1,60}$)[A-Za-z0-9]+(-[A-Za-z0-9]+)*$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Other properties of the database.",
          "oneOf": [
            {
              "$ref": "#/definitions/DatabaseProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.Cache/redisEnterprise/databases"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "redisEnterprise_privateEndpointConnections": {
      "description": "Microsoft.Cache/redisEnterprise/privateEndpointConnections",
      "properties": {
        "apiVersion": {
          "enum": [
            "2024-10-01"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the private endpoint connection associated with the Azure resource",
          "type": "string"
        },
        "properties": {
          "description": "Resource properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/PrivateEndpointConnectionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.Cache/redisEnterprise/privateEndpointConnections"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    }
  },
  "definitions": {
    "ClusterProperties": {
      "description": "Properties of RedisEnterprise clusters, as opposed to general resource properties like location, tags",
      "properties": {
        "encryption": {
          "description": "Encryption-at-rest configuration for the cluster.",
          "oneOf": [
            {
              "$ref": "#/definitions/ClusterPropertiesEncryption"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "minimumTlsVersion": {
          "description": "The minimum TLS version for the cluster to support, e.g. '1.2'",
          "oneOf": [
            {
              "enum": [
                "1.0",
                "1.1",
                "1.2"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ClusterPropertiesEncryption": {
      "description": "Encryption-at-rest configuration for the cluster.",
      "properties": {
        "customerManagedKeyEncryption": {
          "description": "All Customer-managed key encryption properties for the resource. Set this to an empty object to use Microsoft-managed key encryption.",
          "oneOf": [
            {
              "$ref": "#/definitions/ClusterPropertiesEncryptionCustomerManagedKeyEncryption"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ClusterPropertiesEncryptionCustomerManagedKeyEncryption": {
      "description": "All Customer-managed key encryption properties for the resource. Set this to an empty object to use Microsoft-managed key encryption.",
      "properties": {
        "keyEncryptionKeyIdentity": {
          "description": "All identity configuration for Customer-managed key settings defining which identity should be used to auth to Key Vault.",
          "oneOf": [
            {
              "$ref": "#/definitions/ClusterPropertiesEncryptionCustomerManagedKeyEncryptionKeyIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "keyEncryptionKeyUrl": {
          "description": "Key encryption key Url, versioned only. Ex: https://contosovault.vault.azure.net/keys/contosokek/562a4bb76b524a1493a6afe8e536ee78",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ClusterPropertiesEncryptionCustomerManagedKeyEncryptionKeyIdentity": {
      "description": "All identity configuration for Customer-managed key settings defining which identity should be used to auth to Key Vault.",
      "properties": {
        "identityType": {
          "description": "Only userAssignedIdentity is supported in this API version; other types may be supported in the future",
          "oneOf": [
            {
              "enum": [
                "systemAssignedIdentity",
                "userAssignedIdentity"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "userAssignedIdentityResourceId": {
          "description": "User assigned identity to use for accessing key encryption key Url. Ex: /subscriptions/<sub uuid>/resourceGroups/<resource group>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myId.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DatabaseProperties": {
      "description": "Properties of RedisEnterprise databases, as opposed to general resource properties like location, tags",
      "properties": {
        "clientProtocol": {
          "description": "Specifies whether redis clients can connect using TLS-encrypted or plaintext redis protocols. Default is TLS-encrypted.",
          "oneOf": [
            {
              "enum": [
                "Encrypted",
                "Plaintext"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "clusteringPolicy": {
          "description": "Clustering policy - default is OSSCluster. Specified at create time.",
          "oneOf": [
            {
              "enum": [
                "EnterpriseCluster",
                "OSSCluster"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "evictionPolicy": {
          "description": "Redis eviction policy - default is VolatileLRU",
          "oneOf": [
            {
              "enum": [
                "AllKeysLFU",
                "AllKeysLRU",
                "AllKeysRandom",
                "VolatileLRU",
                "VolatileLFU",
                "VolatileTTL",
                "VolatileRandom",
                "NoEviction"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "geoReplication": {
          "description": "Optional set of properties to configure geo replication for this database.",
          "oneOf": [
            {
              "$ref": "#/definitions/DatabasePropertiesGeoReplication"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "modules": {
          "description": "Optional set of redis modules to enable in this database - modules can only be added at creation time.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/Module"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "persistence": {
          "description": "Persistence settings",
          "oneOf": [
            {
              "$ref": "#/definitions/Persistence"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "port": {
          "description": "TCP port of the database endpoint. Specified at create time. Defaults to an available port.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "DatabasePropertiesGeoReplication": {
      "description": "Optional set of properties to configure geo replication for this database.",
      "properties": {
        "groupNickname": {
          "description": "Name for the group of linked database resources",
          "type": "string"
        },
        "linkedDatabases": {
          "description": "List of database resources to link with this database",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/LinkedDatabase"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "LinkedDatabase": {
      "description": "Specifies details of a linked database resource.",
      "properties": {
        "id": {
          "description": "Resource ID of a database resource to link with this database.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ManagedServiceIdentity": {
      "description": "Managed service identity (system assigned and/or user assigned identities)",
      "properties": {
        "type": {
          "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
          "oneOf": [
            {
              "enum": [
                "None",
                "SystemAssigned",
                "UserAssigned",
                "SystemAssigned, UserAssigned"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "userAssignedIdentities": {
          "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
          "oneOf": [
            {
              "additionalProperties": {
                "$ref": "#/definitions/UserAssignedIdentity"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "type"
      ],
      "type": "object"
    },
    "Module": {
      "description": "Specifies configuration of a redis module",
      "properties": {
        "args": {
          "description": "Configuration options for the module, e.g. 'ERROR_RATE 0.01 INITIAL_SIZE 400'.",
          "type": "string"
        },
        "name": {
          "description": "The name of the module, e.g. 'RedisBloom', 'RediSearch', 'RedisTimeSeries'",
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "Persistence": {
      "description": "Persistence-related configuration for the RedisEnterprise database",
      "properties": {
        "aofEnabled": {
          "description": "Sets whether AOF is enabled.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "aofFrequency": {
          "description": "Sets the frequency at which data is written to disk.",
          "oneOf": [
            {
              "enum": [
                "1s",
                "always"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "rdbEnabled": {
          "description": "Sets whether RDB is enabled.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "rdbFrequency": {
          "description": "Sets the frequency at which a snapshot of the database is created.",
          "oneOf": [
            {
              "enum": [
                "1h",
                "6h",
                "12h"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "PrivateEndpoint": {
      "description": "The Private Endpoint resource.",
      "properties": {},
      "type": "object"
    },
    "PrivateEndpointConnectionProperties": {
      "description": "Properties of the PrivateEndpointConnectProperties.",
      "properties": {
        "privateEndpoint": {
          "description": "The resource of private end point.",
          "oneOf": [
            {
              "$ref": "#/definitions/PrivateEndpoint"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "privateLinkServiceConnectionState": {
          "description": "A collection of information about the state of the connection between service consumer and provider.",
          "oneOf": [
            {
              "$ref": "#/definitions/PrivateLinkServiceConnectionState"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "privateLinkServiceConnectionState"
      ],
      "type": "object"
    },
    "PrivateLinkServiceConnectionState": {
      "description": "A collection of information about the state of the connection between service consumer and provider.",
      "properties": {
        "actionsRequired": {
          "description": "A message indicating if changes on the service provider require any updates on the consumer.",
          "type": "string"
        },
        "description": {
          "description": "The reason for approval/rejection of the connection.",
          "type": "string"
        },
        "status": {
          "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
          "oneOf": [
            {
              "enum": [
                "Pending",
                "Approved",
                "Rejected"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "Sku": {
      "description": "SKU parameters supplied to the create RedisEnterprise operation.",
      "properties": {
        "capacity": {
          "description": "The size of the RedisEnterprise cluster. Defaults to 2 or 3 depending on SKU. Valid values are (2, 4, 6, ...) for Enterprise SKUs and (3, 9, 15, ...) for Flash SKUs.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "name": {
          "description": "The type of RedisEnterprise cluster to deploy. Possible values: (Enterprise_E10, EnterpriseFlash_F300 etc.)",
          "oneOf": [
            {
              "enum": [
                "Enterprise_E1",
                "Enterprise_E5",
                "Enterprise_E10",
                "Enterprise_E20",
                "Enterprise_E50",
                "Enterprise_E100",
                "Enterprise_E200",
                "Enterprise_E400",
                "EnterpriseFlash_F300",
                "EnterpriseFlash_F700",
                "EnterpriseFlash_F1500"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "UserAssignedIdentity": {
      "description": "User assigned identity properties",
      "properties": {},
      "type": "object"
    },
    "redisEnterprise_databases_childResource": {
      "description": "Microsoft.Cache/redisEnterprise/databases",
      "properties": {
        "apiVersion": {
          "enum": [
            "2024-10-01"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the Redis Enterprise database.",
          "oneOf": [
            {
              "pattern": "^(?=.{1,60}$)[A-Za-z0-9]+(-[A-Za-z0-9]+)*$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Other properties of the database.",
          "oneOf": [
            {
              "$ref": "#/definitions/DatabaseProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "databases"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "redisEnterprise_privateEndpointConnections_childResource": {
      "description": "Microsoft.Cache/redisEnterprise/privateEndpointConnections",
      "properties": {
        "apiVersion": {
          "enum": [
            "2024-10-01"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the private endpoint connection associated with the Azure resource",
          "type": "string"
        },
        "properties": {
          "description": "Resource properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/PrivateEndpointConnectionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "privateEndpointConnections"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    }
  }
}