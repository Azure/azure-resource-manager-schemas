{
  "id": "https://schema.management.azure.com/schemas/2025-05-01-preview/Microsoft.EventHub.json#",
  "title": "Microsoft.EventHub",
  "description": "Microsoft EventHub Resource Types",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "resourceDefinitions": {
    "clusters": {
      "description": "Microsoft.EventHub/clusters",
      "properties": {
        "apiVersion": {
          "enum": [
            "2025-05-01-preview"
          ],
          "type": "string"
        },
        "location": {
          "description": "Resource location.",
          "type": "string"
        },
        "name": {
          "description": "The name of the Event Hubs Cluster.",
          "maxLength": 50,
          "minLength": 6,
          "type": "string"
        },
        "properties": {
          "description": "Event Hubs Cluster properties supplied in responses in List or Get operations.",
          "oneOf": [
            {
              "$ref": "#/definitions/ClusterProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "sku": {
          "description": "Properties of the cluster SKU.",
          "oneOf": [
            {
              "$ref": "#/definitions/ClusterSku"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Resource tags.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.EventHub/clusters"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "namespaces": {
      "description": "Microsoft.EventHub/namespaces",
      "properties": {
        "apiVersion": {
          "enum": [
            "2025-05-01-preview"
          ],
          "type": "string"
        },
        "identity": {
          "description": "Properties of BYOK Identity description",
          "oneOf": [
            {
              "$ref": "#/definitions/Identity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "location": {
          "description": "Resource location.",
          "type": "string"
        },
        "name": {
          "description": "The Namespace name",
          "oneOf": [
            {
              "maxLength": 50,
              "minLength": 6,
              "pattern": "^[a-zA-Z][a-zA-Z0-9-]{6,50}[a-zA-Z0-9]$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Namespace properties supplied for create namespace operation.",
          "oneOf": [
            {
              "$ref": "#/definitions/EHNamespaceProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/namespaces_eventhubs_childResource"
              },
              {
                "$ref": "#/definitions/namespaces_schemagroups_childResource"
              },
              {
                "$ref": "#/definitions/namespaces_networkRuleSets_childResource"
              },
              {
                "$ref": "#/definitions/namespaces_applicationGroups_childResource"
              },
              {
                "$ref": "#/definitions/namespaces_authorizationRules_childResource"
              },
              {
                "$ref": "#/definitions/namespaces_disasterRecoveryConfigs_childResource"
              },
              {
                "$ref": "#/definitions/namespaces_privateEndpointConnections_childResource"
              }
            ]
          },
          "type": "array"
        },
        "sku": {
          "description": "Properties of sku resource",
          "oneOf": [
            {
              "$ref": "#/definitions/Sku"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Resource tags.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.EventHub/namespaces"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "namespaces_applicationGroups": {
      "description": "Microsoft.EventHub/namespaces/applicationGroups",
      "properties": {
        "apiVersion": {
          "enum": [
            "2025-05-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The Application Group name ",
          "maxLength": 256,
          "minLength": 1,
          "type": "string"
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/ApplicationGroupProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.EventHub/namespaces/applicationGroups"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "namespaces_authorizationRules": {
      "description": "Microsoft.EventHub/namespaces/authorizationRules",
      "properties": {
        "apiVersion": {
          "enum": [
            "2025-05-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The authorization rule name.",
          "minLength": 1,
          "type": "string"
        },
        "properties": {
          "description": "Properties supplied to create or update AuthorizationRule",
          "oneOf": [
            {
              "$ref": "#/definitions/AuthorizationRuleProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.EventHub/namespaces/authorizationRules"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "namespaces_disasterRecoveryConfigs": {
      "description": "Microsoft.EventHub/namespaces/disasterRecoveryConfigs",
      "properties": {
        "apiVersion": {
          "enum": [
            "2025-05-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The Disaster Recovery configuration name",
          "maxLength": 50,
          "minLength": 1,
          "type": "string"
        },
        "properties": {
          "description": "Properties required to the Create Or Update Alias(Disaster Recovery configurations)",
          "oneOf": [
            {
              "$ref": "#/definitions/ArmDisasterRecoveryProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.EventHub/namespaces/disasterRecoveryConfigs"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "namespaces_eventhubs": {
      "description": "Microsoft.EventHub/namespaces/eventhubs",
      "properties": {
        "apiVersion": {
          "enum": [
            "2025-05-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The Event Hub name",
          "maxLength": 256,
          "minLength": 1,
          "type": "string"
        },
        "properties": {
          "description": "Properties supplied to the Create Or Update Event Hub operation.",
          "oneOf": [
            {
              "$ref": "#/definitions/EventhubProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/namespaces_eventhubs_consumergroups_childResource"
              },
              {
                "$ref": "#/definitions/namespaces_eventhubs_authorizationRules_childResource"
              }
            ]
          },
          "type": "array"
        },
        "type": {
          "enum": [
            "Microsoft.EventHub/namespaces/eventhubs"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "namespaces_eventhubs_authorizationRules": {
      "description": "Microsoft.EventHub/namespaces/eventhubs/authorizationRules",
      "properties": {
        "apiVersion": {
          "enum": [
            "2025-05-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The authorization rule name.",
          "minLength": 1,
          "type": "string"
        },
        "properties": {
          "description": "Properties supplied to create or update AuthorizationRule",
          "oneOf": [
            {
              "$ref": "#/definitions/AuthorizationRuleProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.EventHub/namespaces/eventhubs/authorizationRules"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "namespaces_eventhubs_consumergroups": {
      "description": "Microsoft.EventHub/namespaces/eventhubs/consumergroups",
      "properties": {
        "apiVersion": {
          "enum": [
            "2025-05-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The consumer group name",
          "maxLength": 50,
          "minLength": 1,
          "type": "string"
        },
        "properties": {
          "description": "Single item in List or Get Consumer group operation",
          "oneOf": [
            {
              "$ref": "#/definitions/ConsumerGroupProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.EventHub/namespaces/eventhubs/consumergroups"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "namespaces_networkRuleSets": {
      "description": "Microsoft.EventHub/namespaces/networkRuleSets",
      "properties": {
        "apiVersion": {
          "enum": [
            "2025-05-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "oneOf": [
            {
              "pattern": "^.*/default$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "NetworkRuleSet properties",
          "oneOf": [
            {
              "$ref": "#/definitions/NetworkRuleSetProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.EventHub/namespaces/networkRuleSets"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "namespaces_privateEndpointConnections": {
      "description": "Microsoft.EventHub/namespaces/privateEndpointConnections",
      "properties": {
        "apiVersion": {
          "enum": [
            "2025-05-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The PrivateEndpointConnection name",
          "type": "string"
        },
        "properties": {
          "description": "Properties of the PrivateEndpointConnection.",
          "oneOf": [
            {
              "$ref": "#/definitions/PrivateEndpointConnectionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.EventHub/namespaces/privateEndpointConnections"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "namespaces_schemagroups": {
      "description": "Microsoft.EventHub/namespaces/schemagroups",
      "properties": {
        "apiVersion": {
          "enum": [
            "2025-05-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The Schema Group name ",
          "maxLength": 256,
          "minLength": 1,
          "type": "string"
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/SchemaGroupProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.EventHub/namespaces/schemagroups"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    }
  },
  "definitions": {
    "ApplicationGroupPolicy": {
      "description": "Properties of the Application Group policy",
      "oneOf": [
        {
          "description": "Properties of the throttling policy",
          "properties": {
            "metricId": {
              "description": "Metric Id on which the throttle limit should be set, MetricId can be discovered by hovering over Metric in the Metrics section of Event Hub Namespace inside Azure Portal",
              "oneOf": [
                {
                  "enum": [
                    "IncomingBytes",
                    "OutgoingBytes",
                    "IncomingMessages",
                    "OutgoingMessages"
                  ],
                  "type": "string"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "rateLimitThreshold": {
              "description": "The Threshold limit above which the application group will be throttled.Rate limit is always per second.",
              "oneOf": [
                {
                  "type": "integer"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "type": {
              "enum": [
                "ThrottlingPolicy"
              ],
              "type": "string"
            }
          },
          "required": [
            "rateLimitThreshold",
            "metricId",
            "type"
          ],
          "type": "object"
        }
      ],
      "properties": {
        "name": {
          "description": "The Name of this policy",
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "ApplicationGroupProperties": {
      "properties": {
        "clientAppGroupIdentifier": {
          "description": "The Unique identifier for application group.Supports SAS(SASKeyName=KeyName) or AAD(AADAppID=Guid)",
          "type": "string"
        },
        "isEnabled": {
          "description": "Determines if Application Group is allowed to create connection with namespace or not. Once the isEnabled is set to false, all the existing connections of application group gets dropped and no new connections will be allowed",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "policies": {
          "description": "List of group policies that define the behavior of application group. The policies can support resource governance scenarios such as limiting ingress or egress traffic.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/ApplicationGroupPolicy"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "clientAppGroupIdentifier"
      ],
      "type": "object"
    },
    "ArmDisasterRecoveryProperties": {
      "description": "Properties required to the Create Or Update Alias(Disaster Recovery configurations)",
      "properties": {
        "alternateName": {
          "description": "Alternate name specified when alias and namespace names are same.",
          "type": "string"
        },
        "partnerNamespace": {
          "description": "ARM Id of the Primary/Secondary eventhub namespace name, which is part of GEO DR pairing",
          "type": "string"
        }
      },
      "type": "object"
    },
    "AuthorizationRuleProperties": {
      "description": "Properties supplied to create or update AuthorizationRule",
      "properties": {
        "rights": {
          "description": "The rights associated with the rule.",
          "oneOf": [
            {
              "items": {
                "enum": [
                  "Manage",
                  "Send",
                  "Listen"
                ],
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "rights"
      ],
      "type": "object"
    },
    "CaptureDescription": {
      "description": "Properties to configure capture description for eventhub",
      "properties": {
        "destination": {
          "description": "Properties of Destination where capture will be stored. (Storage Account, Blob Names)",
          "oneOf": [
            {
              "$ref": "#/definitions/Destination"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "enabled": {
          "description": "A value that indicates whether capture description is enabled. ",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "encoding": {
          "description": "Enumerates the possible values for the encoding format of capture description. Note: 'AvroDeflate' will be deprecated in New API Version",
          "oneOf": [
            {
              "enum": [
                "Avro",
                "AvroDeflate"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "intervalInSeconds": {
          "description": "The time window allows you to set the frequency with which the capture to Azure Blobs will happen, value should between 60 to 900 seconds",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "sizeLimitInBytes": {
          "description": "The size window defines the amount of data built up in your Event Hub before an capture operation, value should be between 10485760 to 524288000 bytes",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "skipEmptyArchives": {
          "description": "A value that indicates whether to Skip Empty Archives",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "CaptureIdentity": {
      "description": "A value that indicates whether capture description is enabled.",
      "properties": {
        "type": {
          "description": "Type of Azure Active Directory Managed Identity.",
          "oneOf": [
            {
              "enum": [
                "SystemAssigned",
                "UserAssigned"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "userAssignedIdentity": {
          "description": "ARM ID of Managed User Identity. This property is required is the type is UserAssignedIdentity. If type is SystemAssigned, then the System Assigned Identity Associated with the namespace will be used.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ClusterProperties": {
      "description": "Event Hubs Cluster properties supplied in responses in List or Get operations.",
      "properties": {
        "platformCapabilities": {
          "oneOf": [
            {
              "$ref": "#/definitions/PlatformCapabilities"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "supportsScaling": {
          "description": "A value that indicates whether Scaling is Supported.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ClusterSku": {
      "description": "SKU parameters particular to a cluster instance.",
      "properties": {
        "capacity": {
          "description": "The quantity of Event Hubs Cluster Capacity Units contained in this cluster.",
          "oneOf": [
            {
              "minimum": 1,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "name": {
          "description": "Name of this SKU.",
          "oneOf": [
            {
              "enum": [
                "Dedicated"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "ConfidentialCompute": {
      "properties": {
        "mode": {
          "description": "Setting to Enable or Disable Confidential Compute",
          "oneOf": [
            {
              "enum": [
                "Disabled",
                "Enabled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ConnectionState": {
      "description": "ConnectionState information.",
      "properties": {
        "description": {
          "description": "Description of the connection state.",
          "type": "string"
        },
        "status": {
          "description": "Status of the connection.",
          "oneOf": [
            {
              "enum": [
                "Pending",
                "Approved",
                "Rejected",
                "Disconnected"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ConsumerGroupProperties": {
      "description": "Single item in List or Get Consumer group operation",
      "properties": {
        "userMetadata": {
          "description": "User Metadata is a placeholder to store user-defined string data with maximum length 1024. e.g. it can be used to store descriptive data, such as list of teams and their contact information also user-defined configuration settings can be stored.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Destination": {
      "description": "Capture storage details for capture description",
      "properties": {
        "identity": {
          "description": "A value that indicates whether capture description is enabled.",
          "oneOf": [
            {
              "$ref": "#/definitions/CaptureIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "name": {
          "description": "Name for capture destination",
          "type": "string"
        },
        "properties": {
          "description": "Properties describing the storage account, blob container and archive name format for capture destination",
          "oneOf": [
            {
              "$ref": "#/definitions/DestinationProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "DestinationProperties": {
      "description": "Properties describing the storage account, blob container and archive name format for capture destination",
      "properties": {
        "archiveNameFormat": {
          "description": "Blob naming convention for archive, e.g. {Namespace}/{EventHub}/{PartitionId}/{Year}/{Month}/{Day}/{Hour}/{Minute}/{Second}. Here all the parameters (Namespace,EventHub .. etc) are mandatory irrespective of order",
          "type": "string"
        },
        "blobContainer": {
          "description": "Blob container Name",
          "type": "string"
        },
        "dataLakeAccountName": {
          "description": "The Azure Data Lake Store name for the captured events",
          "type": "string"
        },
        "dataLakeFolderPath": {
          "description": "The destination folder path for the captured events",
          "type": "string"
        },
        "dataLakeSubscriptionId": {
          "description": "Subscription Id of Azure Data Lake Store",
          "oneOf": [
            {
              "pattern": "^[0-9a-fA-F]{8}(-[0-9a-fA-F]{4}){3}-[0-9a-fA-F]{12}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "storageAccountResourceId": {
          "description": "Resource id of the storage account to be used to create the blobs",
          "type": "string"
        }
      },
      "type": "object"
    },
    "EHNamespaceProperties": {
      "description": "Namespace properties supplied for create namespace operation.",
      "properties": {
        "alternateName": {
          "description": "Alternate name specified when alias and namespace names are same.",
          "type": "string"
        },
        "clusterArmId": {
          "description": "Cluster ARM ID of the Namespace.",
          "type": "string"
        },
        "disableLocalAuth": {
          "description": "This property disables SAS authentication for the Event Hubs namespace.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "encryption": {
          "description": "Properties of BYOK Encryption description",
          "oneOf": [
            {
              "$ref": "#/definitions/Encryption"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "geoDataReplication": {
          "description": "Geo Data Replication settings for the namespace",
          "oneOf": [
            {
              "$ref": "#/definitions/GeoDataReplicationProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "isAutoInflateEnabled": {
          "description": "Value that indicates whether AutoInflate is enabled for eventhub namespace.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "kafkaEnabled": {
          "description": "Value that indicates whether Kafka is enabled for eventhub namespace.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "maximumThroughputUnits": {
          "description": "Upper limit of throughput units when AutoInflate is enabled, value should be within 0 to 20 throughput units. ( '0' if AutoInflateEnabled = true)",
          "oneOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "minimumTlsVersion": {
          "description": "The minimum TLS version for the cluster to support, e.g. '1.2'",
          "oneOf": [
            {
              "enum": [
                "1.0",
                "1.1",
                "1.2",
                "1.3"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "platformCapabilities": {
          "oneOf": [
            {
              "$ref": "#/definitions/PlatformCapabilities"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "privateEndpointConnections": {
          "description": "List of private endpoint connections.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/PrivateEndpointConnection"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "publicNetworkAccess": {
          "description": "This determines if traffic is allowed over public network. By default it is enabled.",
          "oneOf": [
            {
              "enum": [
                "Enabled",
                "Disabled",
                "SecuredByPerimeter"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "zoneRedundant": {
          "description": "Enabling this property creates a Standard Event Hubs Namespace in regions supported availability zones.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "Encryption": {
      "description": "Properties to configure Encryption",
      "properties": {
        "keySource": {
          "description": "Enumerates the possible value of keySource for Encryption",
          "oneOf": [
            {
              "enum": [
                "Microsoft.KeyVault"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "keyVaultProperties": {
          "description": "Properties of KeyVault",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/KeyVaultProperties"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "requireInfrastructureEncryption": {
          "description": "Enable Infrastructure Encryption (Double Encryption)",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "EventhubProperties": {
      "description": "Properties supplied to the Create Or Update Event Hub operation.",
      "properties": {
        "captureDescription": {
          "description": "Properties of capture description",
          "oneOf": [
            {
              "$ref": "#/definitions/CaptureDescription"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "messageRetentionInDays": {
          "description": "Number of days to retain the events for this Event Hub, value should be 1 to 7 days",
          "oneOf": [
            {
              "minimum": 1,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "messageTimestampDescription": {
          "description": "Properties of MessageTimestamp Description",
          "oneOf": [
            {
              "$ref": "#/definitions/MessageTimestampDescription"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "partitionCount": {
          "description": "Number of partitions created for the Event Hub, allowed values are from 1 to 32 partitions.",
          "oneOf": [
            {
              "minimum": 1,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "retentionDescription": {
          "description": "Event Hub retention settings",
          "oneOf": [
            {
              "$ref": "#/definitions/RetentionDescription"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "status": {
          "description": "Enumerates the possible values for the status of the Event Hub.",
          "oneOf": [
            {
              "enum": [
                "Active",
                "Disabled",
                "Restoring",
                "SendDisabled",
                "ReceiveDisabled",
                "Creating",
                "Deleting",
                "Renaming",
                "Unknown"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "userMetadata": {
          "description": "Gets and Sets Metadata of User.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GeoDataReplicationProperties": {
      "description": "GeoDR Replication properties",
      "properties": {
        "locations": {
          "description": "A list of regions where replicas of the namespace are maintained.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/NamespaceReplicaLocation"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "maxReplicationLagDurationInSeconds": {
          "description": "The maximum acceptable lag for data replication operations from the primary replica to a quorum of secondary replicas.  When the lag exceeds the configured amount, operations on the primary replica will be failed. The allowed values are 0 and 5 minutes to 1 day.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "Identity": {
      "description": "Properties to configure Identity for Bring your Own Keys",
      "properties": {
        "type": {
          "description": "Type of managed service identity.",
          "oneOf": [
            {
              "enum": [
                "SystemAssigned",
                "UserAssigned",
                "SystemAssigned, UserAssigned",
                "None"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "userAssignedIdentities": {
          "description": "Properties for User Assigned Identities",
          "oneOf": [
            {
              "additionalProperties": {
                "$ref": "#/definitions/UserAssignedIdentity"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "KeyVaultProperties": {
      "description": "Properties to configure keyVault Properties",
      "properties": {
        "identity": {
          "oneOf": [
            {
              "$ref": "#/definitions/UserAssignedIdentityProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "keyName": {
          "description": "Name of the Key from KeyVault",
          "type": "string"
        },
        "keyVaultUri": {
          "description": "Uri of KeyVault",
          "type": "string"
        },
        "keyVersion": {
          "description": "Key Version",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MessageTimestampDescription": {
      "description": "Properties of MessageTimestamp Description",
      "properties": {
        "timestampType": {
          "description": "Denotes the type of timestamp the message will hold.Two types of timestamp types - \"AppendTime\" and \"CreateTime\". AppendTime refers the time in which message got appended inside broker log. CreateTime refers to the time in which the message was generated on source side and producers can set this timestamp while sending the message. Default value is AppendTime. If you are using AMQP protocol, CreateTime equals AppendTime and its behavior remains the same.",
          "oneOf": [
            {
              "enum": [
                "LogAppend",
                "Create"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "NWRuleSetIpRules": {
      "description": "The response from the List namespace operation.",
      "properties": {
        "action": {
          "description": "The IP Filter Action",
          "oneOf": [
            {
              "enum": [
                "Allow"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "ipMask": {
          "description": "IP Mask",
          "type": "string"
        }
      },
      "type": "object"
    },
    "NWRuleSetVirtualNetworkRules": {
      "description": "The response from the List namespace operation.",
      "properties": {
        "ignoreMissingVnetServiceEndpoint": {
          "description": "Value that indicates whether to ignore missing Vnet Service Endpoint",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "subnet": {
          "description": "Subnet properties",
          "oneOf": [
            {
              "$ref": "#/definitions/Subnet"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "NamespaceReplicaLocation": {
      "description": "Namespace replication properties",
      "properties": {
        "clusterArmId": {
          "description": "Optional property that denotes the ARM ID of the Cluster. This is required, if a namespace replica should be placed in a Dedicated Event Hub Cluster",
          "type": "string"
        },
        "locationName": {
          "description": "Azure regions where a replica of the namespace is maintained",
          "type": "string"
        },
        "roleType": {
          "description": "GeoDR Role Types",
          "oneOf": [
            {
              "enum": [
                "Primary",
                "Secondary"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "NetworkRuleSetProperties": {
      "description": "NetworkRuleSet properties",
      "properties": {
        "defaultAction": {
          "description": "Default Action for Network Rule Set",
          "oneOf": [
            {
              "enum": [
                "Allow",
                "Deny"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "ipRules": {
          "description": "List of IpRules",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/NWRuleSetIpRules"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "publicNetworkAccess": {
          "description": "This determines if traffic is allowed over public network. By default it is enabled. If value is SecuredByPerimeter then Inbound and Outbound communication is controlled by the network security perimeter and profile's access rules. ",
          "oneOf": [
            {
              "enum": [
                "Enabled",
                "Disabled",
                "SecuredByPerimeter"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "trustedServiceAccessEnabled": {
          "description": "Value that indicates whether Trusted Service Access is Enabled or not.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "virtualNetworkRules": {
          "description": "List VirtualNetwork Rules",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/NWRuleSetVirtualNetworkRules"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "PlatformCapabilities": {
      "properties": {
        "confidentialCompute": {
          "oneOf": [
            {
              "$ref": "#/definitions/ConfidentialCompute"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "PrivateEndpoint": {
      "description": "PrivateEndpoint information.",
      "properties": {
        "id": {
          "description": "The ARM identifier for Private Endpoint.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PrivateEndpointConnection": {
      "description": "Properties of the PrivateEndpointConnection.",
      "properties": {
        "properties": {
          "description": "Properties of the PrivateEndpointConnection.",
          "oneOf": [
            {
              "$ref": "#/definitions/PrivateEndpointConnectionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "PrivateEndpointConnectionProperties": {
      "description": "Properties of the private endpoint connection resource.",
      "properties": {
        "privateEndpoint": {
          "description": "The Private Endpoint resource for this Connection.",
          "oneOf": [
            {
              "$ref": "#/definitions/PrivateEndpoint"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "privateLinkServiceConnectionState": {
          "description": "Details about the state of the connection.",
          "oneOf": [
            {
              "$ref": "#/definitions/ConnectionState"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "provisioningState": {
          "description": "Provisioning state of the Private Endpoint Connection.",
          "oneOf": [
            {
              "enum": [
                "Creating",
                "Updating",
                "Deleting",
                "Succeeded",
                "Canceled",
                "Failed"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "RetentionDescription": {
      "description": "Properties to configure retention settings for the  eventhub",
      "properties": {
        "cleanupPolicy": {
          "description": "Enumerates the possible values for cleanup policy",
          "oneOf": [
            {
              "enum": [
                "Delete",
                "Compact",
                "DeleteOrCompact"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "minCompactionLagTimeInMinutes": {
          "description": "The minimum time a message will remain ineligible for compaction in the log. This value is used when cleanupPolicy is Compact or DeleteOrCompact.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "retentionTimeInHours": {
          "description": "Number of hours to retain the events for this Event Hub. This should be positive value upto namespace SKU max. -1 is a special case where retention time is infinite, but the size of an entity is restricted and its size depends on namespace SKU type.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tombstoneRetentionTimeInHours": {
          "description": "Number of hours to retain the tombstone markers of a compacted Event Hub. This value is used when cleanupPolicy is Compact or DeleteOrCompact. Consumer must complete reading the tombstone marker within this specified amount of time if consumer begins from starting offset to ensure they get a valid snapshot for the specific key described by the tombstone marker within the compacted Event Hub",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "SchemaGroupProperties": {
      "properties": {
        "groupProperties": {
          "description": "dictionary object for SchemaGroup group properties",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "schemaCompatibility": {
          "oneOf": [
            {
              "enum": [
                "None",
                "Backward",
                "Forward"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "schemaType": {
          "oneOf": [
            {
              "enum": [
                "Unknown",
                "Avro",
                "ProtoBuf",
                "Json"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "Sku": {
      "description": "SKU parameters supplied to the create namespace operation",
      "properties": {
        "capacity": {
          "description": "The Event Hubs throughput units for Basic or Standard tiers, where value should be 0 to 20 throughput units. The Event Hubs premium units for Premium tier, where value should be 0 to 10 premium units.",
          "oneOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "name": {
          "description": "Name of this SKU.",
          "oneOf": [
            {
              "enum": [
                "Basic",
                "Standard",
                "Premium"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tier": {
          "description": "The billing tier of this particular SKU.",
          "oneOf": [
            {
              "enum": [
                "Basic",
                "Standard",
                "Premium"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "Subnet": {
      "description": "Properties supplied for Subnet",
      "properties": {
        "id": {
          "description": "Resource ID of Virtual Network Subnet",
          "type": "string"
        }
      },
      "type": "object"
    },
    "UserAssignedIdentity": {
      "description": "Recognized Dictionary value.",
      "properties": {},
      "type": "object"
    },
    "UserAssignedIdentityProperties": {
      "properties": {
        "userAssignedIdentity": {
          "description": "ARM ID of user Identity selected for encryption",
          "type": "string"
        }
      },
      "type": "object"
    },
    "namespaces_applicationGroups_childResource": {
      "description": "Microsoft.EventHub/namespaces/applicationGroups",
      "properties": {
        "apiVersion": {
          "enum": [
            "2025-05-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The Application Group name ",
          "maxLength": 256,
          "minLength": 1,
          "type": "string"
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/ApplicationGroupProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "applicationGroups"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "namespaces_authorizationRules_childResource": {
      "description": "Microsoft.EventHub/namespaces/authorizationRules",
      "properties": {
        "apiVersion": {
          "enum": [
            "2025-05-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The authorization rule name.",
          "minLength": 1,
          "type": "string"
        },
        "properties": {
          "description": "Properties supplied to create or update AuthorizationRule",
          "oneOf": [
            {
              "$ref": "#/definitions/AuthorizationRuleProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "authorizationRules"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "namespaces_disasterRecoveryConfigs_childResource": {
      "description": "Microsoft.EventHub/namespaces/disasterRecoveryConfigs",
      "properties": {
        "apiVersion": {
          "enum": [
            "2025-05-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The Disaster Recovery configuration name",
          "maxLength": 50,
          "minLength": 1,
          "type": "string"
        },
        "properties": {
          "description": "Properties required to the Create Or Update Alias(Disaster Recovery configurations)",
          "oneOf": [
            {
              "$ref": "#/definitions/ArmDisasterRecoveryProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "disasterRecoveryConfigs"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "namespaces_eventhubs_authorizationRules_childResource": {
      "description": "Microsoft.EventHub/namespaces/eventhubs/authorizationRules",
      "properties": {
        "apiVersion": {
          "enum": [
            "2025-05-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The authorization rule name.",
          "minLength": 1,
          "type": "string"
        },
        "properties": {
          "description": "Properties supplied to create or update AuthorizationRule",
          "oneOf": [
            {
              "$ref": "#/definitions/AuthorizationRuleProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "authorizationRules"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "namespaces_eventhubs_childResource": {
      "description": "Microsoft.EventHub/namespaces/eventhubs",
      "properties": {
        "apiVersion": {
          "enum": [
            "2025-05-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The Event Hub name",
          "maxLength": 256,
          "minLength": 1,
          "type": "string"
        },
        "properties": {
          "description": "Properties supplied to the Create Or Update Event Hub operation.",
          "oneOf": [
            {
              "$ref": "#/definitions/EventhubProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "eventhubs"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "namespaces_eventhubs_consumergroups_childResource": {
      "description": "Microsoft.EventHub/namespaces/eventhubs/consumergroups",
      "properties": {
        "apiVersion": {
          "enum": [
            "2025-05-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The consumer group name",
          "maxLength": 50,
          "minLength": 1,
          "type": "string"
        },
        "properties": {
          "description": "Single item in List or Get Consumer group operation",
          "oneOf": [
            {
              "$ref": "#/definitions/ConsumerGroupProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "consumergroups"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "namespaces_networkRuleSets_childResource": {
      "description": "Microsoft.EventHub/namespaces/networkRuleSets",
      "properties": {
        "apiVersion": {
          "enum": [
            "2025-05-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "oneOf": [
            {
              "enum": [
                "default"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "NetworkRuleSet properties",
          "oneOf": [
            {
              "$ref": "#/definitions/NetworkRuleSetProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "networkRuleSets"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "namespaces_privateEndpointConnections_childResource": {
      "description": "Microsoft.EventHub/namespaces/privateEndpointConnections",
      "properties": {
        "apiVersion": {
          "enum": [
            "2025-05-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The PrivateEndpointConnection name",
          "type": "string"
        },
        "properties": {
          "description": "Properties of the PrivateEndpointConnection.",
          "oneOf": [
            {
              "$ref": "#/definitions/PrivateEndpointConnectionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "privateEndpointConnections"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "namespaces_schemagroups_childResource": {
      "description": "Microsoft.EventHub/namespaces/schemagroups",
      "properties": {
        "apiVersion": {
          "enum": [
            "2025-05-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The Schema Group name ",
          "maxLength": 256,
          "minLength": 1,
          "type": "string"
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/SchemaGroupProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "schemagroups"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    }
  }
}