{
  "id": "https://schema.management.azure.com/schemas/2025-06-01/Microsoft.AAD.json#",
  "title": "Microsoft.AAD",
  "description": "Microsoft AAD Resource Types",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "resourceDefinitions": {
    "domainServices": {
      "description": "Microsoft.AAD/domainServices",
      "properties": {
        "apiVersion": {
          "enum": [
            "2025-06-01"
          ],
          "type": "string"
        },
        "etag": {
          "description": "Resource etag",
          "type": "string"
        },
        "location": {
          "description": "Resource location",
          "type": "string"
        },
        "name": {
          "description": "The name of the domain service.",
          "oneOf": [
            {
              "pattern": "^(?=.{3,255}$)([a-zA-Z0-9]([a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)(\\.([a-zA-Z0-9]([a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?))*$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Domain service properties",
          "oneOf": [
            {
              "$ref": "#/definitions/DomainServiceProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/domainServices_ouContainer_childResource"
              }
            ]
          },
          "type": "array"
        },
        "tags": {
          "description": "Resource tags",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.AAD/domainServices"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "domainServices_ouContainer": {
      "description": "Microsoft.Aad/domainServices/ouContainer",
      "properties": {
        "accountName": {
          "description": "The account name",
          "type": "string"
        },
        "apiVersion": {
          "enum": [
            "2025-06-01"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the OuContainer.",
          "type": "string"
        },
        "password": {
          "description": "The account password",
          "type": "string"
        },
        "spn": {
          "description": "The account spn",
          "type": "string"
        },
        "type": {
          "enum": [
            "Microsoft.Aad/domainServices/ouContainer"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "apiVersion",
        "type"
      ],
      "type": "object"
    }
  },
  "definitions": {
    "ConfigDiagnostics": {
      "description": "Configuration Diagnostics",
      "properties": {
        "lastExecuted": {
          "description": "Last domain configuration diagnostics DateTime",
          "format": "date-time-rfc1123",
          "type": "string"
        },
        "validatorResults": {
          "description": "List of Configuration Diagnostics validator results.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/ConfigDiagnosticsValidatorResult"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ConfigDiagnosticsValidatorResult": {
      "description": "Config Diagnostics validator result data",
      "properties": {
        "issues": {
          "description": "List of resource config validation issues.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/ConfigDiagnosticsValidatorResultIssue"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "replicaSetSubnetDisplayName": {
          "description": "Replica set location and subnet name",
          "type": "string"
        },
        "status": {
          "description": "Status for individual validator after running diagnostics.",
          "oneOf": [
            {
              "enum": [
                "None",
                "Running",
                "OK",
                "Failure",
                "Warning",
                "Skipped"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "validatorId": {
          "description": "Validator identifier",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ConfigDiagnosticsValidatorResultIssue": {
      "description": "Specific issue for a particular config diagnostics validator",
      "properties": {
        "descriptionParams": {
          "description": "List of domain resource property name or values used to compose a rich description.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "id": {
          "description": "Validation issue identifier.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DomainSecuritySettings": {
      "description": "Domain Security Settings",
      "properties": {
        "channelBinding": {
          "description": "A flag to determine whether or not ChannelBinding is enabled or disabled.",
          "oneOf": [
            {
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "kerberosArmoring": {
          "description": "A flag to determine whether or not KerberosArmoring is enabled or disabled.",
          "oneOf": [
            {
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "kerberosRc4Encryption": {
          "description": "A flag to determine whether or not KerberosRc4Encryption is enabled or disabled.",
          "oneOf": [
            {
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "ldapSigning": {
          "description": "A flag to determine whether or not LdapSigning is enabled or disabled.",
          "oneOf": [
            {
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "ntlmV1": {
          "description": "A flag to determine whether or not NtlmV1 is enabled or disabled.",
          "oneOf": [
            {
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "syncKerberosPasswords": {
          "description": "A flag to determine whether or not SyncKerberosPasswords is enabled or disabled.",
          "oneOf": [
            {
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "syncNtlmPasswords": {
          "description": "A flag to determine whether or not SyncNtlmPasswords is enabled or disabled.",
          "oneOf": [
            {
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "syncOnPremPasswords": {
          "description": "A flag to determine whether or not SyncOnPremPasswords is enabled or disabled.",
          "oneOf": [
            {
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "syncOnPremSamAccountName": {
          "description": "A flag to determine whether the SyncOnPremSamAccountName feature is active. When enabled, the samAccountName attribute in Entra Domain Services is synchronized from the onPremisesSamAccountName attribute in Entra ID",
          "oneOf": [
            {
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tlsV1": {
          "description": "A flag to determine whether or not TlsV1 is enabled or disabled.",
          "oneOf": [
            {
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "DomainServiceProperties": {
      "description": "Properties of the Domain Service.",
      "properties": {
        "configDiagnostics": {
          "description": "Configuration diagnostics data containing latest execution from client.",
          "oneOf": [
            {
              "$ref": "#/definitions/ConfigDiagnostics"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "domainConfigurationType": {
          "description": "Domain Configuration Type",
          "type": "string"
        },
        "domainName": {
          "description": "The name of the Azure domain that the user would like to deploy Domain Services to.",
          "type": "string"
        },
        "domainSecuritySettings": {
          "description": "DomainSecurity Settings",
          "oneOf": [
            {
              "$ref": "#/definitions/DomainSecuritySettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "filteredSync": {
          "description": "Enabled or Disabled flag to turn on Group-based filtered sync",
          "oneOf": [
            {
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "ldapsSettings": {
          "description": "Secure LDAP Settings",
          "oneOf": [
            {
              "$ref": "#/definitions/LdapsSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "notificationSettings": {
          "description": "Notification Settings",
          "oneOf": [
            {
              "$ref": "#/definitions/NotificationSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "replicaSets": {
          "description": "List of ReplicaSets",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/ReplicaSet"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resourceForestSettings": {
          "description": "Resource Forest Settings",
          "oneOf": [
            {
              "$ref": "#/definitions/ResourceForestSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "sku": {
          "description": "Sku Type",
          "type": "string"
        },
        "syncScope": {
          "description": "All or CloudOnly, All users in AAD are synced to AAD DS domain or only users actively syncing in the cloud",
          "oneOf": [
            {
              "enum": [
                "All",
                "CloudOnly"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ForestTrust": {
      "description": "Forest Trust Setting",
      "properties": {
        "friendlyName": {
          "description": "Friendly Name",
          "type": "string"
        },
        "remoteDnsIps": {
          "description": "Remote Dns ips",
          "type": "string"
        },
        "trustDirection": {
          "description": "Trust Direction",
          "type": "string"
        },
        "trustPassword": {
          "description": "Trust Password",
          "type": "string"
        },
        "trustedDomainFqdn": {
          "description": "Trusted Domain FQDN",
          "type": "string"
        }
      },
      "type": "object"
    },
    "LdapsSettings": {
      "description": "Secure LDAP Settings",
      "properties": {
        "externalAccess": {
          "description": "A flag to determine whether or not Secure LDAP access over the internet is enabled or disabled.",
          "oneOf": [
            {
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "ldaps": {
          "description": "A flag to determine whether or not Secure LDAP is enabled or disabled.",
          "oneOf": [
            {
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "pfxCertificate": {
          "description": "The certificate required to configure Secure LDAP. The parameter passed here should be a base64encoded representation of the certificate pfx file.",
          "type": "string"
        },
        "pfxCertificatePassword": {
          "description": "The password to decrypt the provided Secure LDAP certificate pfx file.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "NotificationSettings": {
      "description": "Settings for notification",
      "properties": {
        "additionalRecipients": {
          "description": "The list of additional recipients",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "notifyDcAdmins": {
          "description": "Should domain controller admins be notified",
          "oneOf": [
            {
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "notifyGlobalAdmins": {
          "description": "Should global admins be notified",
          "oneOf": [
            {
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ReplicaSet": {
      "description": "Replica Set Definition",
      "properties": {
        "location": {
          "description": "Virtual network location",
          "type": "string"
        },
        "subnetId": {
          "description": "The name of the virtual network that Domain Services will be deployed on. The id of the subnet that Domain Services will be deployed on. /virtualNetwork/vnetName/subnets/subnetName.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ResourceForestSettings": {
      "description": "Settings for Resource Forest",
      "properties": {
        "resourceForest": {
          "description": "Resource Forest",
          "type": "string"
        },
        "settings": {
          "description": "List of settings for Resource Forest",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/ForestTrust"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "domainServices_ouContainer_childResource": {
      "description": "Microsoft.Aad/domainServices/ouContainer",
      "properties": {
        "accountName": {
          "description": "The account name",
          "type": "string"
        },
        "apiVersion": {
          "enum": [
            "2025-06-01"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the OuContainer.",
          "type": "string"
        },
        "password": {
          "description": "The account password",
          "type": "string"
        },
        "spn": {
          "description": "The account spn",
          "type": "string"
        },
        "type": {
          "enum": [
            "ouContainer"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "apiVersion",
        "type"
      ],
      "type": "object"
    }
  }
}