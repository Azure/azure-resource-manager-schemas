{
  "id": "https://schema.management.azure.com/schemas/2025-07-01-preview/Microsoft.DevCenter.json#",
  "title": "Microsoft.DevCenter",
  "description": "Microsoft DevCenter Resource Types",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "resourceDefinitions": {
    "devcenters": {
      "description": "Microsoft.DevCenter/devcenters",
      "properties": {
        "apiVersion": {
          "enum": [
            "2025-07-01-preview"
          ],
          "type": "string"
        },
        "identity": {
          "description": "Managed identity properties",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedServiceIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "location": {
          "description": "The geo-location where the resource lives",
          "type": "string"
        },
        "name": {
          "description": "The name of the devcenter.",
          "oneOf": [
            {
              "maxLength": 26,
              "minLength": 3,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]{2,25}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "DevCenter properties",
          "oneOf": [
            {
              "$ref": "#/definitions/DevCenterProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/devcenters_catalogs_childResource"
              },
              {
                "$ref": "#/definitions/devcenters_galleries_childResource"
              },
              {
                "$ref": "#/definitions/devcenters_encryptionSets_childResource"
              },
              {
                "$ref": "#/definitions/devcenters_projectPolicies_childResource"
              },
              {
                "$ref": "#/definitions/devcenters_attachednetworks_childResource"
              },
              {
                "$ref": "#/definitions/devcenters_environmentTypes_childResource"
              },
              {
                "$ref": "#/definitions/devcenters_devboxdefinitions_childResource"
              }
            ]
          },
          "type": "array"
        },
        "tags": {
          "description": "Resource tags.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.DevCenter/devcenters"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "devcenters_attachednetworks": {
      "description": "Microsoft.DevCenter/devcenters/attachednetworks",
      "properties": {
        "apiVersion": {
          "enum": [
            "2025-07-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the attached NetworkConnection.",
          "oneOf": [
            {
              "maxLength": 63,
              "minLength": 3,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Attached NetworkConnection properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/AttachedNetworkConnectionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.DevCenter/devcenters/attachednetworks"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "devcenters_catalogs": {
      "description": "Microsoft.DevCenter/devcenters/catalogs",
      "properties": {
        "apiVersion": {
          "enum": [
            "2025-07-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the Catalog.",
          "oneOf": [
            {
              "maxLength": 63,
              "minLength": 3,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Catalog properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/CatalogProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.DevCenter/devcenters/catalogs"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "devcenters_devboxdefinitions": {
      "description": "Microsoft.DevCenter/devcenters/devboxdefinitions",
      "properties": {
        "apiVersion": {
          "enum": [
            "2025-07-01-preview"
          ],
          "type": "string"
        },
        "location": {
          "description": "The geo-location where the resource lives",
          "type": "string"
        },
        "name": {
          "description": "The name of the Dev Box definition.",
          "oneOf": [
            {
              "maxLength": 63,
              "minLength": 3,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Dev Box definition properties",
          "oneOf": [
            {
              "$ref": "#/definitions/DevBoxDefinitionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Resource tags.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.DevCenter/devcenters/devboxdefinitions"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "devcenters_encryptionSets": {
      "description": "Microsoft.DevCenter/devcenters/encryptionSets",
      "properties": {
        "apiVersion": {
          "enum": [
            "2025-07-01-preview"
          ],
          "type": "string"
        },
        "identity": {
          "description": "Managed identity properties",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedServiceIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "location": {
          "description": "The geo-location where the resource lives",
          "type": "string"
        },
        "name": {
          "description": "The name of the devcenter encryption set.",
          "oneOf": [
            {
              "maxLength": 63,
              "minLength": 3,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]{2,25}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Properties of a devcenter encryption set.",
          "oneOf": [
            {
              "$ref": "#/definitions/DevCenterEncryptionSetProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Resource tags.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.DevCenter/devcenters/encryptionSets"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "devcenters_environmentTypes": {
      "description": "Microsoft.DevCenter/devcenters/environmentTypes",
      "properties": {
        "apiVersion": {
          "enum": [
            "2025-07-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the environment type.",
          "oneOf": [
            {
              "maxLength": 63,
              "minLength": 3,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Properties of an environment type.",
          "oneOf": [
            {
              "$ref": "#/definitions/EnvironmentTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Resource tags.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.DevCenter/devcenters/environmentTypes"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "devcenters_galleries": {
      "description": "Microsoft.DevCenter/devcenters/galleries",
      "properties": {
        "apiVersion": {
          "enum": [
            "2025-07-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the gallery.",
          "oneOf": [
            {
              "maxLength": 63,
              "minLength": 3,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Gallery properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/GalleryProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.DevCenter/devcenters/galleries"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "devcenters_projectPolicies": {
      "description": "Microsoft.DevCenter/devcenters/projectPolicies",
      "properties": {
        "apiVersion": {
          "enum": [
            "2025-07-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the project policy.",
          "oneOf": [
            {
              "maxLength": 63,
              "minLength": 3,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Properties of an project policy.",
          "oneOf": [
            {
              "$ref": "#/definitions/ProjectPolicyProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.DevCenter/devcenters/projectPolicies"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "networkConnections": {
      "description": "Microsoft.DevCenter/networkConnections",
      "properties": {
        "apiVersion": {
          "enum": [
            "2025-07-01-preview"
          ],
          "type": "string"
        },
        "location": {
          "description": "The geo-location where the resource lives",
          "type": "string"
        },
        "name": {
          "description": "Name of the Network Connection that can be applied to a Pool.",
          "oneOf": [
            {
              "maxLength": 63,
              "minLength": 3,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Properties of a Network Connection",
          "oneOf": [
            {
              "$ref": "#/definitions/NetworkProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Resource tags.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.DevCenter/networkConnections"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "projects": {
      "description": "Microsoft.DevCenter/projects",
      "properties": {
        "apiVersion": {
          "enum": [
            "2025-07-01-preview"
          ],
          "type": "string"
        },
        "identity": {
          "description": "Managed identity properties",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedServiceIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "location": {
          "description": "The geo-location where the resource lives",
          "type": "string"
        },
        "name": {
          "description": "The name of the project.",
          "oneOf": [
            {
              "maxLength": 63,
              "minLength": 3,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Properties of a project.",
          "oneOf": [
            {
              "$ref": "#/definitions/ProjectProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/projects_pools_childResource"
              },
              {
                "$ref": "#/definitions/projects_catalogs_childResource"
              },
              {
                "$ref": "#/definitions/projects_environmentTypes_childResource"
              }
            ]
          },
          "type": "array"
        },
        "tags": {
          "description": "Resource tags.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.DevCenter/projects"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "projects_catalogs": {
      "description": "Microsoft.DevCenter/projects/catalogs",
      "properties": {
        "apiVersion": {
          "enum": [
            "2025-07-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the Catalog.",
          "oneOf": [
            {
              "maxLength": 63,
              "minLength": 3,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Catalog properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/CatalogProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.DevCenter/projects/catalogs"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "projects_environmentTypes": {
      "description": "Microsoft.DevCenter/projects/environmentTypes",
      "properties": {
        "apiVersion": {
          "enum": [
            "2025-07-01-preview"
          ],
          "type": "string"
        },
        "identity": {
          "description": "Managed identity properties",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedServiceIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "location": {
          "description": "The geo-location for the environment type",
          "type": "string"
        },
        "name": {
          "description": "The name of the environment type.",
          "oneOf": [
            {
              "maxLength": 63,
              "minLength": 3,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Properties of an environment type.",
          "oneOf": [
            {
              "$ref": "#/definitions/ProjectEnvironmentTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Resource tags.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.DevCenter/projects/environmentTypes"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "projects_pools": {
      "description": "Microsoft.DevCenter/projects/pools",
      "properties": {
        "apiVersion": {
          "enum": [
            "2025-07-01-preview"
          ],
          "type": "string"
        },
        "location": {
          "description": "The geo-location where the resource lives",
          "type": "string"
        },
        "name": {
          "description": "Name of the pool.",
          "oneOf": [
            {
              "maxLength": 63,
              "minLength": 3,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Pool properties",
          "oneOf": [
            {
              "$ref": "#/definitions/PoolProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/projects_pools_schedules_childResource"
              }
            ]
          },
          "type": "array"
        },
        "tags": {
          "description": "Resource tags.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.DevCenter/projects/pools"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "projects_pools_schedules": {
      "description": "Microsoft.DevCenter/projects/pools/schedules",
      "properties": {
        "apiVersion": {
          "enum": [
            "2025-07-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the schedule that uniquely identifies it.",
          "oneOf": [
            {
              "maxLength": 100,
              "minLength": 1,
              "pattern": "^[-\\w]+$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Properties of a Schedule resource",
          "oneOf": [
            {
              "$ref": "#/definitions/ScheduleProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.DevCenter/projects/pools/schedules"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    }
  },
  "definitions": {
    "ActiveHoursConfiguration": {
      "description": "Active hours configuration.",
      "properties": {
        "autoStartEnableStatus": {
          "description": "Enables or disables whether the Dev Box should be automatically started at commencement of active hours.",
          "oneOf": [
            {
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "daysOfWeekLimit": {
          "description": "The maximum amount of days per week that a user can enable active hours related features.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "defaultDaysOfWeek": {
          "description": "The days of the week that active hours features will be enabled. This serves as a default that can be updated by each individual user.",
          "oneOf": [
            {
              "items": {
                "enum": [
                  "Monday",
                  "Tuesday",
                  "Wednesday",
                  "Thursday",
                  "Friday",
                  "Saturday",
                  "Sunday"
                ],
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "defaultEndTimeHour": {
          "description": "The default end time of the active hours",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "defaultStartTimeHour": {
          "description": "The default start time of the active hours.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "defaultTimeZone": {
          "description": "The default IANA timezone id of the active hours.",
          "type": "string"
        },
        "keepAwakeEnableStatus": {
          "description": "Enables or disables whether the Dev Box should be kept awake during active hours.",
          "oneOf": [
            {
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "AttachedNetworkConnectionProperties": {
      "description": "Properties of an attached NetworkConnection.",
      "properties": {
        "networkConnectionId": {
          "description": "The resource ID of the NetworkConnection you want to attach.",
          "type": "string"
        }
      },
      "required": [
        "networkConnectionId"
      ],
      "type": "object"
    },
    "AzureAiServicesSettings": {
      "description": "Configures Azure AI related services for the project.",
      "properties": {
        "azureAiServicesMode": {
          "description": "The property indicates whether Azure AI services is enabled.",
          "oneOf": [
            {
              "enum": [
                "Disabled",
                "AutoDeploy"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "CatalogProperties": {
      "description": "Properties of a catalog.",
      "properties": {
        "adoGit": {
          "description": "Properties for an Azure DevOps catalog type.",
          "oneOf": [
            {
              "$ref": "#/definitions/GitCatalog"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "gitHub": {
          "description": "Properties for a GitHub catalog type.",
          "oneOf": [
            {
              "$ref": "#/definitions/GitCatalog"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "syncType": {
          "description": "Indicates the type of sync that is configured for the catalog.",
          "oneOf": [
            {
              "enum": [
                "Manual",
                "Scheduled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Resource tags.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "CustomerManagedKeyEncryption": {
      "description": "All Customer-managed key encryption properties for the resource.",
      "properties": {
        "keyEncryptionKeyIdentity": {
          "description": "All identity configuration for Customer-managed key settings defining which identity should be used to auth to Key Vault.",
          "oneOf": [
            {
              "$ref": "#/definitions/CustomerManagedKeyEncryptionKeyIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "keyEncryptionKeyUrl": {
          "description": "key encryption key Url, versioned or non-versioned. Ex: https://contosovault.vault.azure.net/keys/contosokek/562a4bb76b524a1493a6afe8e536ee78 or https://contosovault.vault.azure.net/keys/contosokek.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CustomerManagedKeyEncryptionKeyIdentity": {
      "description": "All identity configuration for Customer-managed key settings defining which identity should be used to auth to Key Vault.",
      "properties": {
        "delegatedIdentityClientId": {
          "description": "delegated identity to use for accessing key encryption key Url. Ex: /subscriptions/fa5fc227-a624-475e-b696-cdd604c735bc/resourceGroups/<resource group>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myId. Mutually exclusive with identityType systemAssignedIdentity and userAssignedIdentity - internal use only.",
          "oneOf": [
            {
              "pattern": "^[0-9a-fA-F]{8}(-[0-9a-fA-F]{4}){3}-[0-9a-fA-F]{12}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "identityType": {
          "description": "Values can be systemAssignedIdentity or userAssignedIdentity",
          "oneOf": [
            {
              "enum": [
                "systemAssignedIdentity",
                "userAssignedIdentity",
                "delegatedResourceIdentity"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "userAssignedIdentityResourceId": {
          "description": "user assigned identity to use for accessing key encryption key Url. Ex: /subscriptions/fa5fc227-a624-475e-b696-cdd604c735bc/resourceGroups/<resource group>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myId. Mutually exclusive with identityType systemAssignedIdentity and delegatedResourceIdentity.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DevBoxAutoDeleteSettings": {
      "description": "Settings controlling the auto deletion of inactive dev boxes.",
      "properties": {
        "deleteMode": {
          "description": "Indicates the delete mode for Dev Boxes within this project.",
          "oneOf": [
            {
              "enum": [
                "Manual",
                "Auto"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "gracePeriod": {
          "description": "ISO8601 duration required for the dev box to be marked for deletion prior to it being deleted. ISO8601 format PT[n]H[n]M[n]S.",
          "type": "string"
        },
        "inactiveThreshold": {
          "description": "ISO8601 duration required for the dev box to not be inactive prior to it being scheduled for deletion.  ISO8601 format PT[n]H[n]M[n]S.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DevBoxDefinitionProperties": {
      "description": "Properties of a Dev Box definition.",
      "properties": {
        "hibernateSupport": {
          "description": "Indicates whether Dev Boxes created with this definition are capable of hibernation. Not all images are capable of supporting hibernation. To find out more see https://aka.ms/devbox/hibernate",
          "oneOf": [
            {
              "enum": [
                "Disabled",
                "Enabled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "imageReference": {
          "description": "Image reference information.",
          "oneOf": [
            {
              "$ref": "#/definitions/ImageReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "osStorageType": {
          "description": "The storage type used for the Operating System disk of Dev Boxes created using this definition.",
          "type": "string"
        },
        "sku": {
          "description": "The SKU for Dev Boxes created using this definition.",
          "oneOf": [
            {
              "$ref": "#/definitions/Sku"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "DevBoxProvisioningSettings": {
      "description": "Provisioning settings that apply to all Dev Boxes created in this dev center",
      "properties": {
        "installAzureMonitorAgentEnableStatus": {
          "description": "Whether project catalogs associated with projects in this dev center can be configured to sync catalog items.",
          "oneOf": [
            {
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "DevCenterEncryptionSetProperties": {
      "description": "Properties of the devcenter encryption set.",
      "properties": {
        "devboxDisksEncryptionEnableStatus": {
          "description": "Devbox disk encryption enable or disable status. Indicates if Devbox disks encryption using DevCenter CMK is enabled or not.",
          "oneOf": [
            {
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "keyEncryptionKeyIdentity": {
          "description": "The managed identity configuration used for key vault access.",
          "oneOf": [
            {
              "$ref": "#/definitions/DevCenterEncryptionSetUpdatePropertiesKeyEncryptionKeyIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "keyEncryptionKeyUrl": {
          "description": "Key encryption key Url, versioned or non-versioned. Ex: https://contosovault.vault.azure.net/keys/contosokek/562a4bb76b524a1493a6afe8e536ee78 or https://contosovault.vault.azure.net/keys/contosokek.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DevCenterEncryptionSetUpdatePropertiesKeyEncryptionKeyIdentity": {
      "description": "The managed identity configuration used for key vault access.",
      "properties": {
        "type": {
          "description": "The type of managed identity to use for key vault access.",
          "oneOf": [
            {
              "enum": [
                "SystemAssigned",
                "UserAssigned"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "userAssignedIdentityResourceId": {
          "description": "For system assigned identity, this will be null. For user assigned identity, this should be the resource ID of the identity.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DevCenterNetworkSettings": {
      "description": "Network settings for the Dev Center.",
      "properties": {
        "microsoftHostedNetworkEnableStatus": {
          "description": "Indicates whether pools in this Dev Center can use Microsoft Hosted Networks. Defaults to Enabled if not set.",
          "oneOf": [
            {
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "DevCenterProjectCatalogSettings": {
      "description": "Project catalog settings for project catalogs under a project associated to this dev center.",
      "properties": {
        "catalogItemSyncEnableStatus": {
          "description": "Whether project catalogs associated with projects in this dev center can be configured to sync catalog items.",
          "oneOf": [
            {
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "DevCenterProperties": {
      "description": "Properties of the devcenter.",
      "properties": {
        "devBoxProvisioningSettings": {
          "description": "Settings to be used in the provisioning of all Dev Boxes that belong to this dev center.",
          "oneOf": [
            {
              "$ref": "#/definitions/DevBoxProvisioningSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "displayName": {
          "description": "The display name of the devcenter.",
          "type": "string"
        },
        "encryption": {
          "description": "Encryption settings to be used for server-side encryption for proprietary content (such as catalogs, logs, customizations).",
          "oneOf": [
            {
              "$ref": "#/definitions/Encryption"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "networkSettings": {
          "description": "Network settings that will be enforced on network resources associated with the Dev Center.",
          "oneOf": [
            {
              "$ref": "#/definitions/DevCenterNetworkSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "projectCatalogSettings": {
          "description": "Dev Center settings to be used when associating a project with a catalog.",
          "oneOf": [
            {
              "$ref": "#/definitions/DevCenterProjectCatalogSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "Encryption": {
      "properties": {
        "customerManagedKeyEncryption": {
          "description": "All Customer-managed key encryption properties for the resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/CustomerManagedKeyEncryption"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "EnvironmentRole": {
      "description": "A role that can be assigned to a user.",
      "properties": {},
      "type": "object"
    },
    "EnvironmentTypeProperties": {
      "description": "Properties of an environment type.",
      "properties": {
        "displayName": {
          "description": "The display name of the environment type.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GalleryProperties": {
      "description": "Properties of a gallery.",
      "properties": {
        "galleryResourceId": {
          "description": "The resource ID of the backing Azure Compute Gallery.",
          "type": "string"
        }
      },
      "required": [
        "galleryResourceId"
      ],
      "type": "object"
    },
    "GitCatalog": {
      "description": "Properties for a Git repository catalog.",
      "properties": {
        "branch": {
          "description": "Git branch.",
          "type": "string"
        },
        "path": {
          "description": "The folder where the catalog items can be found inside the repository.",
          "type": "string"
        },
        "secretIdentifier": {
          "description": "A reference to the Key Vault secret containing a security token to authenticate to a Git repository.",
          "type": "string"
        },
        "uri": {
          "description": "Git URI.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ImageReference": {
      "description": "Image reference information",
      "properties": {
        "id": {
          "description": "Image ID, or Image version ID. When Image ID is provided, its latest version will be used.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ManagedServiceIdentity": {
      "description": "Managed service identity (system assigned and/or user assigned identities)",
      "properties": {
        "type": {
          "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
          "oneOf": [
            {
              "enum": [
                "None",
                "SystemAssigned",
                "UserAssigned",
                "SystemAssigned, UserAssigned"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "userAssignedIdentities": {
          "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
          "oneOf": [
            {
              "additionalProperties": {
                "$ref": "#/definitions/UserAssignedIdentity"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "type"
      ],
      "type": "object"
    },
    "NetworkProperties": {
      "description": "Network properties",
      "properties": {
        "domainJoinType": {
          "description": "AAD Join type.",
          "oneOf": [
            {
              "enum": [
                "HybridAzureADJoin",
                "AzureADJoin",
                "None"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "domainName": {
          "description": "Active Directory domain name",
          "type": "string"
        },
        "domainPassword": {
          "description": "The password for the account used to join domain",
          "type": "string"
        },
        "domainUsername": {
          "description": "The username of an Active Directory account (user or service account) that has permissions to create computer objects in Active Directory. Required format: admin@contoso.com.",
          "type": "string"
        },
        "networkingResourceGroupName": {
          "description": "The name for resource group where NICs will be placed.",
          "type": "string"
        },
        "organizationUnit": {
          "description": "Active Directory domain Organization Unit (OU)",
          "type": "string"
        },
        "subnetId": {
          "description": "The subnet to attach Virtual Machines to",
          "type": "string"
        }
      },
      "required": [
        "domainJoinType"
      ],
      "type": "object"
    },
    "PoolDevBoxDefinition": {
      "description": "Represents a definition for a Developer Machine.",
      "properties": {
        "imageReference": {
          "description": "Image reference information.",
          "oneOf": [
            {
              "$ref": "#/definitions/ImageReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "sku": {
          "description": "The SKU for Dev Boxes created from the Pool.",
          "oneOf": [
            {
              "$ref": "#/definitions/Sku"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "PoolProperties": {
      "description": "Properties of a Pool",
      "properties": {
        "activeHoursConfiguration": {
          "description": "Active hours configuration settings for Dev Boxes created in this pool.",
          "oneOf": [
            {
              "$ref": "#/definitions/ActiveHoursConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "devBoxDefinition": {
          "description": "A definition of the machines that are created from this Pool. Will be ignored if devBoxDefinitionType is Reference or not provided.",
          "oneOf": [
            {
              "$ref": "#/definitions/PoolDevBoxDefinition"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "devBoxDefinitionName": {
          "description": "Name of a Dev Box definition in parent Project of this Pool. Will be ignored if devBoxDefinitionType is Value.",
          "type": "string"
        },
        "devBoxDefinitionType": {
          "description": "Indicates if the pool is created from an existing Dev Box Definition or if one is provided directly.",
          "oneOf": [
            {
              "enum": [
                "Reference",
                "Value"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "devBoxTunnelEnableStatus": {
          "description": "Indicates whether Dev Box Tunnel is enabled for a the pool.",
          "oneOf": [
            {
              "enum": [
                "Disabled",
                "Enabled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "displayName": {
          "description": "The display name of the pool.",
          "type": "string"
        },
        "licenseType": {
          "description": "Specifies the license type indicating the caller has already acquired licenses for the Dev Boxes that will be created.",
          "oneOf": [
            {
              "enum": [
                "Windows_Client"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "localAdministrator": {
          "description": "Indicates whether owners of Dev Boxes in this pool are added as local administrators on the Dev Box.",
          "oneOf": [
            {
              "enum": [
                "Disabled",
                "Enabled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "managedVirtualNetworkRegions": {
          "description": "The regions of the managed virtual network (required when managedNetworkType is Managed).",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "networkConnectionName": {
          "description": "Name of a Network Connection in parent Project of this Pool",
          "type": "string"
        },
        "singleSignOnStatus": {
          "description": "Indicates whether Dev Boxes in this pool are created with single sign on enabled. The also requires that single sign on be enabled on the tenant.",
          "oneOf": [
            {
              "enum": [
                "Disabled",
                "Enabled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "stopOnDisconnect": {
          "description": "Stop on disconnect configuration settings for Dev Boxes created in this pool.",
          "oneOf": [
            {
              "$ref": "#/definitions/StopOnDisconnectConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "stopOnNoConnect": {
          "description": "Stop on no connect configuration settings for Dev Boxes created in this pool.",
          "oneOf": [
            {
              "$ref": "#/definitions/StopOnNoConnectConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "virtualNetworkType": {
          "description": "Indicates whether the pool uses a Virtual Network managed by Microsoft or a customer provided network.",
          "oneOf": [
            {
              "enum": [
                "Managed",
                "Unmanaged"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ProjectCatalogSettings": {
      "description": "Settings to be used when associating a project with a catalog.",
      "properties": {
        "catalogItemSyncTypes": {
          "description": "Indicates catalog item types that can be synced.",
          "oneOf": [
            {
              "items": {
                "enum": [
                  "EnvironmentDefinition",
                  "ImageDefinition"
                ],
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ProjectCustomizationManagedIdentity": {
      "description": "A reference to a Managed Identity that is attached to the Project.",
      "properties": {
        "identityResourceId": {
          "description": "Ex: /subscriptions/fa5fc227-a624-475e-b696-cdd604c735bc/resourceGroups/<resource group>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myId. Mutually exclusive with identityType systemAssignedIdentity.",
          "type": "string"
        },
        "identityType": {
          "description": "Values can be systemAssignedIdentity or userAssignedIdentity",
          "oneOf": [
            {
              "enum": [
                "systemAssignedIdentity",
                "userAssignedIdentity"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ProjectCustomizationSettings": {
      "description": "Settings to be used for customizations.",
      "properties": {
        "identities": {
          "description": "The identities that can to be used in customization scenarios; e.g., to clone a repository.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/ProjectCustomizationManagedIdentity"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "userCustomizationsEnableStatus": {
          "description": "Indicates whether user customizations are enabled.",
          "oneOf": [
            {
              "enum": [
                "Disabled",
                "Enabled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ProjectEnvironmentTypeProperties": {
      "description": "Properties of a project environment type.",
      "properties": {
        "creatorRoleAssignment": {
          "description": "The role definition assigned to the environment creator on backing resources.",
          "oneOf": [
            {
              "$ref": "#/definitions/ProjectEnvironmentTypeUpdatePropertiesCreatorRoleAssignment"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "deploymentTargetId": {
          "description": "Id of a subscription that the environment type will be mapped to. The environment's resources will be deployed into this subscription.",
          "type": "string"
        },
        "displayName": {
          "description": "The display name of the project environment type.",
          "type": "string"
        },
        "status": {
          "description": "Defines whether this Environment Type can be used in this Project.",
          "oneOf": [
            {
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "userRoleAssignments": {
          "description": "Role Assignments created on environment backing resources. This is a mapping from a user object ID to an object of role definition IDs.",
          "oneOf": [
            {
              "additionalProperties": {
                "$ref": "#/definitions/UserRoleAssignmentValue"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ProjectEnvironmentTypeUpdatePropertiesCreatorRoleAssignment": {
      "description": "The role definition assigned to the environment creator on backing resources.",
      "properties": {
        "roles": {
          "description": "A map of roles to assign to the environment creator.",
          "oneOf": [
            {
              "additionalProperties": {
                "$ref": "#/definitions/EnvironmentRole"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ProjectPolicyProperties": {
      "description": "Properties of an project policy.",
      "properties": {
        "resourcePolicies": {
          "description": "Resource policies that are a part of this project policy.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/ResourcePolicy"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "scopes": {
          "description": "Resources that have access to the shared resources that are a part of this project policy.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ProjectProperties": {
      "description": "Properties of a project.",
      "properties": {
        "azureAiServicesSettings": {
          "description": "Indicates whether Azure AI services are enabled for a project.",
          "oneOf": [
            {
              "$ref": "#/definitions/AzureAiServicesSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "catalogSettings": {
          "description": "Settings to be used when associating a project with a catalog.",
          "oneOf": [
            {
              "$ref": "#/definitions/ProjectCatalogSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "customizationSettings": {
          "description": "Settings to be used for customizations.",
          "oneOf": [
            {
              "$ref": "#/definitions/ProjectCustomizationSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "description": {
          "description": "Description of the project.",
          "type": "string"
        },
        "devBoxAutoDeleteSettings": {
          "description": "Dev Box Auto Delete settings.",
          "oneOf": [
            {
              "$ref": "#/definitions/DevBoxAutoDeleteSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "devCenterId": {
          "description": "Resource Id of an associated DevCenter",
          "type": "string"
        },
        "displayName": {
          "description": "The display name of the project.",
          "type": "string"
        },
        "maxDevBoxesPerUser": {
          "description": "When specified, limits the maximum number of Dev Boxes a single user can create across all pools in the project. This will have no effect on existing Dev Boxes when reduced.",
          "oneOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "serverlessGpuSessionsSettings": {
          "description": "Settings to be used for serverless GPU.",
          "oneOf": [
            {
              "$ref": "#/definitions/ServerlessGpuSessionsSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "workspaceStorageSettings": {
          "description": "Settings to be used for workspace storage.",
          "oneOf": [
            {
              "$ref": "#/definitions/WorkspaceStorageSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ResourcePolicy": {
      "description": "A resource policy.",
      "properties": {
        "action": {
          "description": "Policy action to be taken on the resources. This is optional, and defaults to allow",
          "oneOf": [
            {
              "enum": [
                "Allow",
                "Deny"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "filter": {
          "description": "Optional. When specified, this expression is used to filter the resources.",
          "type": "string"
        },
        "resourceType": {
          "description": "Optional. The resource type being restricted or allowed by a project policy. Used with a given action to restrict or allow access to a resource type.",
          "oneOf": [
            {
              "enum": [
                "Images",
                "AttachedNetworks",
                "Skus"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "description": "Resources that are included and shared as a part of a project policy.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ScheduleProperties": {
      "description": "The Schedule properties defining when and what to execute.",
      "properties": {
        "frequency": {
          "description": "The frequency of this scheduled task.",
          "oneOf": [
            {
              "enum": [
                "Daily"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "location": {
          "description": "The geo-location where the resource lives",
          "type": "string"
        },
        "state": {
          "description": "Indicates whether or not this scheduled task is enabled.",
          "oneOf": [
            {
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Resource tags.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "time": {
          "description": "The target time to trigger the action. The format is HH:MM.",
          "type": "string"
        },
        "timeZone": {
          "description": "The IANA timezone id at which the schedule should execute.",
          "type": "string"
        },
        "type": {
          "description": "Supported type this scheduled task represents.",
          "oneOf": [
            {
              "enum": [
                "StopDevBox"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ServerlessGpuSessionsSettings": {
      "description": "Represents settings for serverless GPU access.",
      "properties": {
        "maxConcurrentSessionsPerProject": {
          "description": "When specified, limits the maximum number of concurrent sessions across all pools in the project.",
          "oneOf": [
            {
              "minimum": 1,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "serverlessGpuSessionsMode": {
          "description": "The property indicates whether serverless GPU access is enabled on the project.",
          "oneOf": [
            {
              "enum": [
                "Disabled",
                "AutoDeploy"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "Sku": {
      "description": "The resource model definition representing SKU",
      "properties": {
        "capacity": {
          "description": "If the SKU supports scale out/in then the capacity integer should be included. If scale out/in is not possible for the resource this may be omitted.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "family": {
          "description": "If the service has different generations of hardware, for the same SKU, then that can be captured here.",
          "type": "string"
        },
        "name": {
          "description": "The name of the SKU. E.g. P3. It is typically a letter+number code",
          "type": "string"
        },
        "size": {
          "description": "The SKU size. When the name field is the combination of tier and some other value, this would be the standalone code. ",
          "type": "string"
        },
        "tier": {
          "description": "This field is required to be implemented by the Resource Provider if the service has more than one tier, but is not required on a PUT.",
          "oneOf": [
            {
              "enum": [
                "Free",
                "Basic",
                "Standard",
                "Premium"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "StopOnDisconnectConfiguration": {
      "description": "Stop on disconnect configuration settings for Dev Boxes created in this pool.",
      "properties": {
        "gracePeriodMinutes": {
          "description": "The specified time in minutes to wait before stopping a Dev Box once disconnect is detected.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "status": {
          "description": "Whether the feature to stop the Dev Box on disconnect once the grace period has lapsed is enabled.",
          "oneOf": [
            {
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "StopOnNoConnectConfiguration": {
      "description": "Stop on no connect configuration settings for Dev Boxes created in this pool.",
      "properties": {
        "gracePeriodMinutes": {
          "description": "The specified time in minutes to wait before stopping a Dev Box if no connection is made.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "status": {
          "description": "Enables the feature to stop a started Dev Box when it has not been connected to, once the grace period has lapsed.",
          "oneOf": [
            {
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "UserAssignedIdentity": {
      "description": "User assigned identity properties",
      "properties": {},
      "type": "object"
    },
    "UserRoleAssignmentValue": {
      "description": "Mapping of user object ID to role assignments.",
      "properties": {
        "roles": {
          "description": "A map of roles to assign to the parent user.",
          "oneOf": [
            {
              "additionalProperties": {
                "$ref": "#/definitions/EnvironmentRole"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "WorkspaceStorageSettings": {
      "description": "Settings to be used for workspace storage.",
      "properties": {
        "workspaceStorageMode": {
          "description": "Indicates whether workspace storage is enabled.",
          "oneOf": [
            {
              "enum": [
                "Disabled",
                "AutoDeploy"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "devcenters_attachednetworks_childResource": {
      "description": "Microsoft.DevCenter/devcenters/attachednetworks",
      "properties": {
        "apiVersion": {
          "enum": [
            "2025-07-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the attached NetworkConnection.",
          "oneOf": [
            {
              "maxLength": 63,
              "minLength": 3,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Attached NetworkConnection properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/AttachedNetworkConnectionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "attachednetworks"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "devcenters_catalogs_childResource": {
      "description": "Microsoft.DevCenter/devcenters/catalogs",
      "properties": {
        "apiVersion": {
          "enum": [
            "2025-07-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the Catalog.",
          "oneOf": [
            {
              "maxLength": 63,
              "minLength": 3,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Catalog properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/CatalogProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "catalogs"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "devcenters_devboxdefinitions_childResource": {
      "description": "Microsoft.DevCenter/devcenters/devboxdefinitions",
      "properties": {
        "apiVersion": {
          "enum": [
            "2025-07-01-preview"
          ],
          "type": "string"
        },
        "location": {
          "description": "The geo-location where the resource lives",
          "type": "string"
        },
        "name": {
          "description": "The name of the Dev Box definition.",
          "oneOf": [
            {
              "maxLength": 63,
              "minLength": 3,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Dev Box definition properties",
          "oneOf": [
            {
              "$ref": "#/definitions/DevBoxDefinitionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Resource tags.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "devboxdefinitions"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "devcenters_encryptionSets_childResource": {
      "description": "Microsoft.DevCenter/devcenters/encryptionSets",
      "properties": {
        "apiVersion": {
          "enum": [
            "2025-07-01-preview"
          ],
          "type": "string"
        },
        "identity": {
          "description": "Managed identity properties",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedServiceIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "location": {
          "description": "The geo-location where the resource lives",
          "type": "string"
        },
        "name": {
          "description": "The name of the devcenter encryption set.",
          "oneOf": [
            {
              "maxLength": 63,
              "minLength": 3,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]{2,25}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Properties of a devcenter encryption set.",
          "oneOf": [
            {
              "$ref": "#/definitions/DevCenterEncryptionSetProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Resource tags.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "encryptionSets"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "devcenters_environmentTypes_childResource": {
      "description": "Microsoft.DevCenter/devcenters/environmentTypes",
      "properties": {
        "apiVersion": {
          "enum": [
            "2025-07-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the environment type.",
          "oneOf": [
            {
              "maxLength": 63,
              "minLength": 3,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Properties of an environment type.",
          "oneOf": [
            {
              "$ref": "#/definitions/EnvironmentTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Resource tags.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "environmentTypes"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "devcenters_galleries_childResource": {
      "description": "Microsoft.DevCenter/devcenters/galleries",
      "properties": {
        "apiVersion": {
          "enum": [
            "2025-07-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the gallery.",
          "oneOf": [
            {
              "maxLength": 63,
              "minLength": 3,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Gallery properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/GalleryProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "galleries"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "devcenters_projectPolicies_childResource": {
      "description": "Microsoft.DevCenter/devcenters/projectPolicies",
      "properties": {
        "apiVersion": {
          "enum": [
            "2025-07-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the project policy.",
          "oneOf": [
            {
              "maxLength": 63,
              "minLength": 3,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Properties of an project policy.",
          "oneOf": [
            {
              "$ref": "#/definitions/ProjectPolicyProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "projectPolicies"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "projects_catalogs_childResource": {
      "description": "Microsoft.DevCenter/projects/catalogs",
      "properties": {
        "apiVersion": {
          "enum": [
            "2025-07-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the Catalog.",
          "oneOf": [
            {
              "maxLength": 63,
              "minLength": 3,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Catalog properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/CatalogProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "catalogs"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "projects_environmentTypes_childResource": {
      "description": "Microsoft.DevCenter/projects/environmentTypes",
      "properties": {
        "apiVersion": {
          "enum": [
            "2025-07-01-preview"
          ],
          "type": "string"
        },
        "identity": {
          "description": "Managed identity properties",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedServiceIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "location": {
          "description": "The geo-location for the environment type",
          "type": "string"
        },
        "name": {
          "description": "The name of the environment type.",
          "oneOf": [
            {
              "maxLength": 63,
              "minLength": 3,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Properties of an environment type.",
          "oneOf": [
            {
              "$ref": "#/definitions/ProjectEnvironmentTypeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Resource tags.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "environmentTypes"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "projects_pools_childResource": {
      "description": "Microsoft.DevCenter/projects/pools",
      "properties": {
        "apiVersion": {
          "enum": [
            "2025-07-01-preview"
          ],
          "type": "string"
        },
        "location": {
          "description": "The geo-location where the resource lives",
          "type": "string"
        },
        "name": {
          "description": "Name of the pool.",
          "oneOf": [
            {
              "maxLength": 63,
              "minLength": 3,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_.]{2,62}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Pool properties",
          "oneOf": [
            {
              "$ref": "#/definitions/PoolProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Resource tags.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "pools"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "projects_pools_schedules_childResource": {
      "description": "Microsoft.DevCenter/projects/pools/schedules",
      "properties": {
        "apiVersion": {
          "enum": [
            "2025-07-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the schedule that uniquely identifies it.",
          "oneOf": [
            {
              "maxLength": 100,
              "minLength": 1,
              "pattern": "^[-\\w]+$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Properties of a Schedule resource",
          "oneOf": [
            {
              "$ref": "#/definitions/ScheduleProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "schedules"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    }
  }
}