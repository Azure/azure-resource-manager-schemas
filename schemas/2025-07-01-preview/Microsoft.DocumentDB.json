{
  "id": "https://schema.management.azure.com/schemas/2025-07-01-preview/Microsoft.DocumentDB.json#",
  "title": "Microsoft.DocumentDB",
  "description": "Microsoft DocumentDB Resource Types",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "resourceDefinitions": {
    "mongoClusters": {
      "description": "Microsoft.DocumentDB/mongoClusters",
      "properties": {
        "apiVersion": {
          "enum": [
            "2025-07-01-preview"
          ],
          "type": "string"
        },
        "identity": {
          "description": "The managed service identities assigned to this resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedServiceIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "location": {
          "description": "The geo-location where the resource lives",
          "type": "string"
        },
        "name": {
          "description": "The name of the mongo cluster.",
          "oneOf": [
            {
              "maxLength": 40,
              "minLength": 3,
              "pattern": "^[a-z0-9]+(-[a-z0-9]+)*",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/MongoClusterProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/mongoClusters_users_childResource"
              },
              {
                "$ref": "#/definitions/mongoClusters_firewallRules_childResource"
              },
              {
                "$ref": "#/definitions/mongoClusters_privateEndpointConnections_childResource"
              }
            ]
          },
          "type": "array"
        },
        "tags": {
          "description": "Resource tags.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.DocumentDB/mongoClusters"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "mongoClusters_firewallRules": {
      "description": "Microsoft.DocumentDB/mongoClusters/firewallRules",
      "properties": {
        "apiVersion": {
          "enum": [
            "2025-07-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the mongo cluster firewall rule.",
          "oneOf": [
            {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9][-_.a-zA-Z0-9]*",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/FirewallRuleProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.DocumentDB/mongoClusters/firewallRules"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "mongoClusters_privateEndpointConnections": {
      "description": "Microsoft.DocumentDB/mongoClusters/privateEndpointConnections",
      "properties": {
        "apiVersion": {
          "enum": [
            "2025-07-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the private endpoint connection associated with the Azure resource.",
          "type": "string"
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/PrivateEndpointConnectionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.DocumentDB/mongoClusters/privateEndpointConnections"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "mongoClusters_users": {
      "description": "Microsoft.DocumentDB/mongoClusters/users",
      "properties": {
        "apiVersion": {
          "enum": [
            "2025-07-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the mongo cluster user.",
          "oneOf": [
            {
              "maxLength": 63,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9\\-]*",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/UserProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.DocumentDB/mongoClusters/users"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    }
  },
  "definitions": {
    "AdministratorProperties": {
      "description": "The local administrator login properties.",
      "properties": {
        "password": {
          "description": "The administrator password.",
          "type": "string"
        },
        "userName": {
          "description": "The administrator user name.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "AuthConfigProperties": {
      "description": "The authentication configuration for the Mongo cluster.",
      "properties": {
        "allowedModes": {
          "description": "Allowed authentication modes for data access on the cluster.",
          "oneOf": [
            {
              "items": {
                "enum": [
                  "NativeAuth",
                  "MicrosoftEntraID"
                ],
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "BackupProperties": {
      "description": "The backup properties of the cluster. This includes the earliest restore time and retention settings.",
      "properties": {},
      "type": "object"
    },
    "ComputeProperties": {
      "description": "The compute properties of the cluster. This includes the virtual-cores/memory and scaling options applied to servers in the cluster.",
      "properties": {
        "tier": {
          "description": "The compute tier to assign to the cluster, where each tier maps to a virtual-core and memory size. Example values: 'M30', 'M40'.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CustomerManagedKeyEncryptionProperties": {
      "description": "Customer managed key encryption settings.",
      "properties": {
        "keyEncryptionKeyIdentity": {
          "description": "The identity used to access the key encryption key.",
          "oneOf": [
            {
              "$ref": "#/definitions/KeyEncryptionKeyIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "keyEncryptionKeyUrl": {
          "description": "The URI of the key vault key used for encryption.",
          "type": "string"
        }
      },
      "required": [
        "keyEncryptionKeyIdentity",
        "keyEncryptionKeyUrl"
      ],
      "type": "object"
    },
    "DataApiProperties": {
      "description": "Data API properties.",
      "properties": {
        "mode": {
          "description": "The mode to indicate whether the Mongo Data API is enabled for a cluster.",
          "oneOf": [
            {
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "DatabaseRole": {
      "description": "Database role definition that is assigned to a user.",
      "properties": {
        "db": {
          "description": "Database scope that the role is assigned to.",
          "type": "string"
        },
        "role": {
          "description": "The role that is assigned to the user on the database scope.",
          "oneOf": [
            {
              "enum": [
                "root"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "db",
        "role"
      ],
      "type": "object"
    },
    "EncryptionProperties": {
      "description": "The encryption configuration for the mongo cluster.",
      "properties": {
        "customerManagedKeyEncryption": {
          "description": "Customer managed key encryption settings.",
          "oneOf": [
            {
              "$ref": "#/definitions/CustomerManagedKeyEncryptionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "EntraIdentityProviderProperties": {
      "description": "Microsoft Entra ID provider properties.",
      "properties": {
        "principalType": {
          "description": "The principal type of the user.",
          "oneOf": [
            {
              "enum": [
                "user",
                "servicePrincipal"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "principalType"
      ],
      "type": "object"
    },
    "FirewallRuleProperties": {
      "description": "The properties of a mongo cluster firewall rule.",
      "properties": {
        "endIpAddress": {
          "description": "The end IP address of the mongo cluster firewall rule. Must be IPv4 format.",
          "oneOf": [
            {
              "pattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "startIpAddress": {
          "description": "The start IP address of the mongo cluster firewall rule. Must be IPv4 format.",
          "oneOf": [
            {
              "pattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "startIpAddress",
        "endIpAddress"
      ],
      "type": "object"
    },
    "HighAvailabilityProperties": {
      "description": "The high availability properties of the cluster.",
      "properties": {
        "targetMode": {
          "description": "The target high availability mode requested for the cluster.",
          "oneOf": [
            {
              "enum": [
                "Disabled",
                "SameZone",
                "ZoneRedundantPreferred"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "IdentityProvider": {
      "description": "Defines a user's identity provider definition.",
      "oneOf": [
        {
          "description": "Defines a Microsoft Entra ID Mongo user.",
          "properties": {
            "properties": {
              "description": "The Entra identity properties for the user.",
              "oneOf": [
                {
                  "$ref": "#/definitions/EntraIdentityProviderProperties"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "type": {
              "enum": [
                "MicrosoftEntraID"
              ],
              "type": "string"
            }
          },
          "required": [
            "properties",
            "type"
          ],
          "type": "object"
        }
      ],
      "properties": {},
      "type": "object"
    },
    "KeyEncryptionKeyIdentity": {
      "description": "The identity used for key encryption key.",
      "properties": {
        "identityType": {
          "description": "The type of identity. Only 'UserAssignedIdentity' is supported.",
          "oneOf": [
            {
              "enum": [
                "UserAssignedIdentity"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "userAssignedIdentityResourceId": {
          "description": "The user assigned identity resource id.",
          "type": "string"
        }
      },
      "required": [
        "identityType",
        "userAssignedIdentityResourceId"
      ],
      "type": "object"
    },
    "ManagedServiceIdentity": {
      "description": "Managed service identity (system assigned and/or user assigned identities)",
      "properties": {
        "type": {
          "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
          "oneOf": [
            {
              "enum": [
                "None",
                "SystemAssigned",
                "UserAssigned",
                "SystemAssigned,UserAssigned"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "userAssignedIdentities": {
          "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
          "oneOf": [
            {
              "additionalProperties": {
                "$ref": "#/definitions/UserAssignedIdentity"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "type"
      ],
      "type": "object"
    },
    "MongoClusterProperties": {
      "description": "The properties of a mongo cluster.",
      "properties": {
        "administrator": {
          "description": "The local administrator properties for the mongo cluster.",
          "oneOf": [
            {
              "$ref": "#/definitions/AdministratorProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "authConfig": {
          "description": "The authentication configuration for the cluster.",
          "oneOf": [
            {
              "$ref": "#/definitions/AuthConfigProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "backup": {
          "description": "The backup properties of the mongo cluster.",
          "oneOf": [
            {
              "$ref": "#/definitions/BackupProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "compute": {
          "description": "The compute properties of the mongo cluster.",
          "oneOf": [
            {
              "$ref": "#/definitions/ComputeProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "createMode": {
          "description": "The mode to create a mongo cluster.",
          "oneOf": [
            {
              "enum": [
                "Default",
                "PointInTimeRestore",
                "GeoReplica",
                "Replica"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "dataApi": {
          "description": "The Data API properties of the mongo cluster.",
          "oneOf": [
            {
              "$ref": "#/definitions/DataApiProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "encryption": {
          "description": "The encryption configuration for the cluster. Depends on identity being configured.",
          "oneOf": [
            {
              "$ref": "#/definitions/EncryptionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "highAvailability": {
          "description": "The high availability properties of the mongo cluster.",
          "oneOf": [
            {
              "$ref": "#/definitions/HighAvailabilityProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "previewFeatures": {
          "description": "List of private endpoint connections.",
          "oneOf": [
            {
              "items": {
                "enum": [
                  "GeoReplicas"
                ],
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "publicNetworkAccess": {
          "description": "Whether or not public endpoint access is allowed for this mongo cluster.",
          "oneOf": [
            {
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "replicaParameters": {
          "description": "The parameters to create a replica mongo cluster.",
          "oneOf": [
            {
              "$ref": "#/definitions/MongoClusterReplicaParameters"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "restoreParameters": {
          "description": "The parameters to create a point-in-time restore mongo cluster.",
          "oneOf": [
            {
              "$ref": "#/definitions/MongoClusterRestoreParameters"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "serverVersion": {
          "description": "The Mongo DB server version. Defaults to the latest available version if not specified.",
          "type": "string"
        },
        "sharding": {
          "description": "The sharding properties of the mongo cluster.",
          "oneOf": [
            {
              "$ref": "#/definitions/ShardingProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "storage": {
          "description": "The storage properties of the mongo cluster.",
          "oneOf": [
            {
              "$ref": "#/definitions/StorageProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "MongoClusterReplicaParameters": {
      "description": "Parameters used for replica operations.",
      "properties": {
        "sourceLocation": {
          "description": "The location of the source cluster",
          "type": "string"
        },
        "sourceResourceId": {
          "description": "The id of the replication source cluster.",
          "type": "string"
        }
      },
      "required": [
        "sourceResourceId",
        "sourceLocation"
      ],
      "type": "object"
    },
    "MongoClusterRestoreParameters": {
      "description": "Parameters used for restore operations",
      "properties": {
        "pointInTimeUTC": {
          "description": "UTC point in time to restore a mongo cluster",
          "format": "date-time",
          "type": "string"
        },
        "sourceResourceId": {
          "description": "Resource ID to locate the source cluster to restore",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PrivateEndpoint": {
      "description": "The private endpoint resource.",
      "properties": {},
      "type": "object"
    },
    "PrivateEndpointConnectionProperties": {
      "description": "Properties of the private endpoint connection.",
      "properties": {
        "privateEndpoint": {
          "description": "The private endpoint resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/PrivateEndpoint"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "privateLinkServiceConnectionState": {
          "description": "A collection of information about the state of the connection between service consumer and provider.",
          "oneOf": [
            {
              "$ref": "#/definitions/PrivateLinkServiceConnectionState"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "privateLinkServiceConnectionState"
      ],
      "type": "object"
    },
    "PrivateLinkServiceConnectionState": {
      "description": "A collection of information about the state of the connection between service consumer and provider.",
      "properties": {
        "actionsRequired": {
          "description": "A message indicating if changes on the service provider require any updates on the consumer.",
          "type": "string"
        },
        "description": {
          "description": "The reason for approval/rejection of the connection.",
          "type": "string"
        },
        "status": {
          "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
          "oneOf": [
            {
              "enum": [
                "Pending",
                "Approved",
                "Rejected"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ShardingProperties": {
      "description": "The sharding properties of the cluster. This includes the shard count and scaling options for the cluster.",
      "properties": {
        "shardCount": {
          "description": "Number of shards to provision on the cluster.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "StorageProperties": {
      "description": "The storage properties of the cluster. This includes the data storage size and scaling applied to servers in the cluster.",
      "properties": {
        "iops": {
          "description": "The IOPs of the storage assigned to each server. Only applicable if the type is 'PremiumSSDv2'.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "sizeGb": {
          "description": "The size of the data disk assigned to each server.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "throughput": {
          "description": "The throughput of the storage assigned to each server. Only applicable if the type is 'PremiumSSDv2'.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "description": "The type of storage to provision the cluster servers with.",
          "oneOf": [
            {
              "enum": [
                "PremiumSSD",
                "PremiumSSDv2"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "UserAssignedIdentity": {
      "description": "User assigned identity properties",
      "properties": {},
      "type": "object"
    },
    "UserProperties": {
      "description": "Definition of Mongo user resource on a cluster.",
      "properties": {
        "identityProvider": {
          "description": "The user's identity provider definition.",
          "oneOf": [
            {
              "$ref": "#/definitions/IdentityProvider"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "roles": {
          "description": "Database roles that are assigned to the user.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/DatabaseRole"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "mongoClusters_firewallRules_childResource": {
      "description": "Microsoft.DocumentDB/mongoClusters/firewallRules",
      "properties": {
        "apiVersion": {
          "enum": [
            "2025-07-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the mongo cluster firewall rule.",
          "oneOf": [
            {
              "maxLength": 80,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9][-_.a-zA-Z0-9]*",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/FirewallRuleProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "firewallRules"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "mongoClusters_privateEndpointConnections_childResource": {
      "description": "Microsoft.DocumentDB/mongoClusters/privateEndpointConnections",
      "properties": {
        "apiVersion": {
          "enum": [
            "2025-07-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the private endpoint connection associated with the Azure resource.",
          "type": "string"
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/PrivateEndpointConnectionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "privateEndpointConnections"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "mongoClusters_users_childResource": {
      "description": "Microsoft.DocumentDB/mongoClusters/users",
      "properties": {
        "apiVersion": {
          "enum": [
            "2025-07-01-preview"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the mongo cluster user.",
          "oneOf": [
            {
              "maxLength": 63,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9\\-]*",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/UserProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "users"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    }
  }
}