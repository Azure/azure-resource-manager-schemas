{
  "id": "https://schema.management.azure.com/schemas/2025-07-01-preview/Microsoft.IoTOperations.json#",
  "title": "Microsoft.IoTOperations",
  "description": "Microsoft IoTOperations Resource Types",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "resourceDefinitions": {
    "instances": {
      "description": "Microsoft.IoTOperations/instances",
      "properties": {
        "apiVersion": {
          "enum": [
            "2025-07-01-preview"
          ],
          "type": "string"
        },
        "extendedLocation": {
          "description": "Edge location of the resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/ExtendedLocation"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "identity": {
          "description": "The managed service identities assigned to this resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedServiceIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "location": {
          "description": "The geo-location where the resource lives",
          "type": "string"
        },
        "name": {
          "description": "Name of instance.",
          "oneOf": [
            {
              "maxLength": 63,
              "minLength": 3,
              "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/InstanceProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/instances_brokers_childResource"
              },
              {
                "$ref": "#/definitions/instances_dataflowProfiles_childResource"
              },
              {
                "$ref": "#/definitions/instances_dataflowEndpoints_childResource"
              },
              {
                "$ref": "#/definitions/instances_registryEndpoints_childResource"
              },
              {
                "$ref": "#/definitions/instances_akriConnectorTemplates_childResource"
              }
            ]
          },
          "type": "array"
        },
        "tags": {
          "description": "Resource tags.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.IoTOperations/instances"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "instances_akriConnectorTemplates": {
      "description": "Microsoft.IoTOperations/instances/akriConnectorTemplates",
      "properties": {
        "apiVersion": {
          "enum": [
            "2025-07-01-preview"
          ],
          "type": "string"
        },
        "extendedLocation": {
          "description": "Edge location of the resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/ExtendedLocation"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "name": {
          "description": "Name of AkriConnectorTemplate resource.",
          "oneOf": [
            {
              "maxLength": 63,
              "minLength": 3,
              "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/AkriConnectorTemplateProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/instances_akriConnectorTemplates_connectors_childResource"
              }
            ]
          },
          "type": "array"
        },
        "type": {
          "enum": [
            "Microsoft.IoTOperations/instances/akriConnectorTemplates"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "instances_akriConnectorTemplates_connectors": {
      "description": "Microsoft.IoTOperations/instances/akriConnectorTemplates/connectors",
      "properties": {
        "apiVersion": {
          "enum": [
            "2025-07-01-preview"
          ],
          "type": "string"
        },
        "extendedLocation": {
          "description": "Edge location of the resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/ExtendedLocation"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "name": {
          "description": "Name of AkriConnector resource.",
          "oneOf": [
            {
              "maxLength": 63,
              "minLength": 3,
              "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/AkriConnectorProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.IoTOperations/instances/akriConnectorTemplates/connectors"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "instances_brokers": {
      "description": "Microsoft.IoTOperations/instances/brokers",
      "properties": {
        "apiVersion": {
          "enum": [
            "2025-07-01-preview"
          ],
          "type": "string"
        },
        "extendedLocation": {
          "description": "Edge location of the resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/ExtendedLocation"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "name": {
          "description": "Name of broker.",
          "oneOf": [
            {
              "maxLength": 63,
              "minLength": 3,
              "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/BrokerProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/instances_brokers_listeners_childResource"
              },
              {
                "$ref": "#/definitions/instances_brokers_authorizations_childResource"
              },
              {
                "$ref": "#/definitions/instances_brokers_authentications_childResource"
              }
            ]
          },
          "type": "array"
        },
        "type": {
          "enum": [
            "Microsoft.IoTOperations/instances/brokers"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "instances_brokers_authentications": {
      "description": "Microsoft.IoTOperations/instances/brokers/authentications",
      "properties": {
        "apiVersion": {
          "enum": [
            "2025-07-01-preview"
          ],
          "type": "string"
        },
        "extendedLocation": {
          "description": "Edge location of the resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/ExtendedLocation"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "name": {
          "description": "Name of Instance broker authentication resource",
          "oneOf": [
            {
              "maxLength": 63,
              "minLength": 3,
              "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/BrokerAuthenticationProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.IoTOperations/instances/brokers/authentications"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "instances_brokers_authorizations": {
      "description": "Microsoft.IoTOperations/instances/brokers/authorizations",
      "properties": {
        "apiVersion": {
          "enum": [
            "2025-07-01-preview"
          ],
          "type": "string"
        },
        "extendedLocation": {
          "description": "Edge location of the resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/ExtendedLocation"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "name": {
          "description": "Name of Instance broker authorization resource",
          "oneOf": [
            {
              "maxLength": 63,
              "minLength": 3,
              "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/BrokerAuthorizationProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.IoTOperations/instances/brokers/authorizations"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "instances_brokers_listeners": {
      "description": "Microsoft.IoTOperations/instances/brokers/listeners",
      "properties": {
        "apiVersion": {
          "enum": [
            "2025-07-01-preview"
          ],
          "type": "string"
        },
        "extendedLocation": {
          "description": "Edge location of the resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/ExtendedLocation"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "name": {
          "description": "Name of Instance broker listener resource",
          "oneOf": [
            {
              "maxLength": 63,
              "minLength": 3,
              "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/BrokerListenerProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.IoTOperations/instances/brokers/listeners"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "instances_dataflowEndpoints": {
      "description": "Microsoft.IoTOperations/instances/dataflowEndpoints",
      "properties": {
        "apiVersion": {
          "enum": [
            "2025-07-01-preview"
          ],
          "type": "string"
        },
        "extendedLocation": {
          "description": "Edge location of the resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/ExtendedLocation"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "name": {
          "description": "Name of Instance dataflowEndpoint resource",
          "oneOf": [
            {
              "maxLength": 63,
              "minLength": 3,
              "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/DataflowEndpointProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.IoTOperations/instances/dataflowEndpoints"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "instances_dataflowProfiles": {
      "description": "Microsoft.IoTOperations/instances/dataflowProfiles",
      "properties": {
        "apiVersion": {
          "enum": [
            "2025-07-01-preview"
          ],
          "type": "string"
        },
        "extendedLocation": {
          "description": "Edge location of the resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/ExtendedLocation"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "name": {
          "description": "Name of Instance dataflowProfile resource",
          "oneOf": [
            {
              "maxLength": 63,
              "minLength": 3,
              "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/DataflowProfileProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/instances_dataflowProfiles_dataflows_childResource"
              },
              {
                "$ref": "#/definitions/instances_dataflowProfiles_dataflowGraphs_childResource"
              }
            ]
          },
          "type": "array"
        },
        "type": {
          "enum": [
            "Microsoft.IoTOperations/instances/dataflowProfiles"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "instances_dataflowProfiles_dataflowGraphs": {
      "description": "Microsoft.IoTOperations/instances/dataflowProfiles/dataflowGraphs",
      "properties": {
        "apiVersion": {
          "enum": [
            "2025-07-01-preview"
          ],
          "type": "string"
        },
        "extendedLocation": {
          "description": "Edge location of the resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/ExtendedLocation"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "name": {
          "description": "Name of Instance dataflowEndpoint resource.",
          "oneOf": [
            {
              "maxLength": 63,
              "minLength": 3,
              "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/DataflowGraphProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.IoTOperations/instances/dataflowProfiles/dataflowGraphs"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "instances_dataflowProfiles_dataflows": {
      "description": "Microsoft.IoTOperations/instances/dataflowProfiles/dataflows",
      "properties": {
        "apiVersion": {
          "enum": [
            "2025-07-01-preview"
          ],
          "type": "string"
        },
        "extendedLocation": {
          "description": "Edge location of the resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/ExtendedLocation"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "name": {
          "description": "Name of Instance dataflowProfile dataflow resource",
          "oneOf": [
            {
              "maxLength": 63,
              "minLength": 3,
              "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/DataflowProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.IoTOperations/instances/dataflowProfiles/dataflows"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "instances_registryEndpoints": {
      "description": "Microsoft.IoTOperations/instances/registryEndpoints",
      "properties": {
        "apiVersion": {
          "enum": [
            "2025-07-01-preview"
          ],
          "type": "string"
        },
        "extendedLocation": {
          "description": "Edge location of the resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/ExtendedLocation"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "name": {
          "description": "Name of RegistryEndpoint resource",
          "oneOf": [
            {
              "maxLength": 63,
              "minLength": 3,
              "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/RegistryEndpointProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.IoTOperations/instances/registryEndpoints"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    }
  },
  "definitions": {
    "AdvancedSettings": {
      "description": "Broker Advanced Settings",
      "properties": {
        "clients": {
          "description": "Configurations related to All Clients.",
          "oneOf": [
            {
              "$ref": "#/definitions/ClientConfig"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "encryptInternalTraffic": {
          "description": "The setting to enable or disable encryption of internal Traffic.",
          "oneOf": [
            {
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "internalCerts": {
          "description": "Certificate rotation and private key configuration.",
          "oneOf": [
            {
              "$ref": "#/definitions/CertManagerCertOptions"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "AkriConnectorProperties": {
      "description": "AkriConnector properties.",
      "properties": {},
      "type": "object"
    },
    "AkriConnectorTemplateAioMetadata": {
      "description": "AkriConnectorTemplateAioMetadata properties.",
      "properties": {
        "aioMaxVersion": {
          "description": "The maximum version of AIO required for the connector.",
          "type": "string"
        },
        "aioMinVersion": {
          "description": "The minimum version of AIO required for the connector.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "AkriConnectorTemplateAllocation": {
      "description": "AkriConnectorTemplateAllocation properties.",
      "oneOf": [
        {
          "description": "AkriConnectorTemplateBucketizedAllocation properties.",
          "properties": {
            "bucketSize": {
              "description": "The bucketized allocation of AEPs for connectors.",
              "oneOf": [
                {
                  "maximum": 100,
                  "minimum": 1,
                  "type": "integer"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "policy": {
              "enum": [
                "Bucketized"
              ],
              "type": "string"
            }
          },
          "required": [
            "bucketSize",
            "policy"
          ],
          "type": "object"
        }
      ],
      "properties": {},
      "type": "object"
    },
    "AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefs": {
      "description": "AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefs properties.",
      "properties": {
        "additionalConfigSchemaRef": {
          "description": "The additional configuration schema reference.",
          "type": "string"
        },
        "defaultDatasetConfigSchemaRef": {
          "description": "The default configuration schema reference for datasets.",
          "type": "string"
        },
        "defaultEventsConfigSchemaRef": {
          "description": "The default configuration schema reference for events.",
          "type": "string"
        },
        "defaultProcessControlConfigSchemaRef": {
          "description": "The default configuration schema reference for process control.",
          "type": "string"
        },
        "defaultStreamsConfigSchemaRef": {
          "description": "The default configuration schema reference for streams.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "AkriConnectorTemplateDeviceInboundEndpointType": {
      "description": "AkriConnectorTemplateDeviceInboundEndpointType properties.",
      "properties": {
        "configurationSchemaRefs": {
          "description": "The configuration schema references for the device inbound endpoint.",
          "oneOf": [
            {
              "$ref": "#/definitions/AkriConnectorTemplateDeviceInboundEndpointConfigurationSchemaRefs"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "description": {
          "description": "A description of the device inbound endpoint.",
          "type": "string"
        },
        "endpointType": {
          "description": "The type of the device inbound endpoint.",
          "minLength": 1,
          "type": "string"
        },
        "version": {
          "description": "The version of the device inbound endpoint.",
          "minLength": 1,
          "type": "string"
        }
      },
      "required": [
        "endpointType"
      ],
      "type": "object"
    },
    "AkriConnectorTemplateDiagnostics": {
      "description": "AkriConnectorTemplateDiagnostics properties.",
      "properties": {
        "logs": {
          "description": "The log settings for the Connector template.",
          "oneOf": [
            {
              "$ref": "#/definitions/AkriConnectorsDiagnosticsLogs"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "logs"
      ],
      "type": "object"
    },
    "AkriConnectorTemplateHelmAdvancedConfiguration": {
      "description": "AkriConnectorTemplateHelmAdvancedConfiguration properties.",
      "properties": {
        "delete": {
          "description": "Delete operation configuration for the Helm chart.",
          "oneOf": [
            {
              "$ref": "#/definitions/AkriConnectorTemplateHelmDeleteConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "install": {
          "description": "Install operation configuration for the Helm chart.",
          "oneOf": [
            {
              "$ref": "#/definitions/AkriConnectorTemplateHelmInstallConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "upgrade": {
          "description": "Upgrade operation configuration for the Helm chart.",
          "oneOf": [
            {
              "$ref": "#/definitions/AkriConnectorTemplateHelmUpgradeConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "AkriConnectorTemplateHelmAuthSecretRef": {
      "description": "AkriConnectorTemplateHelmAuthSecretRef properties.",
      "properties": {
        "passwordKey": {
          "description": "The key of the password in the secret.",
          "type": "string"
        },
        "secretRef": {
          "description": "The name of the secret.",
          "type": "string"
        },
        "usernameKey": {
          "description": "The key of the username in the secret.",
          "type": "string"
        }
      },
      "required": [
        "secretRef",
        "passwordKey",
        "usernameKey"
      ],
      "type": "object"
    },
    "AkriConnectorTemplateHelmConfigurationSettings": {
      "description": "AkriConnectorTemplateHelmConfiguration properties.",
      "properties": {
        "advancedConfiguration": {
          "description": "Advanced configuration for the Helm chart.\nInstall, upgrade, and uninstall options for the helm chart such as atomic, wait, timeout, `wait_for_jobs`, and `disable_hooks`.",
          "oneOf": [
            {
              "$ref": "#/definitions/AkriConnectorTemplateHelmAdvancedConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "registrySettings": {
          "description": "The registry settings for the helm chart to be used.",
          "oneOf": [
            {
              "$ref": "#/definitions/AkriConnectorTemplateHelmRegistrySettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "releaseName": {
          "description": "The release name of the Helm chart.",
          "type": "string"
        },
        "repositoryName": {
          "description": "The name of the repository",
          "type": "string"
        },
        "values": {
          "description": "A map of values to pass to the helm chart.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "version": {
          "description": "The version of the Helm chart.",
          "type": "string"
        }
      },
      "required": [
        "releaseName",
        "repositoryName",
        "version"
      ],
      "type": "object"
    },
    "AkriConnectorTemplateHelmContainerRegistrySettings": {
      "description": "AkriConnectorTemplateHelmContainerRegistrySettings properties.",
      "properties": {
        "authSecretRef": {
          "description": "Optional reference to a secret in the same namespace to use for pulling the Helm chart.",
          "oneOf": [
            {
              "$ref": "#/definitions/AkriConnectorTemplateHelmAuthSecretRef"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "registry": {
          "description": "The registry to use for the Helm chart.",
          "type": "string"
        }
      },
      "required": [
        "registry"
      ],
      "type": "object"
    },
    "AkriConnectorTemplateHelmDeleteConfiguration": {
      "description": "AkriConnectorTemplateHelmDeleteConfiguration properties.",
      "properties": {
        "atomic": {
          "description": "If set, the operation will be atomic. If the operation fails, all changes will be rolled back.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "disableHooks": {
          "description": "Disable pre/post upgrade hooks for the operation.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "timeout": {
          "description": "Time to wait for any individual Kubernetes operation (like `Jobs` for hooks).",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "wait": {
          "description": "If set, the operation will wait until all Pods, PVCs, Services, and minimum number of Pods of a `Deployment`, `StatefulSet`, or `ReplicaSet` are in a ready state before marking the release as successful.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "waitForJobs": {
          "description": "If set, the operation will wait for jobs to complete before marking the release as successful.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "AkriConnectorTemplateHelmInstallConfiguration": {
      "description": "AkriConnectorTemplateHelmInstallConfiguration properties.",
      "properties": {
        "atomic": {
          "description": "If set, the operation will be atomic. If the operation fails, all changes will be rolled back.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "disableHooks": {
          "description": "Disable pre/post upgrade hooks for the operation.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "timeout": {
          "description": "Time to wait for any individual Kubernetes operation (like `Jobs` for hooks).",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "wait": {
          "description": "If set, the operation will wait until all Pods, PVCs, Services, and minimum number of Pods of a `Deployment`, `StatefulSet`, or `ReplicaSet` are in a ready state before marking the release as successful.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "waitForJobs": {
          "description": "If set, the operation will wait for jobs to complete before marking the release as successful.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "AkriConnectorTemplateHelmRegistrySettings": {
      "description": "AkriConnectorTemplateHelmRegistrySettings properties.",
      "oneOf": [
        {
          "description": "AkriConnectorTemplateHelmContainerRegistry properties.",
          "properties": {
            "containerRegistrySettings": {
              "description": "The registry settings for the container registry.",
              "oneOf": [
                {
                  "$ref": "#/definitions/AkriConnectorTemplateHelmContainerRegistrySettings"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "registrySettingsType": {
              "enum": [
                "ContainerRegistry"
              ],
              "type": "string"
            }
          },
          "required": [
            "containerRegistrySettings",
            "registrySettingsType"
          ],
          "type": "object"
        },
        {
          "description": "AkriConnectorTemplateHelmRegistryEndpointRef properties.",
          "properties": {
            "registryEndpointRef": {
              "description": "The name of the registry endpoint.",
              "type": "string"
            },
            "registrySettingsType": {
              "enum": [
                "RegistryEndpointRef"
              ],
              "type": "string"
            }
          },
          "required": [
            "registryEndpointRef",
            "registrySettingsType"
          ],
          "type": "object"
        }
      ],
      "properties": {},
      "type": "object"
    },
    "AkriConnectorTemplateHelmUpgradeConfiguration": {
      "description": "AkriConnectorTemplateHelmUpgradeConfiguration properties.",
      "properties": {
        "atomic": {
          "description": "If set, the operation will be atomic. If the operation fails, all changes will be rolled back.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "disableHooks": {
          "description": "Disable pre/post upgrade hooks for the operation.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "timeout": {
          "description": "Time to wait for any individual Kubernetes operation (like `Jobs` for hooks).",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "wait": {
          "description": "If set, the operation will wait until all Pods, PVCs, Services, and minimum number of Pods of a `Deployment`, `StatefulSet`, or `ReplicaSet` are in a ready state before marking the release as successful.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "waitForJobs": {
          "description": "If set, the operation will wait for jobs to complete before marking the release as successful.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "AkriConnectorTemplateManagedConfigurationSettings": {
      "description": "AkriConnectorTemplateManagedConfiguration properties.",
      "oneOf": [
        {
          "description": "AkriConnectorTemplateRuntimeImageConfiguration properties.",
          "properties": {
            "imageConfigurationSettings": {
              "description": "The image configuration settings.",
              "oneOf": [
                {
                  "$ref": "#/definitions/AkriConnectorTemplateRuntimeImageConfigurationSettings"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "managedConfigurationType": {
              "enum": [
                "ImageConfiguration"
              ],
              "type": "string"
            }
          },
          "required": [
            "imageConfigurationSettings",
            "managedConfigurationType"
          ],
          "type": "object"
        },
        {
          "description": "AkriConnectorTemplateRuntimeStatefulSetConfiguration properties.",
          "properties": {
            "managedConfigurationType": {
              "enum": [
                "StatefulSetConfiguration"
              ],
              "type": "string"
            },
            "statefulSetConfigurationSettings": {
              "description": "The stateful set configuration settings. This corresponds to the Kubernetes StatefulSet resource.\nSee https://raw.githubusercontent.com/kubernetes/kubernetes/refs/heads/master/api/openapi-spec/v3/apis__apps__v1_openapi.json#/components/schemas/io.k8s.api.apps.v1.StatefulSetSpec",
              "oneOf": [
                {
                  "additionalProperties": {},
                  "properties": {},
                  "type": "object"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "statefulSetConfigurationSettings",
            "managedConfigurationType"
          ],
          "type": "object"
        }
      ],
      "properties": {
        "additionalConfiguration": {
          "description": "Additional configuration for the image of the managed configuration.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "allocation": {
          "description": "Allocation settings for the managed configuration.",
          "oneOf": [
            {
              "$ref": "#/definitions/AkriConnectorTemplateAllocation"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "persistentVolumeClaimTemplates": {
          "description": "The persistent volume claim templates for the managed configuration.\nSee https://raw.githubusercontent.com/kubernetes/kubernetes/refs/heads/master/api/openapi-spec/v3/apis__apps__v1_openapi.json.",
          "oneOf": [
            {
              "items": {
                "additionalProperties": {},
                "properties": {},
                "type": "object"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "persistentVolumeClaims": {
          "description": "The persistent volume claims for the managed configuration.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/AkriConnectorTemplatePersistentVolumeClaim"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "secrets": {
          "description": "Connector secrets that will be mounted onto all connector instances.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/AkriConnectorsSecret"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "trustSettings": {
          "description": "Trust list for the connector. This is used to specify the certificates that all connector instances should trust.",
          "oneOf": [
            {
              "$ref": "#/definitions/AkriConnectorTemplateTrustList"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "AkriConnectorTemplatePersistentVolumeClaim": {
      "description": "AkriConnectorTemplatePersistentVolumeClaim properties.",
      "properties": {
        "claimName": {
          "description": "The name of the persistent volume claim.",
          "type": "string"
        },
        "mountPath": {
          "description": "The mount path for the persistent volume claim.",
          "type": "string"
        }
      },
      "required": [
        "claimName",
        "mountPath"
      ],
      "type": "object"
    },
    "AkriConnectorTemplateProperties": {
      "description": "AkriConnectorTemplate properties.",
      "properties": {
        "aioMetadata": {
          "description": "Metadata about AIO.",
          "oneOf": [
            {
              "$ref": "#/definitions/AkriConnectorTemplateAioMetadata"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "deviceInboundEndpointTypes": {
          "description": "Device inbound endpoint types.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/AkriConnectorTemplateDeviceInboundEndpointType"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "diagnostics": {
          "description": "Diagnostics settings for the Connector template.",
          "oneOf": [
            {
              "$ref": "#/definitions/AkriConnectorTemplateDiagnostics"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "mqttConnectionConfiguration": {
          "description": "Mqtt connection configuration settings.",
          "oneOf": [
            {
              "$ref": "#/definitions/AkriConnectorsMqttConnectionConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "runtimeConfiguration": {
          "description": "The runtime configuration for the Connector template.",
          "oneOf": [
            {
              "$ref": "#/definitions/AkriConnectorTemplateRuntimeConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "runtimeConfiguration",
        "deviceInboundEndpointTypes"
      ],
      "type": "object"
    },
    "AkriConnectorTemplateRuntimeConfiguration": {
      "description": "AkriConnectorTemplateRuntimeConfiguration properties.",
      "oneOf": [
        {
          "description": "AkriConnectorTemplateHelmConfiguration properties.",
          "properties": {
            "helmConfigurationSettings": {
              "description": "The Helm configuration settings.",
              "oneOf": [
                {
                  "$ref": "#/definitions/AkriConnectorTemplateHelmConfigurationSettings"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "runtimeConfigurationType": {
              "enum": [
                "HelmConfiguration"
              ],
              "type": "string"
            }
          },
          "required": [
            "helmConfigurationSettings",
            "runtimeConfigurationType"
          ],
          "type": "object"
        },
        {
          "description": "AkriConnectorTemplateManagedConfiguration properties.",
          "properties": {
            "managedConfigurationSettings": {
              "description": "The managed configuration settings.",
              "oneOf": [
                {
                  "$ref": "#/definitions/AkriConnectorTemplateManagedConfigurationSettings"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "runtimeConfigurationType": {
              "enum": [
                "ManagedConfiguration"
              ],
              "type": "string"
            }
          },
          "required": [
            "managedConfigurationSettings",
            "runtimeConfigurationType"
          ],
          "type": "object"
        }
      ],
      "properties": {},
      "type": "object"
    },
    "AkriConnectorTemplateRuntimeImageConfigurationSettings": {
      "description": "AkriConnectorTemplateRuntimeImageConfiguration properties.",
      "properties": {
        "imageName": {
          "description": "The image name without any registry reference, tag or digest.",
          "type": "string"
        },
        "imagePullPolicy": {
          "description": "The pull policy of the image.",
          "oneOf": [
            {
              "enum": [
                "Always",
                "IfNotPresent",
                "Never"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "registrySettings": {
          "description": "The registry settings for the image. You can omit this field if using the default docker hub repository or using a local image.",
          "oneOf": [
            {
              "$ref": "#/definitions/AkriConnectorsRegistrySettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "replicas": {
          "description": "The number of replicas to be set up.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tagDigestSettings": {
          "description": "Optional image tag or digest. If not specified, the default tag is `latest`.",
          "oneOf": [
            {
              "$ref": "#/definitions/AkriConnectorsTagDigestSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "imageName"
      ],
      "type": "object"
    },
    "AkriConnectorTemplateTrustList": {
      "description": "AkriConnectorTemplateTrustList properties.",
      "properties": {
        "trustListSecretRef": {
          "description": "The secret reference for certificates to trust.",
          "type": "string"
        }
      },
      "required": [
        "trustListSecretRef"
      ],
      "type": "object"
    },
    "AkriConnectorsContainerRegistrySettings": {
      "description": "AkriConnectorsContainerRegistry properties.",
      "properties": {
        "imagePullSecrets": {
          "description": "Optional list of references to secrets in the same namespace to use for pulling the connector image.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/AkriConnectorsImagePullSecret"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "registry": {
          "description": "The container registry to use for the artifact.",
          "type": "string"
        }
      },
      "required": [
        "registry"
      ],
      "type": "object"
    },
    "AkriConnectorsDiagnosticsLogs": {
      "description": "AkriConnectorsDiagnostic Log properties.",
      "properties": {
        "level": {
          "default": "info",
          "description": "The log level. Examples - 'debug', 'info', 'warn', 'error', 'trace'.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "AkriConnectorsImagePullSecret": {
      "description": "AkriConnectorsImagePullSecret properties.",
      "properties": {
        "secretRef": {
          "description": "The name of the image pull secret.",
          "type": "string"
        }
      },
      "required": [
        "secretRef"
      ],
      "type": "object"
    },
    "AkriConnectorsMqttAuthentication": {
      "description": "AkriConnectorsMqttAuthentication properties.",
      "oneOf": [
        {
          "description": "AkriConnectorsServiceAccountAuthentication properties.",
          "properties": {
            "method": {
              "enum": [
                "ServiceAccountToken"
              ],
              "type": "string"
            },
            "serviceAccountTokenSettings": {
              "description": "The service account token for the MQTT connection.",
              "oneOf": [
                {
                  "$ref": "#/definitions/AkriConnectorsServiceAccountTokenSettings"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "serviceAccountTokenSettings",
            "method"
          ],
          "type": "object"
        }
      ],
      "properties": {},
      "type": "object"
    },
    "AkriConnectorsMqttConnectionConfiguration": {
      "description": "AkriConnectorsMqttConnectionConfiguration properties.",
      "properties": {
        "authentication": {
          "description": "Authentication properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/AkriConnectorsMqttAuthentication"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "host": {
          "description": "Host of the Broker in the form of <hostname>:<port>.",
          "type": "string"
        },
        "keepAliveSeconds": {
          "description": "KeepAlive for connection in seconds.",
          "oneOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "maxInflightMessages": {
          "description": "The max number of messages to keep in flight. For subscribe, this is the receive maximum. For publish, this is the maximum number of messages to send before waiting for an ack.",
          "oneOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "protocol": {
          "description": "The protocol to use for the connection. Currently only `mqtt` is supported.",
          "oneOf": [
            {
              "enum": [
                "Mqtt"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "sessionExpirySeconds": {
          "description": "Session expiry in seconds.",
          "oneOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tls": {
          "description": "TLS configuration.",
          "oneOf": [
            {
              "$ref": "#/definitions/TlsProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "AkriConnectorsRegistrySettings": {
      "description": "AkriConnectorsRegistrySettings properties.",
      "oneOf": [
        {
          "description": "AkriConnectorsContainerRegistry properties.",
          "properties": {
            "containerRegistrySettings": {
              "description": "The registry settings for the container registry.",
              "oneOf": [
                {
                  "$ref": "#/definitions/AkriConnectorsContainerRegistrySettings"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "registrySettingsType": {
              "enum": [
                "ContainerRegistry"
              ],
              "type": "string"
            }
          },
          "required": [
            "containerRegistrySettings",
            "registrySettingsType"
          ],
          "type": "object"
        },
        {
          "description": "AkriConnectorsRegistryEndpointRef properties.",
          "properties": {
            "registryEndpointRef": {
              "description": "The name of the registry endpoint.",
              "type": "string"
            },
            "registrySettingsType": {
              "enum": [
                "RegistryEndpointRef"
              ],
              "type": "string"
            }
          },
          "required": [
            "registryEndpointRef",
            "registrySettingsType"
          ],
          "type": "object"
        }
      ],
      "properties": {},
      "type": "object"
    },
    "AkriConnectorsSecret": {
      "description": "AkriConnectorsSecret properties.",
      "properties": {
        "secretAlias": {
          "description": "The application-defined alias for the secret.",
          "type": "string"
        },
        "secretKey": {
          "description": "The key in the secret to be mounted.",
          "type": "string"
        },
        "secretRef": {
          "description": "The name of the secret to be mounted.",
          "type": "string"
        }
      },
      "required": [
        "secretKey",
        "secretAlias",
        "secretRef"
      ],
      "type": "object"
    },
    "AkriConnectorsServiceAccountTokenSettings": {
      "description": "AkriConnectorsServiceAccountTokenSettings properties.",
      "properties": {
        "audience": {
          "description": "The audience for the service account token.",
          "type": "string"
        }
      },
      "required": [
        "audience"
      ],
      "type": "object"
    },
    "AkriConnectorsTagDigestSettings": {
      "description": "AkriConnectorsTagDigestSettings properties.",
      "oneOf": [
        {
          "description": "AkriConnectorsDigest properties.",
          "properties": {
            "digest": {
              "description": "The digest of the image.",
              "type": "string"
            },
            "tagDigestType": {
              "enum": [
                "Digest"
              ],
              "type": "string"
            }
          },
          "required": [
            "digest",
            "tagDigestType"
          ],
          "type": "object"
        },
        {
          "description": "AkriConnectorsTag properties.",
          "properties": {
            "tag": {
              "description": "The tag of the image.",
              "type": "string"
            },
            "tagDigestType": {
              "enum": [
                "Tag"
              ],
              "type": "string"
            }
          },
          "required": [
            "tag",
            "tagDigestType"
          ],
          "type": "object"
        }
      ],
      "properties": {},
      "type": "object"
    },
    "AuthorizationConfig": {
      "description": "Broker AuthorizationConfig properties",
      "properties": {
        "cache": {
          "description": "Enable caching of the authorization rules.",
          "oneOf": [
            {
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "rules": {
          "description": "The authorization rules to follow. If no rule is set, but Authorization Resource is used that would mean DenyAll.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/AuthorizationRule"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "AuthorizationRule": {
      "description": "AuthorizationConfig Rule Properties",
      "properties": {
        "brokerResources": {
          "description": "Give access to Broker methods and topics.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/BrokerResourceRule"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "principals": {
          "description": "Give access to clients based on the following properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/PrincipalDefinition"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "stateStoreResources": {
          "description": "Give access to state store resources.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/StateStoreResourceRule"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "brokerResources",
        "principals"
      ],
      "type": "object"
    },
    "AzureDeviceRegistryNamespaceRef": {
      "description": "Azure Device Registry Namespace reference.",
      "properties": {
        "resourceId": {
          "description": "The resource ID of the Azure Device Registry Namespace.",
          "type": "string"
        }
      },
      "required": [
        "resourceId"
      ],
      "type": "object"
    },
    "BackendChain": {
      "description": "Desired properties of the backend instances of the broker",
      "properties": {
        "partitions": {
          "description": "The desired number of physical backend partitions.",
          "oneOf": [
            {
              "maximum": 16,
              "minimum": 1,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "redundancyFactor": {
          "description": "The desired numbers of backend replicas (pods) in a physical partition.",
          "oneOf": [
            {
              "maximum": 5,
              "minimum": 1,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "workers": {
          "description": "Number of logical backend workers per replica (pod).",
          "oneOf": [
            {
              "default": 1,
              "maximum": 16,
              "minimum": 1,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "partitions",
        "redundancyFactor"
      ],
      "type": "object"
    },
    "BatchingConfiguration": {
      "description": "Batching configuration",
      "properties": {
        "latencySeconds": {
          "description": "Batching latency in seconds.",
          "oneOf": [
            {
              "default": 60,
              "maximum": 65535,
              "minimum": 0,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "maxMessages": {
          "description": "Maximum number of messages in a batch.",
          "oneOf": [
            {
              "default": 100000,
              "maximum": 4294967295,
              "minimum": 0,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "BrokerAuthenticationProperties": {
      "description": "BrokerAuthentication Resource properties",
      "properties": {
        "authenticationMethods": {
          "description": "Defines a set of Broker authentication methods to be used on `BrokerListeners`. For each array element one authenticator type supported.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/BrokerAuthenticatorMethods"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "authenticationMethods"
      ],
      "type": "object"
    },
    "BrokerAuthenticatorCustomAuth": {
      "description": "Custom Authentication properties",
      "properties": {
        "x509": {
          "description": "X509 Custom Auth type details.",
          "oneOf": [
            {
              "$ref": "#/definitions/X509ManualCertificate"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "x509"
      ],
      "type": "object"
    },
    "BrokerAuthenticatorMethodCustom": {
      "description": "Custom method for BrokerAuthentication",
      "properties": {
        "auth": {
          "description": "Optional authentication needed for authenticating with the custom authentication server.",
          "oneOf": [
            {
              "$ref": "#/definitions/BrokerAuthenticatorCustomAuth"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "caCertConfigMap": {
          "description": "Optional CA certificate for validating the custom authentication server's certificate.",
          "type": "string"
        },
        "endpoint": {
          "description": "Endpoint of the custom authentication server. Must be an HTTPS endpoint.",
          "type": "string"
        },
        "headers": {
          "description": "Additional HTTP headers to pass to the custom authentication server.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "endpoint"
      ],
      "type": "object"
    },
    "BrokerAuthenticatorMethodSat": {
      "description": "Service Account Token for BrokerAuthentication",
      "properties": {
        "audiences": {
          "description": "List of allowed audience.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "audiences"
      ],
      "type": "object"
    },
    "BrokerAuthenticatorMethodX509": {
      "description": "X509 for BrokerAuthentication.",
      "properties": {
        "additionalValidation": {
          "description": "X509 authentication attributes properties.",
          "oneOf": [
            {
              "enum": [
                "None",
                "AzureDeviceRegistry"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "authorizationAttributes": {
          "description": "X509 authorization attributes properties.",
          "oneOf": [
            {
              "additionalProperties": {
                "$ref": "#/definitions/BrokerAuthenticatorMethodX509Attributes"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "trustedClientCaCert": {
          "default": "client-ca",
          "description": "Name of the trusted client ca cert resource.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "BrokerAuthenticatorMethodX509Attributes": {
      "description": "BrokerAuthenticatorMethodX509Attributes properties.",
      "properties": {
        "attributes": {
          "description": "Attributes object.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "subject": {
          "description": "Subject of the X509 attribute.",
          "type": "string"
        }
      },
      "required": [
        "attributes",
        "subject"
      ],
      "type": "object"
    },
    "BrokerAuthenticatorMethods": {
      "description": "Set of broker authentication policies. Only one method is supported for each entry.",
      "properties": {
        "customSettings": {
          "description": "Custom authentication configuration.",
          "oneOf": [
            {
              "$ref": "#/definitions/BrokerAuthenticatorMethodCustom"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "method": {
          "description": "Custom authentication configuration.",
          "oneOf": [
            {
              "enum": [
                "Custom",
                "ServiceAccountToken",
                "X509"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "serviceAccountTokenSettings": {
          "description": "ServiceAccountToken authentication configuration.",
          "oneOf": [
            {
              "$ref": "#/definitions/BrokerAuthenticatorMethodSat"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "x509Settings": {
          "description": "X.509 authentication configuration.",
          "oneOf": [
            {
              "$ref": "#/definitions/BrokerAuthenticatorMethodX509"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "method"
      ],
      "type": "object"
    },
    "BrokerAuthorizationProperties": {
      "description": "BrokerAuthorization Resource properties",
      "properties": {
        "authorizationPolicies": {
          "description": "The list of authorization policies supported by the Authorization Resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/AuthorizationConfig"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "authorizationPolicies"
      ],
      "type": "object"
    },
    "BrokerDiagnostics": {
      "description": "Broker Diagnostic Setting properties",
      "properties": {
        "logs": {
          "description": "Diagnostic log settings for the resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/DiagnosticsLogs"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "metrics": {
          "description": "The metrics settings for the resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/Metrics"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "selfCheck": {
          "description": "The self check properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/SelfCheck"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "traces": {
          "description": "The trace properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/Traces"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "BrokerListenerProperties": {
      "description": "Defines a Broker listener. A listener is a collection of ports on which the broker accepts connections from clients.",
      "properties": {
        "ports": {
          "description": "Ports on which this listener accepts client connections.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/ListenerPort"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "serviceName": {
          "description": "Kubernetes Service name of this listener.",
          "type": "string"
        },
        "serviceType": {
          "description": "Kubernetes Service type of this listener.",
          "oneOf": [
            {
              "enum": [
                "ClusterIp",
                "LoadBalancer",
                "NodePort"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "ports"
      ],
      "type": "object"
    },
    "BrokerPersistence": {
      "description": "Disk persistence configuration.\n\nWhen persistence is enabled, certain items (non-performance-critical data) selected for persistence will reside only on disk. Below are the affected items: \n\n- Retained messages will be stored on disk only. \n- WILL messages will be stored on disk only. \n- DSS key/value pairs will be stored on disk only, except for performance-critical items like timed locks, which remain in both disk and memory for improved performance.\n\nOptional. Everything is in-memory if not set. \nNote: if configured, all MQTT session states are written to disk.",
      "properties": {
        "dynamicSettings": {
          "description": "Client sets the specified user property key/value in the CONNECT/SUBSCRIBE/PUBLISH. \nOptionally, if the customer specifies a configurable user property, it will work to enable persistence dynamically. The default user property key is 'aio-persistence' and value 'true'.",
          "oneOf": [
            {
              "$ref": "#/definitions/BrokerPersistenceDynamicSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "encryption": {
          "description": "Controls settings related to encryption of the persistence database. Optional, defaults to enabling encryption.",
          "oneOf": [
            {
              "$ref": "#/definitions/BrokerPersistenceEncryption"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "maxSize": {
          "description": "The max size of the message buffer on disk. If a PVC template is specified using persistentVolumeClaimSpec Then this size is used as the request and limit sizes of that template. If a PVC template isn't specified Then local-path provisioner is requested with this size limit. Required.",
          "type": "string"
        },
        "persistentVolumeClaimSpec": {
          "description": "Use the specified persistent volume claim template to mount a persistent volume. Same object as in diskBackedMessageBuffer, but with a limitation that access modes field must be set to `ReadWriteOncePod`.\n\nIf unset, a default PVC with default properties will be used. Among other things this PVC will use the cluster default storage class, which may or may not be using a local path provisioner. User is opting in to sub-optimal behavior if they leave this unset or set it without the storage class field, and their cluster default is not a local path class.",
          "oneOf": [
            {
              "$ref": "#/definitions/VolumeClaimSpec"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "retain": {
          "description": "Controls which topic's retained messages should be persisted to disk.",
          "oneOf": [
            {
              "$ref": "#/definitions/BrokerRetainMessagesPolicy"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "stateStore": {
          "description": "Controls which keys should be persisted to disk for the state store.",
          "oneOf": [
            {
              "$ref": "#/definitions/BrokerStateStorePolicy"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "subscriberQueue": {
          "description": "Controls which subscriber message queues should be persisted to disk. Important: to facilitate reconnection, session state metadata are ALWAYS written to disk if any persistence setting is specified, even if this section isn't set.",
          "oneOf": [
            {
              "$ref": "#/definitions/BrokerSubscriberQueuePolicy"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "maxSize"
      ],
      "type": "object"
    },
    "BrokerPersistenceDynamicSettings": {
      "description": "Dynamic settings of the persistence.",
      "properties": {
        "userPropertyKey": {
          "description": "The user property key to enable persistence.",
          "type": "string"
        },
        "userPropertyValue": {
          "description": "The user property value to enable persistence.",
          "type": "string"
        }
      },
      "required": [
        "userPropertyKey",
        "userPropertyValue"
      ],
      "type": "object"
    },
    "BrokerPersistenceEncryption": {
      "description": "Broker Persistence Encryption properties.",
      "properties": {
        "mode": {
          "description": "Determines if encryption is enabled.",
          "oneOf": [
            {
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "mode"
      ],
      "type": "object"
    },
    "BrokerProperties": {
      "description": "Broker Resource properties",
      "properties": {
        "advanced": {
          "description": "Advanced settings of Broker.",
          "oneOf": [
            {
              "$ref": "#/definitions/AdvancedSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "cardinality": {
          "description": "The cardinality details of the broker.",
          "oneOf": [
            {
              "$ref": "#/definitions/Cardinality"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "diagnostics": {
          "description": "Spec defines the desired identities of Broker diagnostics settings.",
          "oneOf": [
            {
              "$ref": "#/definitions/BrokerDiagnostics"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "diskBackedMessageBuffer": {
          "description": "Settings of Disk Backed Message Buffer.",
          "oneOf": [
            {
              "$ref": "#/definitions/DiskBackedMessageBuffer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "generateResourceLimits": {
          "description": "This setting controls whether Kubernetes CPU resource limits are requested. Increasing the number of replicas or workers proportionally increases the amount of CPU resources requested. If this setting is enabled and there are insufficient CPU resources, an error will be emitted.",
          "oneOf": [
            {
              "$ref": "#/definitions/GenerateResourceLimits"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "memoryProfile": {
          "description": "Memory profile of Broker.",
          "oneOf": [
            {
              "enum": [
                "Tiny",
                "Low",
                "Medium",
                "High"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "persistence": {
          "description": "The persistence settings of the Broker.",
          "oneOf": [
            {
              "$ref": "#/definitions/BrokerPersistence"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "BrokerResourceRule": {
      "description": "Broker Resource Rule properties. This defines the objects that represent the actions or topics, such as - method.Connect, method.Publish, etc.",
      "properties": {
        "clientIds": {
          "description": "A list of client IDs that match the clients. The client IDs are case-sensitive and must match the client IDs provided by the clients during connection. This subfield may be set if the method is Connect.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "method": {
          "description": "Give access for a Broker method (i.e., Connect, Subscribe, or Publish).",
          "oneOf": [
            {
              "enum": [
                "Connect",
                "Publish",
                "Subscribe"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "topics": {
          "description": "A list of topics or topic patterns that match the topics that the clients can publish or subscribe to. This subfield is required if the method is Publish or Subscribe.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "method"
      ],
      "type": "object"
    },
    "BrokerRetainMessagesDynamic": {
      "description": "Dynamic settings of BrokerRetainMessagesCustomPolicy.",
      "properties": {
        "mode": {
          "description": "Mode of the BrokerRetainMessagesCustomPolicy.",
          "oneOf": [
            {
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "mode"
      ],
      "type": "object"
    },
    "BrokerRetainMessagesPolicy": {
      "description": "Broker Retain policy properties.",
      "oneOf": [
        {
          "description": "Custom Broker Retain Message Policy.",
          "properties": {
            "mode": {
              "enum": [
                "Custom"
              ],
              "type": "string"
            },
            "retainSettings": {
              "description": "Settings for the policy.",
              "oneOf": [
                {
                  "$ref": "#/definitions/BrokerRetainMessagesSettings"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "retainSettings",
            "mode"
          ],
          "type": "object"
        }
      ],
      "properties": {},
      "type": "object"
    },
    "BrokerRetainMessagesSettings": {
      "description": "Broker Retain Messages properties.",
      "properties": {
        "dynamic": {
          "description": "Controls if MQTT clients can request for disk persistence via `MQTTv5` user property. Works in addition to other groups (logical OR).",
          "oneOf": [
            {
              "$ref": "#/definitions/BrokerRetainMessagesDynamic"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "topics": {
          "description": "List of topics under which retained messages would be persisted to disk. Wildcards # and + supported.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "BrokerStateStoreDynamic": {
      "description": "Dynamic settings of BrokerStateStoreCustomPolicy.",
      "properties": {
        "mode": {
          "description": "Mode of the BrokerStateStoreCustomPolicy.",
          "oneOf": [
            {
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "mode"
      ],
      "type": "object"
    },
    "BrokerStateStorePolicy": {
      "description": "Broker State Store Policy.",
      "oneOf": [
        {
          "description": "Broker State Store Custom Policy.",
          "properties": {
            "mode": {
              "enum": [
                "Custom"
              ],
              "type": "string"
            },
            "stateStoreSettings": {
              "description": "Settings for the policy.",
              "oneOf": [
                {
                  "$ref": "#/definitions/BrokerStateStorePolicySettings"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "stateStoreSettings",
            "mode"
          ],
          "type": "object"
        }
      ],
      "properties": {},
      "type": "object"
    },
    "BrokerStateStorePolicyResources": {
      "description": "Broker State Store Policy Resources properties.",
      "properties": {
        "keyType": {
          "description": "The key to persist to disk.",
          "oneOf": [
            {
              "enum": [
                "Pattern",
                "String",
                "Binary"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "keys": {
          "description": "List of keys to persist to disk, required.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "keyType",
        "keys"
      ],
      "type": "object"
    },
    "BrokerStateStorePolicySettings": {
      "description": "Broker State Store Custom Policy Settings.",
      "properties": {
        "dynamic": {
          "description": "Controls if MQTT clients can request for disk persistence via `MQTTv5` user property. Works in addition to other groups (logical OR).",
          "oneOf": [
            {
              "$ref": "#/definitions/BrokerStateStoreDynamic"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "stateStoreResources": {
          "description": "List of key and key type to persist to disk.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/BrokerStateStorePolicyResources"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "BrokerSubscriberQueueCustomPolicySettings": {
      "description": "Broker Subscriber Queue Custom Policy properties.",
      "properties": {
        "dynamic": {
          "description": "Controls if MQTT clients can request for disk persistence via `MQTTv5` user property. Works in addition to other groups (logical OR).",
          "oneOf": [
            {
              "$ref": "#/definitions/BrokerSubscriberQueueDynamic"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "subscriberClientIds": {
          "description": "List of client IDs of the subscribers, wildcard * supported.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "topics": {
          "description": "List of topics under which messages would be persisted to disk for each subscriber. Wildcards # and + supported.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "BrokerSubscriberQueueDynamic": {
      "description": "Dynamic settings of BrokerSubscriberQueueCustomPolicy.",
      "properties": {
        "mode": {
          "description": "Mode of the BrokerSubscriberQueueCustomPolicy.",
          "oneOf": [
            {
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "mode"
      ],
      "type": "object"
    },
    "BrokerSubscriberQueuePolicy": {
      "description": "Broker Subscriber Queue Policy properties.",
      "oneOf": [
        {
          "description": "Custom Subscriber Queue Policy Properties.",
          "properties": {
            "mode": {
              "enum": [
                "Custom"
              ],
              "type": "string"
            },
            "subscriberQueueSettings": {
              "description": "Custom policy, required if mode is Custom. Subscriber queues from all groups are persisted to disk (logical OR).",
              "oneOf": [
                {
                  "$ref": "#/definitions/BrokerSubscriberQueueCustomPolicySettings"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "subscriberQueueSettings",
            "mode"
          ],
          "type": "object"
        }
      ],
      "properties": {},
      "type": "object"
    },
    "Cardinality": {
      "description": "Cardinality properties",
      "properties": {
        "backendChain": {
          "description": "The backend broker desired properties",
          "oneOf": [
            {
              "$ref": "#/definitions/BackendChain"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "frontend": {
          "description": "The frontend desired properties",
          "oneOf": [
            {
              "$ref": "#/definitions/Frontend"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "backendChain",
        "frontend"
      ],
      "type": "object"
    },
    "CertManagerCertOptions": {
      "description": "Cert Manager Cert properties",
      "properties": {
        "duration": {
          "description": "Lifetime of certificate. Must be specified using a Go time.Duration format (h|m|s). E.g. 240h for 240 hours and 45m for 45 minutes.",
          "type": "string"
        },
        "privateKey": {
          "description": "Configuration of certificate private key.",
          "oneOf": [
            {
              "$ref": "#/definitions/CertManagerPrivateKey"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "renewBefore": {
          "description": "When to begin renewing certificate. Must be specified using a Go time.Duration format (h|m|s). E.g. 240h for 240 hours and 45m for 45 minutes.",
          "type": "string"
        }
      },
      "required": [
        "duration",
        "renewBefore",
        "privateKey"
      ],
      "type": "object"
    },
    "CertManagerCertificateSpec": {
      "description": "Automatic TLS server certificate management with cert-manager",
      "properties": {
        "duration": {
          "description": "Lifetime of certificate. Must be specified using a Go time.Duration format (h|m|s). E.g. 240h for 240 hours and 45m for 45 minutes.",
          "type": "string"
        },
        "issuerRef": {
          "description": "cert-manager issuerRef.",
          "oneOf": [
            {
              "$ref": "#/definitions/CertManagerIssuerRef"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "privateKey": {
          "description": "Type of certificate private key.",
          "oneOf": [
            {
              "$ref": "#/definitions/CertManagerPrivateKey"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "renewBefore": {
          "description": "When to begin renewing certificate. Must be specified using a Go time.Duration format (h|m|s). E.g. 240h for 240 hours and 45m for 45 minutes.",
          "type": "string"
        },
        "san": {
          "description": "Additional Subject Alternative Names (SANs) to include in the certificate.",
          "oneOf": [
            {
              "$ref": "#/definitions/SanForCert"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "secretName": {
          "description": "Secret for storing server certificate. Any existing data will be overwritten. This is a reference to the secret through an identifying name, not the secret itself.",
          "type": "string"
        }
      },
      "required": [
        "issuerRef"
      ],
      "type": "object"
    },
    "CertManagerIssuerRef": {
      "description": "Cert-Manager issuerRef properties",
      "properties": {
        "group": {
          "default": "cert-manager.io",
          "description": "group of issuer.",
          "type": "string"
        },
        "kind": {
          "description": "kind of issuer (Issuer or ClusterIssuer).",
          "oneOf": [
            {
              "enum": [
                "Issuer",
                "ClusterIssuer"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "name": {
          "description": "name of issuer.",
          "type": "string"
        }
      },
      "required": [
        "group",
        "kind",
        "name"
      ],
      "type": "object"
    },
    "CertManagerPrivateKey": {
      "description": "Cert Manager private key properties",
      "properties": {
        "algorithm": {
          "description": "algorithm for private key.",
          "oneOf": [
            {
              "enum": [
                "Ec256",
                "Ec384",
                "Ec521",
                "Ed25519",
                "Rsa2048",
                "Rsa4096",
                "Rsa8192"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "rotationPolicy": {
          "description": "cert-manager private key rotationPolicy.",
          "oneOf": [
            {
              "enum": [
                "Always",
                "Never"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "algorithm",
        "rotationPolicy"
      ],
      "type": "object"
    },
    "ClientConfig": {
      "description": "The settings of Client Config.",
      "properties": {
        "maxKeepAliveSeconds": {
          "description": "Upper bound of a client's Keep Alive, in seconds.",
          "oneOf": [
            {
              "maximum": 65535,
              "minimum": 0,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "maxMessageExpirySeconds": {
          "description": "Upper bound of Message Expiry Interval, in seconds.",
          "oneOf": [
            {
              "maximum": 4294967295,
              "minimum": 1,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "maxPacketSizeBytes": {
          "description": "Max message size for a packet in Bytes.",
          "oneOf": [
            {
              "maximum": 268435456,
              "minimum": 1,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "maxReceiveMaximum": {
          "description": "Upper bound of Receive Maximum that a client can request in the CONNECT packet.",
          "oneOf": [
            {
              "maximum": 65535,
              "minimum": 1,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "maxSessionExpirySeconds": {
          "description": "Upper bound of Session Expiry Interval, in seconds.",
          "oneOf": [
            {
              "maximum": 4294967295,
              "minimum": 1,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "subscriberQueueLimit": {
          "description": "The limit on the number of queued messages for a subscriber.",
          "oneOf": [
            {
              "$ref": "#/definitions/SubscriberQueueLimit"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "DataflowBuiltInTransformationDataset": {
      "description": "Dataflow BuiltIn Transformation dataset properties",
      "properties": {
        "description": {
          "description": "A user provided optional description of the dataset.",
          "maxLength": 256,
          "type": "string"
        },
        "expression": {
          "description": "Condition to enrich data from Broker State Store. Example: $1 < 0 || $1 > $2 (Assuming inputs section $1 and $2 are provided)",
          "type": "string"
        },
        "inputs": {
          "description": "List of fields for enriching from the Broker State Store.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "key": {
          "description": "The key of the dataset.",
          "maxLength": 64,
          "type": "string"
        },
        "schemaRef": {
          "description": "The reference to the schema that describes the dataset. Allowed: JSON Schema/draft-7.",
          "type": "string"
        }
      },
      "required": [
        "key",
        "inputs"
      ],
      "type": "object"
    },
    "DataflowBuiltInTransformationFilter": {
      "description": "Dataflow BuiltIn Transformation filter properties",
      "properties": {
        "description": {
          "description": "A user provided optional description of the filter.",
          "maxLength": 256,
          "type": "string"
        },
        "expression": {
          "description": "Condition to filter data. Can reference input fields with {n} where n is the index of the input field starting from 1. Example: $1 < 0 || $1 > $2 (Assuming inputs section $1 and $2 are provided)",
          "type": "string"
        },
        "inputs": {
          "description": "List of fields for filtering in JSON path expression.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "description": "The type of dataflow operation.",
          "oneOf": [
            {
              "enum": [
                "Filter"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "inputs",
        "expression"
      ],
      "type": "object"
    },
    "DataflowBuiltInTransformationMap": {
      "description": "Dataflow BuiltIn Transformation map properties",
      "properties": {
        "description": {
          "description": "A user provided optional description of the mapping function.",
          "maxLength": 256,
          "type": "string"
        },
        "expression": {
          "description": "Modify the inputs field(s) to the final output field. Example: $1 * 2.2 (Assuming inputs section $1 is provided)",
          "type": "string"
        },
        "inputs": {
          "description": "List of fields for mapping in JSON path expression.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "output": {
          "description": "Where and how the input fields to be organized in the output record.",
          "type": "string"
        },
        "type": {
          "description": "Type of transformation.",
          "oneOf": [
            {
              "enum": [
                "NewProperties",
                "Rename",
                "Compute",
                "PassThrough",
                "BuiltInFunction"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "inputs",
        "output"
      ],
      "type": "object"
    },
    "DataflowBuiltInTransformationSettings": {
      "description": "Dataflow BuiltIn Transformation properties",
      "properties": {
        "datasets": {
          "description": "Enrich data from Broker State Store. Dataset references a key in Broker State Store.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/DataflowBuiltInTransformationDataset"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "filter": {
          "description": "Filters input record or datapoints based on condition.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/DataflowBuiltInTransformationFilter"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "map": {
          "description": "Maps input to output message.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/DataflowBuiltInTransformationMap"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "schemaRef": {
          "description": "Reference to the schema that describes the output of the transformation.",
          "type": "string"
        },
        "serializationFormat": {
          "description": "Serialization format. Optional; defaults to JSON. Allowed value JSON Schema/draft-7, Parquet. Default: Json",
          "oneOf": [
            {
              "enum": [
                "Delta",
                "Json",
                "Parquet"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "DataflowDestinationOperationSettings": {
      "description": "Dataflow Destination Operation properties",
      "properties": {
        "dataDestination": {
          "description": "Destination location, can be a topic or table name. Supports dynamic values with $topic, $systemProperties, $userProperties, $payload, $context, and $subscription.",
          "minLength": 1,
          "type": "string"
        },
        "endpointRef": {
          "description": "Reference to the Endpoint CR. Can be of Broker, Kafka, Fabric, ADLS, ADX type.",
          "type": "string"
        }
      },
      "required": [
        "endpointRef",
        "dataDestination"
      ],
      "type": "object"
    },
    "DataflowEndpointAuthenticationAccessToken": {
      "description": "DataflowEndpoint Authentication Access Token properties",
      "properties": {
        "secretRef": {
          "description": "Token secret name.",
          "type": "string"
        }
      },
      "required": [
        "secretRef"
      ],
      "type": "object"
    },
    "DataflowEndpointAuthenticationSasl": {
      "description": "DataflowEndpoint Authentication Sasl properties",
      "properties": {
        "saslType": {
          "description": "Type of SASL authentication. Can be PLAIN, SCRAM-SHA-256, or SCRAM-SHA-512.",
          "oneOf": [
            {
              "enum": [
                "Plain",
                "ScramSha256",
                "ScramSha512"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "secretRef": {
          "description": "Token secret name.",
          "type": "string"
        }
      },
      "required": [
        "saslType",
        "secretRef"
      ],
      "type": "object"
    },
    "DataflowEndpointAuthenticationServiceAccountToken": {
      "description": "Service Account Token for BrokerAuthentication",
      "properties": {
        "audience": {
          "description": "Audience of the service account. Optional, defaults to the broker internal service account audience.",
          "type": "string"
        }
      },
      "required": [
        "audience"
      ],
      "type": "object"
    },
    "DataflowEndpointAuthenticationSystemAssignedManagedIdentity": {
      "description": "DataflowEndpoint Authentication SystemAssignedManagedIdentity properties",
      "properties": {
        "audience": {
          "description": "Audience of the service to authenticate against. Optional; defaults to the audience for Service host configuration.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DataflowEndpointAuthenticationUserAssignedManagedIdentity": {
      "description": "DataflowEndpoint Authentication UserAssignedManagedIdentity properties",
      "properties": {
        "clientId": {
          "description": "Client ID for the user-assigned managed identity.",
          "type": "string"
        },
        "scope": {
          "description": "Resource identifier (application ID URI) of the resource, affixed with the .default suffix.",
          "type": "string"
        },
        "tenantId": {
          "description": "Tenant ID.",
          "type": "string"
        }
      },
      "required": [
        "clientId",
        "tenantId"
      ],
      "type": "object"
    },
    "DataflowEndpointAuthenticationX509": {
      "description": "DataflowEndpoint Authentication X509 properties",
      "properties": {
        "secretRef": {
          "description": "Secret reference of the X.509 certificate.",
          "type": "string"
        }
      },
      "required": [
        "secretRef"
      ],
      "type": "object"
    },
    "DataflowEndpointDataExplorer": {
      "description": "Azure Data Explorer endpoint properties",
      "properties": {
        "authentication": {
          "description": "Authentication configuration. NOTE - only authentication property is allowed per entry.",
          "oneOf": [
            {
              "$ref": "#/definitions/DataflowEndpointDataExplorerAuthentication"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "batching": {
          "description": "Azure Data Explorer endpoint batching configuration.",
          "oneOf": [
            {
              "$ref": "#/definitions/BatchingConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "database": {
          "description": "Database name.",
          "type": "string"
        },
        "host": {
          "description": "Host of the Azure Data Explorer in the form of <cluster>.<region>.kusto.windows.net .",
          "oneOf": [
            {
              "pattern": ".+\\..+\\.kusto\\.windows\\.net",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "authentication",
        "database",
        "host"
      ],
      "type": "object"
    },
    "DataflowEndpointDataExplorerAuthentication": {
      "description": "Azure Data Explorer Authentication properties. NOTE - only authentication property is allowed per entry.",
      "properties": {
        "method": {
          "description": "Mode of Authentication.",
          "oneOf": [
            {
              "enum": [
                "SystemAssignedManagedIdentity",
                "UserAssignedManagedIdentity"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "systemAssignedManagedIdentitySettings": {
          "description": "System-assigned managed identity authentication.",
          "oneOf": [
            {
              "$ref": "#/definitions/DataflowEndpointAuthenticationSystemAssignedManagedIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "userAssignedManagedIdentitySettings": {
          "description": "User-assigned managed identity authentication.",
          "oneOf": [
            {
              "$ref": "#/definitions/DataflowEndpointAuthenticationUserAssignedManagedIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "method"
      ],
      "type": "object"
    },
    "DataflowEndpointDataLakeStorage": {
      "description": "Azure Data Lake endpoint properties",
      "properties": {
        "authentication": {
          "description": "Authentication configuration. NOTE - only authentication property is allowed per entry.",
          "oneOf": [
            {
              "$ref": "#/definitions/DataflowEndpointDataLakeStorageAuthentication"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "batching": {
          "description": "Azure Data Lake endpoint batching configuration.",
          "oneOf": [
            {
              "$ref": "#/definitions/BatchingConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "host": {
          "description": "Host of the Azure Data Lake in the form of <account>.blob.core.windows.net .",
          "oneOf": [
            {
              "pattern": ".+\\.blob\\.core\\.windows\\.net",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "authentication",
        "host"
      ],
      "type": "object"
    },
    "DataflowEndpointDataLakeStorageAuthentication": {
      "description": "Azure Data Lake endpoint Authentication properties.  NOTE Enum - Only one method is supported for one entry",
      "properties": {
        "accessTokenSettings": {
          "description": "SAS token authentication.",
          "oneOf": [
            {
              "$ref": "#/definitions/DataflowEndpointAuthenticationAccessToken"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "method": {
          "description": "Mode of Authentication.",
          "oneOf": [
            {
              "enum": [
                "SystemAssignedManagedIdentity",
                "UserAssignedManagedIdentity",
                "AccessToken"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "systemAssignedManagedIdentitySettings": {
          "description": "System-assigned managed identity authentication.",
          "oneOf": [
            {
              "$ref": "#/definitions/DataflowEndpointAuthenticationSystemAssignedManagedIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "userAssignedManagedIdentitySettings": {
          "description": "User-assigned managed identity authentication.",
          "oneOf": [
            {
              "$ref": "#/definitions/DataflowEndpointAuthenticationUserAssignedManagedIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "method"
      ],
      "type": "object"
    },
    "DataflowEndpointFabricOneLake": {
      "description": "Microsoft Fabric endpoint properties",
      "properties": {
        "authentication": {
          "description": "Authentication configuration. NOTE - only one authentication property is allowed per entry.",
          "oneOf": [
            {
              "$ref": "#/definitions/DataflowEndpointFabricOneLakeAuthentication"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "batching": {
          "description": "Batching configuration.",
          "oneOf": [
            {
              "$ref": "#/definitions/BatchingConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "host": {
          "description": "Host of the Microsoft Fabric in the form of https://<host>.fabric.microsoft.com.",
          "oneOf": [
            {
              "pattern": ".+\\.fabric\\.microsoft\\.com",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "names": {
          "description": "Names of the workspace and lakehouse.",
          "oneOf": [
            {
              "$ref": "#/definitions/DataflowEndpointFabricOneLakeNames"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "oneLakePathType": {
          "description": "Type of location of the data in the workspace. Can be either tables or files.",
          "oneOf": [
            {
              "enum": [
                "Files",
                "Tables"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "authentication",
        "names",
        "oneLakePathType",
        "host"
      ],
      "type": "object"
    },
    "DataflowEndpointFabricOneLakeAuthentication": {
      "description": "Microsoft Fabric endpoint. Authentication properties. NOTE - Only one method is supported for one entry",
      "properties": {
        "method": {
          "description": "Mode of Authentication.",
          "oneOf": [
            {
              "enum": [
                "SystemAssignedManagedIdentity",
                "UserAssignedManagedIdentity"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "systemAssignedManagedIdentitySettings": {
          "description": "System-assigned managed identity authentication.",
          "oneOf": [
            {
              "$ref": "#/definitions/DataflowEndpointAuthenticationSystemAssignedManagedIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "userAssignedManagedIdentitySettings": {
          "description": "User-assigned managed identity authentication.",
          "oneOf": [
            {
              "$ref": "#/definitions/DataflowEndpointAuthenticationUserAssignedManagedIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "method"
      ],
      "type": "object"
    },
    "DataflowEndpointFabricOneLakeNames": {
      "description": "Microsoft Fabric endpoint Names properties",
      "properties": {
        "lakehouseName": {
          "description": "Lakehouse name.",
          "type": "string"
        },
        "workspaceName": {
          "description": "Workspace name.",
          "type": "string"
        }
      },
      "required": [
        "lakehouseName",
        "workspaceName"
      ],
      "type": "object"
    },
    "DataflowEndpointKafka": {
      "description": "Kafka endpoint properties",
      "properties": {
        "authentication": {
          "description": "Authentication configuration. NOTE - only authentication property is allowed per entry.",
          "oneOf": [
            {
              "$ref": "#/definitions/DataflowEndpointKafkaAuthentication"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "batching": {
          "description": "Batching configuration.",
          "oneOf": [
            {
              "$ref": "#/definitions/DataflowEndpointKafkaBatching"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "cloudEventAttributes": {
          "description": "Cloud event mapping config.",
          "oneOf": [
            {
              "enum": [
                "Propagate",
                "CreateOrRemap"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "compression": {
          "description": "Compression. Can be none, gzip, lz4, or snappy. No effect if the endpoint is used as a source.",
          "oneOf": [
            {
              "enum": [
                "None",
                "Gzip",
                "Snappy",
                "Lz4"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "consumerGroupId": {
          "description": "Consumer group ID.",
          "type": "string"
        },
        "copyMqttProperties": {
          "description": "Copy Broker properties. No effect if the endpoint is used as a source or if the dataflow doesn't have an Broker source.",
          "oneOf": [
            {
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "host": {
          "description": "Kafka endpoint host.",
          "type": "string"
        },
        "kafkaAcks": {
          "description": "Kafka acks. Can be all, one, or zero. No effect if the endpoint is used as a source.",
          "oneOf": [
            {
              "enum": [
                "Zero",
                "One",
                "All"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "partitionStrategy": {
          "description": "Partition handling strategy. Can be default or static. No effect if the endpoint is used as a source.",
          "oneOf": [
            {
              "enum": [
                "Default",
                "Static",
                "Topic",
                "Property"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tls": {
          "description": "TLS configuration.",
          "oneOf": [
            {
              "$ref": "#/definitions/TlsProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "authentication",
        "host"
      ],
      "type": "object"
    },
    "DataflowEndpointKafkaAuthentication": {
      "description": "Kafka endpoint Authentication properties. NOTE - only authentication property is allowed per entry",
      "properties": {
        "method": {
          "description": "Mode of Authentication.",
          "oneOf": [
            {
              "enum": [
                "SystemAssignedManagedIdentity",
                "UserAssignedManagedIdentity",
                "Sasl",
                "X509Certificate",
                "Anonymous"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "saslSettings": {
          "description": "SASL authentication.",
          "oneOf": [
            {
              "$ref": "#/definitions/DataflowEndpointAuthenticationSasl"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "systemAssignedManagedIdentitySettings": {
          "description": "System-assigned managed identity authentication.",
          "oneOf": [
            {
              "$ref": "#/definitions/DataflowEndpointAuthenticationSystemAssignedManagedIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "userAssignedManagedIdentitySettings": {
          "description": "User-assigned managed identity authentication.",
          "oneOf": [
            {
              "$ref": "#/definitions/DataflowEndpointAuthenticationUserAssignedManagedIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "x509CertificateSettings": {
          "description": "X.509 certificate authentication.",
          "oneOf": [
            {
              "$ref": "#/definitions/DataflowEndpointAuthenticationX509"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "method"
      ],
      "type": "object"
    },
    "DataflowEndpointKafkaBatching": {
      "description": "Kafka endpoint Batching properties",
      "properties": {
        "latencyMs": {
          "description": "Batching latency in milliseconds.",
          "oneOf": [
            {
              "default": 5,
              "maximum": 65535,
              "minimum": 0,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "maxBytes": {
          "description": "Maximum number of bytes in a batch.",
          "oneOf": [
            {
              "default": 1000000,
              "maximum": 4294967295,
              "minimum": 0,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "maxMessages": {
          "description": "Maximum number of messages in a batch.",
          "oneOf": [
            {
              "default": 100000,
              "maximum": 4294967295,
              "minimum": 0,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "mode": {
          "description": "Mode for batching.",
          "oneOf": [
            {
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "DataflowEndpointLocalStorage": {
      "description": "Local persistent volume endpoint properties",
      "properties": {
        "persistentVolumeClaimRef": {
          "description": "Persistent volume claim name.",
          "type": "string"
        }
      },
      "required": [
        "persistentVolumeClaimRef"
      ],
      "type": "object"
    },
    "DataflowEndpointMqtt": {
      "description": "Broker endpoint properties",
      "properties": {
        "authentication": {
          "description": "authentication properties. DEFAULT: kubernetes.audience=aio-internal. NOTE - Enum field only property is allowed",
          "oneOf": [
            {
              "$ref": "#/definitions/DataflowEndpointMqttAuthentication"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "clientIdPrefix": {
          "description": "Client ID prefix. Client ID generated by the dataflow is <prefix>-TBD. Optional; no prefix if omitted.",
          "type": "string"
        },
        "cloudEventAttributes": {
          "description": "Cloud event mapping config.",
          "oneOf": [
            {
              "enum": [
                "Propagate",
                "CreateOrRemap"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "host": {
          "description": "Host of the Broker in the form of <hostname>:<port>. Optional; connects to Broker if omitted.",
          "type": "string"
        },
        "keepAliveSeconds": {
          "description": "Broker KeepAlive for connection in seconds.",
          "oneOf": [
            {
              "default": 60,
              "minimum": 0,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "maxInflightMessages": {
          "description": "The max number of messages to keep in flight. For subscribe, this is the receive maximum. For publish, this is the maximum number of messages to send before waiting for an ack.",
          "oneOf": [
            {
              "default": 100,
              "minimum": 0,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "protocol": {
          "description": "Enable or disable websockets.",
          "oneOf": [
            {
              "enum": [
                "Mqtt",
                "WebSockets"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "qos": {
          "description": "Qos for Broker connection.",
          "oneOf": [
            {
              "default": 1,
              "maximum": 1,
              "minimum": 0,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "retain": {
          "description": "Whether or not to keep the retain setting.",
          "oneOf": [
            {
              "enum": [
                "Keep",
                "Never"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "sessionExpirySeconds": {
          "description": "Session expiry in seconds.",
          "oneOf": [
            {
              "minimum": 0,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tls": {
          "description": "TLS configuration.",
          "oneOf": [
            {
              "$ref": "#/definitions/TlsProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "authentication"
      ],
      "type": "object"
    },
    "DataflowEndpointMqttAuthentication": {
      "description": "Mqtt endpoint Authentication properties. NOTE - only authentication property is allowed per entry.",
      "properties": {
        "method": {
          "description": "Mode of Authentication.",
          "oneOf": [
            {
              "enum": [
                "SystemAssignedManagedIdentity",
                "UserAssignedManagedIdentity",
                "ServiceAccountToken",
                "X509Certificate",
                "Anonymous"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "serviceAccountTokenSettings": {
          "description": "Kubernetes service account token authentication. Default audience if not set is aio-internal",
          "oneOf": [
            {
              "$ref": "#/definitions/DataflowEndpointAuthenticationServiceAccountToken"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "systemAssignedManagedIdentitySettings": {
          "description": "System-assigned managed identity authentication.",
          "oneOf": [
            {
              "$ref": "#/definitions/DataflowEndpointAuthenticationSystemAssignedManagedIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "userAssignedManagedIdentitySettings": {
          "description": "User-assigned managed identity authentication.",
          "oneOf": [
            {
              "$ref": "#/definitions/DataflowEndpointAuthenticationUserAssignedManagedIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "x509CertificateSettings": {
          "description": "X.509 certificate authentication.",
          "oneOf": [
            {
              "$ref": "#/definitions/DataflowEndpointAuthenticationX509"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "method"
      ],
      "type": "object"
    },
    "DataflowEndpointOpenTelemetry": {
      "description": "OpenTelemetry endpoint properties.",
      "properties": {
        "authentication": {
          "description": "Authentication properties for OpenTelemetry endpoints",
          "oneOf": [
            {
              "$ref": "#/definitions/DataflowOpenTelemetryAuthentication"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "batching": {
          "description": "Batching configuration.",
          "oneOf": [
            {
              "$ref": "#/definitions/BatchingConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "host": {
          "description": "Host of the OpenTelemetry in the form of <host>:<port>.",
          "type": "string"
        },
        "tls": {
          "description": "TLS configuration.",
          "oneOf": [
            {
              "$ref": "#/definitions/TlsProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "host",
        "authentication"
      ],
      "type": "object"
    },
    "DataflowEndpointProperties": {
      "description": "DataflowEndpoint Resource properties. NOTE - Only one type of endpoint is supported for one Resource",
      "properties": {
        "dataExplorerSettings": {
          "description": "Azure Data Explorer endpoint.",
          "oneOf": [
            {
              "$ref": "#/definitions/DataflowEndpointDataExplorer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "dataLakeStorageSettings": {
          "description": "Azure Data Lake endpoint.",
          "oneOf": [
            {
              "$ref": "#/definitions/DataflowEndpointDataLakeStorage"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "endpointType": {
          "description": "Endpoint Type.",
          "oneOf": [
            {
              "enum": [
                "DataExplorer",
                "DataLakeStorage",
                "FabricOneLake",
                "Kafka",
                "LocalStorage",
                "Mqtt",
                "OpenTelemetry"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "fabricOneLakeSettings": {
          "description": "Microsoft Fabric endpoint.",
          "oneOf": [
            {
              "$ref": "#/definitions/DataflowEndpointFabricOneLake"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "hostType": {
          "description": "The type of the Kafka host. E.g FabricRT, EventGrid.",
          "oneOf": [
            {
              "enum": [
                "FabricRT",
                "EventGrid",
                "LocalBroker",
                "Eventhub",
                "CustomMqtt",
                "CustomKafka"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "kafkaSettings": {
          "description": "Kafka endpoint.",
          "oneOf": [
            {
              "$ref": "#/definitions/DataflowEndpointKafka"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "localStorageSettings": {
          "description": "Local persistent volume endpoint.",
          "oneOf": [
            {
              "$ref": "#/definitions/DataflowEndpointLocalStorage"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "mqttSettings": {
          "description": "Broker endpoint.",
          "oneOf": [
            {
              "$ref": "#/definitions/DataflowEndpointMqtt"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "openTelemetrySettings": {
          "description": "OpenTelemetry endpoint.",
          "oneOf": [
            {
              "$ref": "#/definitions/DataflowEndpointOpenTelemetry"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "endpointType"
      ],
      "type": "object"
    },
    "DataflowGraphConnectionInput": {
      "description": "DataflowGraph DataflowGraphNode Connection Input.",
      "properties": {
        "name": {
          "description": "Name of the input node.",
          "type": "string"
        },
        "schema": {
          "description": "Schema settings for the input node.",
          "oneOf": [
            {
              "$ref": "#/definitions/DataflowGraphConnectionSchemaSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "DataflowGraphConnectionOutput": {
      "description": "DataflowGraph DataflowGraphNode Connection Output.",
      "properties": {
        "name": {
          "description": "Name of the destination node.",
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "DataflowGraphConnectionSchemaSettings": {
      "description": "DataflowGraph connection node output schema settings.",
      "properties": {
        "schemaRef": {
          "description": "Reference to the schema that describes the output of the transformation.",
          "type": "string"
        },
        "serializationFormat": {
          "description": "Output serialization format.",
          "oneOf": [
            {
              "enum": [
                "Delta",
                "Json",
                "Parquet",
                "Avro"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "DataflowGraphDestinationNodeSettings": {
      "description": "DataflowGraph destination node settings.",
      "properties": {
        "dataDestination": {
          "description": "Data destination at the endpoint.",
          "type": "string"
        },
        "endpointRef": {
          "description": "The name of the DataflowEndpoint resource .",
          "type": "string"
        },
        "outputSchemaSettings": {
          "description": "Output schema settings.",
          "oneOf": [
            {
              "$ref": "#/definitions/DataflowGraphDestinationSchemaSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "endpointRef",
        "dataDestination"
      ],
      "type": "object"
    },
    "DataflowGraphDestinationSchemaSettings": {
      "description": "DataflowGraph destination node output schema settings.",
      "properties": {
        "schemaRef": {
          "description": "Reference to the schema that describes the output of the transformation.",
          "type": "string"
        },
        "serializationFormat": {
          "description": "The format of the output data.",
          "oneOf": [
            {
              "enum": [
                "Parquet",
                "Delta"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "serializationFormat"
      ],
      "type": "object"
    },
    "DataflowGraphNode": {
      "description": "DataflowGraph node properties.",
      "oneOf": [
        {
          "description": "DataflowGraph destination node properties.",
          "properties": {
            "destinationSettings": {
              "description": "Destination configuration.",
              "oneOf": [
                {
                  "$ref": "#/definitions/DataflowGraphDestinationNodeSettings"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "nodeType": {
              "enum": [
                "Destination"
              ],
              "type": "string"
            }
          },
          "required": [
            "destinationSettings",
            "nodeType"
          ],
          "type": "object"
        },
        {
          "description": "DataflowGraph graph node properties.",
          "properties": {
            "graphSettings": {
              "description": "Graph configuration.",
              "oneOf": [
                {
                  "$ref": "#/definitions/DataflowGraphNodeGraphSettings"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "nodeType": {
              "enum": [
                "Graph"
              ],
              "type": "string"
            }
          },
          "required": [
            "graphSettings",
            "nodeType"
          ],
          "type": "object"
        },
        {
          "description": "DataflowGraph source node properties.",
          "properties": {
            "nodeType": {
              "enum": [
                "Source"
              ],
              "type": "string"
            },
            "sourceSettings": {
              "description": "Source configuration.",
              "oneOf": [
                {
                  "$ref": "#/definitions/DataflowGraphSourceSettings"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "sourceSettings",
            "nodeType"
          ],
          "type": "object"
        }
      ],
      "properties": {
        "name": {
          "description": "Name of the node.",
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "DataflowGraphNodeConfiguration": {
      "description": "DataflowGraph graph node configuration.",
      "properties": {
        "key": {
          "description": "Key of the configuration.",
          "type": "string"
        },
        "value": {
          "description": "Value of the configuration.",
          "type": "string"
        }
      },
      "required": [
        "key",
        "value"
      ],
      "type": "object"
    },
    "DataflowGraphNodeConnection": {
      "description": "DataflowGraph DataflowGraphNode Connection.",
      "properties": {
        "from": {
          "description": "Information about the source node.",
          "oneOf": [
            {
              "$ref": "#/definitions/DataflowGraphConnectionInput"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "to": {
          "description": "Information about the destination node.",
          "oneOf": [
            {
              "$ref": "#/definitions/DataflowGraphConnectionOutput"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "from",
        "to"
      ],
      "type": "object"
    },
    "DataflowGraphNodeGraphSettings": {
      "description": "DataflowGraph graph node settings.",
      "properties": {
        "artifact": {
          "description": "The artifact name and version to pull. This should be in the format `<artifact-name>:<version>`.",
          "type": "string"
        },
        "configuration": {
          "description": "Configuration key-value pairs.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/DataflowGraphNodeConfiguration"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "registryEndpointRef": {
          "description": "Reference to the registry endpoint for pulling the artifact.",
          "type": "string"
        }
      },
      "required": [
        "registryEndpointRef",
        "artifact"
      ],
      "type": "object"
    },
    "DataflowGraphProperties": {
      "description": "DataflowGraph properties.",
      "properties": {
        "mode": {
          "description": "The mode of the dataflow graph.",
          "oneOf": [
            {
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "nodeConnections": {
          "description": "List of connections between nodes in the dataflow graph.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/DataflowGraphNodeConnection"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "nodes": {
          "description": "List of nodes in the dataflow graph.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/DataflowGraphNode"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "requestDiskPersistence": {
          "description": "Disk persistence mode.",
          "oneOf": [
            {
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "nodes",
        "nodeConnections"
      ],
      "type": "object"
    },
    "DataflowGraphSourceSettings": {
      "description": "DataflowGraph source node settings.",
      "properties": {
        "assetRef": {
          "description": "Reference to the resource in Azure Device Registry where the data in the endpoint originates from.",
          "type": "string"
        },
        "dataSources": {
          "description": "List of data sources.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "endpointRef": {
          "description": "The endpoint reference for the source.",
          "type": "string"
        }
      },
      "required": [
        "endpointRef",
        "dataSources"
      ],
      "type": "object"
    },
    "DataflowOpenTelemetryAuthentication": {
      "description": "Dataflow OpenTelemetry authentication properties.",
      "oneOf": [
        {
          "description": "DataflowOpenTelemetryAnonymousAuthentication properties.",
          "properties": {
            "anonymousSettings": {
              "description": "Settings for the anonymous connection",
              "oneOf": [
                {
                  "type": "object"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "method": {
              "enum": [
                "Anonymous"
              ],
              "type": "string"
            }
          },
          "required": [
            "anonymousSettings",
            "method"
          ],
          "type": "object"
        },
        {
          "description": "DataflowOpenTelemetryServiceAccountAuthentication properties.",
          "properties": {
            "method": {
              "enum": [
                "ServiceAccountToken"
              ],
              "type": "string"
            },
            "serviceAccountTokenSettings": {
              "description": "Kubernetes service account token authentication.",
              "oneOf": [
                {
                  "$ref": "#/definitions/DataflowEndpointAuthenticationServiceAccountToken"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "serviceAccountTokenSettings",
            "method"
          ],
          "type": "object"
        },
        {
          "description": "DataflowOpenTelemetryX509CertificateAuthentication properties.",
          "properties": {
            "method": {
              "enum": [
                "X509Certificate"
              ],
              "type": "string"
            },
            "x509CertificateSettings": {
              "description": "X.509 certificate authentication settings.",
              "oneOf": [
                {
                  "$ref": "#/definitions/DataflowEndpointAuthenticationX509"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "x509CertificateSettings",
            "method"
          ],
          "type": "object"
        }
      ],
      "properties": {},
      "type": "object"
    },
    "DataflowOperation": {
      "description": "Dataflow Operation properties. NOTE - One only method is allowed to be used for one entry.",
      "properties": {
        "builtInTransformationSettings": {
          "description": "Built In Transformation configuration.",
          "oneOf": [
            {
              "$ref": "#/definitions/DataflowBuiltInTransformationSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "destinationSettings": {
          "description": "Destination configuration.",
          "oneOf": [
            {
              "$ref": "#/definitions/DataflowDestinationOperationSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "name": {
          "description": "Optional user provided name of the transformation.",
          "maxLength": 64,
          "type": "string"
        },
        "operationType": {
          "description": "Type of operation.",
          "oneOf": [
            {
              "enum": [
                "Source",
                "Destination",
                "BuiltInTransformation"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "sourceSettings": {
          "description": "Source configuration.",
          "oneOf": [
            {
              "$ref": "#/definitions/DataflowSourceOperationSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "operationType"
      ],
      "type": "object"
    },
    "DataflowProfileProperties": {
      "description": "DataflowProfile Resource properties",
      "properties": {
        "diagnostics": {
          "description": "Spec defines the desired identities of NBC diagnostics settings.",
          "oneOf": [
            {
              "$ref": "#/definitions/ProfileDiagnostics"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "instanceCount": {
          "description": "To manually scale the dataflow profile, specify the maximum number of instances you want to run.",
          "oneOf": [
            {
              "default": 1,
              "maximum": 20,
              "minimum": 1,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "DataflowProperties": {
      "description": "Dataflow Resource properties",
      "properties": {
        "mode": {
          "description": "Mode for Dataflow. Optional; defaults to Enabled.",
          "oneOf": [
            {
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "operations": {
          "description": "List of operations including source and destination references as well as transformation.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/DataflowOperation"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "requestDiskPersistence": {
          "description": "Disk persistence mode.",
          "oneOf": [
            {
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "operations"
      ],
      "type": "object"
    },
    "DataflowSourceOperationSettings": {
      "description": "Dataflow Source Operation properties",
      "properties": {
        "assetRef": {
          "description": "Reference to the resource in Azure Device Registry where the data in the endpoint originates from.",
          "type": "string"
        },
        "dataSources": {
          "description": "List of source locations. Can be Broker or Kafka topics. Supports wildcards # and +.",
          "oneOf": [
            {
              "items": {
                "minLength": 1,
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "endpointRef": {
          "description": "Reference to the Dataflow Endpoint resource. Can only be of Broker and Kafka type.",
          "type": "string"
        },
        "schemaRef": {
          "description": "Schema CR reference. Data will be deserialized according to the schema, and dropped if it doesn't match.",
          "type": "string"
        },
        "serializationFormat": {
          "description": "Content is a JSON Schema. Allowed: JSON Schema/draft-7.",
          "oneOf": [
            {
              "enum": [
                "Json"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "endpointRef",
        "dataSources"
      ],
      "type": "object"
    },
    "DiagnosticsLogs": {
      "description": "Diagnostic Log properties",
      "properties": {
        "level": {
          "default": "info",
          "description": "The log level. Examples - 'debug', 'info', 'warn', 'error', 'trace'.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DiskBackedMessageBuffer": {
      "description": "DiskBackedMessageBuffer properties",
      "properties": {
        "ephemeralVolumeClaimSpec": {
          "description": "Use the specified persistent volume claim template to mount a \"generic ephemeral volume\" for the message buffer. See <https://kubernetes.io/docs/concepts/storage/ephemeral-volumes/#generic-ephemeral-volumes> for details.",
          "oneOf": [
            {
              "$ref": "#/definitions/VolumeClaimSpec"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "maxSize": {
          "description": "The max size of the message buffer on disk. If a PVC template is specified using one of ephemeralVolumeClaimSpec or persistentVolumeClaimSpec, then this size is used as the request and limit sizes of that template. If neither ephemeralVolumeClaimSpec nor persistentVolumeClaimSpec are specified, then an emptyDir volume is mounted with this size as its limit. See <https://kubernetes.io/docs/concepts/storage/volumes/#emptydir> for details.",
          "oneOf": [
            {
              "pattern": "^[0-9]+[KMGTPE]$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "persistentVolumeClaimSpec": {
          "description": "Use the specified persistent volume claim template to mount a persistent volume for the message buffer.",
          "oneOf": [
            {
              "$ref": "#/definitions/VolumeClaimSpec"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "maxSize"
      ],
      "type": "object"
    },
    "ExtendedLocation": {
      "description": "Extended location is an extension of Azure locations. They provide a way to use their Azure ARC enabled Kubernetes clusters as target locations for deploying Azure services instances.",
      "properties": {
        "name": {
          "description": "The name of the extended location.",
          "type": "string"
        },
        "type": {
          "description": "Type of ExtendedLocation.",
          "oneOf": [
            {
              "enum": [
                "CustomLocation"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "name",
        "type"
      ],
      "type": "object"
    },
    "Frontend": {
      "description": "The desired properties of the frontend instances of the Broker",
      "properties": {
        "replicas": {
          "description": "The desired number of frontend instances (pods).",
          "oneOf": [
            {
              "maximum": 16,
              "minimum": 1,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "workers": {
          "description": "Number of logical frontend workers per instance (pod).",
          "oneOf": [
            {
              "default": 2,
              "maximum": 16,
              "minimum": 1,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "replicas"
      ],
      "type": "object"
    },
    "GenerateResourceLimits": {
      "description": "GenerateResourceLimits properties",
      "properties": {
        "cpu": {
          "description": "The toggle to enable/disable cpu resource limits.",
          "oneOf": [
            {
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "InstanceFeature": {
      "description": "The features of the AIO Instance.",
      "properties": {
        "mode": {
          "description": "The state of the feature.",
          "oneOf": [
            {
              "enum": [
                "Stable",
                "Preview",
                "Disabled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "settings": {
          "description": "The settings of the feature.",
          "oneOf": [
            {
              "additionalProperties": {
                "enum": [
                  "Enabled",
                  "Disabled"
                ],
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "InstanceProperties": {
      "description": "The properties of the Instance resource.",
      "properties": {
        "adrNamespaceRef": {
          "description": "The Azure Device Registry Namespace used by Assets, Discovered Assets and devices",
          "oneOf": [
            {
              "$ref": "#/definitions/AzureDeviceRegistryNamespaceRef"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "defaultSecretProviderClassRef": {
          "description": "The reference to the AIO Secret provider class.",
          "oneOf": [
            {
              "$ref": "#/definitions/SecretProviderClassRef"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "description": {
          "description": "Detailed description of the Instance.",
          "type": "string"
        },
        "features": {
          "description": "The features of the AIO Instance.",
          "oneOf": [
            {
              "additionalProperties": {
                "$ref": "#/definitions/InstanceFeature"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "schemaRegistryRef": {
          "description": "The reference to the Schema Registry for this AIO Instance.",
          "oneOf": [
            {
              "$ref": "#/definitions/SchemaRegistryRef"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "schemaRegistryRef"
      ],
      "type": "object"
    },
    "KubernetesReference": {
      "description": "Kubernetes reference",
      "properties": {
        "apiGroup": {
          "description": "APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.",
          "type": "string"
        },
        "kind": {
          "description": "Kind is the type of resource being referenced",
          "type": "string"
        },
        "name": {
          "description": "Name is the name of resource being referenced",
          "type": "string"
        },
        "namespace": {
          "description": "Namespace is the namespace of the resource being referenced. This field is required when the resource has a namespace.",
          "type": "string"
        }
      },
      "required": [
        "kind",
        "name"
      ],
      "type": "object"
    },
    "ListenerPort": {
      "description": "Defines a TCP port on which a `BrokerListener` listens.",
      "properties": {
        "authenticationRef": {
          "description": "Reference to client authentication settings. Omit to disable authentication.",
          "type": "string"
        },
        "authorizationRef": {
          "description": "Reference to client authorization settings. Omit to disable authorization.",
          "type": "string"
        },
        "nodePort": {
          "description": "Kubernetes node port. Only relevant when this port is associated with a `NodePort` listener.",
          "oneOf": [
            {
              "maximum": 65535,
              "minimum": 0,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "port": {
          "description": "TCP port for accepting client connections.",
          "oneOf": [
            {
              "maximum": 65535,
              "minimum": 0,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "protocol": {
          "description": "Protocol to use for client connections.",
          "oneOf": [
            {
              "enum": [
                "Mqtt",
                "WebSockets"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tls": {
          "description": "TLS server certificate settings for this port. Omit to disable TLS.",
          "oneOf": [
            {
              "$ref": "#/definitions/TlsCertMethod"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "port"
      ],
      "type": "object"
    },
    "LocalKubernetesReference": {
      "description": "Kubernetes reference",
      "properties": {
        "apiGroup": {
          "description": "APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.",
          "type": "string"
        },
        "kind": {
          "description": "Kind is the type of resource being referenced",
          "type": "string"
        },
        "name": {
          "description": "Name is the name of resource being referenced",
          "type": "string"
        }
      },
      "required": [
        "kind",
        "name"
      ],
      "type": "object"
    },
    "ManagedServiceIdentity": {
      "description": "Managed service identity (system assigned and/or user assigned identities)",
      "properties": {
        "type": {
          "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
          "oneOf": [
            {
              "enum": [
                "None",
                "SystemAssigned",
                "UserAssigned",
                "SystemAssigned,UserAssigned"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "userAssignedIdentities": {
          "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
          "oneOf": [
            {
              "additionalProperties": {
                "$ref": "#/definitions/UserAssignedIdentity"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "type"
      ],
      "type": "object"
    },
    "Metrics": {
      "description": "Diagnostic Metrics properties",
      "properties": {
        "prometheusPort": {
          "description": "The prometheus port to expose the metrics.",
          "oneOf": [
            {
              "default": 9600,
              "maximum": 65535,
              "minimum": 0,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "PrincipalDefinition": {
      "description": "PrincipalDefinition properties of Rule",
      "properties": {
        "attributes": {
          "description": "A list of key-value pairs that match the attributes of the clients. The attributes are case-sensitive and must match the attributes provided by the clients during authentication.",
          "oneOf": [
            {
              "items": {
                "additionalProperties": {
                  "type": "string"
                },
                "properties": {},
                "type": "object"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "clientIds": {
          "description": "A list of client IDs that match the clients. The client IDs are case-sensitive and must match the client IDs provided by the clients during connection.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "usernames": {
          "description": "A list of usernames that match the clients. The usernames are case-sensitive and must match the usernames provided by the clients during authentication.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ProfileDiagnostics": {
      "description": "DataflowProfile Diagnostics properties",
      "properties": {
        "logs": {
          "description": "Diagnostic log settings for the resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/DiagnosticsLogs"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "metrics": {
          "description": "The metrics settings for the resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/Metrics"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "RegistryEndpointArtifactPullSecretSettings": {
      "description": "RegistryEndpoint Artifact Pull Secret authentication properties",
      "properties": {
        "secretRef": {
          "description": "The name of the kubernetes secret that contains the artifact pull secret.",
          "type": "string"
        }
      },
      "required": [
        "secretRef"
      ],
      "type": "object"
    },
    "RegistryEndpointAuthentication": {
      "description": "Model for RegistryEndpointAuthentication",
      "oneOf": [
        {
          "description": "Anonymous authentication",
          "properties": {
            "anonymousSettings": {
              "description": "Anonymous authentication properties",
              "oneOf": [
                {
                  "type": "object"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "method": {
              "enum": [
                "Anonymous"
              ],
              "type": "string"
            }
          },
          "required": [
            "anonymousSettings",
            "method"
          ],
          "type": "object"
        },
        {
          "description": "Artifact Pull Secret authentication",
          "properties": {
            "artifactPullSecretSettings": {
              "description": "Artifact Pull Secret authentication properties",
              "oneOf": [
                {
                  "$ref": "#/definitions/RegistryEndpointArtifactPullSecretSettings"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            },
            "method": {
              "enum": [
                "ArtifactPullSecret"
              ],
              "type": "string"
            }
          },
          "required": [
            "artifactPullSecretSettings",
            "method"
          ],
          "type": "object"
        },
        {
          "description": "System assigned identity authentication",
          "properties": {
            "method": {
              "enum": [
                "SystemAssignedManagedIdentity"
              ],
              "type": "string"
            },
            "systemAssignedManagedIdentitySettings": {
              "description": "System assigned managed identity properties",
              "oneOf": [
                {
                  "$ref": "#/definitions/RegistryEndpointSystemAssignedManagedIdentitySettings"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "systemAssignedManagedIdentitySettings",
            "method"
          ],
          "type": "object"
        },
        {
          "description": "User assigned identity authentication",
          "properties": {
            "method": {
              "enum": [
                "UserAssignedManagedIdentity"
              ],
              "type": "string"
            },
            "userAssignedManagedIdentitySettings": {
              "description": "User assigned managed identity properties",
              "oneOf": [
                {
                  "$ref": "#/definitions/RegistryEndpointUserAssignedManagedIdentitySettings"
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
                }
              ]
            }
          },
          "required": [
            "userAssignedManagedIdentitySettings",
            "method"
          ],
          "type": "object"
        }
      ],
      "properties": {},
      "type": "object"
    },
    "RegistryEndpointProperties": {
      "description": "RegistryEndpoint properties",
      "properties": {
        "authentication": {
          "description": "The authentication settings for the Azure Container Registry.",
          "oneOf": [
            {
              "$ref": "#/definitions/RegistryEndpointAuthentication"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "host": {
          "description": "The Container Registry endpoint hostname.",
          "maxLength": 63,
          "minLength": 3,
          "type": "string"
        },
        "trustSettings": {
          "description": "Trust settings for the registry endpoint",
          "oneOf": [
            {
              "$ref": "#/definitions/RegistryEndpointTrustedSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "host",
        "authentication"
      ],
      "type": "object"
    },
    "RegistryEndpointSystemAssignedManagedIdentitySettings": {
      "description": "System assigned managed identity properties",
      "properties": {
        "audience": {
          "description": "Audience of the service to authenticate against. Optional; defaults to the audience for Service host configuration.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RegistryEndpointTrustedSettings": {
      "description": "RegistryEndpointTrustedSettings properties",
      "properties": {
        "trustedSigningKeys": {
          "description": "The trust properties for the registry endpoint.",
          "oneOf": [
            {
              "$ref": "#/definitions/RegistryEndpointTrustedSigningKey"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "trustedSigningKeys"
      ],
      "type": "object"
    },
    "RegistryEndpointTrustedSigningKey": {
      "description": "RegistryEndpoint Trust properties",
      "oneOf": [
        {
          "description": "Settings for RegistryEndpoint trust provided through a configmap.",
          "properties": {
            "configMapRef": {
              "description": "The name of the configmap.",
              "type": "string"
            },
            "type": {
              "enum": [
                "ConfigMap"
              ],
              "type": "string"
            }
          },
          "required": [
            "configMapRef",
            "type"
          ],
          "type": "object"
        },
        {
          "description": "Settings for RegistryEndpoint trust provided through a secret.",
          "properties": {
            "secretRef": {
              "description": "The name of the secret.",
              "type": "string"
            },
            "type": {
              "enum": [
                "Secret"
              ],
              "type": "string"
            }
          },
          "required": [
            "secretRef",
            "type"
          ],
          "type": "object"
        }
      ],
      "properties": {},
      "type": "object"
    },
    "RegistryEndpointUserAssignedManagedIdentitySettings": {
      "description": "User assigned managed identity properties",
      "properties": {
        "clientId": {
          "description": "Client ID for the user-assigned managed identity.",
          "type": "string"
        },
        "scope": {
          "description": "Resource identifier (application ID URI) of the resource, affixed with the .default suffix.",
          "type": "string"
        },
        "tenantId": {
          "description": "Tenant ID.",
          "type": "string"
        }
      },
      "required": [
        "clientId",
        "tenantId"
      ],
      "type": "object"
    },
    "SanForCert": {
      "description": "Subject Alternative Names (SANs) for certificate.",
      "properties": {
        "dns": {
          "description": "DNS SANs.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "ip": {
          "description": "IP address SANs.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "dns",
        "ip"
      ],
      "type": "object"
    },
    "SchemaRegistryRef": {
      "description": "The reference to the Schema Registry for this AIO Instance.",
      "properties": {
        "resourceId": {
          "description": "The resource ID of the Schema Registry.",
          "type": "string"
        }
      },
      "required": [
        "resourceId"
      ],
      "type": "object"
    },
    "SecretProviderClassRef": {
      "description": "The reference to the AIO Secret provider class.",
      "properties": {
        "resourceId": {
          "description": "The resource ID of the AIO Secret provider class.",
          "type": "string"
        }
      },
      "required": [
        "resourceId"
      ],
      "type": "object"
    },
    "SelfCheck": {
      "description": "Broker Diagnostic Self check properties",
      "properties": {
        "intervalSeconds": {
          "description": "The self check interval.",
          "oneOf": [
            {
              "default": 30,
              "maximum": 300,
              "minimum": 30,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "mode": {
          "description": "The toggle to enable/disable self check.",
          "oneOf": [
            {
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "timeoutSeconds": {
          "description": "The timeout for self check.",
          "oneOf": [
            {
              "default": 15,
              "maximum": 120,
              "minimum": 5,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "SelfTracing": {
      "description": "Diagnostic Self tracing properties",
      "properties": {
        "intervalSeconds": {
          "description": "The self tracing interval.",
          "oneOf": [
            {
              "default": 30,
              "maximum": 300,
              "minimum": 1,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "mode": {
          "description": "The toggle to enable/disable self tracing.",
          "oneOf": [
            {
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "StateStoreResourceRule": {
      "description": "State Store Resource Rule properties.",
      "properties": {
        "keyType": {
          "description": "Allowed keyTypes pattern, string, binary. The key type used for matching, for example pattern tries to match the key to a glob-style pattern and string checks key is equal to value provided in keys.",
          "oneOf": [
            {
              "enum": [
                "Pattern",
                "String",
                "Binary"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "keys": {
          "description": "Give access to state store keys for the corresponding principals defined. When key type is pattern set glob-style pattern (e.g., '*', 'clients/*').",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "method": {
          "description": "Give access for `Read`, `Write` and `ReadWrite` access level.",
          "oneOf": [
            {
              "enum": [
                "Read",
                "Write",
                "ReadWrite"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "keyType",
        "keys",
        "method"
      ],
      "type": "object"
    },
    "SubscriberQueueLimit": {
      "description": "The settings of Subscriber Queue Limit.",
      "properties": {
        "length": {
          "description": "The maximum length of the queue before messages start getting dropped.",
          "oneOf": [
            {
              "minimum": 1,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "strategy": {
          "description": "The strategy to use for dropping messages from the queue.",
          "oneOf": [
            {
              "enum": [
                "None",
                "DropOldest"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "TlsCertMethod": {
      "description": "Collection of different TLS types, NOTE- Enum at a time only one of them needs to be supported",
      "properties": {
        "certManagerCertificateSpec": {
          "description": "Option 1 - Automatic TLS server certificate management with cert-manager.",
          "oneOf": [
            {
              "$ref": "#/definitions/CertManagerCertificateSpec"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "manual": {
          "description": "Option 2 - Manual TLS server certificate management through a defined secret.",
          "oneOf": [
            {
              "$ref": "#/definitions/X509ManualCertificate"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "mode": {
          "description": "Mode of TLS server certificate management.",
          "oneOf": [
            {
              "enum": [
                "Automatic",
                "Manual"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "mode"
      ],
      "type": "object"
    },
    "TlsProperties": {
      "description": "Tls properties",
      "properties": {
        "mode": {
          "description": "Mode for TLS.",
          "oneOf": [
            {
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "trustedCaCertificateConfigMapRef": {
          "description": "Trusted CA certificate config map.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Traces": {
      "description": "Broker Diagnostic Trace properties",
      "properties": {
        "cacheSizeMegabytes": {
          "description": "The cache size in megabytes.",
          "oneOf": [
            {
              "default": 16,
              "maximum": 128,
              "minimum": 1,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "mode": {
          "description": "The toggle to enable/disable traces.",
          "oneOf": [
            {
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "selfTracing": {
          "description": "The self tracing properties.",
          "oneOf": [
            {
              "$ref": "#/definitions/SelfTracing"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "spanChannelCapacity": {
          "description": "The span channel capacity.",
          "oneOf": [
            {
              "default": 1000,
              "maximum": 100000,
              "minimum": 1000,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "UserAssignedIdentity": {
      "description": "User assigned identity properties",
      "properties": {},
      "type": "object"
    },
    "VolumeClaimResourceRequirements": {
      "description": "VolumeClaimResourceRequirements properties",
      "properties": {
        "claims": {
          "description": "Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container.\n\nThis is an alpha field and requires enabling the DynamicResourceAllocation feature gate.\n\nThis field is immutable. It can only be set for containers.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/VolumeClaimResourceRequirementsClaims"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "limits": {
          "description": "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "requests": {
          "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "VolumeClaimResourceRequirementsClaims": {
      "description": "VolumeClaimResourceRequirementsClaims properties.",
      "properties": {
        "name": {
          "description": "Name of the resource. This must match the name of a resource in spec.resourceClaims.",
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "VolumeClaimSpec": {
      "description": "VolumeClaimSpec properties",
      "properties": {
        "accessModes": {
          "description": "AccessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "dataSource": {
          "description": "This field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. If the AnyVolumeDataSource feature gate is enabled, this field will always have the same contents as the DataSourceRef field.",
          "oneOf": [
            {
              "$ref": "#/definitions/LocalKubernetesReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "dataSourceRef": {
          "description": "Specifies the object from which to populate the volume with data, if a non-empty volume is desired. This may be any local object from a non-empty API group (non core object) or a PersistentVolumeClaim object. When this field is specified, volume binding will only succeed if the type of the specified object matches some installed volume populator or dynamic provisioner. This field will replace the functionality of the DataSource field and as such if both fields are non-empty, they must have the same value. For backwards compatibility, both fields (DataSource and DataSourceRef) will be set to the same value automatically if one of them is empty and the other is non-empty. There are two important differences between DataSource and DataSourceRef: * While DataSource only allows two specific types of objects, DataSourceRef allows any non-core object, as well as PersistentVolumeClaim objects. * While DataSource ignores disallowed values (dropping them), DataSourceRef preserves all values, and generates an error if a disallowed value is specified. (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.",
          "oneOf": [
            {
              "$ref": "#/definitions/KubernetesReference"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "description": "Resources represents the minimum resources the volume should have. If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements that are lower than previous value but must still be higher than capacity recorded in the status field of the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources",
          "oneOf": [
            {
              "$ref": "#/definitions/VolumeClaimResourceRequirements"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "selector": {
          "description": "A label query over volumes to consider for binding.",
          "oneOf": [
            {
              "$ref": "#/definitions/VolumeClaimSpecSelector"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "storageClassName": {
          "description": "Name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1",
          "type": "string"
        },
        "volumeMode": {
          "description": "volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec. This is a beta feature.",
          "type": "string"
        },
        "volumeName": {
          "description": "VolumeName is the binding reference to the PersistentVolume backing this claim.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "VolumeClaimSpecSelector": {
      "description": "VolumeClaimSpecSelector properties",
      "properties": {
        "matchExpressions": {
          "description": "MatchExpressions is a list of label selector requirements. The requirements are ANDed.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/VolumeClaimSpecSelectorMatchExpressions"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "matchLabels": {
          "description": "MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "VolumeClaimSpecSelectorMatchExpressions": {
      "description": "VolumeClaimSpecSelectorMatchExpressions properties",
      "properties": {
        "key": {
          "description": "key is the label key that the selector applies to.",
          "type": "string"
        },
        "operator": {
          "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
          "oneOf": [
            {
              "enum": [
                "In",
                "NotIn",
                "Exists",
                "DoesNotExist"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "values": {
          "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "key",
        "operator"
      ],
      "type": "object"
    },
    "X509ManualCertificate": {
      "description": "X509 Certificate Authentication properties.",
      "properties": {
        "secretRef": {
          "description": "Kubernetes secret containing an X.509 client certificate. This is a reference to the secret through an identifying name, not the secret itself.",
          "type": "string"
        }
      },
      "required": [
        "secretRef"
      ],
      "type": "object"
    },
    "instances_akriConnectorTemplates_childResource": {
      "description": "Microsoft.IoTOperations/instances/akriConnectorTemplates",
      "properties": {
        "apiVersion": {
          "enum": [
            "2025-07-01-preview"
          ],
          "type": "string"
        },
        "extendedLocation": {
          "description": "Edge location of the resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/ExtendedLocation"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "name": {
          "description": "Name of AkriConnectorTemplate resource.",
          "oneOf": [
            {
              "maxLength": 63,
              "minLength": 3,
              "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/AkriConnectorTemplateProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "akriConnectorTemplates"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "instances_akriConnectorTemplates_connectors_childResource": {
      "description": "Microsoft.IoTOperations/instances/akriConnectorTemplates/connectors",
      "properties": {
        "apiVersion": {
          "enum": [
            "2025-07-01-preview"
          ],
          "type": "string"
        },
        "extendedLocation": {
          "description": "Edge location of the resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/ExtendedLocation"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "name": {
          "description": "Name of AkriConnector resource.",
          "oneOf": [
            {
              "maxLength": 63,
              "minLength": 3,
              "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/AkriConnectorProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "connectors"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "instances_brokers_authentications_childResource": {
      "description": "Microsoft.IoTOperations/instances/brokers/authentications",
      "properties": {
        "apiVersion": {
          "enum": [
            "2025-07-01-preview"
          ],
          "type": "string"
        },
        "extendedLocation": {
          "description": "Edge location of the resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/ExtendedLocation"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "name": {
          "description": "Name of Instance broker authentication resource",
          "oneOf": [
            {
              "maxLength": 63,
              "minLength": 3,
              "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/BrokerAuthenticationProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "authentications"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "instances_brokers_authorizations_childResource": {
      "description": "Microsoft.IoTOperations/instances/brokers/authorizations",
      "properties": {
        "apiVersion": {
          "enum": [
            "2025-07-01-preview"
          ],
          "type": "string"
        },
        "extendedLocation": {
          "description": "Edge location of the resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/ExtendedLocation"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "name": {
          "description": "Name of Instance broker authorization resource",
          "oneOf": [
            {
              "maxLength": 63,
              "minLength": 3,
              "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/BrokerAuthorizationProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "authorizations"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "instances_brokers_childResource": {
      "description": "Microsoft.IoTOperations/instances/brokers",
      "properties": {
        "apiVersion": {
          "enum": [
            "2025-07-01-preview"
          ],
          "type": "string"
        },
        "extendedLocation": {
          "description": "Edge location of the resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/ExtendedLocation"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "name": {
          "description": "Name of broker.",
          "oneOf": [
            {
              "maxLength": 63,
              "minLength": 3,
              "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/BrokerProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "brokers"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "instances_brokers_listeners_childResource": {
      "description": "Microsoft.IoTOperations/instances/brokers/listeners",
      "properties": {
        "apiVersion": {
          "enum": [
            "2025-07-01-preview"
          ],
          "type": "string"
        },
        "extendedLocation": {
          "description": "Edge location of the resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/ExtendedLocation"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "name": {
          "description": "Name of Instance broker listener resource",
          "oneOf": [
            {
              "maxLength": 63,
              "minLength": 3,
              "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/BrokerListenerProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "listeners"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "instances_dataflowEndpoints_childResource": {
      "description": "Microsoft.IoTOperations/instances/dataflowEndpoints",
      "properties": {
        "apiVersion": {
          "enum": [
            "2025-07-01-preview"
          ],
          "type": "string"
        },
        "extendedLocation": {
          "description": "Edge location of the resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/ExtendedLocation"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "name": {
          "description": "Name of Instance dataflowEndpoint resource",
          "oneOf": [
            {
              "maxLength": 63,
              "minLength": 3,
              "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/DataflowEndpointProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "dataflowEndpoints"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "instances_dataflowProfiles_childResource": {
      "description": "Microsoft.IoTOperations/instances/dataflowProfiles",
      "properties": {
        "apiVersion": {
          "enum": [
            "2025-07-01-preview"
          ],
          "type": "string"
        },
        "extendedLocation": {
          "description": "Edge location of the resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/ExtendedLocation"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "name": {
          "description": "Name of Instance dataflowProfile resource",
          "oneOf": [
            {
              "maxLength": 63,
              "minLength": 3,
              "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/DataflowProfileProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "dataflowProfiles"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "instances_dataflowProfiles_dataflowGraphs_childResource": {
      "description": "Microsoft.IoTOperations/instances/dataflowProfiles/dataflowGraphs",
      "properties": {
        "apiVersion": {
          "enum": [
            "2025-07-01-preview"
          ],
          "type": "string"
        },
        "extendedLocation": {
          "description": "Edge location of the resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/ExtendedLocation"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "name": {
          "description": "Name of Instance dataflowEndpoint resource.",
          "oneOf": [
            {
              "maxLength": 63,
              "minLength": 3,
              "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/DataflowGraphProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "dataflowGraphs"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "instances_dataflowProfiles_dataflows_childResource": {
      "description": "Microsoft.IoTOperations/instances/dataflowProfiles/dataflows",
      "properties": {
        "apiVersion": {
          "enum": [
            "2025-07-01-preview"
          ],
          "type": "string"
        },
        "extendedLocation": {
          "description": "Edge location of the resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/ExtendedLocation"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "name": {
          "description": "Name of Instance dataflowProfile dataflow resource",
          "oneOf": [
            {
              "maxLength": 63,
              "minLength": 3,
              "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/DataflowProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "dataflows"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "instances_registryEndpoints_childResource": {
      "description": "Microsoft.IoTOperations/instances/registryEndpoints",
      "properties": {
        "apiVersion": {
          "enum": [
            "2025-07-01-preview"
          ],
          "type": "string"
        },
        "extendedLocation": {
          "description": "Edge location of the resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/ExtendedLocation"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "name": {
          "description": "Name of RegistryEndpoint resource",
          "oneOf": [
            {
              "maxLength": 63,
              "minLength": 3,
              "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "oneOf": [
            {
              "$ref": "#/definitions/RegistryEndpointProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "registryEndpoints"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    }
  }
}