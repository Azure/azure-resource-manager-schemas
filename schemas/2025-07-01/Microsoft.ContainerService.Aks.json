{
  "id": "https://schema.management.azure.com/schemas/2025-07-01/Microsoft.ContainerService.Aks.json#",
  "title": "Microsoft.ContainerService",
  "description": "Microsoft ContainerService Resource Types",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "resourceDefinitions": {
    "managedClusters": {
      "description": "Microsoft.ContainerService/managedClusters",
      "properties": {
        "apiVersion": {
          "enum": [
            "2025-07-01"
          ],
          "type": "string"
        },
        "extendedLocation": {
          "description": "The extended location of the Virtual Machine.",
          "oneOf": [
            {
              "$ref": "#/definitions/ExtendedLocation"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "identity": {
          "description": "The identity of the managed cluster, if configured.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedClusterIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "kind": {
          "description": "This is primarily used to expose different UI experiences in the portal for different kinds",
          "type": "string"
        },
        "location": {
          "description": "The geo-location where the resource lives",
          "type": "string"
        },
        "name": {
          "description": "The name of the managed cluster resource.",
          "oneOf": [
            {
              "maxLength": 63,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9]$|^[a-zA-Z0-9][-_a-zA-Z0-9]{0,61}[a-zA-Z0-9]$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Properties of a managed cluster.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedClusterProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "resources": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/managedClusters_agentPools_childResource"
              },
              {
                "$ref": "#/definitions/managedClusters_maintenanceConfigurations_childResource"
              },
              {
                "$ref": "#/definitions/managedClusters_trustedAccessRoleBindings_childResource"
              },
              {
                "$ref": "#/definitions/managedClusters_privateEndpointConnections_childResource"
              }
            ]
          },
          "type": "array"
        },
        "sku": {
          "description": "The managed cluster SKU.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedClusterSKU"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Resource tags.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.ContainerService/managedClusters"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "managedClusters_agentPools": {
      "description": "Microsoft.ContainerService/managedClusters/agentPools",
      "properties": {
        "apiVersion": {
          "enum": [
            "2025-07-01"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the agent pool.",
          "oneOf": [
            {
              "maxLength": 12,
              "minLength": 1,
              "pattern": "^[a-z][a-z0-9]{0,11}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Properties of an agent pool.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedClusterAgentPoolProfileProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.ContainerService/managedClusters/agentPools"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "managedClusters_maintenanceConfigurations": {
      "description": "Microsoft.ContainerService/managedClusters/maintenanceConfigurations",
      "properties": {
        "apiVersion": {
          "enum": [
            "2025-07-01"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the maintenance configuration.",
          "type": "string"
        },
        "properties": {
          "description": "Properties of a default maintenance configuration.",
          "oneOf": [
            {
              "$ref": "#/definitions/MaintenanceConfigurationProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.ContainerService/managedClusters/maintenanceConfigurations"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "managedClusters_privateEndpointConnections": {
      "description": "Microsoft.ContainerService/managedClusters/privateEndpointConnections",
      "properties": {
        "apiVersion": {
          "enum": [
            "2025-07-01"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the private endpoint connection.",
          "type": "string"
        },
        "properties": {
          "description": "The properties of a private endpoint connection.",
          "oneOf": [
            {
              "$ref": "#/definitions/PrivateEndpointConnectionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.ContainerService/managedClusters/privateEndpointConnections"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "managedClusters_trustedAccessRoleBindings": {
      "description": "Microsoft.ContainerService/managedClusters/trustedAccessRoleBindings",
      "properties": {
        "apiVersion": {
          "enum": [
            "2025-07-01"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of trusted access role binding.",
          "oneOf": [
            {
              "maxLength": 24,
              "minLength": 1,
              "pattern": "^([A-Za-z0-9-])+$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Properties for trusted access role binding",
          "oneOf": [
            {
              "$ref": "#/definitions/TrustedAccessRoleBindingProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.ContainerService/managedClusters/trustedAccessRoleBindings"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "snapshots": {
      "description": "Microsoft.ContainerService/snapshots",
      "properties": {
        "apiVersion": {
          "enum": [
            "2025-07-01"
          ],
          "type": "string"
        },
        "location": {
          "description": "The geo-location where the resource lives",
          "type": "string"
        },
        "name": {
          "description": "The name of the managed cluster resource.",
          "oneOf": [
            {
              "maxLength": 63,
              "minLength": 1,
              "pattern": "^[a-zA-Z0-9]$|^[a-zA-Z0-9][-_a-zA-Z0-9]{0,61}[a-zA-Z0-9]$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Properties of a snapshot.",
          "oneOf": [
            {
              "$ref": "#/definitions/SnapshotProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "Resource tags.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "Microsoft.ContainerService/snapshots"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    }
  },
  "definitions": {
    "AbsoluteMonthlySchedule": {
      "description": "For schedules like: 'recur every month on the 15th' or 'recur every 3 months on the 20th'.",
      "properties": {
        "dayOfMonth": {
          "description": "The date of the month.",
          "oneOf": [
            {
              "maximum": 31,
              "minimum": 1,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "intervalMonths": {
          "description": "Specifies the number of months between each set of occurrences.",
          "oneOf": [
            {
              "maximum": 6,
              "minimum": 1,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "intervalMonths",
        "dayOfMonth"
      ],
      "type": "object"
    },
    "AdvancedNetworking": {
      "description": "Advanced Networking profile for enabling observability and security feature suite on a cluster. For more information see aka.ms/aksadvancednetworking.",
      "properties": {
        "enabled": {
          "description": "Indicates the enablement of Advanced Networking functionalities of observability and security on AKS clusters. When this is set to true, all observability and security features will be set to enabled unless explicitly disabled. If not specified, the default is false.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "observability": {
          "description": "Observability profile to enable advanced network metrics and flow logs with historical contexts.",
          "oneOf": [
            {
              "$ref": "#/definitions/AdvancedNetworkingObservability"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "security": {
          "description": "Security profile to enable security features on cilium based cluster.",
          "oneOf": [
            {
              "$ref": "#/definitions/AdvancedNetworkingSecurity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "AdvancedNetworkingObservability": {
      "description": "Observability profile to enable advanced network metrics and flow logs with historical contexts.",
      "properties": {
        "enabled": {
          "description": "Indicates the enablement of Advanced Networking observability functionalities on clusters.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "AdvancedNetworkingSecurity": {
      "description": "Security profile to enable security features on cilium based cluster.",
      "properties": {
        "enabled": {
          "description": "This feature allows user to configure network policy based on DNS (FQDN) names. It can be enabled only on cilium based clusters. If not specified, the default is false.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "AgentPoolGatewayProfile": {
      "description": "Profile of the managed cluster gateway agent pool.",
      "properties": {
        "publicIPPrefixSize": {
          "description": "The Gateway agent pool associates one public IPPrefix for each static egress gateway to provide public egress. The size of Public IPPrefix should be selected by the user. Each node in the agent pool is assigned with one IP from the IPPrefix. The IPPrefix size thus serves as a cap on the size of the Gateway agent pool. Due to Azure public IPPrefix size limitation, the valid value range is [28, 31] (/31 = 2 nodes/IPs, /30 = 4 nodes/IPs, /29 = 8 nodes/IPs, /28 = 16 nodes/IPs). The default value is 31.",
          "oneOf": [
            {
              "default": 31,
              "maximum": 31,
              "minimum": 28,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "AgentPoolNetworkProfile": {
      "description": "Network settings of an agent pool.",
      "properties": {
        "allowedHostPorts": {
          "description": "The port ranges that are allowed to access. The specified ranges are allowed to overlap.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/PortRange"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "applicationSecurityGroups": {
          "description": "The IDs of the application security groups which agent pool will associate when created.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "nodePublicIPTags": {
          "description": "IPTags of instance-level public IPs.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/IPTag"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "AgentPoolSecurityProfile": {
      "description": "The security settings of an agent pool.",
      "properties": {
        "enableSecureBoot": {
          "description": "Secure Boot is a feature of Trusted Launch which ensures that only signed operating systems and drivers can boot. For more details, see aka.ms/aks/trustedlaunch.  If not specified, the default is false.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "enableVTPM": {
          "description": "vTPM is a Trusted Launch feature for configuring a dedicated secure vault for keys and measurements held locally on the node. For more details, see aka.ms/aks/trustedlaunch. If not specified, the default is false.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "AgentPoolStatus": {
      "description": "Contains read-only information about the Agent Pool.",
      "properties": {},
      "type": "object"
    },
    "AgentPoolUpgradeSettings": {
      "description": "Settings for upgrading an agentpool",
      "properties": {
        "drainTimeoutInMinutes": {
          "description": "The drain timeout for a node. The amount of time (in minutes) to wait on eviction of pods and graceful termination per node. This eviction wait time honors waiting on pod disruption budgets. If this time is exceeded, the upgrade fails. If not specified, the default is 30 minutes.",
          "oneOf": [
            {
              "maximum": 1440,
              "minimum": 1,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "maxSurge": {
          "description": "The maximum number or percentage of nodes that are surged during upgrade. This can either be set to an integer (e.g. '5') or a percentage (e.g. '50%'). If a percentage is specified, it is the percentage of the total agent pool size at the time of the upgrade. For percentages, fractional nodes are rounded up. If not specified, the default is 10%. For more information, including best practices, see: https://learn.microsoft.com/en-us/azure/aks/upgrade-cluster",
          "type": "string"
        },
        "maxUnavailable": {
          "description": "The maximum number or percentage of nodes that can be simultaneously unavailable during upgrade. This can either be set to an integer (e.g. '1') or a percentage (e.g. '5%'). If a percentage is specified, it is the percentage of the total agent pool size at the time of the upgrade. For percentages, fractional nodes are rounded up. If not specified, the default is 0. For more information, including best practices, see: https://learn.microsoft.com/en-us/azure/aks/upgrade-cluster",
          "type": "string"
        },
        "nodeSoakDurationInMinutes": {
          "description": "The soak duration for a node. The amount of time (in minutes) to wait after draining a node and before reimaging it and moving on to next node. If not specified, the default is 0 minutes.",
          "oneOf": [
            {
              "maximum": 30,
              "minimum": 0,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "undrainableNodeBehavior": {
          "description": "Defines the behavior for undrainable nodes during upgrade. The most common cause of undrainable nodes is Pod Disruption Budgets (PDBs), but other issues, such as pod termination grace period is exceeding the remaining per-node drain timeout or pod is still being in a running state, can also cause undrainable nodes.",
          "oneOf": [
            {
              "enum": [
                "Cordon",
                "Schedule"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "AgentPoolWindowsProfile": {
      "description": "The Windows agent pool's specific profile.",
      "properties": {
        "disableOutboundNat": {
          "description": "Whether to disable OutboundNAT in windows nodes. The default value is false. Outbound NAT can only be disabled if the cluster outboundType is NAT Gateway and the Windows agent pool does not have node public IP enabled.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "AzureKeyVaultKms": {
      "description": "Azure Key Vault key management service settings for the security profile.",
      "properties": {
        "enabled": {
          "description": "Whether to enable Azure Key Vault key management service. The default is false.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "keyId": {
          "description": "Identifier of Azure Key Vault key. See [key identifier format](https://docs.microsoft.com/en-us/azure/key-vault/general/about-keys-secrets-certificates#vault-name-and-object-name) for more details. When Azure Key Vault key management service is enabled, this field is required and must be a valid key identifier. When Azure Key Vault key management service is disabled, leave the field empty.",
          "type": "string"
        },
        "keyVaultNetworkAccess": {
          "description": "Network access of the key vault. Network access of key vault. The possible values are `Public` and `Private`. `Public` means the key vault allows public access from all networks. `Private` means the key vault disables public access and enables private link. The default value is `Public`.",
          "oneOf": [
            {
              "enum": [
                "Public",
                "Private"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "keyVaultResourceId": {
          "description": "Resource ID of key vault. When keyVaultNetworkAccess is `Private`, this field is required and must be a valid resource ID. When keyVaultNetworkAccess is `Public`, leave the field empty.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ClusterUpgradeSettings": {
      "description": "Settings for upgrading a cluster.",
      "properties": {
        "overrideSettings": {
          "description": "Settings for overrides.",
          "oneOf": [
            {
              "$ref": "#/definitions/UpgradeOverrideSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ContainerServiceLinuxProfile": {
      "description": "Profile for Linux VMs in the container service cluster.",
      "properties": {
        "adminUsername": {
          "description": "The administrator username to use for Linux VMs.",
          "oneOf": [
            {
              "pattern": "^[A-Za-z][-A-Za-z0-9_]*$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "ssh": {
          "description": "The SSH configuration for Linux-based VMs running on Azure.",
          "oneOf": [
            {
              "$ref": "#/definitions/ContainerServiceSshConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "adminUsername",
        "ssh"
      ],
      "type": "object"
    },
    "ContainerServiceNetworkProfile": {
      "description": "Profile of network configuration.",
      "properties": {
        "advancedNetworking": {
          "description": "Advanced Networking profile for enabling observability and security feature suite on a cluster. For more information see aka.ms/aksadvancednetworking.",
          "oneOf": [
            {
              "$ref": "#/definitions/AdvancedNetworking"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "dnsServiceIP": {
          "description": "An IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified in serviceCidr.",
          "oneOf": [
            {
              "default": "10.0.0.10",
              "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "ipFamilies": {
          "description": "The IP families used to specify IP versions available to the cluster. IP families are used to determine single-stack or dual-stack clusters. For single-stack, the expected value is IPv4. For dual-stack, the expected values are IPv4 and IPv6.",
          "oneOf": [
            {
              "items": {
                "enum": [
                  "IPv4",
                  "IPv6"
                ],
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "loadBalancerProfile": {
          "description": "Profile of the cluster load balancer.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedClusterLoadBalancerProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "loadBalancerSku": {
          "description": "The load balancer sku for the managed cluster. The default is 'standard'. See [Azure Load Balancer SKUs](https://docs.microsoft.com/azure/load-balancer/skus) for more information about the differences between load balancer SKUs.",
          "oneOf": [
            {
              "enum": [
                "standard",
                "basic"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "natGatewayProfile": {
          "description": "Profile of the cluster NAT gateway.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedClusterNATGatewayProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "networkDataplane": {
          "description": "Network dataplane used in the Kubernetes cluster.",
          "oneOf": [
            {
              "enum": [
                "azure",
                "cilium"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "networkMode": {
          "description": "The network mode Azure CNI is configured with. This cannot be specified if networkPlugin is anything other than 'azure'.",
          "oneOf": [
            {
              "enum": [
                "transparent",
                "bridge"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "networkPlugin": {
          "description": "Network plugin used for building the Kubernetes network.",
          "oneOf": [
            {
              "enum": [
                "azure",
                "kubenet",
                "none"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "networkPluginMode": {
          "description": "The mode the network plugin should use.",
          "oneOf": [
            {
              "enum": [
                "overlay"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "networkPolicy": {
          "description": "Network policy used for building the Kubernetes network.",
          "oneOf": [
            {
              "enum": [
                "none",
                "calico",
                "azure",
                "cilium"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "outboundType": {
          "description": "The outbound (egress) routing method. This can only be set at cluster creation time and cannot be changed later. For more information see [egress outbound type](https://docs.microsoft.com/azure/aks/egress-outboundtype).",
          "oneOf": [
            {
              "enum": [
                "loadBalancer",
                "userDefinedRouting",
                "managedNATGateway",
                "userAssignedNATGateway",
                "none"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "podCidr": {
          "description": "A CIDR notation IP range from which to assign pod IPs when kubenet is used.",
          "oneOf": [
            {
              "default": "10.244.0.0/16",
              "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}(\\/([0-9]|[1-2][0-9]|3[0-2]))?$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "podCidrs": {
          "description": "The CIDR notation IP ranges from which to assign pod IPs. One IPv4 CIDR is expected for single-stack networking. Two CIDRs, one for each IP family (IPv4/IPv6), is expected for dual-stack networking.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "serviceCidr": {
          "description": "A CIDR notation IP range from which to assign service cluster IPs. It must not overlap with any Subnet IP ranges.",
          "oneOf": [
            {
              "default": "10.0.0.0/16",
              "pattern": "^([0-9]{1,3}\\.){3}[0-9]{1,3}(\\/([0-9]|[1-2][0-9]|3[0-2]))?$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "serviceCidrs": {
          "description": "The CIDR notation IP ranges from which to assign service cluster IPs. One IPv4 CIDR is expected for single-stack networking. Two CIDRs, one for each IP family (IPv4/IPv6), is expected for dual-stack networking. They must not overlap with any Subnet IP ranges.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "staticEgressGatewayProfile": {
          "description": "The profile for Static Egress Gateway addon. For more details about Static Egress Gateway, see https://aka.ms/aks/static-egress-gateway.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedClusterStaticEgressGatewayProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ContainerServiceSshConfiguration": {
      "description": "SSH configuration for Linux-based VMs running on Azure.",
      "properties": {
        "publicKeys": {
          "description": "The list of SSH public keys used to authenticate with Linux-based VMs. A maximum of 1 key may be specified.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/ContainerServiceSshPublicKey"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "publicKeys"
      ],
      "type": "object"
    },
    "ContainerServiceSshPublicKey": {
      "description": "Contains information about SSH certificate public key data.",
      "properties": {
        "keyData": {
          "description": "Certificate public key used to authenticate with VMs through SSH. The certificate must be in PEM format with or without headers.",
          "type": "string"
        }
      },
      "required": [
        "keyData"
      ],
      "type": "object"
    },
    "CreationData": {
      "description": "Data used when creating a target resource from a source resource.",
      "properties": {
        "sourceResourceId": {
          "description": "This is the ARM ID of the source object to be used to create the target object.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DailySchedule": {
      "description": "For schedules like: 'recur every day' or 'recur every 3 days'.",
      "properties": {
        "intervalDays": {
          "description": "Specifies the number of days between each set of occurrences.",
          "oneOf": [
            {
              "maximum": 7,
              "minimum": 1,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "intervalDays"
      ],
      "type": "object"
    },
    "DateSpan": {
      "description": "A date range. For example, between '2022-12-23' and '2023-01-05'.",
      "properties": {
        "end": {
          "description": "The end date of the date span.",
          "type": "string"
        },
        "start": {
          "description": "The start date of the date span.",
          "type": "string"
        }
      },
      "required": [
        "start",
        "end"
      ],
      "type": "object"
    },
    "DelegatedResource": {
      "description": "Delegated resource properties - internal use only.",
      "properties": {
        "location": {
          "description": "The source resource location - internal use only.",
          "type": "string"
        },
        "referralResource": {
          "description": "The delegation id of the referral delegation (optional) - internal use only.",
          "type": "string"
        },
        "resourceId": {
          "description": "The ARM resource id of the delegated resource - internal use only.",
          "type": "string"
        },
        "tenantId": {
          "description": "The tenant id of the delegated resource - internal use only.",
          "oneOf": [
            {
              "pattern": "^[0-9a-fA-F]{8}(-[0-9a-fA-F]{4}){3}-[0-9a-fA-F]{12}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ExtendedLocation": {
      "description": "The complex type of the extended location.",
      "properties": {
        "name": {
          "description": "The name of the extended location.",
          "type": "string"
        },
        "type": {
          "description": "The type of the extended location.",
          "oneOf": [
            {
              "enum": [
                "EdgeZone"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "GPUProfile": {
      "description": "GPU settings for the Agent Pool.",
      "properties": {
        "driver": {
          "description": "Whether to install GPU drivers. When it's not specified, default is Install.",
          "oneOf": [
            {
              "enum": [
                "Install",
                "None"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "IPTag": {
      "description": "Contains the IPTag associated with the object.",
      "properties": {
        "ipTagType": {
          "description": "The IP tag type. Example: RoutingPreference.",
          "type": "string"
        },
        "tag": {
          "description": "The value of the IP tag associated with the public IP. Example: Internet.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "IstioCertificateAuthority": {
      "description": "Istio Service Mesh Certificate Authority (CA) configuration. For now, we only support plugin certificates as described here https://aka.ms/asm-plugin-ca",
      "properties": {
        "plugin": {
          "description": "Plugin certificates information for Service Mesh.",
          "oneOf": [
            {
              "$ref": "#/definitions/IstioPluginCertificateAuthority"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "IstioComponents": {
      "description": "Istio components configuration.",
      "properties": {
        "egressGateways": {
          "description": "Istio egress gateways.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/IstioEgressGateway"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "ingressGateways": {
          "description": "Istio ingress gateways.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/IstioIngressGateway"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "IstioEgressGateway": {
      "description": "Istio egress gateway configuration.",
      "properties": {
        "enabled": {
          "description": "Whether to enable the egress gateway.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "enabled"
      ],
      "type": "object"
    },
    "IstioIngressGateway": {
      "description": "Istio ingress gateway configuration. For now, we support up to one external ingress gateway named `aks-istio-ingressgateway-external` and one internal ingress gateway named `aks-istio-ingressgateway-internal`.",
      "properties": {
        "enabled": {
          "description": "Whether to enable the ingress gateway.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "mode": {
          "description": "Mode of an ingress gateway.",
          "oneOf": [
            {
              "enum": [
                "External",
                "Internal"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "mode",
        "enabled"
      ],
      "type": "object"
    },
    "IstioPluginCertificateAuthority": {
      "description": "Plugin certificates information for Service Mesh.",
      "properties": {
        "certChainObjectName": {
          "description": "Certificate chain object name in Azure Key Vault.",
          "type": "string"
        },
        "certObjectName": {
          "description": "Intermediate certificate object name in Azure Key Vault.",
          "type": "string"
        },
        "keyObjectName": {
          "description": "Intermediate certificate private key object name in Azure Key Vault.",
          "type": "string"
        },
        "keyVaultId": {
          "description": "The resource ID of the Key Vault.",
          "type": "string"
        },
        "rootCertObjectName": {
          "description": "Root certificate object name in Azure Key Vault.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "IstioServiceMesh": {
      "description": "Istio service mesh configuration.",
      "properties": {
        "certificateAuthority": {
          "description": "Istio Service Mesh Certificate Authority (CA) configuration. For now, we only support plugin certificates as described here https://aka.ms/asm-plugin-ca",
          "oneOf": [
            {
              "$ref": "#/definitions/IstioCertificateAuthority"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "components": {
          "description": "Istio components configuration.",
          "oneOf": [
            {
              "$ref": "#/definitions/IstioComponents"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "revisions": {
          "description": "The list of revisions of the Istio control plane. When an upgrade is not in progress, this holds one value. When canary upgrade is in progress, this can only hold two consecutive values. For more information, see: https://learn.microsoft.com/en-us/azure/aks/istio-upgrade",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "KubeletConfig": {
      "description": "Kubelet configurations of agent nodes. See [AKS custom node configuration](https://docs.microsoft.com/azure/aks/custom-node-configuration) for more details.",
      "properties": {
        "allowedUnsafeSysctls": {
          "description": "Allowed list of unsafe sysctls or unsafe sysctl patterns (ending in `*`).",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "containerLogMaxFiles": {
          "description": "The maximum number of container log files that can be present for a container. The number must be ≥ 2.",
          "oneOf": [
            {
              "minimum": 2,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "containerLogMaxSizeMB": {
          "description": "The maximum size (e.g. 10Mi) of container log file before it is rotated.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "cpuCfsQuota": {
          "description": "If CPU CFS quota enforcement is enabled for containers that specify CPU limits. The default is true.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "cpuCfsQuotaPeriod": {
          "description": "The CPU CFS quota period value. The default is '100ms.' Valid values are a sequence of decimal numbers with an optional fraction and a unit suffix. For example: '300ms', '2h45m'. Supported units are 'ns', 'us', 'ms', 's', 'm', and 'h'.",
          "type": "string"
        },
        "cpuManagerPolicy": {
          "description": "The CPU Manager policy to use. The default is 'none'. See [Kubernetes CPU management policies](https://kubernetes.io/docs/tasks/administer-cluster/cpu-management-policies/#cpu-management-policies) for more information. Allowed values are 'none' and 'static'.",
          "type": "string"
        },
        "failSwapOn": {
          "description": "If set to true it will make the Kubelet fail to start if swap is enabled on the node.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "imageGcHighThreshold": {
          "description": "The percent of disk usage after which image garbage collection is always run. To disable image garbage collection, set to 100. The default is 85%",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "imageGcLowThreshold": {
          "description": "The percent of disk usage before which image garbage collection is never run. This cannot be set higher than imageGcHighThreshold. The default is 80%",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "podMaxPids": {
          "description": "The maximum number of processes per pod.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "topologyManagerPolicy": {
          "description": "The Topology Manager policy to use. For more information see [Kubernetes Topology Manager](https://kubernetes.io/docs/tasks/administer-cluster/topology-manager). The default is 'none'. Allowed values are 'none', 'best-effort', 'restricted', and 'single-numa-node'.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "LinuxOSConfig": {
      "description": "OS configurations of Linux agent nodes. See [AKS custom node configuration](https://docs.microsoft.com/azure/aks/custom-node-configuration) for more details.",
      "properties": {
        "swapFileSizeMB": {
          "description": "The size in MB of a swap file that will be created on each node.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "sysctls": {
          "description": "Sysctl settings for Linux agent nodes.",
          "oneOf": [
            {
              "$ref": "#/definitions/SysctlConfig"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "transparentHugePageDefrag": {
          "description": "Whether the kernel should make aggressive use of memory compaction to make more hugepages available. Valid values are 'always', 'defer', 'defer+madvise', 'madvise' and 'never'. The default is 'madvise'. For more information see [Transparent Hugepages](https://www.kernel.org/doc/html/latest/admin-guide/mm/transhuge.html#admin-guide-transhuge).",
          "type": "string"
        },
        "transparentHugePageEnabled": {
          "description": "Whether transparent hugepages are enabled. Valid values are 'always', 'madvise', and 'never'. The default is 'always'. For more information see [Transparent Hugepages](https://www.kernel.org/doc/html/latest/admin-guide/mm/transhuge.html#admin-guide-transhuge).",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MaintenanceConfigurationProperties": {
      "description": "Properties used to configure planned maintenance for a Managed Cluster.",
      "properties": {
        "maintenanceWindow": {
          "description": "Maintenance window for the maintenance configuration.",
          "oneOf": [
            {
              "$ref": "#/definitions/MaintenanceWindow"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "notAllowedTime": {
          "description": "Time slots on which upgrade is not allowed.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/TimeSpan"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "timeInWeek": {
          "description": "Time slots during the week when planned maintenance is allowed to proceed. If two array entries specify the same day of the week, the applied configuration is the union of times in both entries.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/TimeInWeek"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "MaintenanceWindow": {
      "description": "Maintenance window used to configure scheduled auto-upgrade for a Managed Cluster.",
      "properties": {
        "durationHours": {
          "description": "Length of maintenance window range from 4 to 24 hours.",
          "oneOf": [
            {
              "default": 24,
              "maximum": 24,
              "minimum": 4,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "notAllowedDates": {
          "description": "Date ranges on which upgrade is not allowed. 'utcOffset' applies to this field. For example, with 'utcOffset: +02:00' and 'dateSpan' being '2022-12-23' to '2023-01-03', maintenance will be blocked from '2022-12-22 22:00' to '2023-01-03 22:00' in UTC time.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/DateSpan"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "schedule": {
          "description": "Recurrence schedule for the maintenance window.",
          "oneOf": [
            {
              "$ref": "#/definitions/Schedule"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "startDate": {
          "description": "The date the maintenance window activates. If the current date is before this date, the maintenance window is inactive and will not be used for upgrades. If not specified, the maintenance window will be active right away.",
          "type": "string"
        },
        "startTime": {
          "description": "The start time of the maintenance window. Accepted values are from '00:00' to '23:59'. 'utcOffset' applies to this field. For example: '02:00' with 'utcOffset: +02:00' means UTC time '00:00'.",
          "oneOf": [
            {
              "pattern": "^\\d{2}:\\d{2}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "utcOffset": {
          "description": "The UTC offset in format +/-HH:mm. For example, '+05:30' for IST and '-07:00' for PST. If not specified, the default is '+00:00'.",
          "oneOf": [
            {
              "pattern": "^(-|\\+)[0-9]{2}:[0-9]{2}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "schedule",
        "durationHours",
        "startTime"
      ],
      "type": "object"
    },
    "ManagedClusterAADProfile": {
      "description": "AADProfile specifies attributes for Azure Active Directory integration. For more details see [managed AAD on AKS](https://docs.microsoft.com/azure/aks/managed-aad).",
      "properties": {
        "adminGroupObjectIDs": {
          "description": "The list of AAD group object IDs that will have admin role of the cluster.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "clientAppID": {
          "description": "(DEPRECATED) The client AAD application ID. Learn more at https://aka.ms/aks/aad-legacy.",
          "type": "string"
        },
        "enableAzureRBAC": {
          "description": "Whether to enable Azure RBAC for Kubernetes authorization.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "managed": {
          "description": "Whether to enable managed AAD.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "serverAppID": {
          "description": "(DEPRECATED) The server AAD application ID. Learn more at https://aka.ms/aks/aad-legacy.",
          "type": "string"
        },
        "serverAppSecret": {
          "description": "(DEPRECATED) The server AAD application secret. Learn more at https://aka.ms/aks/aad-legacy.",
          "type": "string"
        },
        "tenantID": {
          "description": "The AAD tenant ID to use for authentication. If not specified, will use the tenant of the deployment subscription.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ManagedClusterAIToolchainOperatorProfile": {
      "description": "When enabling the operator, a set of AKS managed CRDs and controllers will be installed in the cluster. The operator automates the deployment of OSS models for inference and/or training purposes. It provides a set of preset models and enables distributed inference against them.",
      "properties": {
        "enabled": {
          "description": "Whether to enable AI toolchain operator to the cluster. Indicates if AI toolchain operator  enabled or not.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ManagedClusterAPIServerAccessProfile": {
      "description": "Access profile for managed cluster API server.",
      "properties": {
        "authorizedIPRanges": {
          "description": "The IP ranges authorized to access the Kubernetes API server. IP ranges are specified in CIDR format, e.g. 137.117.106.88/29. This feature is not compatible with clusters that use Public IP Per Node, or clusters that are using a Basic Load Balancer. For more information see [API server authorized IP ranges](https://docs.microsoft.com/azure/aks/api-server-authorized-ip-ranges).",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "disableRunCommand": {
          "description": "Whether to disable run command for the cluster or not.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "enablePrivateCluster": {
          "description": "Whether to create the cluster as a private cluster or not. For more details, see [Creating a private AKS cluster](https://docs.microsoft.com/azure/aks/private-clusters).",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "enablePrivateClusterPublicFQDN": {
          "description": "Whether to create additional public FQDN for private cluster or not.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "enableVnetIntegration": {
          "description": "Whether to enable apiserver vnet integration for the cluster or not. See aka.ms/AksVnetIntegration for more details.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "privateDNSZone": {
          "description": "The private DNS zone mode for the cluster. The default is System. For more details see [configure private DNS zone](https://docs.microsoft.com/azure/aks/private-clusters#configure-private-dns-zone). Allowed values are 'system' and 'none'.",
          "type": "string"
        },
        "subnetId": {
          "description": "The subnet to be used when apiserver vnet integration is enabled. It is required when creating a new cluster with BYO Vnet, or when updating an existing cluster to enable apiserver vnet integration.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ManagedClusterAddonProfile": {
      "description": "A Kubernetes add-on profile for a managed cluster.",
      "properties": {
        "config": {
          "description": "Key-value pairs for configuring an add-on.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "enabled": {
          "description": "Whether the add-on is enabled or not.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "enabled"
      ],
      "type": "object"
    },
    "ManagedClusterAgentPoolProfile": {
      "description": "Profile for the container service agent pool.",
      "properties": {
        "availabilityZones": {
          "description": "The list of Availability zones to use for nodes. This can only be specified if the AgentPoolType property is 'VirtualMachineScaleSets'.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "capacityReservationGroupID": {
          "description": "AKS will associate the specified agent pool with the Capacity Reservation Group.",
          "type": "string"
        },
        "count": {
          "description": "Number of agents (VMs) to host docker containers. Allowed values must be in the range of 0 to 1000 (inclusive) for user pools and in the range of 1 to 1000 (inclusive) for system pools. The default value is 1.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "creationData": {
          "description": "CreationData to be used to specify the source Snapshot ID if the node pool will be created/upgraded using a snapshot.",
          "oneOf": [
            {
              "$ref": "#/definitions/CreationData"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "enableAutoScaling": {
          "description": "Whether to enable auto-scaler",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "enableEncryptionAtHost": {
          "description": "Whether to enable host based OS and data drive encryption. This is only supported on certain VM sizes and in certain Azure regions. For more information, see: https://docs.microsoft.com/azure/aks/enable-host-encryption",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "enableFIPS": {
          "description": "Whether to use a FIPS-enabled OS. See [Add a FIPS-enabled node pool](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#add-a-fips-enabled-node-pool-preview) for more details.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "enableNodePublicIP": {
          "description": "Whether each node is allocated its own public IP. Some scenarios may require nodes in a node pool to receive their own dedicated public IP addresses. A common scenario is for gaming workloads, where a console needs to make a direct connection to a cloud virtual machine to minimize hops. For more information see [assigning a public IP per node](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#assign-a-public-ip-per-node-for-your-node-pools). The default is false.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "enableUltraSSD": {
          "description": "Whether to enable UltraSSD",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "gatewayProfile": {
          "description": "Profile specific to a managed agent pool in Gateway mode. This field cannot be set if agent pool mode is not Gateway.",
          "oneOf": [
            {
              "$ref": "#/definitions/AgentPoolGatewayProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "gpuInstanceProfile": {
          "description": "GPUInstanceProfile to be used to specify GPU MIG instance profile for supported GPU VM SKU.",
          "oneOf": [
            {
              "enum": [
                "MIG1g",
                "MIG2g",
                "MIG3g",
                "MIG4g",
                "MIG7g"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "gpuProfile": {
          "description": "GPU settings for the Agent Pool.",
          "oneOf": [
            {
              "$ref": "#/definitions/GPUProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "hostGroupID": {
          "description": "The fully qualified resource ID of the Dedicated Host Group to provision virtual machines from, used only in creation scenario and not allowed to changed once set. This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/hostGroups/{hostGroupName}. For more information see [Azure dedicated hosts](https://docs.microsoft.com/azure/virtual-machines/dedicated-hosts).",
          "type": "string"
        },
        "kubeletConfig": {
          "description": "The Kubelet configuration on the agent pool nodes.",
          "oneOf": [
            {
              "$ref": "#/definitions/KubeletConfig"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "kubeletDiskType": {
          "description": "Determines the placement of emptyDir volumes, container runtime data root, and Kubelet ephemeral storage.",
          "oneOf": [
            {
              "enum": [
                "OS",
                "Temporary"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "linuxOSConfig": {
          "description": "The OS configuration of Linux agent nodes.",
          "oneOf": [
            {
              "$ref": "#/definitions/LinuxOSConfig"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "maxCount": {
          "description": "The maximum number of nodes for auto-scaling",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "maxPods": {
          "description": "The maximum number of pods that can run on a node.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "messageOfTheDay": {
          "description": "Message of the day for Linux nodes, base64-encoded. A base64-encoded string which will be written to /etc/motd after decoding. This allows customization of the message of the day for Linux nodes. It must not be specified for Windows nodes. It must be a static string (i.e., will be printed raw and not be executed as a script).",
          "type": "string"
        },
        "minCount": {
          "description": "The minimum number of nodes for auto-scaling",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "mode": {
          "description": "The mode of an agent pool. A cluster must have at least one 'System' Agent Pool at all times. For additional information on agent pool restrictions and best practices, see: https://docs.microsoft.com/azure/aks/use-system-pools",
          "oneOf": [
            {
              "enum": [
                "System",
                "User",
                "Gateway"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "name": {
          "description": "Unique name of the agent pool profile in the context of the subscription and resource group. Windows agent pool names must be 6 characters or less.",
          "oneOf": [
            {
              "pattern": "^[a-z][a-z0-9]{0,11}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "networkProfile": {
          "description": "Network-related settings of an agent pool.",
          "oneOf": [
            {
              "$ref": "#/definitions/AgentPoolNetworkProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "nodeLabels": {
          "description": "The node labels to be persisted across all nodes in agent pool.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "nodePublicIPPrefixID": {
          "description": "The public IP prefix ID which VM nodes should use IPs from. This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPPrefixes/{publicIPPrefixName}",
          "type": "string"
        },
        "nodeTaints": {
          "description": "The taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "orchestratorVersion": {
          "description": "The version of Kubernetes specified by the user. Both patch version <major.minor.patch> (e.g. 1.20.13) and <major.minor> (e.g. 1.20) are supported. When <major.minor> is specified, the latest supported GA patch version is chosen automatically. Updating the cluster with the same <major.minor> once it has been created (e.g. 1.14.x -> 1.14) will not trigger an upgrade, even if a newer patch version is available. As a best practice, you should upgrade all node pools in an AKS cluster to the same Kubernetes version. The node pool version must have the same major version as the control plane. The node pool minor version must be within two minor versions of the control plane version. The node pool version cannot be greater than the control plane version. For more information see [upgrading a node pool](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#upgrade-a-node-pool).",
          "type": "string"
        },
        "osDiskSizeGB": {
          "description": "OS Disk Size in GB to be used to specify the disk size for every machine in the master/agent pool. If you specify 0, it will apply the default osDisk size according to the vmSize specified.",
          "oneOf": [
            {
              "maximum": 2048,
              "minimum": 0,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "osDiskType": {
          "description": "The OS disk type to be used for machines in the agent pool. The default is 'Ephemeral' if the VM supports it and has a cache disk larger than the requested OSDiskSizeGB. Otherwise, defaults to 'Managed'. May not be changed after creation. For more information see [Ephemeral OS](https://docs.microsoft.com/azure/aks/cluster-configuration#ephemeral-os).",
          "oneOf": [
            {
              "enum": [
                "Managed",
                "Ephemeral"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "osSKU": {
          "description": "Specifies the OS SKU used by the agent pool. The default is Ubuntu if OSType is Linux. The default is Windows2019 when Kubernetes <= 1.24 or Windows2022 when Kubernetes >= 1.25 if OSType is Windows.",
          "oneOf": [
            {
              "enum": [
                "Ubuntu",
                "AzureLinux",
                "AzureLinux3",
                "CBLMariner",
                "Windows2019",
                "Windows2022",
                "Ubuntu2204"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "osType": {
          "description": "The operating system type. The default is Linux.",
          "oneOf": [
            {
              "enum": [
                "Linux",
                "Windows"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "podIPAllocationMode": {
          "description": "Pod IP Allocation Mode. The IP allocation mode for pods in the agent pool. Must be used with podSubnetId. The default is 'DynamicIndividual'.",
          "oneOf": [
            {
              "enum": [
                "DynamicIndividual",
                "StaticBlock"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "podSubnetID": {
          "description": "The ID of the subnet which pods will join when launched. If omitted, pod IPs are statically assigned on the node subnet (see vnetSubnetID for more details). This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}",
          "type": "string"
        },
        "powerState": {
          "description": "Whether the Agent Pool is running or stopped. When an Agent Pool is first created it is initially Running. The Agent Pool can be stopped by setting this field to Stopped. A stopped Agent Pool stops all of its VMs and does not accrue billing charges. An Agent Pool can only be stopped if it is Running and provisioning state is Succeeded",
          "oneOf": [
            {
              "$ref": "#/definitions/PowerState"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "proximityPlacementGroupID": {
          "description": "The ID for Proximity Placement Group.",
          "type": "string"
        },
        "scaleDownMode": {
          "description": "The scale down mode to use when scaling the Agent Pool. This also effects the cluster autoscaler behavior. If not specified, it defaults to Delete.",
          "oneOf": [
            {
              "enum": [
                "Delete",
                "Deallocate"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "scaleSetEvictionPolicy": {
          "description": "The Virtual Machine Scale Set eviction policy to use. This cannot be specified unless the scaleSetPriority is 'Spot'. If not specified, the default is 'Delete'.",
          "oneOf": [
            {
              "enum": [
                "Delete",
                "Deallocate"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "scaleSetPriority": {
          "description": "The Virtual Machine Scale Set priority. If not specified, the default is 'Regular'.",
          "oneOf": [
            {
              "enum": [
                "Spot",
                "Regular"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "securityProfile": {
          "description": "The security settings of an agent pool.",
          "oneOf": [
            {
              "$ref": "#/definitions/AgentPoolSecurityProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "spotMaxPrice": {
          "description": "The max price (in US Dollars) you are willing to pay for spot instances. Possible values are any decimal value greater than zero or -1 which indicates default price to be up-to on-demand. Possible values are any decimal value greater than zero or -1 which indicates the willingness to pay any on-demand price. For more details on spot pricing, see [spot VMs pricing](https://docs.microsoft.com/azure/virtual-machines/spot-vms#pricing)",
          "oneOf": [
            {
              "default": -1,
              "type": "number"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "status": {
          "description": "Contains read-only information about the Agent Pool.",
          "oneOf": [
            {
              "$ref": "#/definitions/AgentPoolStatus"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "The tags to be persisted on the agent pool virtual machine scale set.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "description": "The type of Agent Pool.",
          "oneOf": [
            {
              "enum": [
                "VirtualMachineScaleSets",
                "AvailabilitySet",
                "VirtualMachines"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "upgradeSettings": {
          "description": "Settings for upgrading the agentpool",
          "oneOf": [
            {
              "$ref": "#/definitions/AgentPoolUpgradeSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "virtualMachineNodesStatus": {
          "description": "The status of nodes in a VirtualMachines agent pool.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/VirtualMachineNodes"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "virtualMachinesProfile": {
          "description": "Specifications on VirtualMachines agent pool.",
          "oneOf": [
            {
              "$ref": "#/definitions/VirtualMachinesProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "vmSize": {
          "description": "The size of the agent pool VMs. VM size availability varies by region. If a node contains insufficient compute resources (memory, cpu, etc) pods might fail to run correctly. For more details on restricted VM sizes, see: https://docs.microsoft.com/azure/aks/quotas-skus-regions",
          "type": "string"
        },
        "vnetSubnetID": {
          "description": "The ID of the subnet which agent pool nodes and optionally pods will join on startup. If this is not specified, a VNET and subnet will be generated and used. If no podSubnetID is specified, this applies to nodes and pods, otherwise it applies to just nodes. This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}",
          "type": "string"
        },
        "windowsProfile": {
          "description": "The Windows agent pool's specific profile.",
          "oneOf": [
            {
              "$ref": "#/definitions/AgentPoolWindowsProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "workloadRuntime": {
          "description": "Determines the type of workload a node can run.",
          "oneOf": [
            {
              "enum": [
                "OCIContainer",
                "WasmWasi"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "ManagedClusterAgentPoolProfileProperties": {
      "description": "Properties for the container service agent pool profile.",
      "properties": {
        "availabilityZones": {
          "description": "The list of Availability zones to use for nodes. This can only be specified if the AgentPoolType property is 'VirtualMachineScaleSets'.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "capacityReservationGroupID": {
          "description": "AKS will associate the specified agent pool with the Capacity Reservation Group.",
          "type": "string"
        },
        "count": {
          "description": "Number of agents (VMs) to host docker containers. Allowed values must be in the range of 0 to 1000 (inclusive) for user pools and in the range of 1 to 1000 (inclusive) for system pools. The default value is 1.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "creationData": {
          "description": "CreationData to be used to specify the source Snapshot ID if the node pool will be created/upgraded using a snapshot.",
          "oneOf": [
            {
              "$ref": "#/definitions/CreationData"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "enableAutoScaling": {
          "description": "Whether to enable auto-scaler",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "enableEncryptionAtHost": {
          "description": "Whether to enable host based OS and data drive encryption. This is only supported on certain VM sizes and in certain Azure regions. For more information, see: https://docs.microsoft.com/azure/aks/enable-host-encryption",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "enableFIPS": {
          "description": "Whether to use a FIPS-enabled OS. See [Add a FIPS-enabled node pool](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#add-a-fips-enabled-node-pool-preview) for more details.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "enableNodePublicIP": {
          "description": "Whether each node is allocated its own public IP. Some scenarios may require nodes in a node pool to receive their own dedicated public IP addresses. A common scenario is for gaming workloads, where a console needs to make a direct connection to a cloud virtual machine to minimize hops. For more information see [assigning a public IP per node](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#assign-a-public-ip-per-node-for-your-node-pools). The default is false.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "enableUltraSSD": {
          "description": "Whether to enable UltraSSD",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "gatewayProfile": {
          "description": "Profile specific to a managed agent pool in Gateway mode. This field cannot be set if agent pool mode is not Gateway.",
          "oneOf": [
            {
              "$ref": "#/definitions/AgentPoolGatewayProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "gpuInstanceProfile": {
          "description": "GPUInstanceProfile to be used to specify GPU MIG instance profile for supported GPU VM SKU.",
          "oneOf": [
            {
              "enum": [
                "MIG1g",
                "MIG2g",
                "MIG3g",
                "MIG4g",
                "MIG7g"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "gpuProfile": {
          "description": "GPU settings for the Agent Pool.",
          "oneOf": [
            {
              "$ref": "#/definitions/GPUProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "hostGroupID": {
          "description": "The fully qualified resource ID of the Dedicated Host Group to provision virtual machines from, used only in creation scenario and not allowed to changed once set. This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/hostGroups/{hostGroupName}. For more information see [Azure dedicated hosts](https://docs.microsoft.com/azure/virtual-machines/dedicated-hosts).",
          "type": "string"
        },
        "kubeletConfig": {
          "description": "The Kubelet configuration on the agent pool nodes.",
          "oneOf": [
            {
              "$ref": "#/definitions/KubeletConfig"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "kubeletDiskType": {
          "description": "Determines the placement of emptyDir volumes, container runtime data root, and Kubelet ephemeral storage.",
          "oneOf": [
            {
              "enum": [
                "OS",
                "Temporary"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "linuxOSConfig": {
          "description": "The OS configuration of Linux agent nodes.",
          "oneOf": [
            {
              "$ref": "#/definitions/LinuxOSConfig"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "maxCount": {
          "description": "The maximum number of nodes for auto-scaling",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "maxPods": {
          "description": "The maximum number of pods that can run on a node.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "messageOfTheDay": {
          "description": "Message of the day for Linux nodes, base64-encoded. A base64-encoded string which will be written to /etc/motd after decoding. This allows customization of the message of the day for Linux nodes. It must not be specified for Windows nodes. It must be a static string (i.e., will be printed raw and not be executed as a script).",
          "type": "string"
        },
        "minCount": {
          "description": "The minimum number of nodes for auto-scaling",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "mode": {
          "description": "The mode of an agent pool. A cluster must have at least one 'System' Agent Pool at all times. For additional information on agent pool restrictions and best practices, see: https://docs.microsoft.com/azure/aks/use-system-pools",
          "oneOf": [
            {
              "enum": [
                "System",
                "User",
                "Gateway"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "networkProfile": {
          "description": "Network-related settings of an agent pool.",
          "oneOf": [
            {
              "$ref": "#/definitions/AgentPoolNetworkProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "nodeLabels": {
          "description": "The node labels to be persisted across all nodes in agent pool.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "nodePublicIPPrefixID": {
          "description": "The public IP prefix ID which VM nodes should use IPs from. This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPPrefixes/{publicIPPrefixName}",
          "type": "string"
        },
        "nodeTaints": {
          "description": "The taints added to new nodes during node pool create and scale. For example, key=value:NoSchedule.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "orchestratorVersion": {
          "description": "The version of Kubernetes specified by the user. Both patch version <major.minor.patch> (e.g. 1.20.13) and <major.minor> (e.g. 1.20) are supported. When <major.minor> is specified, the latest supported GA patch version is chosen automatically. Updating the cluster with the same <major.minor> once it has been created (e.g. 1.14.x -> 1.14) will not trigger an upgrade, even if a newer patch version is available. As a best practice, you should upgrade all node pools in an AKS cluster to the same Kubernetes version. The node pool version must have the same major version as the control plane. The node pool minor version must be within two minor versions of the control plane version. The node pool version cannot be greater than the control plane version. For more information see [upgrading a node pool](https://docs.microsoft.com/azure/aks/use-multiple-node-pools#upgrade-a-node-pool).",
          "type": "string"
        },
        "osDiskSizeGB": {
          "description": "OS Disk Size in GB to be used to specify the disk size for every machine in the master/agent pool. If you specify 0, it will apply the default osDisk size according to the vmSize specified.",
          "oneOf": [
            {
              "maximum": 2048,
              "minimum": 0,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "osDiskType": {
          "description": "The OS disk type to be used for machines in the agent pool. The default is 'Ephemeral' if the VM supports it and has a cache disk larger than the requested OSDiskSizeGB. Otherwise, defaults to 'Managed'. May not be changed after creation. For more information see [Ephemeral OS](https://docs.microsoft.com/azure/aks/cluster-configuration#ephemeral-os).",
          "oneOf": [
            {
              "enum": [
                "Managed",
                "Ephemeral"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "osSKU": {
          "description": "Specifies the OS SKU used by the agent pool. The default is Ubuntu if OSType is Linux. The default is Windows2019 when Kubernetes <= 1.24 or Windows2022 when Kubernetes >= 1.25 if OSType is Windows.",
          "oneOf": [
            {
              "enum": [
                "Ubuntu",
                "AzureLinux",
                "AzureLinux3",
                "CBLMariner",
                "Windows2019",
                "Windows2022",
                "Ubuntu2204"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "osType": {
          "description": "The operating system type. The default is Linux.",
          "oneOf": [
            {
              "enum": [
                "Linux",
                "Windows"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "podIPAllocationMode": {
          "description": "Pod IP Allocation Mode. The IP allocation mode for pods in the agent pool. Must be used with podSubnetId. The default is 'DynamicIndividual'.",
          "oneOf": [
            {
              "enum": [
                "DynamicIndividual",
                "StaticBlock"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "podSubnetID": {
          "description": "The ID of the subnet which pods will join when launched. If omitted, pod IPs are statically assigned on the node subnet (see vnetSubnetID for more details). This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}",
          "type": "string"
        },
        "powerState": {
          "description": "Whether the Agent Pool is running or stopped. When an Agent Pool is first created it is initially Running. The Agent Pool can be stopped by setting this field to Stopped. A stopped Agent Pool stops all of its VMs and does not accrue billing charges. An Agent Pool can only be stopped if it is Running and provisioning state is Succeeded",
          "oneOf": [
            {
              "$ref": "#/definitions/PowerState"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "proximityPlacementGroupID": {
          "description": "The ID for Proximity Placement Group.",
          "type": "string"
        },
        "scaleDownMode": {
          "description": "The scale down mode to use when scaling the Agent Pool. This also effects the cluster autoscaler behavior. If not specified, it defaults to Delete.",
          "oneOf": [
            {
              "enum": [
                "Delete",
                "Deallocate"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "scaleSetEvictionPolicy": {
          "description": "The Virtual Machine Scale Set eviction policy to use. This cannot be specified unless the scaleSetPriority is 'Spot'. If not specified, the default is 'Delete'.",
          "oneOf": [
            {
              "enum": [
                "Delete",
                "Deallocate"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "scaleSetPriority": {
          "description": "The Virtual Machine Scale Set priority. If not specified, the default is 'Regular'.",
          "oneOf": [
            {
              "enum": [
                "Spot",
                "Regular"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "securityProfile": {
          "description": "The security settings of an agent pool.",
          "oneOf": [
            {
              "$ref": "#/definitions/AgentPoolSecurityProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "spotMaxPrice": {
          "description": "The max price (in US Dollars) you are willing to pay for spot instances. Possible values are any decimal value greater than zero or -1 which indicates default price to be up-to on-demand. Possible values are any decimal value greater than zero or -1 which indicates the willingness to pay any on-demand price. For more details on spot pricing, see [spot VMs pricing](https://docs.microsoft.com/azure/virtual-machines/spot-vms#pricing)",
          "oneOf": [
            {
              "default": -1,
              "type": "number"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "status": {
          "description": "Contains read-only information about the Agent Pool.",
          "oneOf": [
            {
              "$ref": "#/definitions/AgentPoolStatus"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tags": {
          "description": "The tags to be persisted on the agent pool virtual machine scale set.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "description": "The type of Agent Pool.",
          "oneOf": [
            {
              "enum": [
                "VirtualMachineScaleSets",
                "AvailabilitySet",
                "VirtualMachines"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "upgradeSettings": {
          "description": "Settings for upgrading the agentpool",
          "oneOf": [
            {
              "$ref": "#/definitions/AgentPoolUpgradeSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "virtualMachineNodesStatus": {
          "description": "The status of nodes in a VirtualMachines agent pool.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/VirtualMachineNodes"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "virtualMachinesProfile": {
          "description": "Specifications on VirtualMachines agent pool.",
          "oneOf": [
            {
              "$ref": "#/definitions/VirtualMachinesProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "vmSize": {
          "description": "The size of the agent pool VMs. VM size availability varies by region. If a node contains insufficient compute resources (memory, cpu, etc) pods might fail to run correctly. For more details on restricted VM sizes, see: https://docs.microsoft.com/azure/aks/quotas-skus-regions",
          "type": "string"
        },
        "vnetSubnetID": {
          "description": "The ID of the subnet which agent pool nodes and optionally pods will join on startup. If this is not specified, a VNET and subnet will be generated and used. If no podSubnetID is specified, this applies to nodes and pods, otherwise it applies to just nodes. This is of the form: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}",
          "type": "string"
        },
        "windowsProfile": {
          "description": "The Windows agent pool's specific profile.",
          "oneOf": [
            {
              "$ref": "#/definitions/AgentPoolWindowsProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "workloadRuntime": {
          "description": "Determines the type of workload a node can run.",
          "oneOf": [
            {
              "enum": [
                "OCIContainer",
                "WasmWasi"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ManagedClusterAutoUpgradeProfile": {
      "description": "Auto upgrade profile for a managed cluster.",
      "properties": {
        "nodeOSUpgradeChannel": {
          "description": "Node OS Upgrade Channel. Manner in which the OS on your nodes is updated. The default is NodeImage.",
          "oneOf": [
            {
              "enum": [
                "None",
                "Unmanaged",
                "NodeImage",
                "SecurityPatch"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "upgradeChannel": {
          "description": "The upgrade channel for auto upgrade. The default is 'none'. For more information see [setting the AKS cluster auto-upgrade channel](https://docs.microsoft.com/azure/aks/upgrade-cluster#set-auto-upgrade-channel).",
          "oneOf": [
            {
              "enum": [
                "rapid",
                "stable",
                "patch",
                "node-image",
                "none"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ManagedClusterAzureMonitorProfile": {
      "description": "Azure Monitor addon profiles for monitoring the managed cluster.",
      "properties": {
        "metrics": {
          "description": "Metrics profile for the Azure Monitor managed service for Prometheus addon. Collect out-of-the-box Kubernetes infrastructure metrics to send to an Azure Monitor Workspace and configure additional scraping for custom targets. See aka.ms/AzureManagedPrometheus for an overview.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedClusterAzureMonitorProfileMetrics"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ManagedClusterAzureMonitorProfileKubeStateMetrics": {
      "description": "Kube State Metrics profile for the Azure Managed Prometheus addon. These optional settings are for the kube-state-metrics pod that is deployed with the addon. See aka.ms/AzureManagedPrometheus-optional-parameters for details.",
      "properties": {
        "metricAnnotationsAllowList": {
          "description": "Comma-separated list of Kubernetes annotation keys that will be used in the resource's labels metric (Example: 'namespaces=[kubernetes.io/team,...],pods=[kubernetes.io/team],...'). By default the metric contains only resource name and namespace labels.",
          "type": "string"
        },
        "metricLabelsAllowlist": {
          "description": "Comma-separated list of additional Kubernetes label keys that will be used in the resource's labels metric (Example: 'namespaces=[k8s-label-1,k8s-label-n,...],pods=[app],...'). By default the metric contains only resource name and namespace labels.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ManagedClusterAzureMonitorProfileMetrics": {
      "description": "Metrics profile for the Azure Monitor managed service for Prometheus addon. Collect out-of-the-box Kubernetes infrastructure metrics to send to an Azure Monitor Workspace and configure additional scraping for custom targets. See aka.ms/AzureManagedPrometheus for an overview.",
      "properties": {
        "enabled": {
          "description": "Whether to enable or disable the Azure Managed Prometheus addon for Prometheus monitoring. See aka.ms/AzureManagedPrometheus-aks-enable for details on enabling and disabling.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "kubeStateMetrics": {
          "description": "Kube State Metrics profile for the Azure Managed Prometheus addon. These optional settings are for the kube-state-metrics pod that is deployed with the addon. See aka.ms/AzureManagedPrometheus-optional-parameters for details.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedClusterAzureMonitorProfileKubeStateMetrics"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "enabled"
      ],
      "type": "object"
    },
    "ManagedClusterBootstrapProfile": {
      "description": "The bootstrap profile.",
      "properties": {
        "artifactSource": {
          "description": "The artifact source. The source where the artifacts are downloaded from.",
          "oneOf": [
            {
              "enum": [
                "Cache",
                "Direct"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "containerRegistryId": {
          "description": "The resource Id of Azure Container Registry. The registry must have private network access, premium SKU and zone redundancy.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ManagedClusterCostAnalysis": {
      "description": "The cost analysis configuration for the cluster",
      "properties": {
        "enabled": {
          "description": "Whether to enable cost analysis. The Managed Cluster sku.tier must be set to 'Standard' or 'Premium' to enable this feature. Enabling this will add Kubernetes Namespace and Deployment details to the Cost Analysis views in the Azure portal. If not specified, the default is false. For more information see aka.ms/aks/docs/cost-analysis.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ManagedClusterHttpProxyConfig": {
      "description": "Cluster HTTP proxy configuration.",
      "properties": {
        "httpProxy": {
          "description": "The HTTP proxy server endpoint to use.",
          "type": "string"
        },
        "httpsProxy": {
          "description": "The HTTPS proxy server endpoint to use.",
          "type": "string"
        },
        "noProxy": {
          "description": "The endpoints that should not go through proxy.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "trustedCa": {
          "description": "Alternative CA cert to use for connecting to proxy servers.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ManagedClusterIdentity": {
      "description": "Identity for the managed cluster.",
      "properties": {
        "delegatedResources": {
          "description": "The delegated identity resources assigned to this managed cluster. This can only be set by another Azure Resource Provider, and managed cluster only accept one delegated identity resource. Internal use only.",
          "oneOf": [
            {
              "additionalProperties": {
                "$ref": "#/definitions/DelegatedResource"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "description": "The type of identity used for the managed cluster. For more information see [use managed identities in AKS](https://docs.microsoft.com/azure/aks/use-managed-identity).",
          "oneOf": [
            {
              "enum": [
                "SystemAssigned",
                "UserAssigned",
                "None"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "userAssignedIdentities": {
          "description": "The user identity associated with the managed cluster. This identity will be used in control plane. Only one user assigned identity is allowed. The keys must be ARM resource IDs in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.",
          "oneOf": [
            {
              "additionalProperties": {
                "$ref": "#/definitions/ManagedServiceIdentityUserAssignedIdentitiesValue"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ManagedClusterIngressProfile": {
      "description": "Ingress profile for the container service cluster.",
      "properties": {
        "webAppRouting": {
          "description": "App Routing settings for the ingress profile. You can find an overview and onboarding guide for this feature at https://learn.microsoft.com/en-us/azure/aks/app-routing?tabs=default%2Cdeploy-app-default.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedClusterIngressProfileWebAppRouting"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ManagedClusterIngressProfileNginx": {
      "properties": {
        "defaultIngressControllerType": {
          "description": "Ingress type for the default NginxIngressController custom resource",
          "oneOf": [
            {
              "enum": [
                "AnnotationControlled",
                "External",
                "Internal",
                "None"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ManagedClusterIngressProfileWebAppRouting": {
      "description": "Application Routing add-on settings for the ingress profile.",
      "properties": {
        "dnsZoneResourceIds": {
          "description": "Resource IDs of the DNS zones to be associated with the Application Routing add-on. Used only when Application Routing add-on is enabled. Public and private DNS zones can be in different resource groups, but all public DNS zones must be in the same resource group and all private DNS zones must be in the same resource group.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "enabled": {
          "description": "Whether to enable the Application Routing add-on.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "nginx": {
          "description": "Configuration for the default NginxIngressController. See more at https://learn.microsoft.com/en-us/azure/aks/app-routing-nginx-configuration#the-default-nginx-ingress-controller.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedClusterIngressProfileNginx"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ManagedClusterLoadBalancerProfile": {
      "description": "Profile of the managed cluster load balancer.",
      "properties": {
        "allocatedOutboundPorts": {
          "description": "The desired number of allocated SNAT ports per VM. Allowed values are in the range of 0 to 64000 (inclusive). The default value is 0 which results in Azure dynamically allocating ports.",
          "oneOf": [
            {
              "default": 0,
              "maximum": 64000,
              "minimum": 0,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "backendPoolType": {
          "description": "The type of the managed inbound Load Balancer BackendPool.",
          "oneOf": [
            {
              "enum": [
                "NodeIPConfiguration",
                "NodeIP"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "enableMultipleStandardLoadBalancers": {
          "description": "Enable multiple standard load balancers per AKS cluster or not.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "idleTimeoutInMinutes": {
          "description": "Desired outbound flow idle timeout in minutes. Allowed values are in the range of 4 to 120 (inclusive). The default value is 30 minutes.",
          "oneOf": [
            {
              "default": 30,
              "maximum": 120,
              "minimum": 4,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "managedOutboundIPs": {
          "description": "Desired managed outbound IPs for the cluster load balancer.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedClusterLoadBalancerProfileManagedOutboundIPs"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "outboundIPPrefixes": {
          "description": "Desired outbound IP Prefix resources for the cluster load balancer.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedClusterLoadBalancerProfileOutboundIPPrefixes"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "outboundIPs": {
          "description": "Desired outbound IP resources for the cluster load balancer.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedClusterLoadBalancerProfileOutboundIPs"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ManagedClusterLoadBalancerProfileManagedOutboundIPs": {
      "description": "Desired managed outbound IPs for the cluster load balancer.",
      "properties": {
        "count": {
          "description": "The desired number of IPv4 outbound IPs created/managed by Azure for the cluster load balancer. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 1. ",
          "oneOf": [
            {
              "default": 1,
              "maximum": 100,
              "minimum": 1,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "countIPv6": {
          "description": "The desired number of IPv6 outbound IPs created/managed by Azure for the cluster load balancer. Allowed values must be in the range of 1 to 100 (inclusive). The default value is 0 for single-stack and 1 for dual-stack. ",
          "oneOf": [
            {
              "default": 0,
              "maximum": 100,
              "minimum": 0,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ManagedClusterLoadBalancerProfileOutboundIPPrefixes": {
      "description": "Desired outbound IP Prefix resources for the cluster load balancer.",
      "properties": {
        "publicIPPrefixes": {
          "description": "A list of public IP prefix resources.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/ResourceReference"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ManagedClusterLoadBalancerProfileOutboundIPs": {
      "description": "Desired outbound IP resources for the cluster load balancer.",
      "properties": {
        "publicIPs": {
          "description": "A list of public IP resources.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/ResourceReference"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ManagedClusterManagedOutboundIPProfile": {
      "description": "Profile of the managed outbound IP resources of the managed cluster.",
      "properties": {
        "count": {
          "description": "The desired number of outbound IPs created/managed by Azure. Allowed values must be in the range of 1 to 16 (inclusive). The default value is 1. ",
          "oneOf": [
            {
              "default": 1,
              "maximum": 16,
              "minimum": 1,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ManagedClusterMetricsProfile": {
      "description": "The metrics profile for the ManagedCluster.",
      "properties": {
        "costAnalysis": {
          "description": "The configuration for detailed per-Kubernetes resource cost analysis.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedClusterCostAnalysis"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ManagedClusterNATGatewayProfile": {
      "description": "Profile of the managed cluster NAT gateway.",
      "properties": {
        "idleTimeoutInMinutes": {
          "description": "Desired outbound flow idle timeout in minutes. Allowed values are in the range of 4 to 120 (inclusive). The default value is 4 minutes.",
          "oneOf": [
            {
              "default": 4,
              "maximum": 120,
              "minimum": 4,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "managedOutboundIPProfile": {
          "description": "Profile of the managed outbound IP resources of the cluster NAT gateway.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedClusterManagedOutboundIPProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ManagedClusterNodeProvisioningProfile": {
      "properties": {
        "defaultNodePools": {
          "description": "The set of default Karpenter NodePools (CRDs) configured for node provisioning. This field has no effect unless mode is 'Auto'. Warning: Changing this from Auto to None on an existing cluster will cause the default Karpenter NodePools to be deleted, which will drain and delete the nodes associated with those pools. It is strongly recommended to not do this unless there are idle nodes ready to take the pods evicted by that action. If not specified, the default is Auto. For more information see aka.ms/aks/nap#node-pools.",
          "oneOf": [
            {
              "enum": [
                "None",
                "Auto"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "mode": {
          "description": "The node provisioning mode. If not specified, the default is Manual.",
          "oneOf": [
            {
              "enum": [
                "Manual",
                "Auto"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ManagedClusterNodeResourceGroupProfile": {
      "description": "Node resource group lockdown profile for a managed cluster.",
      "properties": {
        "restrictionLevel": {
          "description": "The restriction level applied to the cluster's node resource group. If not specified, the default is 'Unrestricted'",
          "oneOf": [
            {
              "enum": [
                "Unrestricted",
                "ReadOnly"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ManagedClusterOidcIssuerProfile": {
      "description": "The OIDC issuer profile of the Managed Cluster.",
      "properties": {
        "enabled": {
          "description": "Whether the OIDC issuer is enabled.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ManagedClusterPodIdentity": {
      "description": "Details about the pod identity assigned to the Managed Cluster.",
      "properties": {
        "bindingSelector": {
          "description": "The binding selector to use for the AzureIdentityBinding resource.",
          "type": "string"
        },
        "identity": {
          "description": "The user assigned identity details.",
          "oneOf": [
            {
              "$ref": "#/definitions/UserAssignedIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "name": {
          "description": "The name of the pod identity.",
          "type": "string"
        },
        "namespace": {
          "description": "The namespace of the pod identity.",
          "type": "string"
        }
      },
      "required": [
        "name",
        "namespace",
        "identity"
      ],
      "type": "object"
    },
    "ManagedClusterPodIdentityException": {
      "description": "A pod identity exception, which allows pods with certain labels to access the Azure Instance Metadata Service (IMDS) endpoint without being intercepted by the node-managed identity (NMI) server. See [disable AAD Pod Identity for a specific Pod/Application](https://azure.github.io/aad-pod-identity/docs/configure/application_exception/) for more details.",
      "properties": {
        "name": {
          "description": "The name of the pod identity exception.",
          "type": "string"
        },
        "namespace": {
          "description": "The namespace of the pod identity exception.",
          "type": "string"
        },
        "podLabels": {
          "description": "The pod labels to match.",
          "oneOf": [
            {
              "additionalProperties": {
                "type": "string"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "name",
        "namespace",
        "podLabels"
      ],
      "type": "object"
    },
    "ManagedClusterPodIdentityProfile": {
      "description": "The pod identity profile of the Managed Cluster. See [use AAD pod identity](https://docs.microsoft.com/azure/aks/use-azure-ad-pod-identity) for more details on pod identity integration.",
      "properties": {
        "allowNetworkPluginKubenet": {
          "description": "Whether pod identity is allowed to run on clusters with Kubenet networking. Running in Kubenet is disabled by default due to the security related nature of AAD Pod Identity and the risks of IP spoofing. See [using Kubenet network plugin with AAD Pod Identity](https://docs.microsoft.com/azure/aks/use-azure-ad-pod-identity#using-kubenet-network-plugin-with-azure-active-directory-pod-managed-identities) for more information.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "enabled": {
          "description": "Whether the pod identity addon is enabled.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "userAssignedIdentities": {
          "description": "The pod identities to use in the cluster.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/ManagedClusterPodIdentity"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "userAssignedIdentityExceptions": {
          "description": "The pod identity exceptions to allow.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/ManagedClusterPodIdentityException"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ManagedClusterProperties": {
      "description": "Properties of the managed cluster.",
      "properties": {
        "aadProfile": {
          "description": "The Azure Active Directory configuration.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedClusterAADProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "addonProfiles": {
          "description": "The profile of managed cluster add-on.",
          "oneOf": [
            {
              "additionalProperties": {
                "$ref": "#/definitions/ManagedClusterAddonProfile"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "agentPoolProfiles": {
          "description": "The agent pool properties.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/ManagedClusterAgentPoolProfile"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "aiToolchainOperatorProfile": {
          "description": "AI toolchain operator settings that apply to the whole cluster.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedClusterAIToolchainOperatorProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "apiServerAccessProfile": {
          "description": "The access profile for managed cluster API server.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedClusterAPIServerAccessProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "autoScalerProfile": {
          "description": "Parameters to be applied to the cluster-autoscaler when enabled",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedClusterPropertiesAutoScalerProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "autoUpgradeProfile": {
          "description": "The auto upgrade configuration.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedClusterAutoUpgradeProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "azureMonitorProfile": {
          "description": "Azure Monitor addon profiles for monitoring the managed cluster.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedClusterAzureMonitorProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "bootstrapProfile": {
          "description": "Profile of the cluster bootstrap configuration.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedClusterBootstrapProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "disableLocalAccounts": {
          "description": "If local accounts should be disabled on the Managed Cluster. If set to true, getting static credentials will be disabled for this cluster. This must only be used on Managed Clusters that are AAD enabled. For more details see [disable local accounts](https://docs.microsoft.com/azure/aks/managed-aad#disable-local-accounts-preview).",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "diskEncryptionSetID": {
          "description": "The Resource ID of the disk encryption set to use for enabling encryption at rest. This is of the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/diskEncryptionSets/{encryptionSetName}'",
          "type": "string"
        },
        "dnsPrefix": {
          "description": "The DNS prefix of the Managed Cluster. This cannot be updated once the Managed Cluster has been created.",
          "type": "string"
        },
        "enableRBAC": {
          "description": "Whether to enable Kubernetes Role-Based Access Control.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "fqdnSubdomain": {
          "description": "The FQDN subdomain of the private cluster with custom private dns zone. This cannot be updated once the Managed Cluster has been created.",
          "type": "string"
        },
        "httpProxyConfig": {
          "description": "Configurations for provisioning the cluster with HTTP proxy servers.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedClusterHttpProxyConfig"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "identityProfile": {
          "description": "The user identity associated with the managed cluster. This identity will be used by the kubelet. Only one user assigned identity is allowed. The only accepted key is \"kubeletidentity\", with value of \"resourceId\": \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}\".",
          "oneOf": [
            {
              "additionalProperties": {
                "$ref": "#/definitions/UserAssignedIdentity"
              },
              "properties": {},
              "type": "object"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "ingressProfile": {
          "description": "Ingress profile for the managed cluster.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedClusterIngressProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "kubernetesVersion": {
          "description": "The version of Kubernetes specified by the user. Both patch version <major.minor.patch> (e.g. 1.20.13) and <major.minor> (e.g. 1.20) are supported. When <major.minor> is specified, the latest supported GA patch version is chosen automatically. Updating the cluster with the same <major.minor> once it has been created (e.g. 1.14.x -> 1.14) will not trigger an upgrade, even if a newer patch version is available. When you upgrade a supported AKS cluster, Kubernetes minor versions cannot be skipped. All upgrades must be performed sequentially by major version number. For example, upgrades between 1.14.x -> 1.15.x or 1.15.x -> 1.16.x are allowed, however 1.14.x -> 1.16.x is not allowed. See [upgrading an AKS cluster](https://docs.microsoft.com/azure/aks/upgrade-cluster) for more details.",
          "type": "string"
        },
        "linuxProfile": {
          "description": "The profile for Linux VMs in the Managed Cluster.",
          "oneOf": [
            {
              "$ref": "#/definitions/ContainerServiceLinuxProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "metricsProfile": {
          "description": "Optional cluster metrics configuration.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedClusterMetricsProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "networkProfile": {
          "description": "The network configuration profile.",
          "oneOf": [
            {
              "$ref": "#/definitions/ContainerServiceNetworkProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "nodeProvisioningProfile": {
          "description": "Node provisioning settings that apply to the whole cluster.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedClusterNodeProvisioningProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "nodeResourceGroup": {
          "description": "The name of the resource group containing agent pool nodes.",
          "type": "string"
        },
        "nodeResourceGroupProfile": {
          "description": "Profile of the node resource group configuration.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedClusterNodeResourceGroupProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "oidcIssuerProfile": {
          "description": "The OIDC issuer profile of the Managed Cluster.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedClusterOidcIssuerProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "podIdentityProfile": {
          "description": "The pod identity profile of the Managed Cluster. See [use AAD pod identity](https://docs.microsoft.com/azure/aks/use-azure-ad-pod-identity) for more details on AAD pod identity integration.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedClusterPodIdentityProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "privateLinkResources": {
          "description": "Private link resources associated with the cluster.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/PrivateLinkResource"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "publicNetworkAccess": {
          "description": "PublicNetworkAccess of the managedCluster. Allow or deny public network access for AKS",
          "oneOf": [
            {
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "securityProfile": {
          "description": "Security profile for the managed cluster.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedClusterSecurityProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "serviceMeshProfile": {
          "description": "Service mesh profile for a managed cluster.",
          "oneOf": [
            {
              "$ref": "#/definitions/ServiceMeshProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "servicePrincipalProfile": {
          "description": "Information about a service principal identity for the cluster to use for manipulating Azure APIs.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedClusterServicePrincipalProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "status": {
          "description": "Contains read-only information about the Managed Cluster.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedClusterStatus"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "storageProfile": {
          "description": "Storage profile for the managed cluster.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedClusterStorageProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "supportPlan": {
          "description": "The support plan for the Managed Cluster. If unspecified, the default is 'KubernetesOfficial'.",
          "oneOf": [
            {
              "enum": [
                "KubernetesOfficial",
                "AKSLongTermSupport"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "upgradeSettings": {
          "description": "Settings for upgrading a cluster.",
          "oneOf": [
            {
              "$ref": "#/definitions/ClusterUpgradeSettings"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "windowsProfile": {
          "description": "The profile for Windows VMs in the Managed Cluster.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedClusterWindowsProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "workloadAutoScalerProfile": {
          "description": "Workload Auto-scaler profile for the managed cluster.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedClusterWorkloadAutoScalerProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ManagedClusterPropertiesAutoScalerProfile": {
      "description": "Parameters to be applied to the cluster-autoscaler when enabled",
      "properties": {
        "balance-similar-node-groups": {
          "description": "Detects similar node pools and balances the number of nodes between them. Valid values are 'true' and 'false'",
          "type": "string"
        },
        "daemonset-eviction-for-empty-nodes": {
          "description": "DaemonSet pods will be gracefully terminated from empty nodes. If set to true, all daemonset pods on empty nodes will be evicted before deletion of the node. If the daemonset pod cannot be evicted another node will be chosen for scaling. If set to false, the node will be deleted without ensuring that daemonset pods are deleted or evicted.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "daemonset-eviction-for-occupied-nodes": {
          "description": "DaemonSet pods will be gracefully terminated from non-empty nodes. If set to true, all daemonset pods on occupied nodes will be evicted before deletion of the node. If the daemonset pod cannot be evicted another node will be chosen for scaling. If set to false, the node will be deleted without ensuring that daemonset pods are deleted or evicted.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "expander": {
          "description": "The expander to use when scaling up. If not specified, the default is 'random'. See [expanders](https://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/FAQ.md#what-are-expanders) for more information.",
          "oneOf": [
            {
              "enum": [
                "least-waste",
                "most-pods",
                "priority",
                "random"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "ignore-daemonsets-utilization": {
          "description": "Should CA ignore DaemonSet pods when calculating resource utilization for scaling down. If set to true, the resources used by daemonset will be taken into account when making scaling down decisions.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "max-empty-bulk-delete": {
          "description": "The maximum number of empty nodes that can be deleted at the same time. This must be a positive integer. The default is 10.",
          "type": "string"
        },
        "max-graceful-termination-sec": {
          "description": "The maximum number of seconds the cluster autoscaler waits for pod termination when trying to scale down a node. The default is 600.",
          "type": "string"
        },
        "max-node-provision-time": {
          "description": "The maximum time the autoscaler waits for a node to be provisioned. The default is '15m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.",
          "type": "string"
        },
        "max-total-unready-percentage": {
          "description": "The maximum percentage of unready nodes in the cluster. After this percentage is exceeded, cluster autoscaler halts operations. The default is 45. The maximum is 100 and the minimum is 0.",
          "type": "string"
        },
        "new-pod-scale-up-delay": {
          "description": "Ignore unscheduled pods before they're a certain age. For scenarios like burst/batch scale where you don't want CA to act before the kubernetes scheduler could schedule all the pods, you can tell CA to ignore unscheduled pods before they're a certain age. The default is '0s'. Values must be an integer followed by a unit ('s' for seconds, 'm' for minutes, 'h' for hours, etc).",
          "type": "string"
        },
        "ok-total-unready-count": {
          "description": "The number of allowed unready nodes, irrespective of max-total-unready-percentage. This must be an integer. The default is 3.",
          "type": "string"
        },
        "scale-down-delay-after-add": {
          "description": "How long after scale up that scale down evaluation resumes. The default is '10m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.",
          "type": "string"
        },
        "scale-down-delay-after-delete": {
          "description": "How long after node deletion that scale down evaluation resumes. The default is the scan-interval. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.",
          "type": "string"
        },
        "scale-down-delay-after-failure": {
          "description": "How long after scale down failure that scale down evaluation resumes. The default is '3m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.",
          "type": "string"
        },
        "scale-down-unneeded-time": {
          "description": "How long a node should be unneeded before it is eligible for scale down. The default is '10m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.",
          "type": "string"
        },
        "scale-down-unready-time": {
          "description": "How long an unready node should be unneeded before it is eligible for scale down. The default is '20m'. Values must be an integer followed by an 'm'. No unit of time other than minutes (m) is supported.",
          "type": "string"
        },
        "scale-down-utilization-threshold": {
          "description": "Node utilization level, defined as sum of requested resources divided by capacity, below which a node can be considered for scale down. The default is '0.5'.",
          "type": "string"
        },
        "scan-interval": {
          "description": "How often cluster is reevaluated for scale up or down. The default is '10'. Values must be an integer number of seconds.",
          "type": "string"
        },
        "skip-nodes-with-local-storage": {
          "description": "If cluster autoscaler will skip deleting nodes with pods with local storage, for example, EmptyDir or HostPath. The default is true.",
          "type": "string"
        },
        "skip-nodes-with-system-pods": {
          "description": "If cluster autoscaler will skip deleting nodes with pods from kube-system (except for DaemonSet or mirror pods). The default is true.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ManagedClusterSKU": {
      "description": "The SKU of a Managed Cluster.",
      "properties": {
        "name": {
          "description": "The name of a managed cluster SKU.",
          "oneOf": [
            {
              "enum": [
                "Base",
                "Automatic"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "tier": {
          "description": "The tier of a managed cluster SKU. If not specified, the default is 'Free'. See [AKS Pricing Tier](https://learn.microsoft.com/azure/aks/free-standard-pricing-tiers) for more details.",
          "oneOf": [
            {
              "enum": [
                "Premium",
                "Standard",
                "Free"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ManagedClusterSecurityProfile": {
      "description": "Security profile for the container service cluster.",
      "properties": {
        "azureKeyVaultKms": {
          "description": "Azure Key Vault [key management service](https://kubernetes.io/docs/tasks/administer-cluster/kms-provider/) settings for the security profile.",
          "oneOf": [
            {
              "$ref": "#/definitions/AzureKeyVaultKms"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "customCATrustCertificates": {
          "description": "A list of up to 10 base64 encoded CAs that will be added to the trust store on all nodes in the cluster. For more information see [Custom CA Trust Certificates](https://learn.microsoft.com/en-us/azure/aks/custom-certificate-authority).",
          "oneOf": [
            {
              "items": {},
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "defender": {
          "description": "Microsoft Defender settings for the security profile.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedClusterSecurityProfileDefender"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "imageCleaner": {
          "description": "Image Cleaner settings for the security profile.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedClusterSecurityProfileImageCleaner"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "workloadIdentity": {
          "description": "Workload identity settings for the security profile. Workload identity enables Kubernetes applications to access Azure cloud resources securely with Azure AD. See https://aka.ms/aks/wi for more details.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedClusterSecurityProfileWorkloadIdentity"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ManagedClusterSecurityProfileDefender": {
      "description": "Microsoft Defender settings for the security profile.",
      "properties": {
        "logAnalyticsWorkspaceResourceId": {
          "description": "Resource ID of the Log Analytics workspace to be associated with Microsoft Defender. When Microsoft Defender is enabled, this field is required and must be a valid workspace resource ID. When Microsoft Defender is disabled, leave the field empty.",
          "type": "string"
        },
        "securityMonitoring": {
          "description": "Microsoft Defender threat detection for Cloud settings for the security profile.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedClusterSecurityProfileDefenderSecurityMonitoring"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ManagedClusterSecurityProfileDefenderSecurityMonitoring": {
      "description": "Microsoft Defender settings for the security profile threat detection.",
      "properties": {
        "enabled": {
          "description": "Whether to enable Defender threat detection",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ManagedClusterSecurityProfileImageCleaner": {
      "description": "Image Cleaner removes unused images from nodes, freeing up disk space and helping to reduce attack surface area. Here are settings for the security profile.",
      "properties": {
        "enabled": {
          "description": "Whether to enable Image Cleaner on AKS cluster.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "intervalHours": {
          "description": "Image Cleaner scanning interval in hours.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ManagedClusterSecurityProfileWorkloadIdentity": {
      "description": "Workload identity settings for the security profile.",
      "properties": {
        "enabled": {
          "description": "Whether to enable workload identity.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ManagedClusterServicePrincipalProfile": {
      "description": "Information about a service principal identity for the cluster to use for manipulating Azure APIs.",
      "properties": {
        "clientId": {
          "description": "The ID for the service principal.",
          "type": "string"
        },
        "secret": {
          "description": "The secret password associated with the service principal in plain text.",
          "type": "string"
        }
      },
      "required": [
        "clientId"
      ],
      "type": "object"
    },
    "ManagedClusterStaticEgressGatewayProfile": {
      "description": "The Static Egress Gateway addon configuration for the cluster.",
      "properties": {
        "enabled": {
          "description": "Enable Static Egress Gateway addon. Indicates if Static Egress Gateway addon is enabled or not.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ManagedClusterStatus": {
      "description": "Contains read-only information about the Managed Cluster.",
      "properties": {},
      "type": "object"
    },
    "ManagedClusterStorageProfile": {
      "description": "Storage profile for the container service cluster.",
      "properties": {
        "blobCSIDriver": {
          "description": "AzureBlob CSI Driver settings for the storage profile.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedClusterStorageProfileBlobCSIDriver"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "diskCSIDriver": {
          "description": "AzureDisk CSI Driver settings for the storage profile.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedClusterStorageProfileDiskCSIDriver"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "fileCSIDriver": {
          "description": "AzureFile CSI Driver settings for the storage profile.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedClusterStorageProfileFileCSIDriver"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "snapshotController": {
          "description": "Snapshot Controller settings for the storage profile.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedClusterStorageProfileSnapshotController"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ManagedClusterStorageProfileBlobCSIDriver": {
      "description": "AzureBlob CSI Driver settings for the storage profile.",
      "properties": {
        "enabled": {
          "description": "Whether to enable AzureBlob CSI Driver. The default value is false.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ManagedClusterStorageProfileDiskCSIDriver": {
      "description": "AzureDisk CSI Driver settings for the storage profile.",
      "properties": {
        "enabled": {
          "description": "Whether to enable AzureDisk CSI Driver. The default value is true.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ManagedClusterStorageProfileFileCSIDriver": {
      "description": "AzureFile CSI Driver settings for the storage profile.",
      "properties": {
        "enabled": {
          "description": "Whether to enable AzureFile CSI Driver. The default value is true.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ManagedClusterStorageProfileSnapshotController": {
      "description": "Snapshot Controller settings for the storage profile.",
      "properties": {
        "enabled": {
          "description": "Whether to enable Snapshot Controller. The default value is true.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ManagedClusterWindowsProfile": {
      "description": "Profile for Windows VMs in the managed cluster.",
      "properties": {
        "adminPassword": {
          "description": "Specifies the password of the administrator account. <br><br> **Minimum-length:** 8 characters <br><br> **Max-length:** 123 characters <br><br> **Complexity requirements:** 3 out of 4 conditions below need to be fulfilled <br> Has lower characters <br>Has upper characters <br> Has a digit <br> Has a special character (Regex match [\\W_]) <br><br> **Disallowed values:** \"abc@123\", \"P@$$w0rd\", \"P@ssw0rd\", \"P@ssword123\", \"Pa$$word\", \"pass@word1\", \"Password!\", \"Password1\", \"Password22\", \"iloveyou!\"",
          "type": "string"
        },
        "adminUsername": {
          "description": "Specifies the name of the administrator account. <br><br> **Restriction:** Cannot end in \".\" <br><br> **Disallowed values:** \"administrator\", \"admin\", \"user\", \"user1\", \"test\", \"user2\", \"test1\", \"user3\", \"admin1\", \"1\", \"123\", \"a\", \"actuser\", \"adm\", \"admin2\", \"aspnet\", \"backup\", \"console\", \"david\", \"guest\", \"john\", \"owner\", \"root\", \"server\", \"sql\", \"support\", \"support_388945a0\", \"sys\", \"test2\", \"test3\", \"user4\", \"user5\". <br><br> **Minimum-length:** 1 character <br><br> **Max-length:** 20 characters",
          "type": "string"
        },
        "enableCSIProxy": {
          "description": "Whether to enable CSI proxy. For more details on CSI proxy, see the [CSI proxy GitHub repo](https://github.com/kubernetes-csi/csi-proxy).",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "gmsaProfile": {
          "description": "The Windows gMSA Profile in the Managed Cluster.",
          "oneOf": [
            {
              "$ref": "#/definitions/WindowsGmsaProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "licenseType": {
          "description": "The license type to use for Windows VMs. See [Azure Hybrid User Benefits](https://azure.microsoft.com/pricing/hybrid-benefit/faq/) for more details.",
          "oneOf": [
            {
              "enum": [
                "None",
                "Windows_Server"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "adminUsername"
      ],
      "type": "object"
    },
    "ManagedClusterWorkloadAutoScalerProfile": {
      "description": "Workload Auto-scaler profile for the managed cluster.",
      "properties": {
        "keda": {
          "description": "KEDA (Kubernetes Event-driven Autoscaling) settings for the workload auto-scaler profile.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedClusterWorkloadAutoScalerProfileKeda"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "verticalPodAutoscaler": {
          "description": "VPA (Vertical Pod Autoscaler) settings for the workload auto-scaler profile.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedClusterWorkloadAutoScalerProfileVerticalPodAutoscaler"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ManagedClusterWorkloadAutoScalerProfileKeda": {
      "description": "KEDA (Kubernetes Event-driven Autoscaling) settings for the workload auto-scaler profile.",
      "properties": {
        "enabled": {
          "description": "Whether to enable KEDA.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "enabled"
      ],
      "type": "object"
    },
    "ManagedClusterWorkloadAutoScalerProfileVerticalPodAutoscaler": {
      "description": "VPA (Vertical Pod Autoscaler) settings for the workload auto-scaler profile.",
      "properties": {
        "enabled": {
          "description": "Whether to enable VPA. Default value is false.",
          "oneOf": [
            {
              "default": false,
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "enabled"
      ],
      "type": "object"
    },
    "ManagedServiceIdentityUserAssignedIdentitiesValue": {
      "properties": {},
      "type": "object"
    },
    "ManualScaleProfile": {
      "description": "Specifications on number of machines.",
      "properties": {
        "count": {
          "description": "Number of nodes.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "size": {
          "description": "VM size that AKS will use when creating and scaling e.g. 'Standard_E4s_v3', 'Standard_E16s_v3' or 'Standard_D16s_v5'.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PortRange": {
      "description": "The port range.",
      "properties": {
        "portEnd": {
          "description": "The maximum port that is included in the range. It should be ranged from 1 to 65535, and be greater than or equal to portStart.",
          "oneOf": [
            {
              "maximum": 65535,
              "minimum": 1,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "portStart": {
          "description": "The minimum port that is included in the range. It should be ranged from 1 to 65535, and be less than or equal to portEnd.",
          "oneOf": [
            {
              "maximum": 65535,
              "minimum": 1,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "protocol": {
          "description": "The network protocol of the port.",
          "oneOf": [
            {
              "enum": [
                "TCP",
                "UDP"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "PowerState": {
      "description": "Describes the Power State of the cluster",
      "properties": {
        "code": {
          "description": "Tells whether the cluster is Running or Stopped",
          "oneOf": [
            {
              "enum": [
                "Running",
                "Stopped"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "PrivateEndpoint": {
      "description": "Private endpoint which a connection belongs to.",
      "properties": {
        "id": {
          "description": "The resource ID of the private endpoint",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PrivateEndpointConnectionProperties": {
      "description": "Properties of a private endpoint connection.",
      "properties": {
        "privateEndpoint": {
          "description": "The resource of private endpoint.",
          "oneOf": [
            {
              "$ref": "#/definitions/PrivateEndpoint"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "privateLinkServiceConnectionState": {
          "description": "A collection of information about the state of the connection between service consumer and provider.",
          "oneOf": [
            {
              "$ref": "#/definitions/PrivateLinkServiceConnectionState"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "privateLinkServiceConnectionState"
      ],
      "type": "object"
    },
    "PrivateLinkResource": {
      "description": "A private link resource",
      "properties": {
        "groupId": {
          "description": "The group ID of the resource.",
          "type": "string"
        },
        "id": {
          "description": "The ID of the private link resource.",
          "type": "string"
        },
        "name": {
          "description": "The name of the private link resource.",
          "type": "string"
        },
        "requiredMembers": {
          "description": "The RequiredMembers of the resource",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "description": "The resource type.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PrivateLinkServiceConnectionState": {
      "description": "The state of a private link service connection.",
      "properties": {
        "description": {
          "description": "The private link service connection description.",
          "type": "string"
        },
        "status": {
          "description": "The private link service connection status.",
          "oneOf": [
            {
              "enum": [
                "Pending",
                "Approved",
                "Rejected",
                "Disconnected"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "RelativeMonthlySchedule": {
      "description": "For schedules like: 'recur every month on the first Monday' or 'recur every 3 months on last Friday'.",
      "properties": {
        "dayOfWeek": {
          "description": "Specifies on which day of the week the maintenance occurs.",
          "oneOf": [
            {
              "enum": [
                "Sunday",
                "Monday",
                "Tuesday",
                "Wednesday",
                "Thursday",
                "Friday",
                "Saturday"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "intervalMonths": {
          "description": "Specifies the number of months between each set of occurrences.",
          "oneOf": [
            {
              "maximum": 6,
              "minimum": 1,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "weekIndex": {
          "description": "The week index. Specifies on which week of the month the dayOfWeek applies.",
          "oneOf": [
            {
              "enum": [
                "First",
                "Second",
                "Third",
                "Fourth",
                "Last"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "intervalMonths",
        "weekIndex",
        "dayOfWeek"
      ],
      "type": "object"
    },
    "ResourceReference": {
      "description": "A reference to an Azure resource.",
      "properties": {
        "id": {
          "description": "The fully qualified Azure resource id.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ScaleProfile": {
      "description": "Specifications on how to scale a VirtualMachines agent pool.",
      "properties": {
        "manual": {
          "description": "Specifications on how to scale the VirtualMachines agent pool to a fixed size.",
          "oneOf": [
            {
              "items": {
                "$ref": "#/definitions/ManualScaleProfile"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "Schedule": {
      "description": "One and only one of the schedule types should be specified. Choose either 'daily', 'weekly', 'absoluteMonthly' or 'relativeMonthly' for your maintenance schedule.",
      "properties": {
        "absoluteMonthly": {
          "description": "For schedules like: 'recur every month on the 15th' or 'recur every 3 months on the 20th'.",
          "oneOf": [
            {
              "$ref": "#/definitions/AbsoluteMonthlySchedule"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "daily": {
          "description": "For schedules like: 'recur every day' or 'recur every 3 days'.",
          "oneOf": [
            {
              "$ref": "#/definitions/DailySchedule"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "relativeMonthly": {
          "description": "For schedules like: 'recur every month on the first Monday' or 'recur every 3 months on last Friday'.",
          "oneOf": [
            {
              "$ref": "#/definitions/RelativeMonthlySchedule"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "weekly": {
          "description": "For schedules like: 'recur every Monday' or 'recur every 3 weeks on Wednesday'.",
          "oneOf": [
            {
              "$ref": "#/definitions/WeeklySchedule"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "ServiceMeshProfile": {
      "description": "Service mesh profile for a managed cluster.",
      "properties": {
        "istio": {
          "description": "Istio service mesh configuration.",
          "oneOf": [
            {
              "$ref": "#/definitions/IstioServiceMesh"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "mode": {
          "description": "Mode of the service mesh.",
          "oneOf": [
            {
              "enum": [
                "Istio",
                "Disabled"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "mode"
      ],
      "type": "object"
    },
    "SnapshotProperties": {
      "description": "Properties used to configure a node pool snapshot.",
      "properties": {
        "creationData": {
          "description": "CreationData to be used to specify the source agent pool resource ID to create this snapshot.",
          "oneOf": [
            {
              "$ref": "#/definitions/CreationData"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "snapshotType": {
          "description": "The type of a snapshot. The default is NodePool.",
          "oneOf": [
            {
              "enum": [
                "NodePool"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "SysctlConfig": {
      "description": "Sysctl settings for Linux agent nodes.",
      "properties": {
        "fsAioMaxNr": {
          "description": "Sysctl setting fs.aio-max-nr.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "fsFileMax": {
          "description": "Sysctl setting fs.file-max.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "fsInotifyMaxUserWatches": {
          "description": "Sysctl setting fs.inotify.max_user_watches.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "fsNrOpen": {
          "description": "Sysctl setting fs.nr_open.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "kernelThreadsMax": {
          "description": "Sysctl setting kernel.threads-max.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "netCoreNetdevMaxBacklog": {
          "description": "Sysctl setting net.core.netdev_max_backlog.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "netCoreOptmemMax": {
          "description": "Sysctl setting net.core.optmem_max.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "netCoreRmemDefault": {
          "description": "Sysctl setting net.core.rmem_default.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "netCoreRmemMax": {
          "description": "Sysctl setting net.core.rmem_max.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "netCoreSomaxconn": {
          "description": "Sysctl setting net.core.somaxconn.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "netCoreWmemDefault": {
          "description": "Sysctl setting net.core.wmem_default.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "netCoreWmemMax": {
          "description": "Sysctl setting net.core.wmem_max.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "netIpv4IpLocalPortRange": {
          "description": "Sysctl setting net.ipv4.ip_local_port_range.",
          "type": "string"
        },
        "netIpv4NeighDefaultGcThresh1": {
          "description": "Sysctl setting net.ipv4.neigh.default.gc_thresh1.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "netIpv4NeighDefaultGcThresh2": {
          "description": "Sysctl setting net.ipv4.neigh.default.gc_thresh2.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "netIpv4NeighDefaultGcThresh3": {
          "description": "Sysctl setting net.ipv4.neigh.default.gc_thresh3.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "netIpv4TcpFinTimeout": {
          "description": "Sysctl setting net.ipv4.tcp_fin_timeout.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "netIpv4TcpKeepaliveProbes": {
          "description": "Sysctl setting net.ipv4.tcp_keepalive_probes.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "netIpv4TcpKeepaliveTime": {
          "description": "Sysctl setting net.ipv4.tcp_keepalive_time.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "netIpv4TcpMaxSynBacklog": {
          "description": "Sysctl setting net.ipv4.tcp_max_syn_backlog.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "netIpv4TcpMaxTwBuckets": {
          "description": "Sysctl setting net.ipv4.tcp_max_tw_buckets.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "netIpv4TcpTwReuse": {
          "description": "Sysctl setting net.ipv4.tcp_tw_reuse.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "netIpv4TcpkeepaliveIntvl": {
          "description": "Sysctl setting net.ipv4.tcp_keepalive_intvl.",
          "oneOf": [
            {
              "maximum": 90,
              "minimum": 10,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "netNetfilterNfConntrackBuckets": {
          "description": "Sysctl setting net.netfilter.nf_conntrack_buckets.",
          "oneOf": [
            {
              "maximum": 524288,
              "minimum": 65536,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "netNetfilterNfConntrackMax": {
          "description": "Sysctl setting net.netfilter.nf_conntrack_max.",
          "oneOf": [
            {
              "maximum": 2097152,
              "minimum": 131072,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "vmMaxMapCount": {
          "description": "Sysctl setting vm.max_map_count.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "vmSwappiness": {
          "description": "Sysctl setting vm.swappiness.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "vmVfsCachePressure": {
          "description": "Sysctl setting vm.vfs_cache_pressure.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "TimeInWeek": {
      "description": "Time in a week.",
      "properties": {
        "day": {
          "description": "The day of the week.",
          "oneOf": [
            {
              "enum": [
                "Sunday",
                "Monday",
                "Tuesday",
                "Wednesday",
                "Thursday",
                "Friday",
                "Saturday"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "hourSlots": {
          "description": "A list of hours in the day used to identify a time range. Each integer hour represents a time range beginning at 0m after the hour ending at the next hour (non-inclusive). 0 corresponds to 00:00 UTC, 23 corresponds to 23:00 UTC. Specifying [0, 1] means the 00:00 - 02:00 UTC time range.",
          "oneOf": [
            {
              "items": {
                "maximum": 23,
                "minimum": 0,
                "type": "integer"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "TimeSpan": {
      "description": "A time range. For example, between 2021-05-25T13:00:00Z and 2021-05-25T14:00:00Z.",
      "properties": {
        "end": {
          "description": "The end of a time span",
          "format": "date-time",
          "type": "string"
        },
        "start": {
          "description": "The start of a time span",
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "TrustedAccessRoleBindingProperties": {
      "description": "Properties for trusted access role binding",
      "properties": {
        "roles": {
          "description": "A list of roles to bind, each item is a resource type qualified role name. For example: 'Microsoft.MachineLearningServices/workspaces/reader'.",
          "oneOf": [
            {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "sourceResourceId": {
          "description": "The ARM resource ID of source resource that trusted access is configured for.",
          "type": "string"
        }
      },
      "required": [
        "sourceResourceId",
        "roles"
      ],
      "type": "object"
    },
    "UpgradeOverrideSettings": {
      "description": "Settings for overrides when upgrading a cluster.",
      "properties": {
        "forceUpgrade": {
          "description": "Whether to force upgrade the cluster. Note that this option instructs upgrade operation to bypass upgrade protections such as checking for deprecated API usage. Enable this option only with caution.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "until": {
          "description": "Until when the overrides are effective. Note that this only matches the start time of an upgrade, and the effectiveness won't change once an upgrade starts even if the `until` expires as upgrade proceeds. This field is not set by default. It must be set for the overrides to take effect.",
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "UserAssignedIdentity": {
      "description": "Details about a user assigned identity.",
      "properties": {
        "clientId": {
          "description": "The client ID of the user assigned identity.",
          "type": "string"
        },
        "objectId": {
          "description": "The object ID of the user assigned identity.",
          "type": "string"
        },
        "resourceId": {
          "description": "The resource ID of the user assigned identity.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "VirtualMachineNodes": {
      "description": "Current status on a group of nodes of the same vm size.",
      "properties": {
        "count": {
          "description": "Number of nodes.",
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "size": {
          "description": "The VM size of the agents used to host this group of nodes.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "VirtualMachinesProfile": {
      "description": "Specifications on VirtualMachines agent pool.",
      "properties": {
        "scale": {
          "description": "Specifications on how to scale a VirtualMachines agent pool.",
          "oneOf": [
            {
              "$ref": "#/definitions/ScaleProfile"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "type": "object"
    },
    "WeeklySchedule": {
      "description": "For schedules like: 'recur every Monday' or 'recur every 3 weeks on Wednesday'.",
      "properties": {
        "dayOfWeek": {
          "description": "Specifies on which day of the week the maintenance occurs.",
          "oneOf": [
            {
              "enum": [
                "Sunday",
                "Monday",
                "Tuesday",
                "Wednesday",
                "Thursday",
                "Friday",
                "Saturday"
              ],
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "intervalWeeks": {
          "description": "Specifies the number of weeks between each set of occurrences.",
          "oneOf": [
            {
              "maximum": 4,
              "minimum": 1,
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        }
      },
      "required": [
        "intervalWeeks",
        "dayOfWeek"
      ],
      "type": "object"
    },
    "WindowsGmsaProfile": {
      "description": "Windows gMSA Profile in the managed cluster.",
      "properties": {
        "dnsServer": {
          "description": "Specifies the DNS server for Windows gMSA. <br><br> Set it to empty if you have configured the DNS server in the vnet which is used to create the managed cluster.",
          "type": "string"
        },
        "enabled": {
          "description": "Whether to enable Windows gMSA. Specifies whether to enable Windows gMSA in the managed cluster.",
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "rootDomainName": {
          "description": "Specifies the root domain name for Windows gMSA. <br><br> Set it to empty if you have configured the DNS server in the vnet which is used to create the managed cluster.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "managedClusters_agentPools_childResource": {
      "description": "Microsoft.ContainerService/managedClusters/agentPools",
      "properties": {
        "apiVersion": {
          "enum": [
            "2025-07-01"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the agent pool.",
          "oneOf": [
            {
              "maxLength": 12,
              "minLength": 1,
              "pattern": "^[a-z][a-z0-9]{0,11}$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Properties of an agent pool.",
          "oneOf": [
            {
              "$ref": "#/definitions/ManagedClusterAgentPoolProfileProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "agentPools"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "managedClusters_maintenanceConfigurations_childResource": {
      "description": "Microsoft.ContainerService/managedClusters/maintenanceConfigurations",
      "properties": {
        "apiVersion": {
          "enum": [
            "2025-07-01"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the maintenance configuration.",
          "type": "string"
        },
        "properties": {
          "description": "Properties of a default maintenance configuration.",
          "oneOf": [
            {
              "$ref": "#/definitions/MaintenanceConfigurationProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "maintenanceConfigurations"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "managedClusters_privateEndpointConnections_childResource": {
      "description": "Microsoft.ContainerService/managedClusters/privateEndpointConnections",
      "properties": {
        "apiVersion": {
          "enum": [
            "2025-07-01"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of the private endpoint connection.",
          "type": "string"
        },
        "properties": {
          "description": "The properties of a private endpoint connection.",
          "oneOf": [
            {
              "$ref": "#/definitions/PrivateEndpointConnectionProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "privateEndpointConnections"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    },
    "managedClusters_trustedAccessRoleBindings_childResource": {
      "description": "Microsoft.ContainerService/managedClusters/trustedAccessRoleBindings",
      "properties": {
        "apiVersion": {
          "enum": [
            "2025-07-01"
          ],
          "type": "string"
        },
        "name": {
          "description": "The name of trusted access role binding.",
          "oneOf": [
            {
              "maxLength": 24,
              "minLength": 1,
              "pattern": "^([A-Za-z0-9-])+$",
              "type": "string"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "properties": {
          "description": "Properties for trusted access role binding",
          "oneOf": [
            {
              "$ref": "#/definitions/TrustedAccessRoleBindingProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/common/definitions.json#/definitions/expression"
            }
          ]
        },
        "type": {
          "enum": [
            "trustedAccessRoleBindings"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "properties",
        "apiVersion",
        "type"
      ],
      "type": "object"
    }
  }
}