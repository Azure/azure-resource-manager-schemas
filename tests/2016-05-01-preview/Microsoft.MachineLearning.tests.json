{
  "tests": [
    {
      "name": "commitmentPlan - create",
      "definition": "https://schema.management.azure.com/schemas/2016-05-01-preview/Microsoft.MachineLearning.json#/resourceDefinitions/commitmentPlans",
      "expectedErrors": [],
      "json": {
        "type": "Microsoft.MachineLearning/commitmentPlans",
        "name": "[parameters('newCommitmentPlanName')]",
        "apiVersion": "2016-05-01-preview",
        "location": "South Central US",
        "sku": {
          "name": "DevTest",
          "tier": "Free",
          "capacity": 1
        }
      }
    },
    {
      "name": "webServices - minimal resource",
      "definition": "https://schema.management.azure.com/schemas/2016-05-01-preview/Microsoft.MachineLearning.json#/resourceDefinitions/webServices",
      "expectedErrors": [],
      "json": {
        "name": "[parameters('newServiceName')]",
        "type": "Microsoft.MachineLearning/webServices",
        "apiVersion": "2016-05-01-preview",
        "location": "South Central Us",
        "properties": {
          "keys": {
            "primary": "S8ayf24PAsbQqy8Nm67uGf3MbOeorYKPY8QfXen2+JsBZV5Q0NFfk9tgC7mjJ3aCsUPY8yKCFVcI/sCcOlmkKw==",
            "secondary": "S8ayf24PAsbQqy8Nm67uGf3MbOeorYKPY8QfXen2+JsBZV5Q0NFfk9tgC7mjJ3aCsUPY8yKCFVcI/sCcOlmooo=="
          },
          "readOnly": false,
          "storageAccount": {
            "name": "accountName",
            "key": "accountKeyHere"
          },
          "commitmentPlan": {
            "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/testrg/providers/Microsoft.MachineLearning/commitmentPlans/testcp"
          },
          "assets": {
            "asset1": {
              "name": "Select Columns in Dataset",
              "type": "Module",
              "locationInfo": {
                "uri": "aml://module/id",
                "credentials": ""
              }
            }
          },
          "packageType": "Graph",
          "package": {
            "nodes": {
              "node1": {
                "assetId": "asset1",
                "parameters": {
                  "Select Columns": "%7B%22isFilter%22%3Atrue%2C%22rules%22%3A%5B%7B%22ruleType%22%3A%22ColumnNames%22%2C%22columns%22%3A%5B%22Class%22%2C%22sepal-length%22%2C%22sepal-width%22%2C%22petal-length%22%2C%22petal-width%22%5D%2C%22exclude%22%3Afalse%7D%5D%7D"
                }
              }
            }
          }
        }
      }
    },
    {
      "name": "webServices - normal resource",
      "definition": "https://schema.management.azure.com/schemas/2016-05-01-preview/Microsoft.MachineLearning.json#/resourceDefinitions/webServices",
      "expectedErrors": [],
      "json": {
        "name": "[parameters('newServiceName')]",
        "type": "Microsoft.MachineLearning/webServices",
        "apiVersion": "2016-05-01-preview",
        "location": "South Central Us",
        "properties": {
          "title": "TestMlService",
          "description": "This is some service description",
          "keys": {
            "primary": "S8ayf24PAsbQqy8Nm67uGf3MbOeorYKPY8QfXen2+JsBZV5Q0NFfk9tgC7mjJ3aCsUPY8yKCFVcI/sCcOlmkKw==",
            "secondary": "S8ayf24PAsbQqy8Nm67uGf3MbOeorYKPY8QfXen2+JsBZV5Q0NFfk9tgC7mjJ3aCsUPY8yKCFVcI/sCcOlmooo=="
          },
          "readOnly": false,
          "storageAccount": {
            "name": "accountName",
            "key": "accountKeyHere"
          },
          "commitmentPlan": {
            "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/testrg/providers/Microsoft.MachineLearning/commitmentPlans/testcp"
          },
          "machineLearningWorkspace": {
            "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/testrg/providers/Microsoft.MachineLearning/Workspaces/testworkspace"
          },
          "input": {
            "title": "",
            "description": "",
            "type": "object",
            "properties": {
              "input1": {
                "title": "",
                "description": "",
                "type": "object",
                "properties": {
                  "class": {
                    "type": "Number",
                    "format": "Double",
                    "x-ms-isnullable": false
                  },
                  "sepal-length": {
                    "type": "Number",
                    "format": "Double",
                    "x-ms-isnullable": false
                  },
                  "sepal-width": {
                    "type": "Number",
                    "format": "Double",
                    "x-ms-isnullable": false
                  },
                  "petal-length": {
                    "type": "Number",
                    "format": "Double",
                    "x-ms-isnullable": false
                  },
                  "petal-width": {
                    "type": "Number",
                    "format": "Double",
                    "x-ms-isnullable": false
                  }
                }
              }
            }
          },
          "output": {
            "title": "",
            "description": "",
            "type": "object",
            "properties": {
              "output1": {
                "title": "",
                "description": "",
                "type": "object",
                "properties": {
                  "class": {
                    "type": "Number",
                    "format": "Double",
                    "x-ms-isnullable": false
                  },
                  "sepal-length": {
                    "type": "Number",
                    "format": "Double",
                    "x-ms-isnullable": false
                  },
                  "sepal-width": {
                    "type": "Number",
                    "format": "Double",
                    "x-ms-isnullable": false
                  },
                  "petal-length": {
                    "type": "Number",
                    "format": "Double",
                    "x-ms-isnullable": false
                  },
                  "petal-width": {
                    "type": "Number",
                    "format": "Double",
                    "x-ms-isnullable": false
                  }
                }
              },
              "output2": {
                "title": "",
                "description": "",
                "type": "object",
                "properties": {
                  "class": {
                    "type": "Number",
                    "format": "Double",
                    "x-ms-isnullable": false
                  },
                  "sepal-length": {
                    "type": "Number",
                    "format": "Double",
                    "x-ms-isnullable": false
                  },
                  "sepal-width": {
                    "type": "Number",
                    "format": "Double",
                    "x-ms-isnullable": false
                  },
                  "petal-length": {
                    "type": "Number",
                    "format": "Double",
                    "x-ms-isnullable": false
                  },
                  "petal-width": {
                    "type": "Number",
                    "format": "Double",
                    "x-ms-isnullable": false
                  }
                }
              }
            }
          },          
          "assets": {
            "asset1": {
              "name": "Select Columns in Dataset",
              "type": "Module",
              "locationInfo": {
                "uri": "aml://module/module_uri",
                "credentials": ""
              },
              "parameters": [
                {
                  "name": "ComplexModuleParameterName",
                  "type": "ModuleParameterComplexType",
                  "modeValuesInfo": {
                    "innerParam": {
                      "interfaceString": "this is the interface string",
                      "parameters": [
                        {
                          "name": "InnerParameterName",
                          "type": "InnerParameterType"
                        }
                      ]
                    }
                  }
                },
                {
                  "name": "SimpleModuleParameterName",
                  "type": "ModuleParameterSimpleType"               
                }
              ]           
            },
            "asset2": {
              "name": "Iris Two Class Data",
              "type": "Resource",
              "locationInfo": {
                "uri": "blob_sas_uri",
                "credentials": ""
              },
              "outputPorts": {
                "results dataset": {
                  "type": "Dataset"
                }
              }
            },
            "asset3": {
              "name": "Split Data",
              "type": "Module",
              "locationInfo": {
                "uri": "aml://module/module_uri2",
                "credentials": ""
              }
            },
            "asset4": {
              "name": "Execute R Script",
              "type": "Module",
              "locationInfo": {
                "uri": "aml://module/module_uri3",
                "credentials": ""
              }
            },
            "asset5": {
              "name": "Execute Python Script",
              "type": "Module",
              "locationInfo": {
                "uri": "aml://module/module_uri4",
                "credentials": ""
              }
            }
          },
          "parameters": { },          
          "packageType": "Graph",
          "package": {
            "nodes": {
              "node1": {
                "assetId": "asset1",
                "parameters": {
                  "Select Columns": "%7B%22isFilter%22%3Atrue%2C%22rules%22%3A%5B%7B%22ruleType%22%3A%22ColumnNames%22%2C%22columns%22%3A%5B%22Class%22%2C%22sepal-length%22%2C%22sepal-width%22%2C%22petal-length%22%2C%22petal-width%22%5D%2C%22exclude%22%3Afalse%7D%5D%7D"
                }
              },
              "node2": {
                "assetId": "asset3",
                "parameters": {
                  "Splitting mode": "Split Rows",
                  "Fraction of rows in the first output dataset": "0.5",
                  "Randomized split": "True",
                  "Random seed": "0",
                  "Stratified split": "False"
                }
              },
              "node3": {
                "assetId": "asset4",
                "parameters": {
                  "R Script": "# Map 1-based optional input ports to variables\r\ndataset1 <- maml.mapInputPort(1) # class: data.frame\r\ndataset2 <- maml.mapInputPort(2) # class: data.frame\r\n\r\n# Contents of optional Zip port are in ./src/\r\n# source(\"src/yourfile.R\");\r\n# load(\"src/yourData.rdata\");\r\n\r\n# Sample operation\r\ndata.set = rbind(dataset1, dataset2);\r\n\r\n# You'll see this output in the R Device port.\r\n# It'll have your stdout, stderr and PNG graphics device(s).\r\nplot(data.set);\r\n\r\n# Select data.frame to be sent to the output Dataset port\r\nmaml.mapOutputPort(\"data.set\");",
                  "Random Seed": ""
                }
              },
              "node4": {
                "assetId": "asset5",
                "parameters": {
                  "R Script": "# The script MUST contain a function named azureml_main\n# which is the entry point for this module.\n#\n# The entry point function can contain up to two input arguments:\n#   Param<dataframe1>: a pandas.DataFrame\n#   Param<dataframe2>: a pandas.DataFrame\ndef azureml_main(dataframe1 = None, dataframe2 = None):\n\n    # Execution logic goes here\n    print('Input pandas.DataFrame #1:\\r\\n\\r\\n{0}'.format(dataframe1))\n\n    # If a zip file is connected to the third input port is connected,\n    # it is unzipped under \".\\Script Bundle\". This directory is added\n    # to sys.path. Therefore, if your zip file contains a Python file\n    # mymodule.py you can import it using:\n    # import mymodule\n    \n    # Return value must be of a sequence of pandas.DataFrame\n    return dataframe1,\n"
                }
              },
              "node5": {
                "assetId": "asset2"
              },
              "node6": {
                "inputId": "input1"
              },
              "node7": {
                "outputId": "output1"
              },
              "node8": {
                "outputId": "output2"
              }
            },
            "edges": [
              {
                "sourceNodeId": "node1",
                "sourcePortId": "Results dataset",
                "targetNodeId": "node2",
                "targetPortId": "Dataset"
              },
              {
                "sourceNodeId": "node2",
                "sourcePortId": "Results dataset1",
                "targetNodeId": "node3",
                "targetPortId": "Dataset1"
              },
              {
                "sourceNodeId": "node2",
                "sourcePortId": "Results dataset1",
                "targetNodeId": "node4",
                "targetPortId": "Dataset1"
              },
              {
                "sourceNodeId": "node2",
                "sourcePortId": "Results dataset2",
                "targetNodeId": "node3",
                "targetPortId": "Dataset2"
              },
              {
                "sourceNodeId": "node5",
                "sourcePortId": "Results dataset",
                "targetNodeId": "node1",
                "targetPortId": "Dataset"
              },
              {
                "sourceNodeId": "node6",
                "targetNodeId": "node1",
                "targetPortId": "Dataset"
              },
              {
                "sourceNodeId": "node3",
                "sourcePortId": "Result Dataset",
                "targetNodeId": "node7"
              },
              {
                "sourceNodeId": "node4",
                "sourcePortId": "Result Dataset",
                "targetNodeId": "node8"
              }
            ],
            "graphParameters": { }
          },
          "exampleRequest": {
            "inputs": {
              "input1": [
                [{}]
              ]
            },
            "globalParameters": {
            }
          }       
        }
      }
    }
  ]
}