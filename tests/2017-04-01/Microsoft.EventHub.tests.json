{
  "tests": [
    {
      "name": "namespaces - Minimal",
      "definition": "https://schema.management.azure.com/schemas/2017-04-01/Microsoft.EventHub.json#/resourceDefinitions/namespaces",
      "json": {
        "type": "Microsoft.EventHub/namespaces",
        "apiVersion": "2017-04-01",
        "location": "West Us",
        "name": "NamespaceTest",
        "sku": {
          "name": "Basic",
          "tier": "Basic"
        },
        "properties": {
        }
      }
    },
    {
      "name": "namespaces - Sku name not provided",
      "expectedErrors": [
        {
          "message": "Missing required property: name",
          "dataPath": "/",
          "schemaPath": "/required/0"
        },
        {
          "message": "Data does not match any schemas from \"oneOf\"",
          "dataPath": "/sku",
          "schemaPath": "/properties/sku/oneOf",
          "subErrors": [
            {
              "message": "Missing required property: name",
              "dataPath": "/sku",
              "schemaPath": "/properties/sku/oneOf/0/required/0"
            },
            {
              "message": "Invalid type: object (expected string)",
              "dataPath": "/sku",
              "schemaPath": "/properties/sku/oneOf/1/type"
            }
          ]
        }
      ],
      "definition": "https://schema.management.azure.com/schemas/2017-04-01/Microsoft.EventHub.json#/resourceDefinitions/namespaces",
      "json": {
        "type": "Microsoft.EventHub/namespaces",
        "apiVersion": "2017-04-01",
        "location": "West Us",
        "sku": {
          "tier": "Basic"
        },
        "properties": {
        }
      }
    },
    {
      "name": "namespaces - invalidType",
      "expectedErrors": [
        {
          "message": "Missing required property: name",
          "dataPath": "/",
          "schemaPath": "/required/0"
        },
        {
          "message": "No enum match for: \"Microsoft.EventHub/invalidType\"",
          "dataPath": "/type",
          "schemaPath": "/properties/type/type"
        },
        {
          "message": "No enum match for: \"2015-10-12\"",
          "dataPath": "/apiVersion",
          "schemaPath": "/properties/apiVersion/type"
        }
      ],
      "definition": "https://schema.management.azure.com/schemas/2017-04-01/Microsoft.EventHub.json#/resourceDefinitions/namespaces",
      "json": {
        "type": "Microsoft.EventHub/invalidType",
        "apiVersion": "2015-10-12",
        "location": "West Us",
        "properties": {
        }
      }
    },
    {
      "name": "namespaces AuthorizationRules- Minimal",
      "definition": "https://schema.management.azure.com/schemas/2017-04-01/Microsoft.EventHub.json#/resourceDefinitions/namespaces_authorizationRules",
      "json": {
        "type": "Microsoft.EventHub/namespaces/authorizationRules",
        "apiVersion": "2017-04-01",
        "name": "NamespaceAuthorizationRuleTest",
        "properties": {
          "rights": [
            "Manage",
            "Send",
            "Listen"
          ]
        }
      }
    },
    {
      "name": "namespaces eventhub",
      "definition": "https://schema.management.azure.com/schemas/2017-04-01/Microsoft.EventHub.json#/resourceDefinitions/namespaces_eventhubs",
      "json": {
        "type": "Microsoft.EventHub/namespaces/eventhubs",
        "apiVersion": "2017-04-01",
        "name": "EventHubTest",
        "properties": {
          "messageRetentionInDays": 4,
          "partitionCount": 4,
          "status": "Active",
          "captureDescription": {
            "enabled": true,
            "encoding": "Avro",
            "intervalInSeconds": 120,
            "sizeLimitInBytes": 10485763,
            "destination": {
              "name": "EventHubArchive.AzureBlockBlob",
              "properties": {
                "storageAccountResourceId": "/subscriptions/e2f361f0-3b27-4503-a9cc-21cfba380093/resourceGroups/Default-Storage-SouthCentralUS/providers/Microsoft.ClassicStorage/storageAccounts/arjunteststorage",
                "blobContainer": "container",
                "archiveNameFormat": "{Namespace}/{EventHub}/{PartitionId}/{Year}/{Month}/{Day}/{Hour}/{Minute}/{Second}"
              }
            }
          }
        }
      }
    },
    {
      "name": "namespaces eventhub",
      "definition": "https://schema.management.azure.com/schemas/2017-04-01/Microsoft.EventHub.json#/resourceDefinitions/namespaces_eventhubs",
      "json": {
        "type": "Microsoft.EventHub/namespaces/eventhubs",
        "apiVersion": "2017-04-01",
        "name": "EventHubTestminimal",
        "properties": {}
      }
    },
    {
      "name": "namespaces eventhubs_authorizationRules - Minimal",
      "definition": "https://schema.management.azure.com/schemas/2017-04-01/Microsoft.EventHub.json#/resourceDefinitions/namespaces_eventhubs_authorizationRules",
      "json": {
        "type": "Microsoft.EventHub/namespaces/eventhubs/authorizationRules",
        "apiVersion": "2017-04-01",
        "name": "EventHubAuthorizationRuleTest",
        "properties": {
          "rights": [
            "Manage",
            "Send",
            "Listen"
          ]
        }
      }
    },
    {
      "name": "namespaces eventhubs_consumergroups - Minimal",
      "definition": "https://schema.management.azure.com/schemas/2017-04-01/Microsoft.EventHub.json#/resourceDefinitions/namespaces_eventhubs_consumergroups",
      "json": {
        "type": "Microsoft.EventHub/namespaces/eventhubs/consumergroups",
        "apiVersion": "2017-04-01",
        "name": "ConsumerGroupTest",
        "properties": {
          "userMetadata": "New consumergroup"
        }
      }
    },
    {
      "name": "disasterRecoveryConfigs - invalidType",
      "expectedErrors": [
        {
          "message": "Missing required property: name",
          "dataPath": "/",
          "schemaPath": "/required/0"
        },
        {
          "message": "No enum match for: \"Microsoft.EventHub/invalidType\"",
          "dataPath": "/type",
          "schemaPath": "/properties/type/type"
        },
        {
          "message": "No enum match for: \"2015-10-12\"",
          "dataPath": "/apiVersion",
          "schemaPath": "/properties/apiVersion"
        }
      ],
      "definition": "https://schema.management.azure.com/schemas/2017-04-01/Microsoft.EventHub.json#/resourceDefinitions/namespaces_disasterRecoveryConfigs",
      "json": {
        "type": "Microsoft.EventHub/invalidType",
        "apiVersion": "2015-10-12",
        "alias": "sdk-DisasterRecovery-3814",
        "properties": {
        }
      }
    },
    {
      "name": "disasterRecoveryConfigs",
      "definition": "https://schema.management.azure.com/schemas/2017-04-01/Microsoft.EventHub.json#/resourceDefinitions/namespaces_disasterRecoveryConfigs",
      "json": {
        "apiVersion": "2017-04-01",
        "name": "sdk-DisasterRecovery-3814",
        "type": "Microsoft.EventHub/namespaces/disasterRecoveryConfigs",
        "properties": {
          "provisioningState": "Accepted",
          "partnerNamespace": "sdk-Namespace-37",
          "role": "Primary",
          "type": "MetadataReplication"
        }
      }
    },
    {
      "name": "NetworkRuleSet - minimal",
      "definition": "https://schema.management.azure.com/schemas/2017-04-01/Microsoft.EventHub.json#/resourceDefinitions/namespaces_networkRuleSets",
      "json": {
        "apiVersion": "2017-04-01",
        "name": "sdk-Namespace-6019/default",
        "type": "Microsoft.EventHub/namespaces/networkRuleSets",
        "properties": {
          "defaultAction": "Deny"
        }
      }
    },
    {
      "name": "NetworkRuleSet - allProperties",
      "definition": "https://schema.management.azure.com/schemas/2017-04-01/Microsoft.EventHub.json#/resourceDefinitions/namespaces_networkRuleSets",
      "json": {
        "apiVersion": "2017-04-01",
        "name": "sdk-Namespace-6019/default",
        "type": "Microsoft.EventHub/namespaces/networkRuleSets",
        "properties": {
          "defaultAction": "Deny",
          "virtualNetworkRules": [
            {
              "subnet": {
                "id": "/subscriptions/subscriptionid/resourcegroups/resourcegroupid/providers/Microsoft.Network/virtualNetworks/myvn/subnets/subnet2"
              },
              "ignoreMissingVnetServiceEndpoint": true
            },
            {
              "subnet": {
                "id": "/subscriptions/subscriptionid/resourcegroups/resourcegroupid/providers/Microsoft.Network/virtualNetworks/myvn/subnets/subnet3"
              },
              "ignoreMissingVnetServiceEndpoint": false
            },
            {
              "subnet": {
                "id": "/subscriptions/subscriptionid/resourcegroups/resourcegroupid/providers/Microsoft.Network/virtualNetworks/myvn/subnets/subnet6"
              },
              "ignoreMissingVnetServiceEndpoint": false
            }
          ],
          "ipRules": [
            {
              "ipMask": "1.1.1.1",
              "action": "Allow"
            },
            {
              "ipMask": "1.1.1.2",
              "action": "Allow"
            },
            {
              "ipMask": "1.1.1.3",
              "action": "Allow"
            },
            {
              "ipMask": "1.1.1.4",
              "action": "Allow"
            },
            {
              "ipMask": "1.1.1.5",
              "action": "Allow"
            }
          ]
        }
      }
    }
  ]
}
