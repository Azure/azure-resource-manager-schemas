{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "virtualNetworkName": {
      "type": "string",
      "metadata": {
        "description": "This is the name of the Virtual Network"
      }

    },
    "networkInterfaceName": {
      "type": "string",
      "metadata": {
        "description": "This is the prefix name of the Network interfaces"
      }

    },
    "loadBalancerName": {
      "type": "string",
      "metadata": {
        "description": "This is the name of the load balancer"
      }

    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Admin username"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Admin password"
      }
    },
    "imagePublisher": {
      "type": "string",
      "defaultValue": "MicrosoftWindowsServer",
      "metadata": {
        "description": "Image Publisher"
      }
    },
    "vmNamePrefix": {
      "type": "string",
      "defaultValue": "BackendVM",
      "metadata": {
        "description": "Prefix to use for VM names"
      }
    },
    "imageOffer": {
      "type": "string",
      "defaultValue": "WindowsServer",
      "metadata": {
        "description": "Image Offer"
      }
    },
    "imageSKU": {
      "type": "string",
      "defaultValue": "2012-R2-Datacenter",
      "metadata": {
        "description": "Image SKU"
      }
    },
    "vmStorageAccountContainerName": {
      "type": "string",
      "defaultValue": "vhds",
      "metadata": {
        "description": "This is the storage account container name"
      }

    },
    "vmName": {
      "type": "string",
      "metadata": {
        "description": "This is the prefix name for the virtual machines"
      }

    },
    "newStorageAccountName": {
      "type": "string"
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_A0",
      "allowedValues": [
        "Standard_A0",
        "Standard_A1",
        "Standard_A2",
        "Standard_A3",
        "Standard_A4"
      ],
      "metadata": {
        "description": "This is the allowed list of VM sizes"
      }

    },
    "vmLocation": {
      "type": "string"
    },
    "dnsNameForPublicIP": {
      "type": "string",
      "metadata": {
        "description": "Unique DNS Name for the Public IP used to access the Virtual Machine."
      }
    },
    "vmlocation": {
      "type": "string",
      "defaultValue": "West US",
      "metadata": {
        "description": "The location where the Virtual Machine will be deployed."
      },
      "allowedValues": [
        "West US",
        "East US",
        "Southeast Asia",
        "East Asia",
        "West Europe"
      ]
    },
    "ubuntuOSVersion": {
      "type": "string",
      "defaultValue": "14.04.2-LTS",
      "metadata": {
        "description": "The Ubuntu version for deploying the Docker containers. This will pick a fully patched image of this given Ubuntu version. Allowed values: 14.04.2-LTS, 14.04-DAILY, 15.04, 14.10."
      },
      "allowedValues": [
        "14.04.2-LTS",
        "14.04-DAILY",
        "15.04",
        "14.10"
      ]
    },
    "dockerHubImage1": {
      "type": "string",
      "metadata": {
        "description": "The name of the first DockerHub image to pass through to Docker compose on the VM."
      },
      "defaultValue": "nginx"
    },
    "dockerHubImage2": {
      "type": "string",
      "metadata": {
        "description": "The second DockerHub image."
      },
      "defaultValue": "redis"
    },
    "dockerHubImage3": {
      "type": "string",
      "metadata": {
        "description": "The third DockerHub image."
      },
      "defaultValue": "mongo"
    },
    "windowsOSVersion": {
      "type": "string",
      "defaultValue": "2012-R2-Datacenter",
      "allowedValues": [
        "2008-R2-SP1",
        "2012-Datacenter",
        "2012-R2-Datacenter",
        "Windows-Server-Technical-Preview"
      ],
      "metadata": {
        "description": "The Windows version for the VM. This will pick a fully patched image of this given Windows version. Allowed values: 2008-R2-SP1, 2012-Datacenter, 2012-R2-Datacenter, Windows-Server-Technical-Preview."
      }
    },
    "as1Name": {
      "type": "string"
    },
    "as1Location": {
      "type": "string",
      "defaultValue": "West US",
      "allowedValues": [
        "East US",
        "West US",
        "West Europe",
        "East Asia",
        "South East Asia"
      ]
    },
    "vn1Location": {
      "type": "string",
      "defaultValue": "West US",
      "allowedValues": [
        "East US",
        "West US",
        "West Europe",
        "East Asia",
        "South East Asia"
      ]
    },
    "nic1Name": {
      "type": "string"
    },
    "stgName": {
      "type": "string"
    },
    "stgType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Standard_ZRS"
      ]
    },
    "stgLocation": {
      "type": "string",
      "defaultValue": "West US",
      "allowedValues": [
        "East US",
        "West US",
        "West Europe",
        "East Asia",
        "South East Asia"
      ]
    },
    "ubuntuName": {
      "type": "string"
    },
    "ubuntuAdminUsername": {
      "type": "string"
    },
    "ubuntuAdminPassword": {
      "type": "securestring"
    },
    "ubuntuUbuntuOSVersion": {
      "type": "string",
      "defaultValue": "14.10",
      "allowedValues": [
        "12.04.2-LTS",
        "12.04.3-LTS",
        "12.04.4-LTS",
        "12.04.5-LTS",
        "12.10",
        "14.04.2-LTS",
        "14.10",
        "15.04"
      ]
    },
    "winName": {
      "type": "string"
    },
    "winAdminUsername": {
      "type": "string"
    },
    "winAdminPassword": {
      "type": "securestring"
    },
    "winWindowsOSVersion": {
      "type": "string",
      "defaultValue": "2012-R2-Datacenter",
      "allowedValues": [
        "2008-R2-SP1",
        "2012-Datacenter",
        "2012-R2-Datacenter",
        "Windows-Server-Technical-Preview"
      ]
    },
    "dscConfigurationFile": {
      "type": "string"
    },
    "dscConfigurationFunction": {
      "type": "string"
    },
    "_artifactsLocation": {
      "type": "string"
    },
    "_artifactsLocationSasToken": {
      "type": "securestring"
    },
    "publicIPDnsName": {
      "type": "string"
    }
  },
  "variables": {
    "location": "West US",
    "imagePublisher": "MicrosoftWindowsServer",
    "imageOffer": "WindowsServer",
    "OSDiskName": "osdiskforwindowssimple",
    "nicName": "myVMNic",
    "addressPrefix": "10.0.0.0/16",
    "subnetName": "Subnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "myPublicIP",
    "publicIPAddressType": "Dynamic",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "MyWindowsVM",
    "vmSize": "Standard_D1",
    "virtualNetworkName": "MyVNET",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "availabilitySetName": "AvSet",
    "numberOfInstances": 2,
    "lbID": "[resourceId('Microsoft.Network/loadBalancers',parameters('loadBalancerName'))]",
    "extensionName": "DockerExtension",
    "vn1Prefix": "10.0.0.0/16",
    "vn1Subnet1Name": "Subnet-1",
    "vn1Subnet1Prefix": "10.0.0.0/24",
    "vn1Subnet2Name": "Subnet-2",
    "vn1Subnet2Prefix": "10.0.1.0/24",
    "nic1VnetID": "[resourceId('Microsoft.Network/virtualNetworks', 'vn1')]",
    "nic1SubnetRef": "[concat(variables('nic1VnetID'),'/subnets/', variables('vn1Subnet1Name'))]",
    "ubuntuImagePublisher": "Canonical",
    "ubuntuImageOffer": "UbuntuServer",
    "ubuntuOSDiskName": "ubuntuOSDisk",
    "ubuntuVmSize": "Standard_D1",
    "ubuntuVnetID": "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
    "ubuntuSubnetRef": "[concat(variables('ubuntuVnetID'), '/subnets/', variables('subnetName'))]",
    "ubuntuStorageAccountContainerName": "vhds",
    "ubuntuNicName": "[concat(parameters('ubuntuName'), 'NetworkInterface')]",
    "winImagePublisher": "MicrosoftWindowsServer",
    "winImageOffer": "WindowsServer",
    "winOSDiskName": "winOSDisk",
    "winVmSize": "Standard_D1",
    "winVnetID": "[resourceId('Microsoft.Network/virtualNetworks', 'vn1')]",
    "winSubnetRef": "[concat(variables('winVnetID'), '/subnets/', variables('vn1Subnet1Name'))]",
    "winStorageAccountContainerName": "vhds",
    "winNicName": "[concat(parameters('winName'), 'NetworkInterface')]",
    "publicIPName": "publicIP"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[parameters('newStorageAccountName')]",
      "apiVersion": "2015-05-01-preview",
      "location": "[variables('location')]",
      "tags": {
        "displayName": "StorageAccount"
      },
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "tags": {
        "displayName": "PublicIPAddress"
      },
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[parameters('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "tags": {
        "displayName": "VirtualNetwork"
      },
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "tags": {
        "displayName": "NetworkInterface"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "tags": {
        "displayName": "VirtualMachine"
      },
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', parameters('newStorageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[parameters('windowsOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://',parameters('newStorageAccountName'),'.blob.core.windows.net/',variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "name": "datadisk1",
              "vhd": {
                "uri": "[concat('http://',parameters('newStorageAccountName'),'.blob.core.windows.net/',variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
              },
              "caching": "ReadWrite",
              "createOption": "FromImage",
              "lun": 1
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[parameters('newStorageAccountName')]",
      "apiVersion": "2015-05-01-preview",
      "location": "[variables('location')]",
      "tags": {
        "displayName": "StorageAccount"
      },
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[parameters('dnsNameForPublicIP')]",
      "location": "[variables('location')]",
      "tags": {
        "displayName": "PublicIPAddress"
      },
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[parameters('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "tags": {
        "displayName": "VirtualNetwork"
      },
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "tags": {
        "displayName": "NetworkInterface"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', parameters('dnsNameForPublicIP'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',parameters('dnsNameForPublicIP'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "tags": {
        "displayName": "VirtualMachine"
      },
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', parameters('newStorageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[parameters('ubuntuOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://',parameters('newStorageAccountName'),'.blob.core.windows.net/',variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "[parameters('a')]"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[parameters('newStorageAccountName')]",
      "tags": {
        "displayName": "StorageAccount"
      },
      "apiVersion": "2015-05-01-preview",
      "location": "[parameters('vmlocation')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/publicIPAddresses",
      "tags": {
        "displayName": "PublicIPAddress"
      },
      "name": "[parameters('dnsNameForPublicIP')]",
      "location": "[parameters('vmlocation')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[parameters('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "tags": {
        "displayName": "VirtualNetwork"
      },
      "location": "[parameters('vmlocation')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "tags": {
        "displayName": "NetworkInterface"
      },
      "location": "[parameters('vmlocation')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', parameters('dnsNameForPublicIP'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',parameters('dnsNameForPublicIP'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "tags": {
        "displayName": "VirtualMachine"
      },
      "location": "[parameters('vmlocation')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', parameters('newStorageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[parameters('ubuntuOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk1",
            "vhd": {
              "uri": "[concat('http://',parameters('newStorageAccountName'),'.blob.core.windows.net/',variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/', variables('extensionName'))]",
      "tags": {
        "displayName": "DockerExtension"
      },
      "apiVersion": "2015-05-01-preview",
      "location": "[parameters('vmlocation')]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "MSOpenTech.Extensions",
        "type": "DockerExtension",
        "typeHandlerVersion": "0.6",
        "settings": {
          "composeup": {
            "service1": {
              "image": "[parameters('dockerHubImage1')]"
            },
            "service2": {
              "image": "[parameters('dockerHubImage2')]"
            },
            "service3": {
              "image": "[parameters('dockerHubImage3')]"
            }
          },
          "installonly": "true"
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2015-05-01-preview",
      "name": "[parameters('newStorageAccountName')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "StorageAccount"
      },
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "type": "Microsoft.Compute/availabilitySets",
      "apiVersion": "2015-05-01-preview",
      "name": "[variables('availabilitySetName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "platformFaultDomainCount": 1,
        "platformUpdateDomainCount": 1
      },
      "tags": {
        "displayName": "AvailabilitySet"
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[parameters('virtualNetworkName')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "VirtualNetwork"
      },
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "10.0.0.0/16"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "10.0.2.0/24"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(parameters('networkInterfaceName'), copyIndex())]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "NetworkInterface"
      },
      "copy": {
        "name": "nicLoop",
        "count": "[variables('numberOfInstances')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]",
        "[concat('Microsoft.Network/loadBalancers/', parameters('loadBalancerName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnetRef')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[concat(variables('lbID'), '/backendAddressPools/BackendPool1')]"
                }
              ]
            }
          }
        ]

      }
    },

    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/loadBalancers",
      "name": "[parameters('loadBalancerName')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "LoadBalancer"
      },
      "dependsOn": [ "[variables('vnetID')]" ],
      "properties": {
        "frontendIPConfigurations": [

          {
            "properties": {
              "subnet": {
                "id": "[variables('subnetRef')]"
              },
              "privateIPAddress": "10.0.2.6",
              "privateIPAllocationMethod": "Static"
            },
            "name": "LoadBalancerFrontend"
          }
        ],
        "backendAddressPools": [
          {
            "name": "BackendPool1"
          }
        ],
        "loadBalancingRules": [
          {
            "properties": {
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancerName')), '/frontendIpConfigurations/LoadBalancerFrontend')]"
              },
              "backendAddressPool": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancerName')), '/backendAddressPools/BackendPool1')]"
              },
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancerName')), '/probes/lbprobe')]"
              },
              "protocol": "Tcp",
              "frontendPort": 80,
              "backendPort": 80,
              "idleTimeoutInMinutes": 15

            },
            "name": "lbrule"
          }
        ],
        "probes": [
          {
            "properties": {
              "protocol": "Tcp",
              "port": 80,
              "intervalInSeconds": 15,
              "numberOfProbes": 2
            },
            "name": "lbprobe"
          }
        ]
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(parameters('vmNamePrefix'), copyIndex())]",
      "copy": {
        "name": "virtualMachineLoop",
        "count": "[variables('numberOfInstances')]"
      },
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "VirtualMachines"
      },
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', parameters('newStorageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', parameters('networkInterfaceName'), copyIndex())]",
        "[concat('Microsoft.Compute/availabilitySets/', variables('availabilitySetName'))]"
      ],
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('availabilitySetName'))]"
        },
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[concat(parameters('vmNamePrefix'), copyIndex())]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[parameters('imagePublisher')]",
            "offer": "[parameters('imageOffer')]",
            "sku": "[parameters('imageSKU')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://',parameters('newStorageAccountName'),'.blob.core.windows.net/vhds/','osdisk', copyIndex(), '.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(parameters('networkInterfaceName'),copyIndex()))]"
            }
          ]
        }
      }
    },
    {
      "name": "[parameters('as1Name')]",
      "type": "Microsoft.Compute/availabilitySets",
      "location": "[parameters('as1Location')]",
      "apiVersion": "2015-05-01-preview",
      "properties": {
        "platformFaultDomainCount": 1,
        "platformUpdateDomainCount": 1
      },
      "dependsOn": [ ],
      "tags": {
        "displayName": "as1"
      }
    },
    {
      "type": "Microsoft.Network/routeTables",
      "location": "[parameters('as1Location')]",
      "apiVersion": "2015-05-01-preview",
      "name": "routeTable1",
      "properties": {
        "routes": [
          {
            "name": "route1",
            "properties": {
              "addressPrefix": "a",
              "nextHopType": "HyperNetGateway"
            }
          }
        ]

      }
    },
    {
      "name": "vn1",
      "type": "Microsoft.Network/virtualNetworks",
      "location": "[parameters('vn1Location')]",
      "apiVersion": "2015-05-01-preview",
      "dependsOn": [ ],
      "tags": {
        "displayName": "vn1"
      },
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('vn1Prefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('vn1Subnet1Name')]",
            "properties": {
              "addressPrefix": "[variables('vn1Subnet1Prefix')]"
            }
          },
          {
            "name": "[variables('vn1Subnet2Name')]",
            "properties": {
              "addressPrefix": "[variables('vn1Subnet2Prefix')]"
            }
          }
        ]
      }
    },
    {
      "name": "[parameters('nic1Name')]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[parameters('vn1Location')]",
      "apiVersion": "2015-05-01-preview",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', 'vn1')]",
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPName'))]"
      ],
      "tags": {
        "displayName": "nic1"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('nic1SubnetRef')]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPName'))]"
              }
            }
          }
        ]
      }
    },
    {
      "name": "[parameters('stgName')]",
      "type": "Microsoft.Storage/storageAccounts",
      "location": "[parameters('stgLocation')]",
      "apiVersion": "2015-05-01-preview",
      "dependsOn": [ ],
      "tags": {
        "displayName": "stg"
      },
      "properties": {
        "accountType": "[parameters('stgType')]"
      }
    },
    {
      "name": "[variables('ubuntuNicName')]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[parameters('vmlocation')]",
      "apiVersion": "2015-05-01-preview",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
      ],
      "tags": {
        "displayName": "ubuntuNic"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('ubuntuSubnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "name": "[parameters('ubuntuName')]",
      "type": "Microsoft.Compute/virtualMachines",
      "location": "[parameters('vmlocation')]",
      "apiVersion": "2015-05-01-preview",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', parameters('stgName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('ubuntuNicName'))]"
      ],
      "tags": {
        "displayName": "ubuntu"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('ubuntuVmSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('ubuntuName')]",
          "adminUsername": "[parameters('ubuntuAdminUsername')]",
          "adminPassword": "[parameters('ubuntuAdminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('ubuntuImagePublisher')]",
            "offer": "[variables('ubuntuImageOffer')]",
            "sku": "[parameters('ubuntuUbuntuOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "ubuntuOSDisk",
            "vhd": {
              "uri": "[concat('http://', parameters('stgName'), '.blob.core.windows.net/', variables('ubuntuStorageAccountContainerName'), '/', variables('ubuntuOSDiskName'), '.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('ubuntuNicName'))]"
            }
          ]
        }
      }
    },
    {
      "name": "[variables('winNicName')]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[parameters('vn1Location')]",
      "apiVersion": "2015-05-01-preview",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', 'vn1')]"
      ],
      "tags": {
        "displayName": "winNic"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('winSubnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "name": "[parameters('winName')]",
      "type": "Microsoft.Compute/virtualMachines",
      "location": "[parameters('vn1Location')]",
      "apiVersion": "2015-05-01-preview",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', parameters('stgName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('winNicName'))]"
      ],
      "tags": {
        "displayName": "win"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('winVmSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('winName')]",
          "adminUsername": "[parameters('winAdminUsername')]",
          "adminPassword": "[parameters('winAdminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('winImagePublisher')]",
            "offer": "[variables('winImageOffer')]",
            "sku": "[parameters('winWindowsOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "winOSDisk",
            "vhd": {
              "uri": "[concat('http://', parameters('stgName'), '.blob.core.windows.net/', variables('winStorageAccountContainerName'), '/', variables('winOSDiskName'), '.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('winNicName'))]"
            }
          ]
        }
      },
      "resources": [
        {
          "name": "dsc",
          "type": "extensions",
          "location": "[parameters('vn1Location')]",
          "apiVersion": "2015-05-01-preview",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', parameters('winName'))]"
          ],
          "tags": {
            "displayName": "dsc"
          },
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "1.7",
            "settings": {
              "modulesUrl": "[concat(parameters('_artifactsLocation'), '/', parameters('dscConfigurationFile'))]",
              "sasToken": "[parameters('_artifactsLocationSasToken')]",
              "configurationFunction": "[parameters('dscConfigurationFunction')]",
              "properties": { }
            },
            "protectedSettings": { }
          }
        }
      ]
    },
    {
      "name": "[variables('publicIPName')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "location": "[parameters('vn1Location')]",
      "apiVersion": "2015-05-01-preview",
      "dependsOn": [ ],
      "tags": {
        "displayName": "publicIP"
      },
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[parameters('publicIPDnsName')]"
        }
      }
    },
    {
      "name": "vmWinRMListenerProtocol",
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2015-06-15",
      "location": "West US",
      "properties": {
        "osProfile": {
          "adminPassword": "a",
          "adminUsername": "b",
          "computerName": "c",
          "windowsConfiguration": {
            "winRM": {
              "listeners": [
                {
                  "protocol": "Http",
                  "certificateUrl": "http://abc"
                }
              ]
            }
          },
          "linuxConfiguration": {
            "disablePasswordAuthentication": true
          }
        },
        "hardwareProfile": {
          "vmSize": "Large"
        },
        "networkProfile": {
          "networkInterfaces": [ ]
        },
        "storageProfile": {
          "osDisk": {
            "createOption": "Attach",
            "name": "a",
            "vhd": {
              "uri": "http://abc"
            }
          }
        }

      }
    }
  ]
}
